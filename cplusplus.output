State 2 conflicts: 175 reduce/reduce
State 7 conflicts: 2 shift/reduce
State 16 conflicts: 2 shift/reduce
State 27 conflicts: 3 shift/reduce
State 29 conflicts: 1 shift/reduce
State 31 conflicts: 4 shift/reduce
State 70 conflicts: 5 shift/reduce
State 75 conflicts: 1 shift/reduce
State 76 conflicts: 1 shift/reduce
State 88 conflicts: 1 shift/reduce
State 95 conflicts: 1 shift/reduce
State 106 conflicts: 1 shift/reduce
State 108 conflicts: 1 shift/reduce
State 114 conflicts: 106 reduce/reduce
State 121 conflicts: 1 shift/reduce
State 124 conflicts: 1 shift/reduce
State 133 conflicts: 4 reduce/reduce
State 141 conflicts: 100 reduce/reduce
State 147 conflicts: 6 reduce/reduce
State 149 conflicts: 1 shift/reduce
State 153 conflicts: 2 shift/reduce
State 159 conflicts: 2 shift/reduce
State 162 conflicts: 311 reduce/reduce
State 183 conflicts: 1 shift/reduce
State 200 conflicts: 1 shift/reduce
State 213 conflicts: 1 shift/reduce
State 215 conflicts: 1 shift/reduce
State 216 conflicts: 27 shift/reduce
State 217 conflicts: 6 shift/reduce
State 221 conflicts: 6 reduce/reduce
State 231 conflicts: 61 reduce/reduce
State 232 conflicts: 4 shift/reduce
State 233 conflicts: 2 shift/reduce
State 236 conflicts: 1 shift/reduce
State 249 conflicts: 201 reduce/reduce
State 253 conflicts: 14 reduce/reduce
State 266 conflicts: 9 reduce/reduce
State 273 conflicts: 5 reduce/reduce
State 275 conflicts: 2 shift/reduce
State 278 conflicts: 1 shift/reduce
State 280 conflicts: 1 shift/reduce
State 301 conflicts: 1 shift/reduce
State 304 conflicts: 4 reduce/reduce
State 320 conflicts: 1 shift/reduce, 177 reduce/reduce
State 322 conflicts: 4 shift/reduce
State 324 conflicts: 1 shift/reduce, 67 reduce/reduce
State 325 conflicts: 1 shift/reduce
State 349 conflicts: 1 shift/reduce, 1 reduce/reduce
State 351 conflicts: 1 shift/reduce
State 376 conflicts: 2 shift/reduce
State 389 conflicts: 10 reduce/reduce
State 390 conflicts: 12 reduce/reduce
State 391 conflicts: 12 reduce/reduce
State 392 conflicts: 12 reduce/reduce
State 393 conflicts: 12 reduce/reduce
State 394 conflicts: 12 reduce/reduce
State 395 conflicts: 12 reduce/reduce
State 396 conflicts: 12 reduce/reduce
State 397 conflicts: 12 reduce/reduce
State 398 conflicts: 12 reduce/reduce
State 402 conflicts: 1 shift/reduce
State 405 conflicts: 1 shift/reduce
State 410 conflicts: 1 shift/reduce
State 419 conflicts: 1 shift/reduce
State 421 conflicts: 1 shift/reduce
State 436 conflicts: 1 shift/reduce
State 441 conflicts: 1 shift/reduce
State 444 conflicts: 1 shift/reduce
State 445 conflicts: 1 shift/reduce
State 447 conflicts: 2 shift/reduce
State 448 conflicts: 1 shift/reduce
State 468 conflicts: 1 reduce/reduce
State 472 conflicts: 1 shift/reduce
State 474 conflicts: 1 shift/reduce
State 508 conflicts: 1 shift/reduce, 308 reduce/reduce
State 510 conflicts: 1 shift/reduce, 100 reduce/reduce
State 512 conflicts: 100 reduce/reduce
State 514 conflicts: 2 shift/reduce
State 518 conflicts: 6 shift/reduce
State 528 conflicts: 1 shift/reduce
State 533 conflicts: 1 shift/reduce, 1 reduce/reduce
State 545 conflicts: 1 shift/reduce
State 572 conflicts: 1 shift/reduce, 1 reduce/reduce
State 574 conflicts: 1 shift/reduce
State 591 conflicts: 3 shift/reduce, 154 reduce/reduce
State 592 conflicts: 55 reduce/reduce
State 600 conflicts: 2 reduce/reduce
State 623 conflicts: 9 reduce/reduce
State 630 conflicts: 1 shift/reduce, 2 reduce/reduce
State 633 conflicts: 1 shift/reduce, 2 reduce/reduce
State 636 conflicts: 3 reduce/reduce
State 656 conflicts: 10 reduce/reduce
State 661 conflicts: 157 reduce/reduce
State 697 conflicts: 1 shift/reduce
State 723 conflicts: 1 reduce/reduce
State 724 conflicts: 1 shift/reduce, 14 reduce/reduce
State 726 conflicts: 4 shift/reduce
State 734 conflicts: 1 shift/reduce
State 747 conflicts: 4 shift/reduce
State 751 conflicts: 1 reduce/reduce
State 757 conflicts: 32 shift/reduce
State 806 conflicts: 1 shift/reduce
State 807 conflicts: 3 shift/reduce
State 838 conflicts: 194 reduce/reduce
State 852 conflicts: 1 shift/reduce
State 861 conflicts: 1 shift/reduce
State 890 conflicts: 1 shift/reduce
State 894 conflicts: 1 shift/reduce
State 944 conflicts: 1 shift/reduce
State 945 conflicts: 1 shift/reduce
State 948 conflicts: 2 shift/reduce
State 952 conflicts: 1 shift/reduce
State 965 conflicts: 1 shift/reduce
State 967 conflicts: 1 shift/reduce
State 973 conflicts: 1 shift/reduce
State 1010 conflicts: 1 shift/reduce, 1 reduce/reduce
State 1011 conflicts: 1 shift/reduce
State 1015 conflicts: 1 shift/reduce
State 1072 conflicts: 1 shift/reduce
State 1092 conflicts: 3 reduce/reduce
State 1095 conflicts: 2 reduce/reduce
State 1097 conflicts: 3 shift/reduce, 4 reduce/reduce
State 1099 conflicts: 2 reduce/reduce
State 1119 conflicts: 8 reduce/reduce
State 1124 conflicts: 1 shift/reduce, 2 reduce/reduce
State 1127 conflicts: 1 shift/reduce
State 1140 conflicts: 3 reduce/reduce
State 1142 conflicts: 1 reduce/reduce
State 1180 conflicts: 152 reduce/reduce
State 1214 conflicts: 1 shift/reduce
State 1217 conflicts: 1 shift/reduce
State 1218 conflicts: 1 shift/reduce
State 1226 conflicts: 1 shift/reduce
State 1272 conflicts: 1 shift/reduce
State 1286 conflicts: 22 shift/reduce
State 1302 conflicts: 1 shift/reduce
State 1309 conflicts: 3 shift/reduce
State 1343 conflicts: 1 shift/reduce
State 1344 conflicts: 1 shift/reduce
State 1353 conflicts: 1 shift/reduce
State 1355 conflicts: 1 shift/reduce
State 1396 conflicts: 1 shift/reduce
State 1400 conflicts: 1 shift/reduce
State 1427 conflicts: 1 shift/reduce
State 1450 conflicts: 1 shift/reduce, 1 reduce/reduce
State 1485 conflicts: 2 reduce/reduce
State 1488 conflicts: 2 reduce/reduce
State 1496 conflicts: 12 reduce/reduce
State 1499 conflicts: 2 reduce/reduce
State 1553 conflicts: 1 shift/reduce
State 1564 conflicts: 1 shift/reduce
State 1574 conflicts: 1 shift/reduce
State 1575 conflicts: 1 shift/reduce
State 1576 conflicts: 1 shift/reduce
State 1577 conflicts: 1 shift/reduce
State 1580 conflicts: 1 shift/reduce
State 1589 conflicts: 22 shift/reduce
State 1592 conflicts: 1 shift/reduce
State 1613 conflicts: 1 shift/reduce
State 1618 conflicts: 1 shift/reduce
State 1660 conflicts: 1 shift/reduce
State 1661 conflicts: 1 shift/reduce
State 1662 conflicts: 1 shift/reduce
State 1665 conflicts: 1 shift/reduce
State 1710 conflicts: 2 reduce/reduce
State 1755 conflicts: 1 shift/reduce
State 1767 conflicts: 1 shift/reduce
State 1768 conflicts: 1 shift/reduce
State 1769 conflicts: 1 shift/reduce
State 1770 conflicts: 1 shift/reduce
State 1771 conflicts: 1 shift/reduce
State 1772 conflicts: 1 shift/reduce
State 1779 conflicts: 1 shift/reduce
State 1786 conflicts: 27 shift/reduce, 10 reduce/reduce
State 1788 conflicts: 2 reduce/reduce
State 1789 conflicts: 1 reduce/reduce
State 1793 conflicts: 1 shift/reduce
State 1795 conflicts: 1 shift/reduce
State 1796 conflicts: 1 shift/reduce
State 1811 conflicts: 2 shift/reduce, 2 reduce/reduce
State 1812 conflicts: 1 shift/reduce
State 1813 conflicts: 1 shift/reduce
State 1814 conflicts: 1 shift/reduce
State 1815 conflicts: 1 shift/reduce
State 1816 conflicts: 1 shift/reduce
State 1860 conflicts: 1 shift/reduce
State 1875 conflicts: 1 shift/reduce
State 1876 conflicts: 1 shift/reduce
State 1877 conflicts: 1 shift/reduce
State 1878 conflicts: 1 shift/reduce
State 1882 conflicts: 1 shift/reduce
State 1889 conflicts: 1 shift/reduce
State 1890 conflicts: 1 shift/reduce
State 1898 conflicts: 1 shift/reduce
State 1899 conflicts: 1 shift/reduce
State 1923 conflicts: 1 shift/reduce
State 1924 conflicts: 1 shift/reduce
State 1932 conflicts: 1 shift/reduce
State 1940 conflicts: 1 shift/reduce
State 1962 conflicts: 1 shift/reduce
State 1964 conflicts: 1 reduce/reduce


Grammar

    0 $accept: translation-unit $end

    1 abstract-declarator: ptr-abstract-declarator
    2                    | noptr-abstract-declarator parameters-and-qualifiers trailing-return-type
    3                    | parameters-and-qualifiers trailing-return-type
    4                    | abstract-pack-declarator

    5 abstract-pack-declarator: noptr-abstract-pack-declarator
    6                         | ptr-operator abstract-pack-declarator

    7 access-specifier: PRIVATE
    8                 | PROTECTED
    9                 | PUBLIC

   10 additive-expression: multiplicative-expression
   11                    | additive-expression PLUS multiplicative-expression
   12                    | additive-expression MINUS multiplicative-expression

   13 alias-declaration: USING IDENTIFIER EQ defining-type-id SEMICOLON
   14                  | USING IDENTIFIER attribute-specifier-seq EQ defining-type-id SEMICOLON

   15 alignment-specifier: ALIGNAS OPEN_PAREN type-id CLOSE_PAREN
   16                    | ALIGNAS OPEN_PAREN type-id ELLIPSIS CLOSE_PAREN
   17                    | ALIGNAS OPEN_PAREN constant-expression CLOSE_PAREN
   18                    | ALIGNAS OPEN_PAREN constant-expression ELLIPSIS CLOSE_PAREN

   19 and-expression: equality-expression
   20               | and-expression AND equality-expression

   21 asm-declaration: attribute-specifier-seq ASM OPEN_PAREN string-literal CLOSE_PAREN SEMICOLON
   22                | ASM OPEN_PAREN string-literal CLOSE_PAREN SEMICOLON

   23 assignment-expression: conditional-expression
   24                      | yield-expression
   25                      | throw-expression
   26                      | logical-or-expression assignment-operator initializer-clause

   27 assignment-operator: EQ
   28                    | MULT_EQ
   29                    | DIV_EQ
   30                    | MOD_EQ
   31                    | PLUS_EQ
   32                    | MINUS_EQ
   33                    | RSHIFT_EQ
   34                    | LSHIFT_EQ
   35                    | AND_EQ
   36                    | XOR_EQ
   37                    | OR_EQ

   38 attribute: attribute-token
   39          | attribute-token attribute-argument-clause

   40 attribute-argument-clause: OPEN_PAREN CLOSE_PAREN
   41                          | OPEN_PAREN balanced-token-seq CLOSE_PAREN

   42 attribute-declaration: attribute-specifier-seq SEMICOLON

   43 attribute-list: attribute
   44               | attribute-list COMMA
   45               | attribute-list COMMA attribute
   46               | attribute ELLIPSIS
   47               | attribute-list COMMA attribute ELLIPSIS

   48 attribute-namespace: IDENTIFIER

   49 attribute-scoped-token: attribute-namespace SCOPE IDENTIFIER

   50 attribute-specifier: OPEN_SQUARE OPEN_SQUARE attribute-list CLOSE_SQUARE CLOSE_SQUARE
   51                    | OPEN_SQUARE OPEN_SQUARE attribute-using-prefix attribute-list CLOSE_SQUARE CLOSE_SQUARE
   52                    | alignment-specifier

   53 attribute-specifier-seq: attribute-specifier-seq attribute-specifier
   54                        | attribute-specifier

   55 attribute-token: IDENTIFIER
   56                | attribute-scoped-token

   57 attribute-using-prefix: USING attribute-namespace COLON

   58 await-expression: CO_AWAIT cast-expression

   59 balanced-token: OPEN_PAREN CLOSE_PAREN
   60               | OPEN_PAREN balanced-token-seq CLOSE_PAREN
   61               | OPEN_SQUARE CLOSE_SQUARE
   62               | OPEN_SQUARE balanced-token-seq CLOSE_SQUARE
   63               | OPEN_BRACE CLOSE_BRACE
   64               | OPEN_BRACE balanced-token-seq CLOSE_BRACE
   65               | BALANCED_TOKEN

   66 balanced-token-seq: balanced-token
   67                   | balanced-token-seq balanced-token

   68 base-clause: COLON base-specifier-list

   69 base-specifier: attribute-specifier-seq class-or-decltype
   70               | class-or-decltype
   71               | attribute-specifier-seq VIRTUAL class-or-decltype
   72               | VIRTUAL class-or-decltype
   73               | attribute-specifier-seq VIRTUAL access-specifier class-or-decltype
   74               | VIRTUAL access-specifier class-or-decltype
   75               | attribute-specifier-seq access-specifier class-or-decltype
   76               | access-specifier class-or-decltype
   77               | attribute-specifier-seq access-specifier VIRTUAL class-or-decltype
   78               | access-specifier VIRTUAL class-or-decltype

   79 base-specifier-list: base-specifier
   80                    | base-specifier ELLIPSIS
   81                    | base-specifier-list COMMA base-specifier
   82                    | base-specifier-list COMMA base-specifier ELLIPSIS

   83 basic-c-char: BASIC_C_CHAR

   84 basic-s-char: BASIC_S_CHAR

   85 binary-digit: '0'
   86             | '1'

   87 binary-exponent-part: 'p' digit-sequence
   88                     | 'p' sign digit-sequence
   89                     | 'P' digit-sequence
   90                     | 'P' sign digit-sequence

   91 binary-literal: ZERO_LB binary-digit
   92               | ZERO_HB binary-digit
   93               | binary-literal binary-digit
   94               | binary-literal SINGLE_QUOTE binary-digit

   95 block-declaration: simple-declaration
   96                  | asm-declaration
   97                  | namespace-alias-definition
   98                  | using-declaration
   99                  | using-enum-declaration
  100                  | using-directive
  101                  | static_assert-declaration
  102                  | alias-declaration
  103                  | opaque-enum-declaration

  104 boolean-literal: FALSE
  105                | TRUE

  106 brace-or-equal-initializer: EQ initializer-clause
  107                           | braced-init-list

  108 braced-init-list: OPEN_BRACE initializer-list CLOSE_BRACE
  109                 | OPEN_BRACE initializer-list COMMA CLOSE_BRACE
  110                 | OPEN_BRACE designated-initializer-list CLOSE_BRACE
  111                 | OPEN_BRACE designated-initializer-list COMMA CLOSE_BRACE
  112                 | OPEN_BRACE CLOSE_BRACE

  113 c-char: basic-c-char
  114       | escape-sequence
  115       | universal-character-name

  116 c-char-sequence: c-char
  117                | c-char-sequence c-char

  118 capture: simple-capture
  119        | init-capture

  120 capture-default: AND
  121                | EQ

  122 capture-list: capture
  123             | capture-list COMMA capture

  124 cast-expression: unary-expression
  125                | OPEN_PAREN type-id CLOSE_PAREN cast-expression

  126 character-literal: encoding-prefix SINGLE_QUOTE c-char-sequence SINGLE_QUOTE
  127                  | SINGLE_QUOTE c-char-sequence SINGLE_QUOTE

  128 class-head: class-key class-head-name
  129           | class-key attribute-specifier-seq class-head-name
  130           | class-key class-head-name class-virt-specifier
  131           | class-key attribute-specifier-seq class-head-name class-virt-specifier
  132           | class-key class-head-name base-clause
  133           | class-key attribute-specifier-seq class-head-name base-clause
  134           | class-key class-head-name class-virt-specifier base-clause
  135           | class-key attribute-specifier-seq class-head-name class-virt-specifier base-clause
  136           | class-key
  137           | class-key attribute-specifier-seq
  138           | class-key base-clause
  139           | class-key attribute-specifier-seq base-clause

  140 class-head-name: nested-name-specifier class-name
  141                | class-name

  142 class-key: CLASS
  143          | STRUCT
  144          | UNION

  145 class-name: IDENTIFIER
  146           | simple-template-id

  147 class-or-decltype: nested-name-specifier type-name
  148                  | type-name
  149                  | nested-name-specifier TEMPLATE simple-template-id
  150                  | decltype-specifier

  151 class-specifier: class-head OPEN_BRACE CLOSE_BRACE
  152                | class-head OPEN_BRACE member-specification CLOSE_BRACE

  153 class-virt-specifier: FINAL

  154 compare-expression: shift-expression
  155                   | compare-expression SPACESHIP shift-expression

  156 compound-requirement: OPEN_BRACE expression CLOSE_BRACE SEMICOLON
  157                     | OPEN_BRACE expression CLOSE_BRACE NOEXCEPT SEMICOLON
  158                     | OPEN_BRACE expression CLOSE_BRACE return-type-requirement SEMICOLON
  159                     | OPEN_BRACE expression CLOSE_BRACE NOEXCEPT return-type-requirement SEMICOLON

  160 compound-statement: OPEN_BRACE CLOSE_BRACE
  161                   | OPEN_BRACE statement-seq CLOSE_BRACE

  162 concept-definition: CONCEPT concept-name EQ constraint-expression SEMICOLON

  163 concept-name: IDENTIFIER

  164 condition: expression
  165          | attribute-specifier-seq decl-specifier-seq declarator brace-or-equal-initializer
  166          | decl-specifier-seq declarator brace-or-equal-initializer

  167 conditional-escape-sequence: ESCAPE conditional-escape-sequence-char

  168 conditional-escape-sequence-char: CONDITIONAL_ESCAPE_SEQUENCE_CHAR

  169 conditional-expression: logical-or-expression
  170                       | logical-or-expression QUERY expression COLON assignment-expression

  171 constant-expression: conditional-expression

  172 constraint-expression: logical-or-expression

  173 constraint-logical-and-expression: primary-expression
  174                                  | constraint-logical-and-expression AND_AND primary-expression

  175 constraint-logical-or-expression: constraint-logical-and-expression
  176                                 | constraint-logical-or-expression OR_OR constraint-logical-and-expression

  177 conversion-declarator: ptr-operator
  178                      | ptr-operator conversion-declarator

  179 conversion-function-id: OPERATOR conversion-type-id

  180 conversion-type-id: type-specifier-seq
  181                   | type-specifier-seq conversion-declarator

  182 coroutine-return-statement: CO_RETURN SEMICOLON
  183                           | CO_RETURN expr-or-braced-init-list SEMICOLON

  184 ctor-initializer: COLON mem-initializer-list

  185 cv-qualifier: CONST
  186             | VOLATILE

  187 cv-qualifier-seq: cv-qualifier
  188                 | cv-qualifier cv-qualifier-seq

  189 decimal-floating-point-literal: fractional-constant
  190                               | fractional-constant exponent-part
  191                               | fractional-constant floating-point-suffix
  192                               | fractional-constant exponent-part floating-point-suffix
  193                               | digit-sequence exponent-part
  194                               | digit-sequence exponent-part floating-point-suffix

  195 decimal-literal: nonzero-digit
  196                | decimal-literal digit
  197                | decimal-literal SINGLE_QUOTE digit

  198 decl-specifier: storage-class-specifier
  199               | defining-type-specifier
  200               | function-specifier
  201               | FRIEND
  202               | TYPEDEF
  203               | CONSTEXPR
  204               | CONSTEVAL
  205               | CONSTINIT
  206               | INLINE

  207 decl-specifier-seq: decl-specifier
  208                   | decl-specifier attribute-specifier-seq
  209                   | decl-specifier decl-specifier-seq

  210 declaration: block-declaration
  211            | nodeclspec-function-declaration
  212            | function-definition
  213            | template-declaration
  214            | deduction-guide
  215            | explicit-instantiation
  216            | explicit-specialization
  217            | export-declaration
  218            | linkage-specification
  219            | namespace-definition
  220            | empty-declaration
  221            | attribute-declaration
  222            | module-import-declaration

  223 declaration-seq: declaration
  224                | declaration-seq declaration

  225 declaration-statement: block-declaration

  226 declarator: ptr-declarator
  227           | noptr-declarator parameters-and-qualifiers trailing-return-type

  228 declarator-id: ELLIPSIS id-expression
  229              | id-expression

  230 decltype-specifier: DECLTYPE OPEN_PAREN expression CLOSE_PAREN

  231 deduction-guide: explicit-specifier template-name OPEN_PAREN parameter-declaration-clause CLOSE_PAREN DEREF simple-template-id SEMICOLON
  232                | template-name OPEN_PAREN parameter-declaration-clause CLOSE_PAREN DEREF simple-template-id SEMICOLON

  233 defining-type-id: defining-type-specifier-seq
  234                 | defining-type-specifier-seq abstract-declarator

  235 defining-type-specifier: type-specifier
  236                        | class-specifier
  237                        | enum-specifier

  238 defining-type-specifier-seq: defining-type-specifier
  239                            | defining-type-specifier attribute-specifier-seq
  240                            | defining-type-specifier defining-type-specifier-seq

  241 delete-expression: SCOPE DELETE cast-expression
  242                  | DELETE cast-expression
  243                  | SCOPE DELETE OPEN_SQUARE CLOSE_SQUARE cast-expression
  244                  | DELETE OPEN_SQUARE CLOSE_SQUARE cast-expression

  245 designated-initializer-clause: designator brace-or-equal-initializer

  246 designated-initializer-list: designated-initializer-clause
  247                            | designated-initializer-list COMMA designated-initializer-clause

  248 designator: DOT IDENTIFIER

  249 digit: '0'
  250      | '1'
  251      | '2'
  252      | '3'
  253      | '4'
  254      | '5'
  255      | '6'
  256      | '7'
  257      | '8'
  258      | '9'

  259 digit-sequence: digit
  260               | digit-sequence digit
  261               | digit-sequence SINGLE_QUOTE digit

  262 elaborated-enum-specifier: ENUM IDENTIFIER
  263                          | ENUM nested-name-specifier IDENTIFIER

  264 elaborated-type-specifier: class-key IDENTIFIER
  265                          | class-key attribute-specifier-seq IDENTIFIER
  266                          | class-key nested-name-specifier IDENTIFIER
  267                          | class-key attribute-specifier-seq nested-name-specifier IDENTIFIER
  268                          | class-key simple-template-id
  269                          | class-key nested-name-specifier simple-template-id
  270                          | class-key nested-name-specifier TEMPLATE simple-template-id
  271                          | elaborated-enum-specifier

  272 empty-declaration: SEMICOLON

  273 enclosing-namespace-specifier: IDENTIFIER
  274                              | enclosing-namespace-specifier SCOPE IDENTIFIER
  275                              | enclosing-namespace-specifier SCOPE INLINE IDENTIFIER

  276 encoding-prefix: UNICODE_8
  277                | 'u'
  278                | 'U'
  279                | 'L'

  280 enum-base: COLON type-specifier-seq

  281 enum-head: enum-key
  282          | enum-key attribute-specifier-seq
  283          | enum-key enum-head-name
  284          | enum-key attribute-specifier-seq enum-head-name
  285          | enum-key enum-base
  286          | enum-key attribute-specifier-seq enum-base
  287          | enum-key enum-head-name enum-base
  288          | enum-key attribute-specifier-seq enum-head-name enum-base

  289 enum-head-name: nested-name-specifier IDENTIFIER
  290               | IDENTIFIER

  291 enum-key: ENUM
  292         | ENUM CLASS
  293         | ENUM STRUCT

  294 enum-name: IDENTIFIER

  295 enum-specifier: enum-head OPEN_BRACE CLOSE_BRACE
  296               | enum-head OPEN_BRACE enumerator-list CLOSE_BRACE
  297               | enum-head OPEN_BRACE enumerator-list COMMA CLOSE_BRACE

  298 enumerator: IDENTIFIER
  299           | IDENTIFIER attribute-specifier-seq

  300 enumerator-definition: enumerator
  301                      | enumerator EQ constant-expression

  302 enumerator-list: enumerator-definition
  303                | enumerator-list COMMA enumerator-definition

  304 equality-expression: relational-expression
  305                    | equality-expression EQ_EQ relational-expression
  306                    | equality-expression NOT_EQ relational-expression

  307 escape-sequence: simple-escape-sequence
  308                | numeric-escape-sequence
  309                | conditional-escape-sequence

  310 exception-declaration: attribute-specifier-seq type-specifier-seq declarator
  311                      | type-specifier-seq declarator
  312                      | attribute-specifier-seq type-specifier-seq
  313                      | type-specifier-seq
  314                      | attribute-specifier-seq type-specifier-seq abstract-declarator
  315                      | type-specifier-seq abstract-declarator
  316                      | ELLIPSIS

  317 exclusive-or-expression: and-expression
  318                        | exclusive-or-expression XOR and-expression

  319 explicit-instantiation: EXTERN TEMPLATE declaration
  320                       | TEMPLATE declaration

  321 explicit-specialization: TEMPLATE LESS GREATER declaration

  322 explicit-specifier: EXPLICIT OPEN_PAREN constant-expression CLOSE_PAREN
  323                   | EXPLICIT

  324 exponent-part: 'e' digit-sequence
  325              | 'e' sign digit-sequence
  326              | 'E' digit-sequence
  327              | 'E' sign digit-sequence

  328 export-declaration: EXPORT declaration
  329                   | EXPORT OPEN_BRACE CLOSE_BRACE
  330                   | EXPORT OPEN_BRACE declaration-seq CLOSE_BRACE
  331                   | EXPORT module-import-declaration

  332 expr-or-braced-init-list: expression
  333                         | braced-init-list

  334 expression: assignment-expression
  335           | expression COMMA assignment-expression

  336 expression-list: initializer-list

  337 expression-statement: expression SEMICOLON
  338                     | SEMICOLON

  339 floating-point-literal: decimal-floating-point-literal
  340                       | hexadecimal-floating-point-literal

  341 floating-point-suffix: 'f'
  342                      | 'l'
  343                      | 'F'
  344                      | 'L'

  345 fold-expression: OPEN_PAREN cast-expression fold-operator ELLIPSIS CLOSE_PAREN
  346                | OPEN_PAREN ELLIPSIS fold-operator cast-expression CLOSE_PAREN
  347                | OPEN_PAREN cast-expression fold-operator ELLIPSIS fold-operator cast-expression CLOSE_PAREN

  348 fold-operator: PLUS
  349              | MINUS
  350              | MULT
  351              | DIV
  352              | MOD
  353              | XOR
  354              | AND
  355              | OR
  356              | LSHIFT
  357              | RSHIFT
  358              | PLUS_EQ
  359              | MINUS_EQ
  360              | MULT_EQ
  361              | DIV_EQ
  362              | MOD_EQ
  363              | XOR_EQ
  364              | AND_EQ
  365              | OR_EQ
  366              | LSHIFT_EQ
  367              | RSHIFT_EQ
  368              | EQ
  369              | EQ_EQ
  370              | NOT_EQ
  371              | LESS
  372              | GREATER
  373              | LESS_EQ
  374              | GREATER_EQ
  375              | AND_AND
  376              | OR_OR
  377              | COMMA
  378              | DOT_STAR
  379              | DEREF_STAR

  380 for-range-declaration: attribute-specifier-seq decl-specifier-seq declarator
  381                      | decl-specifier-seq declarator
  382                      | attribute-specifier-seq decl-specifier-seq OPEN_SQUARE identifier-list CLOSE_SQUARE
  383                      | decl-specifier-seq OPEN_SQUARE identifier-list CLOSE_SQUARE
  384                      | attribute-specifier-seq decl-specifier-seq ref-qualifier OPEN_SQUARE identifier-list CLOSE_SQUARE
  385                      | decl-specifier-seq ref-qualifier OPEN_SQUARE identifier-list CLOSE_SQUARE

  386 for-range-initializer: expr-or-braced-init-list

  387 fractional-constant: digit-sequence DOT digit-sequence
  388                    | DOT digit-sequence
  389                    | digit-sequence DOT

  390 function-body: ctor-initializer compound-statement
  391              | compound-statement
  392              | function-try-block
  393              | EQ DEFAULT SEMICOLON
  394              | EQ DELETE SEMICOLON

  395 function-definition: attribute-specifier-seq declarator function-body
  396                    | declarator function-body
  397                    | attribute-specifier-seq decl-specifier-seq declarator function-body
  398                    | decl-specifier-seq declarator function-body
  399                    | attribute-specifier-seq declarator virt-specifier-seq function-body
  400                    | declarator virt-specifier-seq function-body
  401                    | attribute-specifier-seq decl-specifier-seq declarator virt-specifier-seq function-body
  402                    | decl-specifier-seq declarator virt-specifier-seq function-body
  403                    | attribute-specifier-seq declarator requires-clause function-body
  404                    | declarator requires-clause function-body
  405                    | attribute-specifier-seq decl-specifier-seq declarator requires-clause function-body
  406                    | decl-specifier-seq declarator requires-clause function-body

  407 function-specifier: VIRTUAL
  408                   | explicit-specifier

  409 function-try-block: TRY compound-statement handler-seq
  410                   | TRY ctor-initializer compound-statement handler-seq

  411 global-module-fragment: MODULE SEMICOLON
  412                       | MODULE SEMICOLON declaration-seq

  413 h-char: H_CHAR

  414 h-char-sequence: h-char
  415                | h-char-sequence h-char

  416 handler: CATCH OPEN_PAREN exception-declaration CLOSE_PAREN compound-statement

  417 handler-seq: handler
  418            | handler handler-seq

  419 header-name: LESS h-char-sequence GREATER
  420            | DOUBLE_QUOTE q-char-sequence DOUBLE_QUOTE

  421 hex-quad: hexadecimal-digit hexadecimal-digit hexadecimal-digit hexadecimal-digit

  422 hexadecimal-digit: '0'
  423                  | '1'
  424                  | '2'
  425                  | '3'
  426                  | '4'
  427                  | '5'
  428                  | '6'
  429                  | '7'
  430                  | '8'
  431                  | '9'
  432                  | 'a'
  433                  | 'b'
  434                  | 'c'
  435                  | 'd'
  436                  | 'e'
  437                  | 'f'
  438                  | 'A'
  439                  | 'B'
  440                  | 'C'
  441                  | 'D'
  442                  | 'E'
  443                  | 'F'

  444 hexadecimal-digit-sequence: hexadecimal-digit
  445                           | hexadecimal-digit-sequence hexadecimal-digit
  446                           | hexadecimal-digit-sequence SINGLE_QUOTE hexadecimal-digit

  447 hexadecimal-escape-sequence: ESCAPE_LX hexadecimal-digit
  448                            | hexadecimal-escape-sequence hexadecimal-digit

  449 hexadecimal-floating-point-literal: hexadecimal-prefix hexadecimal-fractional-constant binary-exponent-part
  450                                   | hexadecimal-prefix hexadecimal-fractional-constant binary-exponent-part floating-point-suffix
  451                                   | hexadecimal-prefix hexadecimal-digit-sequence binary-exponent-part
  452                                   | hexadecimal-prefix hexadecimal-digit-sequence binary-exponent-part floating-point-suffix

  453 hexadecimal-fractional-constant: hexadecimal-digit-sequence DOT hexadecimal-digit-sequence
  454                                | DOT hexadecimal-digit-sequence
  455                                | hexadecimal-digit-sequence DOT

  456 hexadecimal-literal: hexadecimal-prefix hexadecimal-digit-sequence

  457 hexadecimal-prefix: ZERO_LX
  458                   | ZERO_HX

  459 id-expression: unqualified-id
  460              | qualified-id

  461 identifier-list: IDENTIFIER
  462                | identifier-list COMMA IDENTIFIER

  463 inclusive-or-expression: exclusive-or-expression
  464                        | inclusive-or-expression OR exclusive-or-expression

  465 init-capture: ELLIPSIS IDENTIFIER initializer
  466             | IDENTIFIER initializer
  467             | AND IDENTIFIER initializer
  468             | AND ELLIPSIS IDENTIFIER initializer

  469 init-declarator: declarator
  470                | declarator initializer
  471                | declarator requires-clause

  472 init-declarator-list: init-declarator
  473                     | init-declarator-list COMMA init-declarator

  474 init-statement: expression-statement
  475               | simple-declaration
  476               | alias-declaration

  477 initializer: brace-or-equal-initializer
  478            | OPEN_PAREN expression-list CLOSE_PAREN

  479 initializer-clause: assignment-expression
  480                   | braced-init-list

  481 initializer-list: initializer-clause
  482                 | initializer-clause ELLIPSIS
  483                 | initializer-list COMMA initializer-clause
  484                 | initializer-list COMMA initializer-clause ELLIPSIS

  485 integer-literal: binary-literal
  486                | binary-literal integer-suffix
  487                | octal-literal
  488                | octal-literal integer-suffix
  489                | decimal-literal
  490                | decimal-literal integer-suffix
  491                | hexadecimal-literal
  492                | hexadecimal-literal integer-suffix

  493 integer-suffix: unsigned-suffix
  494               | unsigned-suffix long-suffix
  495               | unsigned-suffix
  496               | unsigned-suffix long-long-suffix
  497               | unsigned-suffix
  498               | unsigned-suffix size-suffix
  499               | long-suffix
  500               | long-suffix unsigned-suffix
  501               | long-long-suffix
  502               | long-long-suffix unsigned-suffix
  503               | size-suffix
  504               | size-suffix unsigned-suffix

  505 iteration-statement: WHILE OPEN_PAREN condition CLOSE_PAREN statement
  506                    | DO statement WHILE OPEN_PAREN expression CLOSE_PAREN SEMICOLON
  507                    | FOR OPEN_PAREN init-statement SEMICOLON CLOSE_PAREN statement
  508                    | FOR OPEN_PAREN init-statement condition SEMICOLON CLOSE_PAREN statement
  509                    | FOR OPEN_PAREN init-statement SEMICOLON expression CLOSE_PAREN statement
  510                    | FOR OPEN_PAREN init-statement condition SEMICOLON expression CLOSE_PAREN statement
  511                    | FOR OPEN_PAREN for-range-declaration COLON for-range-initializer CLOSE_PAREN statement
  512                    | FOR OPEN_PAREN init-statement for-range-declaration COLON for-range-initializer CLOSE_PAREN statement

  513 jump-statement: BREAK SEMICOLON
  514               | CONTINUE SEMICOLON
  515               | RETURN SEMICOLON
  516               | RETURN expr-or-braced-init-list SEMICOLON
  517               | coroutine-return-statement
  518               | GOTO IDENTIFIER SEMICOLON

  519 labeled-statement: attribute-specifier-seq IDENTIFIER COLON statement
  520                  | IDENTIFIER COLON statement
  521                  | attribute-specifier-seq CASE constant-expression COLON statement
  522                  | CASE constant-expression COLON statement
  523                  | attribute-specifier-seq DEFAULT COLON statement
  524                  | DEFAULT COLON statement

  525 lambda-capture: capture-default
  526               | capture-list
  527               | capture-default COMMA capture-list

  528 lambda-declarator: lambda-specifiers
  529                  | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN lambda-specifiers
  530                  | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN lambda-specifiers requires-clause

  531 lambda-expression: lambda-introducer lambda-declarator compound-statement
  532                  | lambda-introducer LESS template-parameter-list GREATER lambda-declarator compound-statement
  533                  | lambda-introducer LESS template-parameter-list GREATER requires-clause lambda-declarator compound-statement

  534 lambda-introducer: OPEN_SQUARE CLOSE_SQUARE
  535                  | OPEN_SQUARE lambda-capture CLOSE_SQUARE

  536 lambda-specifiers: decl-specifier-seq
  537                  | decl-specifier-seq noexcept-specifier
  538                  | noexcept-specifier
  539                  | decl-specifier-seq attribute-specifier-seq
  540                  | attribute-specifier-seq
  541                  | decl-specifier-seq noexcept-specifier attribute-specifier-seq
  542                  | noexcept-specifier attribute-specifier-seq
  543                  | decl-specifier-seq trailing-return-type
  544                  | trailing-return-type
  545                  | decl-specifier-seq noexcept-specifier trailing-return-type
  546                  | noexcept-specifier trailing-return-type
  547                  | decl-specifier-seq attribute-specifier-seq trailing-return-type
  548                  | attribute-specifier-seq trailing-return-type
  549                  | decl-specifier-seq noexcept-specifier attribute-specifier-seq trailing-return-type
  550                  | noexcept-specifier attribute-specifier-seq trailing-return-type

  551 linkage-specification: EXTERN string-literal OPEN_BRACE CLOSE_BRACE
  552                      | EXTERN string-literal OPEN_BRACE declaration-seq CLOSE_BRACE
  553                      | EXTERN string-literal declaration

  554 literal: integer-literal
  555        | character-literal
  556        | floating-point-literal
  557        | string-literal
  558        | boolean-literal
  559        | pointer-literal
  560        | user-defined-literal

  561 literal-operator-id: OPERATOR string-literal IDENTIFIER
  562                    | OPERATOR user-defined-string-literal

  563 logical-and-expression: inclusive-or-expression
  564                       | logical-and-expression AND_AND inclusive-or-expression

  565 logical-or-expression: logical-and-expression
  566                      | logical-or-expression OR_OR logical-and-expression

  567 long-long-suffix: LONG_LONG_L
  568                 | LONG_LONG_H

  569 long-suffix: 'l'
  570            | 'L'

  571 mem-initializer: mem-initializer-id OPEN_PAREN CLOSE_PAREN
  572                | mem-initializer-id OPEN_PAREN expression-list CLOSE_PAREN
  573                | mem-initializer-id braced-init-list

  574 mem-initializer-id: class-or-decltype
  575                   | IDENTIFIER

  576 mem-initializer-list: mem-initializer
  577                     | mem-initializer ELLIPSIS
  578                     | mem-initializer-list COMMA mem-initializer
  579                     | mem-initializer-list COMMA mem-initializer ELLIPSIS

  580 member-declaration: attribute-specifier-seq SEMICOLON
  581                   | SEMICOLON
  582                   | attribute-specifier-seq decl-specifier-seq SEMICOLON
  583                   | decl-specifier-seq SEMICOLON
  584                   | attribute-specifier-seq member-declarator-list SEMICOLON
  585                   | member-declarator-list SEMICOLON
  586                   | attribute-specifier-seq decl-specifier-seq member-declarator-list SEMICOLON
  587                   | decl-specifier-seq member-declarator-list SEMICOLON
  588                   | function-definition
  589                   | using-declaration
  590                   | using-enum-declaration
  591                   | static_assert-declaration
  592                   | template-declaration
  593                   | explicit-specialization
  594                   | deduction-guide
  595                   | alias-declaration
  596                   | opaque-enum-declaration
  597                   | empty-declaration

  598 member-declarator: declarator
  599                  | declarator virt-specifier-seq
  600                  | declarator pure-specifier
  601                  | declarator virt-specifier-seq pure-specifier
  602                  | declarator requires-clause
  603                  | declarator
  604                  | declarator brace-or-equal-initializer
  605                  | IDENTIFIER COLON constant-expression
  606                  | COLON constant-expression
  607                  | IDENTIFIER attribute-specifier-seq COLON constant-expression
  608                  | attribute-specifier-seq COLON constant-expression
  609                  | IDENTIFIER COLON constant-expression brace-or-equal-initializer
  610                  | COLON constant-expression brace-or-equal-initializer
  611                  | IDENTIFIER attribute-specifier-seq COLON constant-expression brace-or-equal-initializer
  612                  | attribute-specifier-seq COLON constant-expression brace-or-equal-initializer

  613 member-declarator-list: member-declarator
  614                       | member-declarator-list COMMA member-declarator

  615 member-specification: member-declaration
  616                     | member-declaration member-specification
  617                     | access-specifier COLON
  618                     | access-specifier COLON member-specification

  619 module-declaration: EXPORT MODULE module-name SEMICOLON
  620                   | MODULE module-name SEMICOLON
  621                   | EXPORT MODULE module-name module-partition SEMICOLON
  622                   | MODULE module-name module-partition SEMICOLON
  623                   | EXPORT MODULE module-name attribute-specifier-seq SEMICOLON
  624                   | MODULE module-name attribute-specifier-seq SEMICOLON
  625                   | EXPORT MODULE module-name module-partition attribute-specifier-seq SEMICOLON
  626                   | MODULE module-name module-partition attribute-specifier-seq SEMICOLON

  627 module-import-declaration: IMPORT module-name SEMICOLON
  628                          | IMPORT module-name attribute-specifier-seq SEMICOLON
  629                          | IMPORT module-partition SEMICOLON
  630                          | IMPORT module-partition attribute-specifier-seq SEMICOLON
  631                          | IMPORT header-name SEMICOLON
  632                          | IMPORT header-name attribute-specifier-seq SEMICOLON

  633 module-name: module-name-qualifier IDENTIFIER
  634            | IDENTIFIER

  635 module-name-qualifier: IDENTIFIER DOT
  636                      | module-name-qualifier IDENTIFIER DOT

  637 module-partition: COLON IDENTIFIER
  638                 | COLON module-name-qualifier IDENTIFIER

  639 multiplicative-expression: pm-expression
  640                          | multiplicative-expression MULT pm-expression
  641                          | multiplicative-expression DIV pm-expression
  642                          | multiplicative-expression MOD pm-expression

  643 named-namespace-definition: INLINE NAMESPACE IDENTIFIER OPEN_BRACE namespace-body CLOSE_BRACE
  644                           | NAMESPACE IDENTIFIER OPEN_BRACE namespace-body CLOSE_BRACE
  645                           | INLINE NAMESPACE attribute-specifier-seq IDENTIFIER OPEN_BRACE namespace-body CLOSE_BRACE
  646                           | NAMESPACE attribute-specifier-seq IDENTIFIER OPEN_BRACE namespace-body CLOSE_BRACE

  647 namespace-alias: IDENTIFIER

  648 namespace-alias-definition: NAMESPACE IDENTIFIER EQ qualified-namespace-specifier SEMICOLON

  649 namespace-body: declaration-seq

  650 namespace-definition: named-namespace-definition
  651                     | unnamed-namespace-definition
  652                     | nested-namespace-definition

  653 namespace-name: IDENTIFIER
  654               | namespace-alias

  655 nested-name-specifier: SCOPE
  656                      | type-name SCOPE
  657                      | namespace-name SCOPE
  658                      | decltype-specifier SCOPE
  659                      | nested-name-specifier IDENTIFIER SCOPE
  660                      | nested-name-specifier simple-template-id SCOPE
  661                      | nested-name-specifier TEMPLATE simple-template-id SCOPE

  662 nested-namespace-definition: NAMESPACE enclosing-namespace-specifier SCOPE IDENTIFIER OPEN_BRACE namespace-body CLOSE_BRACE
  663                            | NAMESPACE enclosing-namespace-specifier SCOPE INLINE IDENTIFIER OPEN_BRACE namespace-body CLOSE_BRACE

  664 nested-requirement: REQUIRES constraint-expression SEMICOLON

  665 new-declarator: ptr-operator
  666               | ptr-operator new-declarator
  667               | noptr-new-declarator

  668 new-expression: SCOPE NEW new-type-id
  669               | NEW new-type-id
  670               | SCOPE NEW new-placement new-type-id
  671               | NEW new-placement new-type-id
  672               | SCOPE NEW new-type-id new-initializer
  673               | NEW new-type-id new-initializer
  674               | SCOPE NEW new-placement new-type-id new-initializer
  675               | NEW new-placement new-type-id new-initializer
  676               | SCOPE NEW OPEN_PAREN type-id CLOSE_PAREN
  677               | NEW OPEN_PAREN type-id CLOSE_PAREN
  678               | SCOPE NEW new-placement OPEN_PAREN type-id CLOSE_PAREN
  679               | NEW new-placement OPEN_PAREN type-id CLOSE_PAREN
  680               | SCOPE NEW OPEN_PAREN type-id CLOSE_PAREN new-initializer
  681               | NEW OPEN_PAREN type-id CLOSE_PAREN new-initializer
  682               | SCOPE NEW new-placement OPEN_PAREN type-id CLOSE_PAREN new-initializer
  683               | NEW new-placement OPEN_PAREN type-id CLOSE_PAREN new-initializer

  684 new-initializer: OPEN_PAREN CLOSE_PAREN
  685                | OPEN_PAREN expression-list CLOSE_PAREN
  686                | braced-init-list

  687 new-placement: OPEN_PAREN expression-list CLOSE_PAREN

  688 new-type-id: type-specifier-seq
  689            | type-specifier-seq new-declarator

  690 nodeclspec-function-declaration: attribute-specifier-seq declarator SEMICOLON
  691                                | declarator SEMICOLON

  692 noexcept-expression: NOEXCEPT OPEN_PAREN expression CLOSE_PAREN

  693 noexcept-specifier: NOEXCEPT OPEN_PAREN constant-expression CLOSE_PAREN
  694                   | NOEXCEPT

  695 nonzero-digit: '1'
  696              | '2'
  697              | '3'
  698              | '4'
  699              | '5'
  700              | '6'
  701              | '7'
  702              | '8'
  703              | '9'

  704 noptr-abstract-declarator: noptr-abstract-declarator parameters-and-qualifiers
  705                          | parameters-and-qualifiers
  706                          | noptr-abstract-declarator OPEN_SQUARE CLOSE_SQUARE
  707                          | OPEN_SQUARE CLOSE_SQUARE
  708                          | noptr-abstract-declarator OPEN_SQUARE constant-expression CLOSE_SQUARE
  709                          | OPEN_SQUARE constant-expression CLOSE_SQUARE
  710                          | noptr-abstract-declarator OPEN_SQUARE CLOSE_SQUARE attribute-specifier-seq
  711                          | OPEN_SQUARE CLOSE_SQUARE attribute-specifier-seq
  712                          | noptr-abstract-declarator OPEN_SQUARE constant-expression CLOSE_SQUARE attribute-specifier-seq
  713                          | OPEN_SQUARE constant-expression CLOSE_SQUARE attribute-specifier-seq
  714                          | OPEN_PAREN ptr-abstract-declarator CLOSE_PAREN

  715 noptr-abstract-pack-declarator: noptr-abstract-pack-declarator parameters-and-qualifiers
  716                               | noptr-abstract-pack-declarator OPEN_SQUARE CLOSE_SQUARE
  717                               | noptr-abstract-pack-declarator OPEN_SQUARE constant-expression CLOSE_SQUARE
  718                               | noptr-abstract-pack-declarator OPEN_SQUARE CLOSE_SQUARE attribute-specifier-seq
  719                               | noptr-abstract-pack-declarator OPEN_SQUARE constant-expression CLOSE_SQUARE attribute-specifier-seq
  720                               | ELLIPSIS

  721 noptr-declarator: declarator-id
  722                 | declarator-id attribute-specifier-seq
  723                 | noptr-declarator parameters-and-qualifiers
  724                 | noptr-declarator OPEN_SQUARE CLOSE_SQUARE
  725                 | noptr-declarator OPEN_SQUARE constant-expression CLOSE_SQUARE
  726                 | noptr-declarator OPEN_SQUARE CLOSE_SQUARE attribute-specifier-seq
  727                 | noptr-declarator OPEN_SQUARE constant-expression CLOSE_SQUARE attribute-specifier-seq
  728                 | OPEN_PAREN ptr-declarator CLOSE_PAREN

  729 noptr-new-declarator: OPEN_SQUARE CLOSE_SQUARE
  730                     | OPEN_SQUARE expression CLOSE_SQUARE
  731                     | OPEN_SQUARE CLOSE_SQUARE attribute-specifier-seq
  732                     | OPEN_SQUARE expression CLOSE_SQUARE attribute-specifier-seq
  733                     | noptr-new-declarator OPEN_SQUARE constant-expression CLOSE_SQUARE
  734                     | noptr-new-declarator OPEN_SQUARE constant-expression CLOSE_SQUARE attribute-specifier-seq

  735 numeric-escape-sequence: octal-escape-sequence
  736                        | hexadecimal-escape-sequence

  737 octal-digit: '0'
  738            | '1'
  739            | '2'
  740            | '3'
  741            | '4'
  742            | '5'
  743            | '6'
  744            | '7'

  745 octal-escape-sequence: ESCAPE octal-digit
  746                      | ESCAPE octal-digit octal-digit
  747                      | ESCAPE octal-digit octal-digit octal-digit

  748 octal-literal: '0'
  749              | octal-literal octal-digit
  750              | octal-literal SINGLE_QUOTE octal-digit

  751 opaque-enum-declaration: enum-key enum-head-name SEMICOLON
  752                        | enum-key attribute-specifier-seq enum-head-name SEMICOLON
  753                        | enum-key enum-head-name enum-base SEMICOLON
  754                        | enum-key attribute-specifier-seq enum-head-name enum-base SEMICOLON

  755 operator-function-id: OPERATOR overloadable-operator
  756                     | OPERATOR overloadable-operator LESS GREATER
  757                     | OPERATOR overloadable-operator LESS template-argument-list GREATER

  758 overloadable-operator: NEW
  759                      | DELETE
  760                      | NEW OPEN_SQUARE CLOSE_SQUARE
  761                      | DELETE OPEN_SQUARE CLOSE_SQUARE
  762                      | CO_AWAIT
  763                      | OPEN_PAREN CLOSE_PAREN
  764                      | OPEN_SQUARE CLOSE_SQUARE
  765                      | DEREF
  766                      | DEREF_STAR
  767                      | COMPL
  768                      | NOT
  769                      | PLUS
  770                      | MINUS
  771                      | MULT
  772                      | DIV
  773                      | MOD
  774                      | XOR
  775                      | AND
  776                      | OR
  777                      | EQ
  778                      | PLUS_EQ
  779                      | MINUS_EQ
  780                      | MULT_EQ
  781                      | DIV_EQ
  782                      | MOD_EQ
  783                      | XOR_EQ
  784                      | AND_EQ
  785                      | OR_EQ
  786                      | EQ_EQ
  787                      | NOT_EQ
  788                      | LESS
  789                      | GREATER
  790                      | LESS_EQ
  791                      | GREATER_EQ
  792                      | SPACESHIP
  793                      | AND_AND
  794                      | OR_OR
  795                      | LSHIFT
  796                      | RSHIFT
  797                      | LSHIFT_EQ
  798                      | RSHIFT_EQ
  799                      | PLUS_PLUS
  800                      | MINUS_MINUS
  801                      | COMMA

  802 parameter-declaration: attribute-specifier-seq decl-specifier-seq declarator
  803                      | decl-specifier-seq declarator
  804                      | attribute-specifier-seq THIS decl-specifier-seq declarator
  805                      | THIS decl-specifier-seq declarator
  806                      | attribute-specifier-seq decl-specifier-seq declarator EQ initializer-clause
  807                      | decl-specifier-seq declarator EQ initializer-clause
  808                      | attribute-specifier-seq THIS decl-specifier-seq declarator EQ initializer-clause
  809                      | THIS decl-specifier-seq declarator EQ initializer-clause
  810                      | attribute-specifier-seq decl-specifier-seq
  811                      | decl-specifier-seq
  812                      | attribute-specifier-seq THIS decl-specifier-seq
  813                      | THIS decl-specifier-seq
  814                      | attribute-specifier-seq decl-specifier-seq abstract-declarator
  815                      | decl-specifier-seq abstract-declarator
  816                      | attribute-specifier-seq THIS decl-specifier-seq abstract-declarator
  817                      | THIS decl-specifier-seq abstract-declarator
  818                      | attribute-specifier-seq decl-specifier-seq EQ initializer-clause
  819                      | decl-specifier-seq EQ initializer-clause
  820                      | attribute-specifier-seq THIS decl-specifier-seq EQ initializer-clause
  821                      | THIS decl-specifier-seq EQ initializer-clause
  822                      | attribute-specifier-seq decl-specifier-seq abstract-declarator EQ initializer-clause
  823                      | decl-specifier-seq abstract-declarator EQ initializer-clause
  824                      | attribute-specifier-seq THIS decl-specifier-seq abstract-declarator EQ initializer-clause
  825                      | THIS decl-specifier-seq abstract-declarator EQ initializer-clause

  826 parameter-declaration-clause: parameter-declaration-list
  827                             | parameter-declaration-list ELLIPSIS
  828                             | ELLIPSIS
  829                             | parameter-declaration-list COMMA ELLIPSIS

  830 parameter-declaration-list: parameter-declaration
  831                           | parameter-declaration-list COMMA parameter-declaration

  832 parameters-and-qualifiers: OPEN_PAREN parameter-declaration-clause CLOSE_PAREN
  833                          | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq
  834                          | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN ref-qualifier
  835                          | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq ref-qualifier
  836                          | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN noexcept-specifier
  837                          | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq noexcept-specifier
  838                          | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN ref-qualifier noexcept-specifier
  839                          | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq ref-qualifier noexcept-specifier
  840                          | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN attribute-specifier-seq
  841                          | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq attribute-specifier-seq
  842                          | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN ref-qualifier attribute-specifier-seq
  843                          | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq ref-qualifier attribute-specifier-seq
  844                          | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN noexcept-specifier attribute-specifier-seq
  845                          | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq noexcept-specifier attribute-specifier-seq
  846                          | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN ref-qualifier noexcept-specifier attribute-specifier-seq
  847                          | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq ref-qualifier noexcept-specifier attribute-specifier-seq

  848 placeholder-type-specifier: type-constraint AUTO
  849                           | AUTO
  850                           | type-constraint DECLTYPE OPEN_PAREN AUTO CLOSE_PAREN
  851                           | DECLTYPE OPEN_PAREN AUTO CLOSE_PAREN

  852 pm-expression: cast-expression
  853              | pm-expression DOT_STAR cast-expression
  854              | pm-expression DEREF_STAR cast-expression

  855 pointer-literal: NULLPTR

  856 postfix-expression: primary-expression
  857                   | postfix-expression OPEN_SQUARE CLOSE_SQUARE
  858                   | postfix-expression OPEN_SQUARE expression-list CLOSE_SQUARE
  859                   | postfix-expression OPEN_PAREN CLOSE_PAREN
  860                   | postfix-expression OPEN_PAREN expression-list CLOSE_PAREN
  861                   | simple-type-specifier OPEN_PAREN CLOSE_PAREN
  862                   | simple-type-specifier OPEN_PAREN expression-list CLOSE_PAREN
  863                   | typename-specifier OPEN_PAREN CLOSE_PAREN
  864                   | typename-specifier OPEN_PAREN expression-list CLOSE_PAREN
  865                   | simple-type-specifier braced-init-list
  866                   | typename-specifier braced-init-list
  867                   | postfix-expression DOT id-expression
  868                   | postfix-expression DOT TEMPLATE id-expression
  869                   | postfix-expression DEREF id-expression
  870                   | postfix-expression DEREF TEMPLATE id-expression
  871                   | postfix-expression PLUS_PLUS
  872                   | postfix-expression MINUS_MINUS
  873                   | DYNAMIC_CAST LESS type-id GREATER OPEN_PAREN expression CLOSE_PAREN
  874                   | STATIC_CAST LESS type-id GREATER OPEN_PAREN expression CLOSE_PAREN
  875                   | REINTERPRET_CAST LESS type-id GREATER OPEN_PAREN expression CLOSE_PAREN
  876                   | CONST_CAST LESS type-id GREATER OPEN_PAREN expression CLOSE_PAREN
  877                   | TYPEID OPEN_PAREN expression CLOSE_PAREN
  878                   | TYPEID OPEN_PAREN type-id CLOSE_PAREN

  879 primary-expression: literal
  880                   | THIS
  881                   | OPEN_PAREN expression CLOSE_PAREN
  882                   | id-expression
  883                   | lambda-expression
  884                   | fold-expression
  885                   | requires-expression

  886 private-module-fragment: MODULE COLON PRIVATE SEMICOLON
  887                        | MODULE COLON PRIVATE SEMICOLON declaration-seq

  888 ptr-abstract-declarator: noptr-abstract-declarator
  889                        | ptr-operator
  890                        | ptr-operator ptr-abstract-declarator

  891 ptr-declarator: noptr-declarator
  892               | ptr-operator ptr-declarator

  893 ptr-operator: MULT
  894             | MULT attribute-specifier-seq
  895             | MULT cv-qualifier-seq
  896             | MULT attribute-specifier-seq cv-qualifier-seq
  897             | AND
  898             | AND attribute-specifier-seq
  899             | AND_AND
  900             | AND_AND attribute-specifier-seq
  901             | nested-name-specifier MULT
  902             | nested-name-specifier MULT attribute-specifier-seq
  903             | nested-name-specifier MULT cv-qualifier-seq
  904             | nested-name-specifier MULT attribute-specifier-seq cv-qualifier-seq

  905 pure-specifier: EQ '0'

  906 q-char: Q_CHAR

  907 q-char-sequence: q-char
  908                | q-char-sequence q-char

  909 qualified-id: nested-name-specifier unqualified-id
  910             | nested-name-specifier TEMPLATE unqualified-id

  911 qualified-namespace-specifier: nested-name-specifier namespace-name
  912                              | namespace-name

  913 raw-string: BASIC_S_CHAR

  914 ref-qualifier: AND
  915              | AND_AND

  916 relational-expression: compare-expression
  917                      | relational-expression LESS compare-expression
  918                      | relational-expression GREATER compare-expression
  919                      | relational-expression LESS_EQ compare-expression
  920                      | relational-expression GREATER_EQ compare-expression

  921 requirement: simple-requirement
  922            | type-requirement
  923            | compound-requirement
  924            | nested-requirement

  925 requirement-body: OPEN_BRACE requirement-seq CLOSE_BRACE

  926 requirement-parameter-list: OPEN_PAREN parameter-declaration-clause CLOSE_PAREN

  927 requirement-seq: requirement
  928                | requirement-seq requirement

  929 requires-clause: REQUIRES constraint-logical-or-expression

  930 requires-expression: REQUIRES requirement-body
  931                    | REQUIRES requirement-parameter-list requirement-body

  932 return-type-requirement: DEREF type-constraint

  933 s-char: basic-s-char
  934       | escape-sequence
  935       | universal-character-name

  936 s-char-sequence: s-char
  937                | s-char-sequence s-char

  938 selection-statement: IF OPEN_PAREN condition CLOSE_PAREN statement
  939                    | IF CONSTEXPR OPEN_PAREN condition CLOSE_PAREN statement
  940                    | IF OPEN_PAREN init-statement condition CLOSE_PAREN statement
  941                    | IF CONSTEXPR OPEN_PAREN init-statement condition CLOSE_PAREN statement
  942                    | IF OPEN_PAREN condition CLOSE_PAREN statement ELSE statement
  943                    | IF CONSTEXPR OPEN_PAREN condition CLOSE_PAREN statement ELSE statement
  944                    | IF OPEN_PAREN init-statement condition CLOSE_PAREN statement ELSE statement
  945                    | IF CONSTEXPR OPEN_PAREN init-statement condition CLOSE_PAREN statement ELSE statement
  946                    | IF CONSTEVAL compound-statement
  947                    | IF NOT CONSTEVAL compound-statement
  948                    | IF CONSTEVAL compound-statement ELSE statement
  949                    | IF NOT CONSTEVAL compound-statement ELSE statement
  950                    | SWITCH OPEN_PAREN condition CLOSE_PAREN statement
  951                    | SWITCH OPEN_PAREN init-statement condition CLOSE_PAREN statement

  952 shift-expression: additive-expression
  953                 | shift-expression LSHIFT additive-expression
  954                 | shift-expression RSHIFT additive-expression

  955 sign: PLUS
  956     | MINUS

  957 simple-capture: IDENTIFIER
  958               | IDENTIFIER ELLIPSIS
  959               | AND IDENTIFIER
  960               | AND IDENTIFIER ELLIPSIS
  961               | THIS
  962               | MULT THIS

  963 simple-declaration: decl-specifier-seq SEMICOLON
  964                   | decl-specifier-seq init-declarator-list SEMICOLON
  965                   | attribute-specifier-seq decl-specifier-seq init-declarator-list SEMICOLON
  966                   | attribute-specifier-seq decl-specifier-seq OPEN_SQUARE identifier-list CLOSE_SQUARE initializer SEMICOLON
  967                   | decl-specifier-seq OPEN_SQUARE identifier-list CLOSE_SQUARE initializer SEMICOLON
  968                   | attribute-specifier-seq decl-specifier-seq ref-qualifier OPEN_SQUARE identifier-list CLOSE_SQUARE initializer SEMICOLON
  969                   | decl-specifier-seq ref-qualifier OPEN_SQUARE identifier-list CLOSE_SQUARE initializer SEMICOLON

  970 simple-escape-sequence: ESCAPE simple-escape-sequence-char

  971 simple-escape-sequence-char: SINGLE_QUOTE
  972                            | DOUBLE_QUOTE
  973                            | QUERY
  974                            | ESCAPE
  975                            | 'a'
  976                            | 'b'
  977                            | 'f'
  978                            | 'n'
  979                            | 'r'
  980                            | 't'
  981                            | 'v'

  982 simple-requirement: expression SEMICOLON

  983 simple-template-id: template-name LESS GREATER
  984                   | template-name LESS template-argument-list GREATER

  985 simple-type-specifier: nested-name-specifier type-name
  986                      | type-name
  987                      | nested-name-specifier TEMPLATE simple-template-id
  988                      | decltype-specifier
  989                      | placeholder-type-specifier
  990                      | nested-name-specifier template-name
  991                      | template-name
  992                      | CHAR
  993                      | CHAR8_T
  994                      | CHAR16_T
  995                      | CHAR32_T
  996                      | WCHAR_T
  997                      | BOOL
  998                      | SHORT
  999                      | INT
  1000                      | LONG
  1001                      | SIGNED
  1002                      | UNSIGNED
  1003                      | FLOAT
  1004                      | DOUBLE
  1005                      | VOID

  1006 size-suffix: 'z'
  1007            | 'Z'

  1008 statement: labeled-statement
  1009          | attribute-specifier-seq expression-statement
  1010          | expression-statement
  1011          | attribute-specifier-seq compound-statement
  1012          | compound-statement
  1013          | attribute-specifier-seq selection-statement
  1014          | selection-statement
  1015          | attribute-specifier-seq iteration-statement
  1016          | iteration-statement
  1017          | attribute-specifier-seq jump-statement
  1018          | jump-statement
  1019          | declaration-statement
  1020          | attribute-specifier-seq try-block
  1021          | try-block

  1022 statement-seq: statement
  1023              | statement-seq statement

  1024 static_assert-declaration: STATIC_ASSERT OPEN_PAREN constant-expression CLOSE_PAREN SEMICOLON
  1025                          | STATIC_ASSERT OPEN_PAREN constant-expression COMMA string-literal CLOSE_PAREN SEMICOLON

  1026 storage-class-specifier: STATIC
  1027                        | THREAD_LOCAL
  1028                        | EXTERN
  1029                        | MUTABLE

  1030 string-literal: encoding-prefix DOUBLE_QUOTE DOUBLE_QUOTE
  1031               | DOUBLE_QUOTE DOUBLE_QUOTE
  1032               | encoding-prefix DOUBLE_QUOTE s-char-sequence DOUBLE_QUOTE
  1033               | DOUBLE_QUOTE s-char-sequence DOUBLE_QUOTE
  1034               | encoding-prefix 'R' raw-string
  1035               | 'R' raw-string

  1036 template-argument: constant-expression
  1037                  | type-id
  1038                  | id-expression

  1039 template-argument-list: template-argument
  1040                       | template-argument ELLIPSIS
  1041                       | template-argument-list COMMA template-argument
  1042                       | template-argument-list COMMA template-argument ELLIPSIS

  1043 template-declaration: template-head declaration
  1044                     | template-head concept-definition

  1045 template-head: TEMPLATE LESS template-parameter-list GREATER
  1046              | TEMPLATE LESS template-parameter-list GREATER requires-clause

  1047 template-id: simple-template-id
  1048            | operator-function-id LESS GREATER
  1049            | operator-function-id LESS template-argument-list GREATER
  1050            | literal-operator-id LESS GREATER
  1051            | literal-operator-id LESS template-argument-list GREATER

  1052 template-name: IDENTIFIER

  1053 template-parameter: type-parameter
  1054                   | parameter-declaration

  1055 template-parameter-list: template-parameter
  1056                        | template-parameter-list COMMA template-parameter

  1057 throw-expression: THROW
  1058                 | THROW assignment-expression

  1059 trailing-return-type: DEREF type-id

  1060 translation-unit: declaration-seq
  1061                 | global-module-fragment module-declaration
  1062                 | module-declaration
  1063                 | global-module-fragment module-declaration declaration-seq
  1064                 | module-declaration declaration-seq
  1065                 | global-module-fragment module-declaration private-module-fragment
  1066                 | module-declaration private-module-fragment
  1067                 | global-module-fragment module-declaration declaration-seq private-module-fragment
  1068                 | module-declaration declaration-seq private-module-fragment

  1069 try-block: TRY compound-statement handler-seq

  1070 type-constraint: nested-name-specifier concept-name
  1071                | concept-name
  1072                | nested-name-specifier concept-name LESS GREATER
  1073                | concept-name LESS GREATER
  1074                | nested-name-specifier concept-name LESS template-argument-list GREATER
  1075                | concept-name LESS template-argument-list GREATER

  1076 type-id: type-specifier-seq
  1077        | type-specifier-seq abstract-declarator

  1078 type-name: class-name
  1079          | enum-name
  1080          | typedef-name

  1081 type-parameter: type-parameter-key
  1082               | type-parameter-key ELLIPSIS
  1083               | type-parameter-key IDENTIFIER
  1084               | type-parameter-key ELLIPSIS IDENTIFIER
  1085               | type-parameter-key EQ type-id
  1086               | type-parameter-key IDENTIFIER EQ type-id
  1087               | type-constraint
  1088               | type-constraint ELLIPSIS
  1089               | type-constraint IDENTIFIER
  1090               | type-constraint ELLIPSIS IDENTIFIER
  1091               | type-constraint EQ type-id
  1092               | type-constraint IDENTIFIER EQ type-id
  1093               | template-head type-parameter-key
  1094               | template-head type-parameter-key ELLIPSIS
  1095               | template-head type-parameter-key IDENTIFIER
  1096               | template-head type-parameter-key ELLIPSIS IDENTIFIER
  1097               | template-head type-parameter-key EQ id-expression
  1098               | template-head type-parameter-key IDENTIFIER EQ id-expression

  1099 type-parameter-key: CLASS
  1100                   | TYPENAME

  1101 type-requirement: TYPENAME type-name SEMICOLON
  1102                 | TYPENAME nested-name-specifier type-name SEMICOLON

  1103 type-specifier: simple-type-specifier
  1104               | elaborated-type-specifier
  1105               | typename-specifier
  1106               | cv-qualifier

  1107 type-specifier-seq: type-specifier
  1108                   | type-specifier attribute-specifier-seq
  1109                   | type-specifier type-specifier-seq

  1110 typedef-name: IDENTIFIER
  1111             | simple-template-id

  1112 typename-specifier: TYPENAME nested-name-specifier IDENTIFIER
  1113                   | TYPENAME nested-name-specifier simple-template-id
  1114                   | TYPENAME nested-name-specifier TEMPLATE simple-template-id

  1115 ud-suffix: IDENTIFIER

  1116 unary-expression: postfix-expression
  1117                 | unary-operator cast-expression
  1118                 | PLUS_PLUS cast-expression
  1119                 | MINUS_MINUS cast-expression
  1120                 | await-expression
  1121                 | SIZEOF unary-expression
  1122                 | SIZEOF OPEN_PAREN type-id CLOSE_PAREN
  1123                 | SIZEOF ELLIPSIS OPEN_PAREN IDENTIFIER CLOSE_PAREN
  1124                 | ALIGNOF OPEN_PAREN type-id CLOSE_PAREN
  1125                 | noexcept-expression
  1126                 | new-expression
  1127                 | delete-expression

  1128 unary-operator: MULT
  1129               | AND
  1130               | PLUS
  1131               | MINUS
  1132               | NOT
  1133               | COMPL

  1134 universal-character-name: ESCAPE_LU hex-quad
  1135                         | ESCAPE_HU hex-quad hex-quad

  1136 unnamed-namespace-definition: INLINE NAMESPACE OPEN_BRACE namespace-body CLOSE_BRACE
  1137                             | NAMESPACE OPEN_BRACE namespace-body CLOSE_BRACE
  1138                             | INLINE NAMESPACE attribute-specifier-seq OPEN_BRACE namespace-body CLOSE_BRACE
  1139                             | NAMESPACE attribute-specifier-seq OPEN_BRACE namespace-body CLOSE_BRACE

  1140 unqualified-id: IDENTIFIER
  1141               | operator-function-id
  1142               | conversion-function-id
  1143               | literal-operator-id
  1144               | COMPL type-name
  1145               | COMPL decltype-specifier
  1146               | template-id

  1147 unsigned-suffix: 'u'
  1148                | 'U'

  1149 user-defined-character-literal: character-literal ud-suffix

  1150 user-defined-floating-point-literal: fractional-constant ud-suffix
  1151                                    | fractional-constant exponent-part ud-suffix
  1152                                    | digit-sequence exponent-part ud-suffix
  1153                                    | hexadecimal-prefix hexadecimal-fractional-constant binary-exponent-part ud-suffix
  1154                                    | hexadecimal-prefix hexadecimal-digit-sequence binary-exponent-part ud-suffix

  1155 user-defined-integer-literal: decimal-literal ud-suffix
  1156                             | octal-literal ud-suffix
  1157                             | hexadecimal-literal ud-suffix
  1158                             | binary-literal ud-suffix

  1159 user-defined-literal: user-defined-integer-literal
  1160                     | user-defined-floating-point-literal
  1161                     | user-defined-string-literal
  1162                     | user-defined-character-literal

  1163 user-defined-string-literal: string-literal ud-suffix

  1164 using-declaration: USING using-declarator-list SEMICOLON

  1165 using-declarator: TYPENAME nested-name-specifier unqualified-id
  1166                 | nested-name-specifier unqualified-id

  1167 using-declarator-list: using-declarator
  1168                      | using-declarator ELLIPSIS
  1169                      | using-declarator-list COMMA using-declarator
  1170                      | using-declarator-list COMMA using-declarator ELLIPSIS

  1171 using-directive: attribute-specifier-seq USING NAMESPACE namespace-name SEMICOLON
  1172                | USING NAMESPACE namespace-name SEMICOLON
  1173                | attribute-specifier-seq USING NAMESPACE nested-name-specifier namespace-name SEMICOLON
  1174                | USING NAMESPACE nested-name-specifier namespace-name SEMICOLON

  1175 using-enum-declaration: USING elaborated-enum-specifier SEMICOLON

  1176 virt-specifier: OVERRIDE
  1177               | FINAL

  1178 virt-specifier-seq: virt-specifier
  1179                   | virt-specifier-seq virt-specifier

  1180 yield-expression: CO_YIELD assignment-expression
  1181                 | CO_YIELD braced-init-list


Terminals, with rules where they appear

    $end (0) 0
    '0' (48) 85 249 422 737 748 905
    '1' (49) 86 250 423 695 738
    '2' (50) 251 424 696 739
    '3' (51) 252 425 697 740
    '4' (52) 253 426 698 741
    '5' (53) 254 427 699 742
    '6' (54) 255 428 700 743
    '7' (55) 256 429 701 744
    '8' (56) 257 430 702
    '9' (57) 258 431 703
    'A' (65) 438
    'B' (66) 439
    'C' (67) 440
    'D' (68) 441
    'E' (69) 326 327 442
    'F' (70) 343 443
    'L' (76) 279 344 570
    'P' (80) 89 90
    'R' (82) 1034 1035
    'U' (85) 278 1148
    'Z' (90) 1007
    'a' (97) 432 975
    'b' (98) 433 976
    'c' (99) 434
    'd' (100) 435
    'e' (101) 324 325 436
    'f' (102) 341 437 977
    'l' (108) 342 569
    'n' (110) 978
    'p' (112) 87 88
    'r' (114) 979
    't' (116) 980
    'u' (117) 277 1147
    'v' (118) 981
    'z' (122) 1006
    error (256)
    PRIVATE (258) 7 886 887
    PROTECTED (259) 8
    PUBLIC (260) 9
    PLUS (261) 11 348 769 955 1130
    MINUS (262) 12 349 770 956 1131
    USING (263) 13 14 57 1164 1171 1172 1173 1174 1175
    IDENTIFIER (264) 13 14 48 49 55 145 163 248 262 263 264 265 266 267 273 274 275 289 290 294 298 299 461 462 465 466 467 468 518 519 520 561 575 605 607 609 611 633 634 635 636 637 638 643 644 645 646 647 648 653 659 662 663 957 958 959 960 1052 1083 1084 1086 1089 1090 1092 1095 1096 1098 1110 1112 1115 1123 1140
    EQ (265) 13 14 27 106 121 162 301 368 393 394 648 777 806 807 808 809 818 819 820 821 822 823 824 825 905 1085 1086 1091 1092 1097 1098
    SEMICOLON (266) 13 14 21 22 42 156 157 158 159 162 182 183 231 232 272 337 338 393 394 411 412 506 507 508 509 510 513 514 515 516 518 580 581 582 583 584 585 586 587 619 620 621 622 623 624 625 626 627 628 629 630 631 632 648 664 690 691 751 752 753 754 886 887 963 964 965 966 967 968 969 982 1024 1025 1101 1102 1164 1171 1172 1173 1174 1175
    ALIGNAS (267) 15 16 17 18
    OPEN_PAREN (268) 15 16 17 18 21 22 40 41 59 60 125 230 231 232 322 345 346 347 416 478 505 506 507 508 509 510 511 512 529 530 571 572 676 677 678 679 680 681 682 683 684 685 687 692 693 714 728 763 832 833 834 835 836 837 838 839 840 841 842 843 844 845 846 847 850 851 859 860 861 862 863 864 873 874 875 876 877 878 881 926 938 939 940 941 942 943 944 945 950 951 1024 1025 1122 1123 1124
    CLOSE_PAREN (269) 15 16 17 18 21 22 40 41 59 60 125 230 231 232 322 345 346 347 416 478 505 506 507 508 509 510 511 512 529 530 571 572 676 677 678 679 680 681 682 683 684 685 687 692 693 714 728 763 832 833 834 835 836 837 838 839 840 841 842 843 844 845 846 847 850 851 859 860 861 862 863 864 873 874 875 876 877 878 881 926 938 939 940 941 942 943 944 945 950 951 1024 1025 1122 1123 1124
    ELLIPSIS (270) 16 18 46 47 80 82 228 316 345 346 347 465 468 482 484 577 579 720 827 828 829 958 960 1040 1042 1082 1084 1088 1090 1094 1096 1123 1168 1170
    AND (271) 20 120 354 467 468 775 897 898 914 959 960 1129
    ASM (272) 21 22
    MULT_EQ (273) 28 360 780
    DIV_EQ (274) 29 361 781
    MOD_EQ (275) 30 362 782
    PLUS_EQ (276) 31 358 778
    MINUS_EQ (277) 32 359 779
    RSHIFT_EQ (278) 33 367 798
    LSHIFT_EQ (279) 34 366 797
    AND_EQ (280) 35 364 784
    XOR_EQ (281) 36 363 783
    OR_EQ (282) 37 365 785
    COMMA (283) 44 45 47 81 82 109 111 123 247 297 303 335 377 462 473 483 484 527 578 579 614 801 829 831 1025 1041 1042 1056 1169 1170
    SCOPE (284) 49 241 243 274 275 655 656 657 658 659 660 661 662 663 668 670 672 674 676 678 680 682
    OPEN_SQUARE (285) 50 51 61 62 243 244 382 383 384 385 534 535 706 707 708 709 710 711 712 713 716 717 718 719 724 725 726 727 729 730 731 732 733 734 760 761 764 857 858 966 967 968 969
    CLOSE_SQUARE (286) 50 51 61 62 243 244 382 383 384 385 534 535 706 707 708 709 710 711 712 713 716 717 718 719 724 725 726 727 729 730 731 732 733 734 760 761 764 857 858 966 967 968 969
    COLON (287) 57 68 170 184 280 511 512 519 520 521 522 523 524 605 606 607 608 609 610 611 612 617 618 637 638 886 887
    CO_AWAIT (288) 58 762
    OPEN_BRACE (289) 63 64 108 109 110 111 112 151 152 156 157 158 159 160 161 295 296 297 329 330 551 552 643 644 645 646 662 663 925 1136 1137 1138 1139
    CLOSE_BRACE (290) 63 64 108 109 110 111 112 151 152 156 157 158 159 160 161 295 296 297 329 330 551 552 643 644 645 646 662 663 925 1136 1137 1138 1139
    BALANCED_TOKEN (291) 65
    VIRTUAL (292) 71 72 73 74 77 78 407
    BASIC_C_CHAR (293) 83
    BASIC_S_CHAR (294) 84 913
    ZERO_LB (295) 91
    ZERO_HB (296) 92
    SINGLE_QUOTE (297) 94 126 127 197 261 446 750 971
    FALSE (298) 104
    TRUE (299) 105
    CLASS (300) 142 292 1099
    STRUCT (301) 143 293
    UNION (302) 144
    TEMPLATE (303) 149 270 319 320 321 661 868 870 910 987 1045 1046 1114
    FINAL (304) 153 1177
    SPACESHIP (305) 155 792
    NOEXCEPT (306) 157 159 692 693 694
    CONCEPT (307) 162
    ESCAPE (308) 167 745 746 747 970 974
    CONDITIONAL_ESCAPE_SEQUENCE_CHAR (309) 168
    QUERY (310) 170 973
    AND_AND (311) 174 375 564 793 899 900 915
    OR_OR (312) 176 376 566 794
    OPERATOR (313) 179 561 562 755 756 757
    CO_RETURN (314) 182 183
    CONST (315) 185
    VOLATILE (316) 186
    FRIEND (317) 201
    TYPEDEF (318) 202
    CONSTEXPR (319) 203 939 941 943 945
    CONSTEVAL (320) 204 946 947 948 949
    CONSTINIT (321) 205
    INLINE (322) 206 275 643 645 663 1136 1138
    DECLTYPE (323) 230 850 851
    DEREF (324) 231 232 765 869 870 932 1059
    DELETE (325) 241 242 243 244 394 759 761
    DOT (326) 248 387 388 389 453 454 455 635 636 867 868
    ENUM (327) 262 263 291 292 293
    UNICODE_8 (328) 276
    EQ_EQ (329) 305 369 786
    NOT_EQ (330) 306 370 787
    XOR (331) 318 353 774
    EXTERN (332) 319 551 552 553 1028
    LESS (333) 321 371 419 532 533 756 757 788 873 874 875 876 917 983 984 1045 1046 1048 1049 1050 1051 1072 1073 1074 1075
    GREATER (334) 321 372 419 532 533 756 757 789 873 874 875 876 918 983 984 1045 1046 1048 1049 1050 1051 1072 1073 1074 1075
    EXPLICIT (335) 322 323
    EXPORT (336) 328 329 330 331 619 621 623 625
    MULT (337) 350 640 771 893 894 895 896 901 902 903 904 962 1128
    DIV (338) 351 641 772
    MOD (339) 352 642 773
    OR (340) 355 464 776
    LSHIFT (341) 356 795 953
    RSHIFT (342) 357 796 954
    LESS_EQ (343) 373 790 919
    GREATER_EQ (344) 374 791 920
    DOT_STAR (345) 378 853
    DEREF_STAR (346) 379 766 854
    DEFAULT (347) 393 523 524
    TRY (348) 409 410 1069
    MODULE (349) 411 412 619 620 621 622 623 624 625 626 886 887
    H_CHAR (350) 413
    CATCH (351) 416
    DOUBLE_QUOTE (352) 420 972 1030 1031 1032 1033
    ESCAPE_LX (353) 447
    ZERO_LX (354) 457
    ZERO_HX (355) 458
    WHILE (356) 505 506
    DO (357) 506
    FOR (358) 507 508 509 510 511 512
    BREAK (359) 513
    CONTINUE (360) 514
    RETURN (361) 515 516
    GOTO (362) 518
    CASE (363) 521 522
    LONG_LONG_L (364) 567
    LONG_LONG_H (365) 568
    IMPORT (366) 627 628 629 630 631 632
    NAMESPACE (367) 643 644 645 646 648 662 663 1136 1137 1138 1139 1171 1172 1173 1174
    REQUIRES (368) 664 929 930 931
    NEW (369) 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 758 760
    COMPL (370) 767 1133 1144 1145
    NOT (371) 768 947 949 1132
    PLUS_PLUS (372) 799 871 1118
    MINUS_MINUS (373) 800 872 1119
    THIS (374) 804 805 808 809 812 813 816 817 820 821 824 825 880 961 962
    AUTO (375) 848 849 850 851
    NULLPTR (376) 855
    DYNAMIC_CAST (377) 873
    STATIC_CAST (378) 874
    REINTERPRET_CAST (379) 875
    CONST_CAST (380) 876
    TYPEID (381) 877 878
    Q_CHAR (382) 906
    IF (383) 938 939 940 941 942 943 944 945 946 947 948 949
    ELSE (384) 942 943 944 945 948 949
    SWITCH (385) 950 951
    CHAR (386) 992
    CHAR8_T (387) 993
    CHAR16_T (388) 994
    CHAR32_T (389) 995
    WCHAR_T (390) 996
    BOOL (391) 997
    SHORT (392) 998
    INT (393) 999
    LONG (394) 1000
    SIGNED (395) 1001
    UNSIGNED (396) 1002
    FLOAT (397) 1003
    DOUBLE (398) 1004
    VOID (399) 1005
    STATIC_ASSERT (400) 1024 1025
    STATIC (401) 1026
    THREAD_LOCAL (402) 1027
    MUTABLE (403) 1029
    THROW (404) 1057 1058
    TYPENAME (405) 1100 1101 1102 1112 1113 1114 1165
    SIZEOF (406) 1121 1122 1123
    ALIGNOF (407) 1124
    ESCAPE_LU (408) 1134
    ESCAPE_HU (409) 1135
    OVERRIDE (410) 1176
    CO_YIELD (411) 1180 1181


Nonterminals, with rules where they appear

    $accept (192)
        on left: 0
    abstract-declarator (193)
        on left: 1 2 3 4
        on right: 234 314 315 814 815 816 817 822 823 824 825 1077
    abstract-pack-declarator (194)
        on left: 5 6
        on right: 4 6
    access-specifier (195)
        on left: 7 8 9
        on right: 73 74 75 76 77 78 617 618
    additive-expression (196)
        on left: 10 11 12
        on right: 11 12 952 953 954
    alias-declaration (197)
        on left: 13 14
        on right: 102 476 595
    alignment-specifier (198)
        on left: 15 16 17 18
        on right: 52
    and-expression (199)
        on left: 19 20
        on right: 20 317 318
    asm-declaration (200)
        on left: 21 22
        on right: 96
    assignment-expression (201)
        on left: 23 24 25 26
        on right: 170 334 335 479 1058 1180
    assignment-operator (202)
        on left: 27 28 29 30 31 32 33 34 35 36 37
        on right: 26
    attribute (203)
        on left: 38 39
        on right: 43 45 46 47
    attribute-argument-clause (204)
        on left: 40 41
        on right: 39
    attribute-declaration (205)
        on left: 42
        on right: 221
    attribute-list (206)
        on left: 43 44 45 46 47
        on right: 44 45 47 50 51
    attribute-namespace (207)
        on left: 48
        on right: 49 57
    attribute-scoped-token (208)
        on left: 49
        on right: 56
    attribute-specifier (209)
        on left: 50 51 52
        on right: 53 54
    attribute-specifier-seq (210)
        on left: 53 54
        on right: 14 21 42 53 69 71 73 75 77 129 131 133 135 137 139 165 208 239 265 267 282 284 286 288 299 310 312 314 380 382 384 395 397 399 401 403 405 519 521 523 539 540 541 542 547 548 549 550 580 582 584 586 607 608 611 612 623 624 625 626 628 630 632 645 646 690 710 711 712 713 718 719 722 726 727 731 732 734 752 754 802 804 806 808 810 812 814 816 818 820 822 824 840 841 842 843 844 845 846 847 894 896 898 900 902 904 965 966 968 1009 1011 1013 1015 1017 1020 1108 1138 1139 1171 1173
    attribute-token (211)
        on left: 55 56
        on right: 38 39
    attribute-using-prefix (212)
        on left: 57
        on right: 51
    await-expression (213)
        on left: 58
        on right: 1120
    balanced-token (214)
        on left: 59 60 61 62 63 64 65
        on right: 66 67
    balanced-token-seq (215)
        on left: 66 67
        on right: 41 60 62 64 67
    base-clause (216)
        on left: 68
        on right: 132 133 134 135 138 139
    base-specifier (217)
        on left: 69 70 71 72 73 74 75 76 77 78
        on right: 79 80 81 82
    base-specifier-list (218)
        on left: 79 80 81 82
        on right: 68 81 82
    basic-c-char (219)
        on left: 83
        on right: 113
    basic-s-char (220)
        on left: 84
        on right: 933
    binary-digit (221)
        on left: 85 86
        on right: 91 92 93 94
    binary-exponent-part (222)
        on left: 87 88 89 90
        on right: 449 450 451 452 1153 1154
    binary-literal (223)
        on left: 91 92 93 94
        on right: 93 94 485 486 1158
    block-declaration (224)
        on left: 95 96 97 98 99 100 101 102 103
        on right: 210 225
    boolean-literal (225)
        on left: 104 105
        on right: 558
    brace-or-equal-initializer (226)
        on left: 106 107
        on right: 165 166 245 477 604 609 610 611 612
    braced-init-list (227)
        on left: 108 109 110 111 112
        on right: 107 333 480 573 686 865 866 1181
    c-char (228)
        on left: 113 114 115
        on right: 116 117
    c-char-sequence (229)
        on left: 116 117
        on right: 117 126 127
    capture (230)
        on left: 118 119
        on right: 122 123
    capture-default (231)
        on left: 120 121
        on right: 525 527
    capture-list (232)
        on left: 122 123
        on right: 123 526 527
    cast-expression (233)
        on left: 124 125
        on right: 58 125 241 242 243 244 345 346 347 852 853 854 1117 1118 1119
    character-literal (234)
        on left: 126 127
        on right: 555 1149
    class-head (235)
        on left: 128 129 130 131 132 133 134 135 136 137 138 139
        on right: 151 152
    class-head-name (236)
        on left: 140 141
        on right: 128 129 130 131 132 133 134 135
    class-key (237)
        on left: 142 143 144
        on right: 128 129 130 131 132 133 134 135 136 137 138 139 264 265 266 267 268 269 270
    class-name (238)
        on left: 145 146
        on right: 140 141 1078
    class-or-decltype (239)
        on left: 147 148 149 150
        on right: 69 70 71 72 73 74 75 76 77 78 574
    class-specifier (240)
        on left: 151 152
        on right: 236
    class-virt-specifier (241)
        on left: 153
        on right: 130 131 134 135
    compare-expression (242)
        on left: 154 155
        on right: 155 916 917 918 919 920
    compound-requirement (243)
        on left: 156 157 158 159
        on right: 923
    compound-statement (244)
        on left: 160 161
        on right: 390 391 409 410 416 531 532 533 946 947 948 949 1011 1012 1069
    concept-definition (245)
        on left: 162
        on right: 1044
    concept-name (246)
        on left: 163
        on right: 162 1070 1071 1072 1073 1074 1075
    condition (247)
        on left: 164 165 166
        on right: 505 508 510 938 939 940 941 942 943 944 945 950 951
    conditional-escape-sequence (248)
        on left: 167
        on right: 309
    conditional-escape-sequence-char (249)
        on left: 168
        on right: 167
    conditional-expression (250)
        on left: 169 170
        on right: 23 171
    constant-expression (251)
        on left: 171
        on right: 17 18 301 322 521 522 605 606 607 608 609 610 611 612 693 708 709 712 713 717 719 725 727 733 734 1024 1025 1036
    constraint-expression (252)
        on left: 172
        on right: 162 664
    constraint-logical-and-expression (253)
        on left: 173 174
        on right: 174 175 176
    constraint-logical-or-expression (254)
        on left: 175 176
        on right: 176 929
    conversion-declarator (255)
        on left: 177 178
        on right: 178 181
    conversion-function-id (256)
        on left: 179
        on right: 1142
    conversion-type-id (257)
        on left: 180 181
        on right: 179
    coroutine-return-statement (258)
        on left: 182 183
        on right: 517
    ctor-initializer (259)
        on left: 184
        on right: 390 410
    cv-qualifier (260)
        on left: 185 186
        on right: 187 188 1106
    cv-qualifier-seq (261)
        on left: 187 188
        on right: 188 833 835 837 839 841 843 845 847 895 896 903 904
    decimal-floating-point-literal (262)
        on left: 189 190 191 192 193 194
        on right: 339
    decimal-literal (263)
        on left: 195 196 197
        on right: 196 197 489 490 1155
    decl-specifier (264)
        on left: 198 199 200 201 202 203 204 205 206
        on right: 207 208 209
    decl-specifier-seq (265)
        on left: 207 208 209
        on right: 165 166 209 380 381 382 383 384 385 397 398 401 402 405 406 536 537 539 541 543 545 547 549 582 583 586 587 802 803 804 805 806 807 808 809 810 811 812 813 814 815 816 817 818 819 820 821 822 823 824 825 963 964 965 966 967 968 969
    declaration (266)
        on left: 210 211 212 213 214 215 216 217 218 219 220 221 222
        on right: 223 224 319 320 321 328 553 1043
    declaration-seq (267)
        on left: 223 224
        on right: 224 330 412 552 649 887 1060 1063 1064 1067 1068
    declaration-statement (268)
        on left: 225
        on right: 1019
    declarator (269)
        on left: 226 227
        on right: 165 166 310 311 380 381 395 396 397 398 399 400 401 402 403 404 405 406 469 470 471 598 599 600 601 602 603 604 690 691 802 803 804 805 806 807 808 809
    declarator-id (270)
        on left: 228 229
        on right: 721 722
    decltype-specifier (271)
        on left: 230
        on right: 150 658 988 1145
    deduction-guide (272)
        on left: 231 232
        on right: 214 594
    defining-type-id (273)
        on left: 233 234
        on right: 13 14
    defining-type-specifier (274)
        on left: 235 236 237
        on right: 199 238 239 240
    defining-type-specifier-seq (275)
        on left: 238 239 240
        on right: 233 234 240
    delete-expression (276)
        on left: 241 242 243 244
        on right: 1127
    designated-initializer-clause (277)
        on left: 245
        on right: 246 247
    designated-initializer-list (278)
        on left: 246 247
        on right: 110 111 247
    designator (279)
        on left: 248
        on right: 245
    digit (280)
        on left: 249 250 251 252 253 254 255 256 257 258
        on right: 196 197 259 260 261
    digit-sequence (281)
        on left: 259 260 261
        on right: 87 88 89 90 193 194 260 261 324 325 326 327 387 388 389 1152
    elaborated-enum-specifier (282)
        on left: 262 263
        on right: 271 1175
    elaborated-type-specifier (283)
        on left: 264 265 266 267 268 269 270 271
        on right: 1104
    empty-declaration (284)
        on left: 272
        on right: 220 597
    enclosing-namespace-specifier (285)
        on left: 273 274 275
        on right: 274 275 662 663
    encoding-prefix (286)
        on left: 276 277 278 279
        on right: 126 1030 1032 1034
    enum-base (287)
        on left: 280
        on right: 285 286 287 288 753 754
    enum-head (288)
        on left: 281 282 283 284 285 286 287 288
        on right: 295 296 297
    enum-head-name (289)
        on left: 289 290
        on right: 283 284 287 288 751 752 753 754
    enum-key (290)
        on left: 291 292 293
        on right: 281 282 283 284 285 286 287 288 751 752 753 754
    enum-name (291)
        on left: 294
        on right: 1079
    enum-specifier (292)
        on left: 295 296 297
        on right: 237
    enumerator (293)
        on left: 298 299
        on right: 300 301
    enumerator-definition (294)
        on left: 300 301
        on right: 302 303
    enumerator-list (295)
        on left: 302 303
        on right: 296 297 303
    equality-expression (296)
        on left: 304 305 306
        on right: 19 20 305 306
    escape-sequence (297)
        on left: 307 308 309
        on right: 114 934
    exception-declaration (298)
        on left: 310 311 312 313 314 315 316
        on right: 416
    exclusive-or-expression (299)
        on left: 317 318
        on right: 318 463 464
    explicit-instantiation (300)
        on left: 319 320
        on right: 215
    explicit-specialization (301)
        on left: 321
        on right: 216 593
    explicit-specifier (302)
        on left: 322 323
        on right: 231 408
    exponent-part (303)
        on left: 324 325 326 327
        on right: 190 192 193 194 1151 1152
    export-declaration (304)
        on left: 328 329 330 331
        on right: 217
    expr-or-braced-init-list (305)
        on left: 332 333
        on right: 183 386 516
    expression (306)
        on left: 334 335
        on right: 156 157 158 159 164 170 230 332 335 337 506 509 510 692 730 732 873 874 875 876 877 881 982
    expression-list (307)
        on left: 336
        on right: 478 572 685 687 858 860 862 864
    expression-statement (308)
        on left: 337 338
        on right: 474 1009 1010
    floating-point-literal (309)
        on left: 339 340
        on right: 556
    floating-point-suffix (310)
        on left: 341 342 343 344
        on right: 191 192 194 450 452
    fold-expression (311)
        on left: 345 346 347
        on right: 884
    fold-operator (312)
        on left: 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379
        on right: 345 346 347
    for-range-declaration (313)
        on left: 380 381 382 383 384 385
        on right: 511 512
    for-range-initializer (314)
        on left: 386
        on right: 511 512
    fractional-constant (315)
        on left: 387 388 389
        on right: 189 190 191 192 1150 1151
    function-body (316)
        on left: 390 391 392 393 394
        on right: 395 396 397 398 399 400 401 402 403 404 405 406
    function-definition (317)
        on left: 395 396 397 398 399 400 401 402 403 404 405 406
        on right: 212 588
    function-specifier (318)
        on left: 407 408
        on right: 200
    function-try-block (319)
        on left: 409 410
        on right: 392
    global-module-fragment (320)
        on left: 411 412
        on right: 1061 1063 1065 1067
    h-char (321)
        on left: 413
        on right: 414 415
    h-char-sequence (322)
        on left: 414 415
        on right: 415 419
    handler (323)
        on left: 416
        on right: 417 418
    handler-seq (324)
        on left: 417 418
        on right: 409 410 418 1069
    header-name (325)
        on left: 419 420
        on right: 631 632
    hex-quad (326)
        on left: 421
        on right: 1134 1135
    hexadecimal-digit (327)
        on left: 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443
        on right: 421 444 445 446 447 448
    hexadecimal-digit-sequence (328)
        on left: 444 445 446
        on right: 445 446 451 452 453 454 455 456 1154
    hexadecimal-escape-sequence (329)
        on left: 447 448
        on right: 448 736
    hexadecimal-floating-point-literal (330)
        on left: 449 450 451 452
        on right: 340
    hexadecimal-fractional-constant (331)
        on left: 453 454 455
        on right: 449 450 1153
    hexadecimal-literal (332)
        on left: 456
        on right: 491 492 1157
    hexadecimal-prefix (333)
        on left: 457 458
        on right: 449 450 451 452 456 1153 1154
    id-expression (334)
        on left: 459 460
        on right: 228 229 867 868 869 870 882 1038 1097 1098
    identifier-list (335)
        on left: 461 462
        on right: 382 383 384 385 462 966 967 968 969
    inclusive-or-expression (336)
        on left: 463 464
        on right: 464 563 564
    init-capture (337)
        on left: 465 466 467 468
        on right: 119
    init-declarator (338)
        on left: 469 470 471
        on right: 472 473
    init-declarator-list (339)
        on left: 472 473
        on right: 473 964 965
    init-statement (340)
        on left: 474 475 476
        on right: 507 508 509 510 512 940 941 944 945 951
    initializer (341)
        on left: 477 478
        on right: 465 466 467 468 470 966 967 968 969
    initializer-clause (342)
        on left: 479 480
        on right: 26 106 481 482 483 484 806 807 808 809 818 819 820 821 822 823 824 825
    initializer-list (343)
        on left: 481 482 483 484
        on right: 108 109 336 483 484
    integer-literal (344)
        on left: 485 486 487 488 489 490 491 492
        on right: 554
    integer-suffix (345)
        on left: 493 494 495 496 497 498 499 500 501 502 503 504
        on right: 486 488 490 492
    iteration-statement (346)
        on left: 505 506 507 508 509 510 511 512
        on right: 1015 1016
    jump-statement (347)
        on left: 513 514 515 516 517 518
        on right: 1017 1018
    labeled-statement (348)
        on left: 519 520 521 522 523 524
        on right: 1008
    lambda-capture (349)
        on left: 525 526 527
        on right: 535
    lambda-declarator (350)
        on left: 528 529 530
        on right: 531 532 533
    lambda-expression (351)
        on left: 531 532 533
        on right: 883
    lambda-introducer (352)
        on left: 534 535
        on right: 531 532 533
    lambda-specifiers (353)
        on left: 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550
        on right: 528 529 530
    linkage-specification (354)
        on left: 551 552 553
        on right: 218
    literal (355)
        on left: 554 555 556 557 558 559 560
        on right: 879
    literal-operator-id (356)
        on left: 561 562
        on right: 1050 1051 1143
    logical-and-expression (357)
        on left: 563 564
        on right: 564 565 566
    logical-or-expression (358)
        on left: 565 566
        on right: 26 169 170 172 566
    long-long-suffix (359)
        on left: 567 568
        on right: 496 501 502
    long-suffix (360)
        on left: 569 570
        on right: 494 499 500
    mem-initializer (361)
        on left: 571 572 573
        on right: 576 577 578 579
    mem-initializer-id (362)
        on left: 574 575
        on right: 571 572 573
    mem-initializer-list (363)
        on left: 576 577 578 579
        on right: 184 578 579
    member-declaration (364)
        on left: 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597
        on right: 615 616
    member-declarator (365)
        on left: 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612
        on right: 613 614
    member-declarator-list (366)
        on left: 613 614
        on right: 584 585 586 587 614
    member-specification (367)
        on left: 615 616 617 618
        on right: 152 616 618
    module-declaration (368)
        on left: 619 620 621 622 623 624 625 626
        on right: 1061 1062 1063 1064 1065 1066 1067 1068
    module-import-declaration (369)
        on left: 627 628 629 630 631 632
        on right: 222 331
    module-name (370)
        on left: 633 634
        on right: 619 620 621 622 623 624 625 626 627 628
    module-name-qualifier (371)
        on left: 635 636
        on right: 633 636 638
    module-partition (372)
        on left: 637 638
        on right: 621 622 625 626 629 630
    multiplicative-expression (373)
        on left: 639 640 641 642
        on right: 10 11 12 640 641 642
    named-namespace-definition (374)
        on left: 643 644 645 646
        on right: 650
    namespace-alias (375)
        on left: 647
        on right: 654
    namespace-alias-definition (376)
        on left: 648
        on right: 97
    namespace-body (377)
        on left: 649
        on right: 643 644 645 646 662 663 1136 1137 1138 1139
    namespace-definition (378)
        on left: 650 651 652
        on right: 219
    namespace-name (379)
        on left: 653 654
        on right: 657 911 912 1171 1172 1173 1174
    nested-name-specifier (380)
        on left: 655 656 657 658 659 660 661
        on right: 140 147 149 263 266 267 269 270 289 659 660 661 901 902 903 904 909 910 911 985 987 990 1070 1072 1074 1102 1112 1113 1114 1165 1166 1173 1174
    nested-namespace-definition (381)
        on left: 662 663
        on right: 652
    nested-requirement (382)
        on left: 664
        on right: 924
    new-declarator (383)
        on left: 665 666 667
        on right: 666 689
    new-expression (384)
        on left: 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683
        on right: 1126
    new-initializer (385)
        on left: 684 685 686
        on right: 672 673 674 675 680 681 682 683
    new-placement (386)
        on left: 687
        on right: 670 671 674 675 678 679 682 683
    new-type-id (387)
        on left: 688 689
        on right: 668 669 670 671 672 673 674 675
    nodeclspec-function-declaration (388)
        on left: 690 691
        on right: 211
    noexcept-expression (389)
        on left: 692
        on right: 1125
    noexcept-specifier (390)
        on left: 693 694
        on right: 537 538 541 542 545 546 549 550 836 837 838 839 844 845 846 847
    nonzero-digit (391)
        on left: 695 696 697 698 699 700 701 702 703
        on right: 195
    noptr-abstract-declarator (392)
        on left: 704 705 706 707 708 709 710 711 712 713 714
        on right: 2 704 706 708 710 712 888
    noptr-abstract-pack-declarator (393)
        on left: 715 716 717 718 719 720
        on right: 5 715 716 717 718 719
    noptr-declarator (394)
        on left: 721 722 723 724 725 726 727 728
        on right: 227 723 724 725 726 727 891
    noptr-new-declarator (395)
        on left: 729 730 731 732 733 734
        on right: 667 733 734
    numeric-escape-sequence (396)
        on left: 735 736
        on right: 308
    octal-digit (397)
        on left: 737 738 739 740 741 742 743 744
        on right: 745 746 747 749 750
    octal-escape-sequence (398)
        on left: 745 746 747
        on right: 735
    octal-literal (399)
        on left: 748 749 750
        on right: 487 488 749 750 1156
    opaque-enum-declaration (400)
        on left: 751 752 753 754
        on right: 103 596
    operator-function-id (401)
        on left: 755 756 757
        on right: 1048 1049 1141
    overloadable-operator (402)
        on left: 758 759 760 761 762 763 764 765 766 767 768 769 770 771 772 773 774 775 776 777 778 779 780 781 782 783 784 785 786 787 788 789 790 791 792 793 794 795 796 797 798 799 800 801
        on right: 755 756 757
    parameter-declaration (403)
        on left: 802 803 804 805 806 807 808 809 810 811 812 813 814 815 816 817 818 819 820 821 822 823 824 825
        on right: 830 831 1054
    parameter-declaration-clause (404)
        on left: 826 827 828 829
        on right: 231 232 529 530 832 833 834 835 836 837 838 839 840 841 842 843 844 845 846 847 926
    parameter-declaration-list (405)
        on left: 830 831
        on right: 826 827 829 831
    parameters-and-qualifiers (406)
        on left: 832 833 834 835 836 837 838 839 840 841 842 843 844 845 846 847
        on right: 2 3 227 704 705 715 723
    placeholder-type-specifier (407)
        on left: 848 849 850 851
        on right: 989
    pm-expression (408)
        on left: 852 853 854
        on right: 639 640 641 642 853 854
    pointer-literal (409)
        on left: 855
        on right: 559
    postfix-expression (410)
        on left: 856 857 858 859 860 861 862 863 864 865 866 867 868 869 870 871 872 873 874 875 876 877 878
        on right: 857 858 859 860 867 868 869 870 871 872 1116
    primary-expression (411)
        on left: 879 880 881 882 883 884 885
        on right: 173 174 856
    private-module-fragment (412)
        on left: 886 887
        on right: 1065 1066 1067 1068
    ptr-abstract-declarator (413)
        on left: 888 889 890
        on right: 1 714 890
    ptr-declarator (414)
        on left: 891 892
        on right: 226 728 892
    ptr-operator (415)
        on left: 893 894 895 896 897 898 899 900 901 902 903 904
        on right: 6 177 178 665 666 889 890 892
    pure-specifier (416)
        on left: 905
        on right: 600 601
    q-char (417)
        on left: 906
        on right: 907 908
    q-char-sequence (418)
        on left: 907 908
        on right: 420 908
    qualified-id (419)
        on left: 909 910
        on right: 460
    qualified-namespace-specifier (420)
        on left: 911 912
        on right: 648
    raw-string (421)
        on left: 913
        on right: 1034 1035
    ref-qualifier (422)
        on left: 914 915
        on right: 384 385 834 835 838 839 842 843 846 847 968 969
    relational-expression (423)
        on left: 916 917 918 919 920
        on right: 304 305 306 917 918 919 920
    requirement (424)
        on left: 921 922 923 924
        on right: 927 928
    requirement-body (425)
        on left: 925
        on right: 930 931
    requirement-parameter-list (426)
        on left: 926
        on right: 931
    requirement-seq (427)
        on left: 927 928
        on right: 925 928
    requires-clause (428)
        on left: 929
        on right: 403 404 405 406 471 530 533 602 1046
    requires-expression (429)
        on left: 930 931
        on right: 885
    return-type-requirement (430)
        on left: 932
        on right: 158 159
    s-char (431)
        on left: 933 934 935
        on right: 936 937
    s-char-sequence (432)
        on left: 936 937
        on right: 937 1032 1033
    selection-statement (433)
        on left: 938 939 940 941 942 943 944 945 946 947 948 949 950 951
        on right: 1013 1014
    shift-expression (434)
        on left: 952 953 954
        on right: 154 155 953 954
    sign (435)
        on left: 955 956
        on right: 88 90 325 327
    simple-capture (436)
        on left: 957 958 959 960 961 962
        on right: 118
    simple-declaration (437)
        on left: 963 964 965 966 967 968 969
        on right: 95 475
    simple-escape-sequence (438)
        on left: 970
        on right: 307
    simple-escape-sequence-char (439)
        on left: 971 972 973 974 975 976 977 978 979 980 981
        on right: 970
    simple-requirement (440)
        on left: 982
        on right: 921
    simple-template-id (441)
        on left: 983 984
        on right: 146 149 231 232 268 269 270 660 661 987 1047 1111 1113 1114
    simple-type-specifier (442)
        on left: 985 986 987 988 989 990 991 992 993 994 995 996 997 998 999 1000 1001 1002 1003 1004 1005
        on right: 861 862 865 1103
    size-suffix (443)
        on left: 1006 1007
        on right: 498 503 504
    statement (444)
        on left: 1008 1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021
        on right: 505 506 507 508 509 510 511 512 519 520 521 522 523 524 938 939 940 941 942 943 944 945 948 949 950 951 1022 1023
    statement-seq (445)
        on left: 1022 1023
        on right: 161 1023
    static_assert-declaration (446)
        on left: 1024 1025
        on right: 101 591
    storage-class-specifier (447)
        on left: 1026 1027 1028 1029
        on right: 198
    string-literal (448)
        on left: 1030 1031 1032 1033 1034 1035
        on right: 21 22 551 552 553 557 561 1025 1163
    template-argument (449)
        on left: 1036 1037 1038
        on right: 1039 1040 1041 1042
    template-argument-list (450)
        on left: 1039 1040 1041 1042
        on right: 757 984 1041 1042 1049 1051 1074 1075
    template-declaration (451)
        on left: 1043 1044
        on right: 213 592
    template-head (452)
        on left: 1045 1046
        on right: 1043 1044 1093 1094 1095 1096 1097 1098
    template-id (453)
        on left: 1047 1048 1049 1050 1051
        on right: 1146
    template-name (454)
        on left: 1052
        on right: 231 232 983 984 990 991
    template-parameter (455)
        on left: 1053 1054
        on right: 1055 1056
    template-parameter-list (456)
        on left: 1055 1056
        on right: 532 533 1045 1046 1056
    throw-expression (457)
        on left: 1057 1058
        on right: 25
    trailing-return-type (458)
        on left: 1059
        on right: 2 3 227 543 544 545 546 547 548 549 550
    translation-unit (459)
        on left: 1060 1061 1062 1063 1064 1065 1066 1067 1068
        on right: 0
    try-block (460)
        on left: 1069
        on right: 1020 1021
    type-constraint (461)
        on left: 1070 1071 1072 1073 1074 1075
        on right: 848 850 932 1087 1088 1089 1090 1091 1092
    type-id (462)
        on left: 1076 1077
        on right: 15 16 125 676 677 678 679 680 681 682 683 873 874 875 876 878 1037 1059 1085 1086 1091 1092 1122 1124
    type-name (463)
        on left: 1078 1079 1080
        on right: 147 148 656 985 986 1101 1102 1144
    type-parameter (464)
        on left: 1081 1082 1083 1084 1085 1086 1087 1088 1089 1090 1091 1092 1093 1094 1095 1096 1097 1098
        on right: 1053
    type-parameter-key (465)
        on left: 1099 1100
        on right: 1081 1082 1083 1084 1085 1086 1093 1094 1095 1096 1097 1098
    type-requirement (466)
        on left: 1101 1102
        on right: 922
    type-specifier (467)
        on left: 1103 1104 1105 1106
        on right: 235 1107 1108 1109
    type-specifier-seq (468)
        on left: 1107 1108 1109
        on right: 180 181 280 310 311 312 313 314 315 688 689 1076 1077 1109
    typedef-name (469)
        on left: 1110 1111
        on right: 1080
    typename-specifier (470)
        on left: 1112 1113 1114
        on right: 863 864 866 1105
    ud-suffix (471)
        on left: 1115
        on right: 1149 1150 1151 1152 1153 1154 1155 1156 1157 1158 1163
    unary-expression (472)
        on left: 1116 1117 1118 1119 1120 1121 1122 1123 1124 1125 1126 1127
        on right: 124 1121
    unary-operator (473)
        on left: 1128 1129 1130 1131 1132 1133
        on right: 1117
    universal-character-name (474)
        on left: 1134 1135
        on right: 115 935
    unnamed-namespace-definition (475)
        on left: 1136 1137 1138 1139
        on right: 651
    unqualified-id (476)
        on left: 1140 1141 1142 1143 1144 1145 1146
        on right: 459 909 910 1165 1166
    unsigned-suffix (477)
        on left: 1147 1148
        on right: 493 494 495 496 497 498 500 502 504
    user-defined-character-literal (478)
        on left: 1149
        on right: 1162
    user-defined-floating-point-literal (479)
        on left: 1150 1151 1152 1153 1154
        on right: 1160
    user-defined-integer-literal (480)
        on left: 1155 1156 1157 1158
        on right: 1159
    user-defined-literal (481)
        on left: 1159 1160 1161 1162
        on right: 560
    user-defined-string-literal (482)
        on left: 1163
        on right: 562 1161
    using-declaration (483)
        on left: 1164
        on right: 98 589
    using-declarator (484)
        on left: 1165 1166
        on right: 1167 1168 1169 1170
    using-declarator-list (485)
        on left: 1167 1168 1169 1170
        on right: 1164 1169 1170
    using-directive (486)
        on left: 1171 1172 1173 1174
        on right: 100
    using-enum-declaration (487)
        on left: 1175
        on right: 99 590
    virt-specifier (488)
        on left: 1176 1177
        on right: 1178 1179
    virt-specifier-seq (489)
        on left: 1178 1179
        on right: 399 400 401 402 599 601 1179
    yield-expression (490)
        on left: 1180 1181
        on right: 24


State 0

    0 $accept: • translation-unit $end

    USING          shift, and go to state 1
    IDENTIFIER     shift, and go to state 2
    SEMICOLON      shift, and go to state 3
    ALIGNAS        shift, and go to state 4
    OPEN_PAREN     shift, and go to state 5
    ELLIPSIS       shift, and go to state 6
    AND            shift, and go to state 7
    ASM            shift, and go to state 8
    SCOPE          shift, and go to state 9
    OPEN_SQUARE    shift, and go to state 10
    VIRTUAL        shift, and go to state 11
    CLASS          shift, and go to state 12
    STRUCT         shift, and go to state 13
    UNION          shift, and go to state 14
    TEMPLATE       shift, and go to state 15
    AND_AND        shift, and go to state 16
    OPERATOR       shift, and go to state 17
    CONST          shift, and go to state 18
    VOLATILE       shift, and go to state 19
    FRIEND         shift, and go to state 20
    TYPEDEF        shift, and go to state 21
    CONSTEXPR      shift, and go to state 22
    CONSTEVAL      shift, and go to state 23
    CONSTINIT      shift, and go to state 24
    INLINE         shift, and go to state 25
    DECLTYPE       shift, and go to state 26
    ENUM           shift, and go to state 27
    EXTERN         shift, and go to state 28
    EXPLICIT       shift, and go to state 29
    EXPORT         shift, and go to state 30
    MULT           shift, and go to state 31
    MODULE         shift, and go to state 32
    IMPORT         shift, and go to state 33
    NAMESPACE      shift, and go to state 34
    COMPL          shift, and go to state 35
    AUTO           shift, and go to state 36
    CHAR           shift, and go to state 37
    CHAR8_T        shift, and go to state 38
    CHAR16_T       shift, and go to state 39
    CHAR32_T       shift, and go to state 40
    WCHAR_T        shift, and go to state 41
    BOOL           shift, and go to state 42
    SHORT          shift, and go to state 43
    INT            shift, and go to state 44
    LONG           shift, and go to state 45
    SIGNED         shift, and go to state 46
    UNSIGNED       shift, and go to state 47
    FLOAT          shift, and go to state 48
    DOUBLE         shift, and go to state 49
    VOID           shift, and go to state 50
    STATIC_ASSERT  shift, and go to state 51
    STATIC         shift, and go to state 52
    THREAD_LOCAL   shift, and go to state 53
    MUTABLE        shift, and go to state 54
    TYPENAME       shift, and go to state 55

    alias-declaration                go to state 56
    alignment-specifier              go to state 57
    asm-declaration                  go to state 58
    attribute-declaration            go to state 59
    attribute-specifier              go to state 60
    attribute-specifier-seq          go to state 61
    block-declaration                go to state 62
    class-head                       go to state 63
    class-key                        go to state 64
    class-name                       go to state 65
    class-specifier                  go to state 66
    concept-name                     go to state 67
    conversion-function-id           go to state 68
    cv-qualifier                     go to state 69
    decl-specifier                   go to state 70
    decl-specifier-seq               go to state 71
    declaration                      go to state 72
    declaration-seq                  go to state 73
    declarator                       go to state 74
    declarator-id                    go to state 75
    decltype-specifier               go to state 76
    deduction-guide                  go to state 77
    defining-type-specifier          go to state 78
    elaborated-enum-specifier        go to state 79
    elaborated-type-specifier        go to state 80
    empty-declaration                go to state 81
    enum-head                        go to state 82
    enum-key                         go to state 83
    enum-name                        go to state 84
    enum-specifier                   go to state 85
    explicit-instantiation           go to state 86
    explicit-specialization          go to state 87
    explicit-specifier               go to state 88
    export-declaration               go to state 89
    function-definition              go to state 90
    function-specifier               go to state 91
    global-module-fragment           go to state 92
    id-expression                    go to state 93
    linkage-specification            go to state 94
    literal-operator-id              go to state 95
    module-declaration               go to state 96
    module-import-declaration        go to state 97
    named-namespace-definition       go to state 98
    namespace-alias                  go to state 99
    namespace-alias-definition       go to state 100
    namespace-definition             go to state 101
    namespace-name                   go to state 102
    nested-name-specifier            go to state 103
    nested-namespace-definition      go to state 104
    nodeclspec-function-declaration  go to state 105
    noptr-declarator                 go to state 106
    opaque-enum-declaration          go to state 107
    operator-function-id             go to state 108
    placeholder-type-specifier       go to state 109
    ptr-declarator                   go to state 110
    ptr-operator                     go to state 111
    qualified-id                     go to state 112
    simple-declaration               go to state 113
    simple-template-id               go to state 114
    simple-type-specifier            go to state 115
    static_assert-declaration        go to state 116
    storage-class-specifier          go to state 117
    template-declaration             go to state 118
    template-head                    go to state 119
    template-id                      go to state 120
    template-name                    go to state 121
    translation-unit                 go to state 122
    type-constraint                  go to state 123
    type-name                        go to state 124
    type-specifier                   go to state 125
    typedef-name                     go to state 126
    typename-specifier               go to state 127
    unnamed-namespace-definition     go to state 128
    unqualified-id                   go to state 129
    using-declaration                go to state 130
    using-directive                  go to state 131
    using-enum-declaration           go to state 132


State 1

   13 alias-declaration: USING • IDENTIFIER EQ defining-type-id SEMICOLON
   14                  | USING • IDENTIFIER attribute-specifier-seq EQ defining-type-id SEMICOLON
  1164 using-declaration: USING • using-declarator-list SEMICOLON
  1172 using-directive: USING • NAMESPACE namespace-name SEMICOLON
  1174                | USING • NAMESPACE nested-name-specifier namespace-name SEMICOLON
  1175 using-enum-declaration: USING • elaborated-enum-specifier SEMICOLON

    IDENTIFIER  shift, and go to state 133
    SCOPE       shift, and go to state 9
    DECLTYPE    shift, and go to state 134
    ENUM        shift, and go to state 135
    NAMESPACE   shift, and go to state 136
    TYPENAME    shift, and go to state 137

    class-name                 go to state 65
    decltype-specifier         go to state 138
    elaborated-enum-specifier  go to state 139
    enum-name                  go to state 84
    namespace-alias            go to state 99
    namespace-name             go to state 102
    nested-name-specifier      go to state 140
    simple-template-id         go to state 141
    template-name              go to state 142
    type-name                  go to state 143
    typedef-name               go to state 126
    using-declarator           go to state 144
    using-declarator-list      go to state 145


State 2

  145 class-name: IDENTIFIER •
  163 concept-name: IDENTIFIER •
  294 enum-name: IDENTIFIER •
  647 namespace-alias: IDENTIFIER •
  653 namespace-name: IDENTIFIER •
  1052 template-name: IDENTIFIER •
  1110 typedef-name: IDENTIFIER •
  1140 unqualified-id: IDENTIFIER •

    PLUS          reduce using rule 1140 (unqualified-id)
    MINUS         reduce using rule 1140 (unqualified-id)
    IDENTIFIER    reduce using rule 145 (class-name)
    IDENTIFIER    [reduce using rule 294 (enum-name)]
    IDENTIFIER    [reduce using rule 1052 (template-name)]
    IDENTIFIER    [reduce using rule 1110 (typedef-name)]
    EQ            reduce using rule 145 (class-name)
    EQ            [reduce using rule 294 (enum-name)]
    EQ            [reduce using rule 1052 (template-name)]
    EQ            [reduce using rule 1110 (typedef-name)]
    EQ            [reduce using rule 1140 (unqualified-id)]
    SEMICOLON     reduce using rule 145 (class-name)
    SEMICOLON     [reduce using rule 294 (enum-name)]
    SEMICOLON     [reduce using rule 1052 (template-name)]
    SEMICOLON     [reduce using rule 1110 (typedef-name)]
    SEMICOLON     [reduce using rule 1140 (unqualified-id)]
    ALIGNAS       reduce using rule 145 (class-name)
    ALIGNAS       [reduce using rule 294 (enum-name)]
    ALIGNAS       [reduce using rule 1052 (template-name)]
    ALIGNAS       [reduce using rule 1110 (typedef-name)]
    ALIGNAS       [reduce using rule 1140 (unqualified-id)]
    OPEN_PAREN    reduce using rule 145 (class-name)
    OPEN_PAREN    [reduce using rule 294 (enum-name)]
    OPEN_PAREN    [reduce using rule 1052 (template-name)]
    OPEN_PAREN    [reduce using rule 1110 (typedef-name)]
    OPEN_PAREN    [reduce using rule 1140 (unqualified-id)]
    CLOSE_PAREN   reduce using rule 145 (class-name)
    CLOSE_PAREN   [reduce using rule 294 (enum-name)]
    CLOSE_PAREN   [reduce using rule 1052 (template-name)]
    CLOSE_PAREN   [reduce using rule 1110 (typedef-name)]
    CLOSE_PAREN   [reduce using rule 1140 (unqualified-id)]
    ELLIPSIS      reduce using rule 145 (class-name)
    ELLIPSIS      [reduce using rule 294 (enum-name)]
    ELLIPSIS      [reduce using rule 1052 (template-name)]
    ELLIPSIS      [reduce using rule 1110 (typedef-name)]
    ELLIPSIS      [reduce using rule 1140 (unqualified-id)]
    AND           reduce using rule 145 (class-name)
    AND           [reduce using rule 294 (enum-name)]
    AND           [reduce using rule 1052 (template-name)]
    AND           [reduce using rule 1110 (typedef-name)]
    AND           [reduce using rule 1140 (unqualified-id)]
    MULT_EQ       reduce using rule 1140 (unqualified-id)
    DIV_EQ        reduce using rule 1140 (unqualified-id)
    MOD_EQ        reduce using rule 1140 (unqualified-id)
    PLUS_EQ       reduce using rule 1140 (unqualified-id)
    MINUS_EQ      reduce using rule 1140 (unqualified-id)
    RSHIFT_EQ     reduce using rule 1140 (unqualified-id)
    LSHIFT_EQ     reduce using rule 1140 (unqualified-id)
    AND_EQ        reduce using rule 1140 (unqualified-id)
    XOR_EQ        reduce using rule 1140 (unqualified-id)
    OR_EQ         reduce using rule 1140 (unqualified-id)
    COMMA         reduce using rule 145 (class-name)
    COMMA         [reduce using rule 294 (enum-name)]
    COMMA         [reduce using rule 1052 (template-name)]
    COMMA         [reduce using rule 1110 (typedef-name)]
    COMMA         [reduce using rule 1140 (unqualified-id)]
    SCOPE         reduce using rule 145 (class-name)
    SCOPE         [reduce using rule 294 (enum-name)]
    SCOPE         [reduce using rule 647 (namespace-alias)]
    SCOPE         [reduce using rule 653 (namespace-name)]
    SCOPE         [reduce using rule 1052 (template-name)]
    SCOPE         [reduce using rule 1110 (typedef-name)]
    OPEN_SQUARE   reduce using rule 145 (class-name)
    OPEN_SQUARE   [reduce using rule 294 (enum-name)]
    OPEN_SQUARE   [reduce using rule 1052 (template-name)]
    OPEN_SQUARE   [reduce using rule 1110 (typedef-name)]
    OPEN_SQUARE   [reduce using rule 1140 (unqualified-id)]
    CLOSE_SQUARE  reduce using rule 1140 (unqualified-id)
    COLON         reduce using rule 1140 (unqualified-id)
    OPEN_BRACE    reduce using rule 145 (class-name)
    OPEN_BRACE    [reduce using rule 294 (enum-name)]
    OPEN_BRACE    [reduce using rule 1052 (template-name)]
    OPEN_BRACE    [reduce using rule 1110 (typedef-name)]
    OPEN_BRACE    [reduce using rule 1140 (unqualified-id)]
    CLOSE_BRACE   reduce using rule 1140 (unqualified-id)
    VIRTUAL       reduce using rule 145 (class-name)
    VIRTUAL       [reduce using rule 294 (enum-name)]
    VIRTUAL       [reduce using rule 1052 (template-name)]
    VIRTUAL       [reduce using rule 1110 (typedef-name)]
    CLASS         reduce using rule 145 (class-name)
    CLASS         [reduce using rule 294 (enum-name)]
    CLASS         [reduce using rule 1052 (template-name)]
    CLASS         [reduce using rule 1110 (typedef-name)]
    STRUCT        reduce using rule 145 (class-name)
    STRUCT        [reduce using rule 294 (enum-name)]
    STRUCT        [reduce using rule 1052 (template-name)]
    STRUCT        [reduce using rule 1110 (typedef-name)]
    UNION         reduce using rule 145 (class-name)
    UNION         [reduce using rule 294 (enum-name)]
    UNION         [reduce using rule 1052 (template-name)]
    UNION         [reduce using rule 1110 (typedef-name)]
    FINAL         reduce using rule 1140 (unqualified-id)
    SPACESHIP     reduce using rule 1140 (unqualified-id)
    QUERY         reduce using rule 1140 (unqualified-id)
    AND_AND       reduce using rule 145 (class-name)
    AND_AND       [reduce using rule 294 (enum-name)]
    AND_AND       [reduce using rule 1052 (template-name)]
    AND_AND       [reduce using rule 1110 (typedef-name)]
    AND_AND       [reduce using rule 1140 (unqualified-id)]
    OR_OR         reduce using rule 1140 (unqualified-id)
    OPERATOR      reduce using rule 145 (class-name)
    OPERATOR      [reduce using rule 294 (enum-name)]
    OPERATOR      [reduce using rule 1052 (template-name)]
    OPERATOR      [reduce using rule 1110 (typedef-name)]
    CONST         reduce using rule 145 (class-name)
    CONST         [reduce using rule 294 (enum-name)]
    CONST         [reduce using rule 1052 (template-name)]
    CONST         [reduce using rule 1110 (typedef-name)]
    VOLATILE      reduce using rule 145 (class-name)
    VOLATILE      [reduce using rule 294 (enum-name)]
    VOLATILE      [reduce using rule 1052 (template-name)]
    VOLATILE      [reduce using rule 1110 (typedef-name)]
    FRIEND        reduce using rule 145 (class-name)
    FRIEND        [reduce using rule 294 (enum-name)]
    FRIEND        [reduce using rule 1052 (template-name)]
    FRIEND        [reduce using rule 1110 (typedef-name)]
    TYPEDEF       reduce using rule 145 (class-name)
    TYPEDEF       [reduce using rule 294 (enum-name)]
    TYPEDEF       [reduce using rule 1052 (template-name)]
    TYPEDEF       [reduce using rule 1110 (typedef-name)]
    CONSTEXPR     reduce using rule 145 (class-name)
    CONSTEXPR     [reduce using rule 294 (enum-name)]
    CONSTEXPR     [reduce using rule 1052 (template-name)]
    CONSTEXPR     [reduce using rule 1110 (typedef-name)]
    CONSTEVAL     reduce using rule 145 (class-name)
    CONSTEVAL     [reduce using rule 294 (enum-name)]
    CONSTEVAL     [reduce using rule 1052 (template-name)]
    CONSTEVAL     [reduce using rule 1110 (typedef-name)]
    CONSTINIT     reduce using rule 145 (class-name)
    CONSTINIT     [reduce using rule 294 (enum-name)]
    CONSTINIT     [reduce using rule 1052 (template-name)]
    CONSTINIT     [reduce using rule 1110 (typedef-name)]
    INLINE        reduce using rule 145 (class-name)
    INLINE        [reduce using rule 294 (enum-name)]
    INLINE        [reduce using rule 1052 (template-name)]
    INLINE        [reduce using rule 1110 (typedef-name)]
    DECLTYPE      reduce using rule 145 (class-name)
    DECLTYPE      [reduce using rule 163 (concept-name)]
    DECLTYPE      [reduce using rule 294 (enum-name)]
    DECLTYPE      [reduce using rule 1052 (template-name)]
    DECLTYPE      [reduce using rule 1110 (typedef-name)]
    DEREF         reduce using rule 1140 (unqualified-id)
    DOT           reduce using rule 1140 (unqualified-id)
    ENUM          reduce using rule 145 (class-name)
    ENUM          [reduce using rule 294 (enum-name)]
    ENUM          [reduce using rule 1052 (template-name)]
    ENUM          [reduce using rule 1110 (typedef-name)]
    EQ_EQ         reduce using rule 1140 (unqualified-id)
    NOT_EQ        reduce using rule 1140 (unqualified-id)
    XOR           reduce using rule 1140 (unqualified-id)
    EXTERN        reduce using rule 145 (class-name)
    EXTERN        [reduce using rule 294 (enum-name)]
    EXTERN        [reduce using rule 1052 (template-name)]
    EXTERN        [reduce using rule 1110 (typedef-name)]
    LESS          reduce using rule 163 (concept-name)
    LESS          [reduce using rule 1052 (template-name)]
    LESS          [reduce using rule 1140 (unqualified-id)]
    GREATER       reduce using rule 145 (class-name)
    GREATER       [reduce using rule 294 (enum-name)]
    GREATER       [reduce using rule 1052 (template-name)]
    GREATER       [reduce using rule 1110 (typedef-name)]
    GREATER       [reduce using rule 1140 (unqualified-id)]
    EXPLICIT      reduce using rule 145 (class-name)
    EXPLICIT      [reduce using rule 294 (enum-name)]
    EXPLICIT      [reduce using rule 1052 (template-name)]
    EXPLICIT      [reduce using rule 1110 (typedef-name)]
    MULT          reduce using rule 145 (class-name)
    MULT          [reduce using rule 294 (enum-name)]
    MULT          [reduce using rule 1052 (template-name)]
    MULT          [reduce using rule 1110 (typedef-name)]
    MULT          [reduce using rule 1140 (unqualified-id)]
    DIV           reduce using rule 1140 (unqualified-id)
    MOD           reduce using rule 1140 (unqualified-id)
    OR            reduce using rule 1140 (unqualified-id)
    LSHIFT        reduce using rule 1140 (unqualified-id)
    RSHIFT        reduce using rule 1140 (unqualified-id)
    LESS_EQ       reduce using rule 1140 (unqualified-id)
    GREATER_EQ    reduce using rule 1140 (unqualified-id)
    DOT_STAR      reduce using rule 1140 (unqualified-id)
    DEREF_STAR    reduce using rule 1140 (unqualified-id)
    TRY           reduce using rule 1140 (unqualified-id)
    REQUIRES      reduce using rule 1140 (unqualified-id)
    COMPL         reduce using rule 145 (class-name)
    COMPL         [reduce using rule 294 (enum-name)]
    COMPL         [reduce using rule 1052 (template-name)]
    COMPL         [reduce using rule 1110 (typedef-name)]
    PLUS_PLUS     reduce using rule 1140 (unqualified-id)
    MINUS_MINUS   reduce using rule 1140 (unqualified-id)
    AUTO          reduce using rule 145 (class-name)
    AUTO          [reduce using rule 163 (concept-name)]
    AUTO          [reduce using rule 294 (enum-name)]
    AUTO          [reduce using rule 1052 (template-name)]
    AUTO          [reduce using rule 1110 (typedef-name)]
    CHAR          reduce using rule 145 (class-name)
    CHAR          [reduce using rule 294 (enum-name)]
    CHAR          [reduce using rule 1052 (template-name)]
    CHAR          [reduce using rule 1110 (typedef-name)]
    CHAR8_T       reduce using rule 145 (class-name)
    CHAR8_T       [reduce using rule 294 (enum-name)]
    CHAR8_T       [reduce using rule 1052 (template-name)]
    CHAR8_T       [reduce using rule 1110 (typedef-name)]
    CHAR16_T      reduce using rule 145 (class-name)
    CHAR16_T      [reduce using rule 294 (enum-name)]
    CHAR16_T      [reduce using rule 1052 (template-name)]
    CHAR16_T      [reduce using rule 1110 (typedef-name)]
    CHAR32_T      reduce using rule 145 (class-name)
    CHAR32_T      [reduce using rule 294 (enum-name)]
    CHAR32_T      [reduce using rule 1052 (template-name)]
    CHAR32_T      [reduce using rule 1110 (typedef-name)]
    WCHAR_T       reduce using rule 145 (class-name)
    WCHAR_T       [reduce using rule 294 (enum-name)]
    WCHAR_T       [reduce using rule 1052 (template-name)]
    WCHAR_T       [reduce using rule 1110 (typedef-name)]
    BOOL          reduce using rule 145 (class-name)
    BOOL          [reduce using rule 294 (enum-name)]
    BOOL          [reduce using rule 1052 (template-name)]
    BOOL          [reduce using rule 1110 (typedef-name)]
    SHORT         reduce using rule 145 (class-name)
    SHORT         [reduce using rule 294 (enum-name)]
    SHORT         [reduce using rule 1052 (template-name)]
    SHORT         [reduce using rule 1110 (typedef-name)]
    INT           reduce using rule 145 (class-name)
    INT           [reduce using rule 294 (enum-name)]
    INT           [reduce using rule 1052 (template-name)]
    INT           [reduce using rule 1110 (typedef-name)]
    LONG          reduce using rule 145 (class-name)
    LONG          [reduce using rule 294 (enum-name)]
    LONG          [reduce using rule 1052 (template-name)]
    LONG          [reduce using rule 1110 (typedef-name)]
    SIGNED        reduce using rule 145 (class-name)
    SIGNED        [reduce using rule 294 (enum-name)]
    SIGNED        [reduce using rule 1052 (template-name)]
    SIGNED        [reduce using rule 1110 (typedef-name)]
    UNSIGNED      reduce using rule 145 (class-name)
    UNSIGNED      [reduce using rule 294 (enum-name)]
    UNSIGNED      [reduce using rule 1052 (template-name)]
    UNSIGNED      [reduce using rule 1110 (typedef-name)]
    FLOAT         reduce using rule 145 (class-name)
    FLOAT         [reduce using rule 294 (enum-name)]
    FLOAT         [reduce using rule 1052 (template-name)]
    FLOAT         [reduce using rule 1110 (typedef-name)]
    DOUBLE        reduce using rule 145 (class-name)
    DOUBLE        [reduce using rule 294 (enum-name)]
    DOUBLE        [reduce using rule 1052 (template-name)]
    DOUBLE        [reduce using rule 1110 (typedef-name)]
    VOID          reduce using rule 145 (class-name)
    VOID          [reduce using rule 294 (enum-name)]
    VOID          [reduce using rule 1052 (template-name)]
    VOID          [reduce using rule 1110 (typedef-name)]
    STATIC        reduce using rule 145 (class-name)
    STATIC        [reduce using rule 294 (enum-name)]
    STATIC        [reduce using rule 1052 (template-name)]
    STATIC        [reduce using rule 1110 (typedef-name)]
    THREAD_LOCAL  reduce using rule 145 (class-name)
    THREAD_LOCAL  [reduce using rule 294 (enum-name)]
    THREAD_LOCAL  [reduce using rule 1052 (template-name)]
    THREAD_LOCAL  [reduce using rule 1110 (typedef-name)]
    MUTABLE       reduce using rule 145 (class-name)
    MUTABLE       [reduce using rule 294 (enum-name)]
    MUTABLE       [reduce using rule 1052 (template-name)]
    MUTABLE       [reduce using rule 1110 (typedef-name)]
    TYPENAME      reduce using rule 145 (class-name)
    TYPENAME      [reduce using rule 294 (enum-name)]
    TYPENAME      [reduce using rule 1052 (template-name)]
    TYPENAME      [reduce using rule 1110 (typedef-name)]
    OVERRIDE      reduce using rule 1140 (unqualified-id)
    $default      reduce using rule 145 (class-name)


State 3

  272 empty-declaration: SEMICOLON •

    $default  reduce using rule 272 (empty-declaration)


State 4

   15 alignment-specifier: ALIGNAS • OPEN_PAREN type-id CLOSE_PAREN
   16                    | ALIGNAS • OPEN_PAREN type-id ELLIPSIS CLOSE_PAREN
   17                    | ALIGNAS • OPEN_PAREN constant-expression CLOSE_PAREN
   18                    | ALIGNAS • OPEN_PAREN constant-expression ELLIPSIS CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 146


State 5

  728 noptr-declarator: OPEN_PAREN • ptr-declarator CLOSE_PAREN

    IDENTIFIER  shift, and go to state 147
    OPEN_PAREN  shift, and go to state 5
    ELLIPSIS    shift, and go to state 6
    AND         shift, and go to state 7
    SCOPE       shift, and go to state 9
    AND_AND     shift, and go to state 16
    OPERATOR    shift, and go to state 17
    DECLTYPE    shift, and go to state 134
    MULT        shift, and go to state 31
    COMPL       shift, and go to state 35

    class-name              go to state 65
    conversion-function-id  go to state 68
    declarator-id           go to state 75
    decltype-specifier      go to state 138
    enum-name               go to state 84
    id-expression           go to state 93
    literal-operator-id     go to state 95
    namespace-alias         go to state 99
    namespace-name          go to state 102
    nested-name-specifier   go to state 148
    noptr-declarator        go to state 149
    operator-function-id    go to state 108
    ptr-declarator          go to state 150
    ptr-operator            go to state 111
    qualified-id            go to state 112
    simple-template-id      go to state 114
    template-id             go to state 120
    template-name           go to state 142
    type-name               go to state 143
    typedef-name            go to state 126
    unqualified-id          go to state 129


State 6

  228 declarator-id: ELLIPSIS • id-expression

    IDENTIFIER  shift, and go to state 147
    SCOPE       shift, and go to state 9
    OPERATOR    shift, and go to state 17
    DECLTYPE    shift, and go to state 134
    COMPL       shift, and go to state 35

    class-name              go to state 65
    conversion-function-id  go to state 68
    decltype-specifier      go to state 138
    enum-name               go to state 84
    id-expression           go to state 151
    literal-operator-id     go to state 95
    namespace-alias         go to state 99
    namespace-name          go to state 102
    nested-name-specifier   go to state 152
    operator-function-id    go to state 108
    qualified-id            go to state 112
    simple-template-id      go to state 114
    template-id             go to state 120
    template-name           go to state 142
    type-name               go to state 143
    typedef-name            go to state 126
    unqualified-id          go to state 129


State 7

  897 ptr-operator: AND •
  898             | AND • attribute-specifier-seq

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    ALIGNAS      [reduce using rule 897 (ptr-operator)]
    OPEN_SQUARE  [reduce using rule 897 (ptr-operator)]
    $default     reduce using rule 897 (ptr-operator)

    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 153


State 8

   22 asm-declaration: ASM • OPEN_PAREN string-literal CLOSE_PAREN SEMICOLON

    OPEN_PAREN  shift, and go to state 154


State 9

  655 nested-name-specifier: SCOPE •

    $default  reduce using rule 655 (nested-name-specifier)


State 10

   50 attribute-specifier: OPEN_SQUARE • OPEN_SQUARE attribute-list CLOSE_SQUARE CLOSE_SQUARE
   51                    | OPEN_SQUARE • OPEN_SQUARE attribute-using-prefix attribute-list CLOSE_SQUARE CLOSE_SQUARE

    OPEN_SQUARE  shift, and go to state 155


State 11

  407 function-specifier: VIRTUAL •

    $default  reduce using rule 407 (function-specifier)


State 12

  142 class-key: CLASS •

    $default  reduce using rule 142 (class-key)


State 13

  143 class-key: STRUCT •

    $default  reduce using rule 143 (class-key)


State 14

  144 class-key: UNION •

    $default  reduce using rule 144 (class-key)


State 15

  320 explicit-instantiation: TEMPLATE • declaration
  321 explicit-specialization: TEMPLATE • LESS GREATER declaration
  1045 template-head: TEMPLATE • LESS template-parameter-list GREATER
  1046              | TEMPLATE • LESS template-parameter-list GREATER requires-clause

    USING          shift, and go to state 1
    IDENTIFIER     shift, and go to state 2
    SEMICOLON      shift, and go to state 3
    ALIGNAS        shift, and go to state 4
    OPEN_PAREN     shift, and go to state 5
    ELLIPSIS       shift, and go to state 6
    AND            shift, and go to state 7
    ASM            shift, and go to state 8
    SCOPE          shift, and go to state 9
    OPEN_SQUARE    shift, and go to state 10
    VIRTUAL        shift, and go to state 11
    CLASS          shift, and go to state 12
    STRUCT         shift, and go to state 13
    UNION          shift, and go to state 14
    TEMPLATE       shift, and go to state 15
    AND_AND        shift, and go to state 16
    OPERATOR       shift, and go to state 17
    CONST          shift, and go to state 18
    VOLATILE       shift, and go to state 19
    FRIEND         shift, and go to state 20
    TYPEDEF        shift, and go to state 21
    CONSTEXPR      shift, and go to state 22
    CONSTEVAL      shift, and go to state 23
    CONSTINIT      shift, and go to state 24
    INLINE         shift, and go to state 25
    DECLTYPE       shift, and go to state 26
    ENUM           shift, and go to state 27
    EXTERN         shift, and go to state 28
    LESS           shift, and go to state 156
    EXPLICIT       shift, and go to state 29
    EXPORT         shift, and go to state 157
    MULT           shift, and go to state 31
    IMPORT         shift, and go to state 33
    NAMESPACE      shift, and go to state 34
    COMPL          shift, and go to state 35
    AUTO           shift, and go to state 36
    CHAR           shift, and go to state 37
    CHAR8_T        shift, and go to state 38
    CHAR16_T       shift, and go to state 39
    CHAR32_T       shift, and go to state 40
    WCHAR_T        shift, and go to state 41
    BOOL           shift, and go to state 42
    SHORT          shift, and go to state 43
    INT            shift, and go to state 44
    LONG           shift, and go to state 45
    SIGNED         shift, and go to state 46
    UNSIGNED       shift, and go to state 47
    FLOAT          shift, and go to state 48
    DOUBLE         shift, and go to state 49
    VOID           shift, and go to state 50
    STATIC_ASSERT  shift, and go to state 51
    STATIC         shift, and go to state 52
    THREAD_LOCAL   shift, and go to state 53
    MUTABLE        shift, and go to state 54
    TYPENAME       shift, and go to state 55

    alias-declaration                go to state 56
    alignment-specifier              go to state 57
    asm-declaration                  go to state 58
    attribute-declaration            go to state 59
    attribute-specifier              go to state 60
    attribute-specifier-seq          go to state 61
    block-declaration                go to state 62
    class-head                       go to state 63
    class-key                        go to state 64
    class-name                       go to state 65
    class-specifier                  go to state 66
    concept-name                     go to state 67
    conversion-function-id           go to state 68
    cv-qualifier                     go to state 69
    decl-specifier                   go to state 70
    decl-specifier-seq               go to state 71
    declaration                      go to state 158
    declarator                       go to state 74
    declarator-id                    go to state 75
    decltype-specifier               go to state 76
    deduction-guide                  go to state 77
    defining-type-specifier          go to state 78
    elaborated-enum-specifier        go to state 79
    elaborated-type-specifier        go to state 80
    empty-declaration                go to state 81
    enum-head                        go to state 82
    enum-key                         go to state 83
    enum-name                        go to state 84
    enum-specifier                   go to state 85
    explicit-instantiation           go to state 86
    explicit-specialization          go to state 87
    explicit-specifier               go to state 88
    export-declaration               go to state 89
    function-definition              go to state 90
    function-specifier               go to state 91
    id-expression                    go to state 93
    linkage-specification            go to state 94
    literal-operator-id              go to state 95
    module-import-declaration        go to state 97
    named-namespace-definition       go to state 98
    namespace-alias                  go to state 99
    namespace-alias-definition       go to state 100
    namespace-definition             go to state 101
    namespace-name                   go to state 102
    nested-name-specifier            go to state 103
    nested-namespace-definition      go to state 104
    nodeclspec-function-declaration  go to state 105
    noptr-declarator                 go to state 106
    opaque-enum-declaration          go to state 107
    operator-function-id             go to state 108
    placeholder-type-specifier       go to state 109
    ptr-declarator                   go to state 110
    ptr-operator                     go to state 111
    qualified-id                     go to state 112
    simple-declaration               go to state 113
    simple-template-id               go to state 114
    simple-type-specifier            go to state 115
    static_assert-declaration        go to state 116
    storage-class-specifier          go to state 117
    template-declaration             go to state 118
    template-head                    go to state 119
    template-id                      go to state 120
    template-name                    go to state 121
    type-constraint                  go to state 123
    type-name                        go to state 124
    type-specifier                   go to state 125
    typedef-name                     go to state 126
    typename-specifier               go to state 127
    unnamed-namespace-definition     go to state 128
    unqualified-id                   go to state 129
    using-declaration                go to state 130
    using-directive                  go to state 131
    using-enum-declaration           go to state 132


State 16

  899 ptr-operator: AND_AND •
  900             | AND_AND • attribute-specifier-seq

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    ALIGNAS      [reduce using rule 899 (ptr-operator)]
    OPEN_SQUARE  [reduce using rule 899 (ptr-operator)]
    $default     reduce using rule 899 (ptr-operator)

    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 159


State 17

  179 conversion-function-id: OPERATOR • conversion-type-id
  561 literal-operator-id: OPERATOR • string-literal IDENTIFIER
  562                    | OPERATOR • user-defined-string-literal
  755 operator-function-id: OPERATOR • overloadable-operator
  756                     | OPERATOR • overloadable-operator LESS GREATER
  757                     | OPERATOR • overloadable-operator LESS template-argument-list GREATER

    PLUS          shift, and go to state 160
    MINUS         shift, and go to state 161
    IDENTIFIER    shift, and go to state 162
    EQ            shift, and go to state 163
    OPEN_PAREN    shift, and go to state 164
    AND           shift, and go to state 165
    MULT_EQ       shift, and go to state 166
    DIV_EQ        shift, and go to state 167
    MOD_EQ        shift, and go to state 168
    PLUS_EQ       shift, and go to state 169
    MINUS_EQ      shift, and go to state 170
    RSHIFT_EQ     shift, and go to state 171
    LSHIFT_EQ     shift, and go to state 172
    AND_EQ        shift, and go to state 173
    XOR_EQ        shift, and go to state 174
    OR_EQ         shift, and go to state 175
    COMMA         shift, and go to state 176
    SCOPE         shift, and go to state 9
    OPEN_SQUARE   shift, and go to state 177
    CO_AWAIT      shift, and go to state 178
    CLASS         shift, and go to state 12
    STRUCT        shift, and go to state 13
    UNION         shift, and go to state 14
    SPACESHIP     shift, and go to state 179
    AND_AND       shift, and go to state 180
    OR_OR         shift, and go to state 181
    CONST         shift, and go to state 18
    VOLATILE      shift, and go to state 19
    DECLTYPE      shift, and go to state 26
    DEREF         shift, and go to state 182
    DELETE        shift, and go to state 183
    ENUM          shift, and go to state 135
    UNICODE_8     shift, and go to state 184
    EQ_EQ         shift, and go to state 185
    NOT_EQ        shift, and go to state 186
    XOR           shift, and go to state 187
    LESS          shift, and go to state 188
    GREATER       shift, and go to state 189
    MULT          shift, and go to state 190
    DIV           shift, and go to state 191
    MOD           shift, and go to state 192
    OR            shift, and go to state 193
    LSHIFT        shift, and go to state 194
    RSHIFT        shift, and go to state 195
    LESS_EQ       shift, and go to state 196
    GREATER_EQ    shift, and go to state 197
    DEREF_STAR    shift, and go to state 198
    DOUBLE_QUOTE  shift, and go to state 199
    NEW           shift, and go to state 200
    COMPL         shift, and go to state 201
    NOT           shift, and go to state 202
    PLUS_PLUS     shift, and go to state 203
    MINUS_MINUS   shift, and go to state 204
    AUTO          shift, and go to state 36
    CHAR          shift, and go to state 37
    CHAR8_T       shift, and go to state 38
    CHAR16_T      shift, and go to state 39
    CHAR32_T      shift, and go to state 40
    WCHAR_T       shift, and go to state 41
    BOOL          shift, and go to state 42
    SHORT         shift, and go to state 43
    INT           shift, and go to state 44
    LONG          shift, and go to state 45
    SIGNED        shift, and go to state 46
    UNSIGNED      shift, and go to state 47
    FLOAT         shift, and go to state 48
    DOUBLE        shift, and go to state 49
    VOID          shift, and go to state 50
    TYPENAME      shift, and go to state 55
    'u'           shift, and go to state 205
    'U'           shift, and go to state 206
    'L'           shift, and go to state 207
    'R'           shift, and go to state 208

    class-key                    go to state 209
    class-name                   go to state 65
    concept-name                 go to state 67
    conversion-type-id           go to state 210
    cv-qualifier                 go to state 69
    decltype-specifier           go to state 76
    elaborated-enum-specifier    go to state 79
    elaborated-type-specifier    go to state 80
    encoding-prefix              go to state 211
    enum-name                    go to state 84
    namespace-alias              go to state 99
    namespace-name               go to state 102
    nested-name-specifier        go to state 212
    overloadable-operator        go to state 213
    placeholder-type-specifier   go to state 109
    simple-template-id           go to state 141
    simple-type-specifier        go to state 115
    string-literal               go to state 214
    template-name                go to state 215
    type-constraint              go to state 123
    type-name                    go to state 124
    type-specifier               go to state 216
    type-specifier-seq           go to state 217
    typedef-name                 go to state 126
    typename-specifier           go to state 127
    user-defined-string-literal  go to state 218


State 18

  185 cv-qualifier: CONST •

    $default  reduce using rule 185 (cv-qualifier)


State 19

  186 cv-qualifier: VOLATILE •

    $default  reduce using rule 186 (cv-qualifier)


State 20

  201 decl-specifier: FRIEND •

    $default  reduce using rule 201 (decl-specifier)


State 21

  202 decl-specifier: TYPEDEF •

    $default  reduce using rule 202 (decl-specifier)


State 22

  203 decl-specifier: CONSTEXPR •

    $default  reduce using rule 203 (decl-specifier)


State 23

  204 decl-specifier: CONSTEVAL •

    $default  reduce using rule 204 (decl-specifier)


State 24

  205 decl-specifier: CONSTINIT •

    $default  reduce using rule 205 (decl-specifier)


State 25

  206 decl-specifier: INLINE •
  643 named-namespace-definition: INLINE • NAMESPACE IDENTIFIER OPEN_BRACE namespace-body CLOSE_BRACE
  645                           | INLINE • NAMESPACE attribute-specifier-seq IDENTIFIER OPEN_BRACE namespace-body CLOSE_BRACE
  1136 unnamed-namespace-definition: INLINE • NAMESPACE OPEN_BRACE namespace-body CLOSE_BRACE
  1138                             | INLINE • NAMESPACE attribute-specifier-seq OPEN_BRACE namespace-body CLOSE_BRACE

    NAMESPACE  shift, and go to state 219

    $default  reduce using rule 206 (decl-specifier)


State 26

  230 decltype-specifier: DECLTYPE • OPEN_PAREN expression CLOSE_PAREN
  851 placeholder-type-specifier: DECLTYPE • OPEN_PAREN AUTO CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 220


State 27

  262 elaborated-enum-specifier: ENUM • IDENTIFIER
  263                          | ENUM • nested-name-specifier IDENTIFIER
  291 enum-key: ENUM •
  292         | ENUM • CLASS
  293         | ENUM • STRUCT

    IDENTIFIER  shift, and go to state 221
    SCOPE       shift, and go to state 9
    CLASS       shift, and go to state 222
    STRUCT      shift, and go to state 223
    DECLTYPE    shift, and go to state 134

    IDENTIFIER  [reduce using rule 291 (enum-key)]
    SCOPE       [reduce using rule 291 (enum-key)]
    DECLTYPE    [reduce using rule 291 (enum-key)]
    $default    reduce using rule 291 (enum-key)

    class-name             go to state 65
    decltype-specifier     go to state 138
    enum-name              go to state 84
    namespace-alias        go to state 99
    namespace-name         go to state 102
    nested-name-specifier  go to state 224
    simple-template-id     go to state 141
    template-name          go to state 142
    type-name              go to state 143
    typedef-name           go to state 126


State 28

  319 explicit-instantiation: EXTERN • TEMPLATE declaration
  551 linkage-specification: EXTERN • string-literal OPEN_BRACE CLOSE_BRACE
  552                      | EXTERN • string-literal OPEN_BRACE declaration-seq CLOSE_BRACE
  553                      | EXTERN • string-literal declaration
  1028 storage-class-specifier: EXTERN •

    TEMPLATE      shift, and go to state 225
    UNICODE_8     shift, and go to state 184
    DOUBLE_QUOTE  shift, and go to state 199
    'u'           shift, and go to state 205
    'U'           shift, and go to state 206
    'L'           shift, and go to state 207
    'R'           shift, and go to state 208

    $default  reduce using rule 1028 (storage-class-specifier)

    encoding-prefix  go to state 211
    string-literal   go to state 226


State 29

  322 explicit-specifier: EXPLICIT • OPEN_PAREN constant-expression CLOSE_PAREN
  323                   | EXPLICIT •

    OPEN_PAREN  shift, and go to state 227

    OPEN_PAREN  [reduce using rule 323 (explicit-specifier)]
    $default    reduce using rule 323 (explicit-specifier)


State 30

  328 export-declaration: EXPORT • declaration
  329                   | EXPORT • OPEN_BRACE CLOSE_BRACE
  330                   | EXPORT • OPEN_BRACE declaration-seq CLOSE_BRACE
  331                   | EXPORT • module-import-declaration
  619 module-declaration: EXPORT • MODULE module-name SEMICOLON
  621                   | EXPORT • MODULE module-name module-partition SEMICOLON
  623                   | EXPORT • MODULE module-name attribute-specifier-seq SEMICOLON
  625                   | EXPORT • MODULE module-name module-partition attribute-specifier-seq SEMICOLON

    USING          shift, and go to state 1
    IDENTIFIER     shift, and go to state 2
    SEMICOLON      shift, and go to state 3
    ALIGNAS        shift, and go to state 4
    OPEN_PAREN     shift, and go to state 5
    ELLIPSIS       shift, and go to state 6
    AND            shift, and go to state 7
    ASM            shift, and go to state 8
    SCOPE          shift, and go to state 9
    OPEN_SQUARE    shift, and go to state 10
    OPEN_BRACE     shift, and go to state 228
    VIRTUAL        shift, and go to state 11
    CLASS          shift, and go to state 12
    STRUCT         shift, and go to state 13
    UNION          shift, and go to state 14
    TEMPLATE       shift, and go to state 15
    AND_AND        shift, and go to state 16
    OPERATOR       shift, and go to state 17
    CONST          shift, and go to state 18
    VOLATILE       shift, and go to state 19
    FRIEND         shift, and go to state 20
    TYPEDEF        shift, and go to state 21
    CONSTEXPR      shift, and go to state 22
    CONSTEVAL      shift, and go to state 23
    CONSTINIT      shift, and go to state 24
    INLINE         shift, and go to state 25
    DECLTYPE       shift, and go to state 26
    ENUM           shift, and go to state 27
    EXTERN         shift, and go to state 28
    EXPLICIT       shift, and go to state 29
    EXPORT         shift, and go to state 157
    MULT           shift, and go to state 31
    MODULE         shift, and go to state 229
    IMPORT         shift, and go to state 33
    NAMESPACE      shift, and go to state 34
    COMPL          shift, and go to state 35
    AUTO           shift, and go to state 36
    CHAR           shift, and go to state 37
    CHAR8_T        shift, and go to state 38
    CHAR16_T       shift, and go to state 39
    CHAR32_T       shift, and go to state 40
    WCHAR_T        shift, and go to state 41
    BOOL           shift, and go to state 42
    SHORT          shift, and go to state 43
    INT            shift, and go to state 44
    LONG           shift, and go to state 45
    SIGNED         shift, and go to state 46
    UNSIGNED       shift, and go to state 47
    FLOAT          shift, and go to state 48
    DOUBLE         shift, and go to state 49
    VOID           shift, and go to state 50
    STATIC_ASSERT  shift, and go to state 51
    STATIC         shift, and go to state 52
    THREAD_LOCAL   shift, and go to state 53
    MUTABLE        shift, and go to state 54
    TYPENAME       shift, and go to state 55

    alias-declaration                go to state 56
    alignment-specifier              go to state 57
    asm-declaration                  go to state 58
    attribute-declaration            go to state 59
    attribute-specifier              go to state 60
    attribute-specifier-seq          go to state 61
    block-declaration                go to state 62
    class-head                       go to state 63
    class-key                        go to state 64
    class-name                       go to state 65
    class-specifier                  go to state 66
    concept-name                     go to state 67
    conversion-function-id           go to state 68
    cv-qualifier                     go to state 69
    decl-specifier                   go to state 70
    decl-specifier-seq               go to state 71
    declaration                      go to state 230
    declarator                       go to state 74
    declarator-id                    go to state 75
    decltype-specifier               go to state 76
    deduction-guide                  go to state 77
    defining-type-specifier          go to state 78
    elaborated-enum-specifier        go to state 79
    elaborated-type-specifier        go to state 80
    empty-declaration                go to state 81
    enum-head                        go to state 82
    enum-key                         go to state 83
    enum-name                        go to state 84
    enum-specifier                   go to state 85
    explicit-instantiation           go to state 86
    explicit-specialization          go to state 87
    explicit-specifier               go to state 88
    export-declaration               go to state 89
    function-definition              go to state 90
    function-specifier               go to state 91
    id-expression                    go to state 93
    linkage-specification            go to state 94
    literal-operator-id              go to state 95
    module-import-declaration        go to state 231
    named-namespace-definition       go to state 98
    namespace-alias                  go to state 99
    namespace-alias-definition       go to state 100
    namespace-definition             go to state 101
    namespace-name                   go to state 102
    nested-name-specifier            go to state 103
    nested-namespace-definition      go to state 104
    nodeclspec-function-declaration  go to state 105
    noptr-declarator                 go to state 106
    opaque-enum-declaration          go to state 107
    operator-function-id             go to state 108
    placeholder-type-specifier       go to state 109
    ptr-declarator                   go to state 110
    ptr-operator                     go to state 111
    qualified-id                     go to state 112
    simple-declaration               go to state 113
    simple-template-id               go to state 114
    simple-type-specifier            go to state 115
    static_assert-declaration        go to state 116
    storage-class-specifier          go to state 117
    template-declaration             go to state 118
    template-head                    go to state 119
    template-id                      go to state 120
    template-name                    go to state 121
    type-constraint                  go to state 123
    type-name                        go to state 124
    type-specifier                   go to state 125
    typedef-name                     go to state 126
    typename-specifier               go to state 127
    unnamed-namespace-definition     go to state 128
    unqualified-id                   go to state 129
    using-declaration                go to state 130
    using-directive                  go to state 131
    using-enum-declaration           go to state 132


State 31

  893 ptr-operator: MULT •
  894             | MULT • attribute-specifier-seq
  895             | MULT • cv-qualifier-seq
  896             | MULT • attribute-specifier-seq cv-qualifier-seq

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10
    CONST        shift, and go to state 18
    VOLATILE     shift, and go to state 19

    ALIGNAS      [reduce using rule 893 (ptr-operator)]
    OPEN_SQUARE  [reduce using rule 893 (ptr-operator)]
    CONST        [reduce using rule 893 (ptr-operator)]
    VOLATILE     [reduce using rule 893 (ptr-operator)]
    $default     reduce using rule 893 (ptr-operator)

    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 232
    cv-qualifier             go to state 233
    cv-qualifier-seq         go to state 234


State 32

  411 global-module-fragment: MODULE • SEMICOLON
  412                       | MODULE • SEMICOLON declaration-seq
  620 module-declaration: MODULE • module-name SEMICOLON
  622                   | MODULE • module-name module-partition SEMICOLON
  624                   | MODULE • module-name attribute-specifier-seq SEMICOLON
  626                   | MODULE • module-name module-partition attribute-specifier-seq SEMICOLON

    IDENTIFIER  shift, and go to state 235
    SEMICOLON   shift, and go to state 236

    module-name            go to state 237
    module-name-qualifier  go to state 238


State 33

  627 module-import-declaration: IMPORT • module-name SEMICOLON
  628                          | IMPORT • module-name attribute-specifier-seq SEMICOLON
  629                          | IMPORT • module-partition SEMICOLON
  630                          | IMPORT • module-partition attribute-specifier-seq SEMICOLON
  631                          | IMPORT • header-name SEMICOLON
  632                          | IMPORT • header-name attribute-specifier-seq SEMICOLON

    IDENTIFIER    shift, and go to state 235
    COLON         shift, and go to state 239
    LESS          shift, and go to state 240
    DOUBLE_QUOTE  shift, and go to state 241

    header-name            go to state 242
    module-name            go to state 243
    module-name-qualifier  go to state 238
    module-partition       go to state 244


State 34

  644 named-namespace-definition: NAMESPACE • IDENTIFIER OPEN_BRACE namespace-body CLOSE_BRACE
  646                           | NAMESPACE • attribute-specifier-seq IDENTIFIER OPEN_BRACE namespace-body CLOSE_BRACE
  648 namespace-alias-definition: NAMESPACE • IDENTIFIER EQ qualified-namespace-specifier SEMICOLON
  662 nested-namespace-definition: NAMESPACE • enclosing-namespace-specifier SCOPE IDENTIFIER OPEN_BRACE namespace-body CLOSE_BRACE
  663                            | NAMESPACE • enclosing-namespace-specifier SCOPE INLINE IDENTIFIER OPEN_BRACE namespace-body CLOSE_BRACE
  1137 unnamed-namespace-definition: NAMESPACE • OPEN_BRACE namespace-body CLOSE_BRACE
  1139                             | NAMESPACE • attribute-specifier-seq OPEN_BRACE namespace-body CLOSE_BRACE

    IDENTIFIER   shift, and go to state 245
    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10
    OPEN_BRACE   shift, and go to state 246

    alignment-specifier            go to state 57
    attribute-specifier            go to state 60
    attribute-specifier-seq        go to state 247
    enclosing-namespace-specifier  go to state 248


State 35

  1144 unqualified-id: COMPL • type-name
  1145               | COMPL • decltype-specifier

    IDENTIFIER  shift, and go to state 249
    DECLTYPE    shift, and go to state 134

    class-name          go to state 65
    decltype-specifier  go to state 250
    enum-name           go to state 84
    simple-template-id  go to state 141
    template-name       go to state 142
    type-name           go to state 251
    typedef-name        go to state 126


State 36

  849 placeholder-type-specifier: AUTO •

    $default  reduce using rule 849 (placeholder-type-specifier)


State 37

  992 simple-type-specifier: CHAR •

    $default  reduce using rule 992 (simple-type-specifier)


State 38

  993 simple-type-specifier: CHAR8_T •

    $default  reduce using rule 993 (simple-type-specifier)


State 39

  994 simple-type-specifier: CHAR16_T •

    $default  reduce using rule 994 (simple-type-specifier)


State 40

  995 simple-type-specifier: CHAR32_T •

    $default  reduce using rule 995 (simple-type-specifier)


State 41

  996 simple-type-specifier: WCHAR_T •

    $default  reduce using rule 996 (simple-type-specifier)


State 42

  997 simple-type-specifier: BOOL •

    $default  reduce using rule 997 (simple-type-specifier)


State 43

  998 simple-type-specifier: SHORT •

    $default  reduce using rule 998 (simple-type-specifier)


State 44

  999 simple-type-specifier: INT •

    $default  reduce using rule 999 (simple-type-specifier)


State 45

  1000 simple-type-specifier: LONG •

    $default  reduce using rule 1000 (simple-type-specifier)


State 46

  1001 simple-type-specifier: SIGNED •

    $default  reduce using rule 1001 (simple-type-specifier)


State 47

  1002 simple-type-specifier: UNSIGNED •

    $default  reduce using rule 1002 (simple-type-specifier)


State 48

  1003 simple-type-specifier: FLOAT •

    $default  reduce using rule 1003 (simple-type-specifier)


State 49

  1004 simple-type-specifier: DOUBLE •

    $default  reduce using rule 1004 (simple-type-specifier)


State 50

  1005 simple-type-specifier: VOID •

    $default  reduce using rule 1005 (simple-type-specifier)


State 51

  1024 static_assert-declaration: STATIC_ASSERT • OPEN_PAREN constant-expression CLOSE_PAREN SEMICOLON
  1025                          | STATIC_ASSERT • OPEN_PAREN constant-expression COMMA string-literal CLOSE_PAREN SEMICOLON

    OPEN_PAREN  shift, and go to state 252


State 52

  1026 storage-class-specifier: STATIC •

    $default  reduce using rule 1026 (storage-class-specifier)


State 53

  1027 storage-class-specifier: THREAD_LOCAL •

    $default  reduce using rule 1027 (storage-class-specifier)


State 54

  1029 storage-class-specifier: MUTABLE •

    $default  reduce using rule 1029 (storage-class-specifier)


State 55

  1112 typename-specifier: TYPENAME • nested-name-specifier IDENTIFIER
  1113                   | TYPENAME • nested-name-specifier simple-template-id
  1114                   | TYPENAME • nested-name-specifier TEMPLATE simple-template-id

    IDENTIFIER  shift, and go to state 253
    SCOPE       shift, and go to state 9
    DECLTYPE    shift, and go to state 134

    class-name             go to state 65
    decltype-specifier     go to state 138
    enum-name              go to state 84
    namespace-alias        go to state 99
    namespace-name         go to state 102
    nested-name-specifier  go to state 254
    simple-template-id     go to state 141
    template-name          go to state 142
    type-name              go to state 143
    typedef-name           go to state 126


State 56

  102 block-declaration: alias-declaration •

    $default  reduce using rule 102 (block-declaration)


State 57

   52 attribute-specifier: alignment-specifier •

    $default  reduce using rule 52 (attribute-specifier)


State 58

   96 block-declaration: asm-declaration •

    $default  reduce using rule 96 (block-declaration)


State 59

  221 declaration: attribute-declaration •

    $default  reduce using rule 221 (declaration)


State 60

   54 attribute-specifier-seq: attribute-specifier •

    $default  reduce using rule 54 (attribute-specifier-seq)


State 61

   21 asm-declaration: attribute-specifier-seq • ASM OPEN_PAREN string-literal CLOSE_PAREN SEMICOLON
   42 attribute-declaration: attribute-specifier-seq • SEMICOLON
   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  395 function-definition: attribute-specifier-seq • declarator function-body
  397                    | attribute-specifier-seq • decl-specifier-seq declarator function-body
  399                    | attribute-specifier-seq • declarator virt-specifier-seq function-body
  401                    | attribute-specifier-seq • decl-specifier-seq declarator virt-specifier-seq function-body
  403                    | attribute-specifier-seq • declarator requires-clause function-body
  405                    | attribute-specifier-seq • decl-specifier-seq declarator requires-clause function-body
  690 nodeclspec-function-declaration: attribute-specifier-seq • declarator SEMICOLON
  965 simple-declaration: attribute-specifier-seq • decl-specifier-seq init-declarator-list SEMICOLON
  966                   | attribute-specifier-seq • decl-specifier-seq OPEN_SQUARE identifier-list CLOSE_SQUARE initializer SEMICOLON
  968                   | attribute-specifier-seq • decl-specifier-seq ref-qualifier OPEN_SQUARE identifier-list CLOSE_SQUARE initializer SEMICOLON
  1171 using-directive: attribute-specifier-seq • USING NAMESPACE namespace-name SEMICOLON
  1173                | attribute-specifier-seq • USING NAMESPACE nested-name-specifier namespace-name SEMICOLON

    USING         shift, and go to state 255
    IDENTIFIER    shift, and go to state 2
    SEMICOLON     shift, and go to state 256
    ALIGNAS       shift, and go to state 4
    OPEN_PAREN    shift, and go to state 5
    ELLIPSIS      shift, and go to state 6
    AND           shift, and go to state 7
    ASM           shift, and go to state 257
    SCOPE         shift, and go to state 9
    OPEN_SQUARE   shift, and go to state 10
    VIRTUAL       shift, and go to state 11
    CLASS         shift, and go to state 12
    STRUCT        shift, and go to state 13
    UNION         shift, and go to state 14
    AND_AND       shift, and go to state 16
    OPERATOR      shift, and go to state 17
    CONST         shift, and go to state 18
    VOLATILE      shift, and go to state 19
    FRIEND        shift, and go to state 20
    TYPEDEF       shift, and go to state 21
    CONSTEXPR     shift, and go to state 22
    CONSTEVAL     shift, and go to state 23
    CONSTINIT     shift, and go to state 24
    INLINE        shift, and go to state 258
    DECLTYPE      shift, and go to state 26
    ENUM          shift, and go to state 27
    EXTERN        shift, and go to state 259
    EXPLICIT      shift, and go to state 29
    MULT          shift, and go to state 31
    COMPL         shift, and go to state 35
    AUTO          shift, and go to state 36
    CHAR          shift, and go to state 37
    CHAR8_T       shift, and go to state 38
    CHAR16_T      shift, and go to state 39
    CHAR32_T      shift, and go to state 40
    WCHAR_T       shift, and go to state 41
    BOOL          shift, and go to state 42
    SHORT         shift, and go to state 43
    INT           shift, and go to state 44
    LONG          shift, and go to state 45
    SIGNED        shift, and go to state 46
    UNSIGNED      shift, and go to state 47
    FLOAT         shift, and go to state 48
    DOUBLE        shift, and go to state 49
    VOID          shift, and go to state 50
    STATIC        shift, and go to state 52
    THREAD_LOCAL  shift, and go to state 53
    MUTABLE       shift, and go to state 54
    TYPENAME      shift, and go to state 55

    alignment-specifier         go to state 57
    attribute-specifier         go to state 260
    class-head                  go to state 63
    class-key                   go to state 64
    class-name                  go to state 65
    class-specifier             go to state 66
    concept-name                go to state 67
    conversion-function-id      go to state 68
    cv-qualifier                go to state 69
    decl-specifier              go to state 70
    decl-specifier-seq          go to state 261
    declarator                  go to state 262
    declarator-id               go to state 75
    decltype-specifier          go to state 76
    defining-type-specifier     go to state 78
    elaborated-enum-specifier   go to state 79
    elaborated-type-specifier   go to state 80
    enum-head                   go to state 82
    enum-key                    go to state 263
    enum-name                   go to state 84
    enum-specifier              go to state 85
    explicit-specifier          go to state 264
    function-specifier          go to state 91
    id-expression               go to state 93
    literal-operator-id         go to state 95
    namespace-alias             go to state 99
    namespace-name              go to state 102
    nested-name-specifier       go to state 103
    noptr-declarator            go to state 106
    operator-function-id        go to state 108
    placeholder-type-specifier  go to state 109
    ptr-declarator              go to state 110
    ptr-operator                go to state 111
    qualified-id                go to state 112
    simple-template-id          go to state 114
    simple-type-specifier       go to state 115
    storage-class-specifier     go to state 117
    template-id                 go to state 120
    template-name               go to state 215
    type-constraint             go to state 123
    type-name                   go to state 124
    type-specifier              go to state 125
    typedef-name                go to state 126
    typename-specifier          go to state 127
    unqualified-id              go to state 129


State 62

  210 declaration: block-declaration •

    $default  reduce using rule 210 (declaration)


State 63

  151 class-specifier: class-head • OPEN_BRACE CLOSE_BRACE
  152                | class-head • OPEN_BRACE member-specification CLOSE_BRACE

    OPEN_BRACE  shift, and go to state 265


State 64

  128 class-head: class-key • class-head-name
  129           | class-key • attribute-specifier-seq class-head-name
  130           | class-key • class-head-name class-virt-specifier
  131           | class-key • attribute-specifier-seq class-head-name class-virt-specifier
  132           | class-key • class-head-name base-clause
  133           | class-key • attribute-specifier-seq class-head-name base-clause
  134           | class-key • class-head-name class-virt-specifier base-clause
  135           | class-key • attribute-specifier-seq class-head-name class-virt-specifier base-clause
  136           | class-key •
  137           | class-key • attribute-specifier-seq
  138           | class-key • base-clause
  139           | class-key • attribute-specifier-seq base-clause
  264 elaborated-type-specifier: class-key • IDENTIFIER
  265                          | class-key • attribute-specifier-seq IDENTIFIER
  266                          | class-key • nested-name-specifier IDENTIFIER
  267                          | class-key • attribute-specifier-seq nested-name-specifier IDENTIFIER
  268                          | class-key • simple-template-id
  269                          | class-key • nested-name-specifier simple-template-id
  270                          | class-key • nested-name-specifier TEMPLATE simple-template-id

    IDENTIFIER   shift, and go to state 266
    ALIGNAS      shift, and go to state 4
    SCOPE        shift, and go to state 9
    OPEN_SQUARE  shift, and go to state 10
    COLON        shift, and go to state 267
    DECLTYPE     shift, and go to state 134

    $default  reduce using rule 136 (class-head)

    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 268
    base-clause              go to state 269
    class-head-name          go to state 270
    class-name               go to state 271
    decltype-specifier       go to state 138
    enum-name                go to state 84
    namespace-alias          go to state 99
    namespace-name           go to state 102
    nested-name-specifier    go to state 272
    simple-template-id       go to state 273
    template-name            go to state 142
    type-name                go to state 143
    typedef-name             go to state 126


State 65

  1078 type-name: class-name •

    $default  reduce using rule 1078 (type-name)


State 66

  236 defining-type-specifier: class-specifier •

    $default  reduce using rule 236 (defining-type-specifier)


State 67

  1071 type-constraint: concept-name •
  1073                | concept-name • LESS GREATER
  1075                | concept-name • LESS template-argument-list GREATER

    LESS  shift, and go to state 274

    $default  reduce using rule 1071 (type-constraint)


State 68

  1142 unqualified-id: conversion-function-id •

    $default  reduce using rule 1142 (unqualified-id)


State 69

  1106 type-specifier: cv-qualifier •

    $default  reduce using rule 1106 (type-specifier)


State 70

  207 decl-specifier-seq: decl-specifier •
  208                   | decl-specifier • attribute-specifier-seq
  209                   | decl-specifier • decl-specifier-seq

    IDENTIFIER    shift, and go to state 162
    ALIGNAS       shift, and go to state 4
    SCOPE         shift, and go to state 9
    OPEN_SQUARE   shift, and go to state 10
    VIRTUAL       shift, and go to state 11
    CLASS         shift, and go to state 12
    STRUCT        shift, and go to state 13
    UNION         shift, and go to state 14
    CONST         shift, and go to state 18
    VOLATILE      shift, and go to state 19
    FRIEND        shift, and go to state 20
    TYPEDEF       shift, and go to state 21
    CONSTEXPR     shift, and go to state 22
    CONSTEVAL     shift, and go to state 23
    CONSTINIT     shift, and go to state 24
    INLINE        shift, and go to state 258
    DECLTYPE      shift, and go to state 26
    ENUM          shift, and go to state 27
    EXTERN        shift, and go to state 259
    EXPLICIT      shift, and go to state 29
    AUTO          shift, and go to state 36
    CHAR          shift, and go to state 37
    CHAR8_T       shift, and go to state 38
    CHAR16_T      shift, and go to state 39
    CHAR32_T      shift, and go to state 40
    WCHAR_T       shift, and go to state 41
    BOOL          shift, and go to state 42
    SHORT         shift, and go to state 43
    INT           shift, and go to state 44
    LONG          shift, and go to state 45
    SIGNED        shift, and go to state 46
    UNSIGNED      shift, and go to state 47
    FLOAT         shift, and go to state 48
    DOUBLE        shift, and go to state 49
    VOID          shift, and go to state 50
    STATIC        shift, and go to state 52
    THREAD_LOCAL  shift, and go to state 53
    MUTABLE       shift, and go to state 54
    TYPENAME      shift, and go to state 55

    IDENTIFIER   [reduce using rule 207 (decl-specifier-seq)]
    ALIGNAS      [reduce using rule 207 (decl-specifier-seq)]
    SCOPE        [reduce using rule 207 (decl-specifier-seq)]
    OPEN_SQUARE  [reduce using rule 207 (decl-specifier-seq)]
    DECLTYPE     [reduce using rule 207 (decl-specifier-seq)]
    $default     reduce using rule 207 (decl-specifier-seq)

    alignment-specifier         go to state 57
    attribute-specifier         go to state 60
    attribute-specifier-seq     go to state 275
    class-head                  go to state 63
    class-key                   go to state 64
    class-name                  go to state 65
    class-specifier             go to state 66
    concept-name                go to state 67
    cv-qualifier                go to state 69
    decl-specifier              go to state 70
    decl-specifier-seq          go to state 276
    decltype-specifier          go to state 76
    defining-type-specifier     go to state 78
    elaborated-enum-specifier   go to state 79
    elaborated-type-specifier   go to state 80
    enum-head                   go to state 82
    enum-key                    go to state 263
    enum-name                   go to state 84
    enum-specifier              go to state 85
    explicit-specifier          go to state 264
    function-specifier          go to state 91
    namespace-alias             go to state 99
    namespace-name              go to state 102
    nested-name-specifier       go to state 212
    placeholder-type-specifier  go to state 109
    simple-template-id          go to state 141
    simple-type-specifier       go to state 115
    storage-class-specifier     go to state 117
    template-name               go to state 215
    type-constraint             go to state 123
    type-name                   go to state 124
    type-specifier              go to state 125
    typedef-name                go to state 126
    typename-specifier          go to state 127


State 71

  398 function-definition: decl-specifier-seq • declarator function-body
  402                    | decl-specifier-seq • declarator virt-specifier-seq function-body
  406                    | decl-specifier-seq • declarator requires-clause function-body
  963 simple-declaration: decl-specifier-seq • SEMICOLON
  964                   | decl-specifier-seq • init-declarator-list SEMICOLON
  967                   | decl-specifier-seq • OPEN_SQUARE identifier-list CLOSE_SQUARE initializer SEMICOLON
  969                   | decl-specifier-seq • ref-qualifier OPEN_SQUARE identifier-list CLOSE_SQUARE initializer SEMICOLON

    IDENTIFIER   shift, and go to state 147
    SEMICOLON    shift, and go to state 277
    OPEN_PAREN   shift, and go to state 5
    ELLIPSIS     shift, and go to state 6
    AND          shift, and go to state 278
    SCOPE        shift, and go to state 9
    OPEN_SQUARE  shift, and go to state 279
    AND_AND      shift, and go to state 280
    OPERATOR     shift, and go to state 17
    DECLTYPE     shift, and go to state 134
    MULT         shift, and go to state 31
    COMPL        shift, and go to state 35

    class-name              go to state 65
    conversion-function-id  go to state 68
    declarator              go to state 281
    declarator-id           go to state 75
    decltype-specifier      go to state 138
    enum-name               go to state 84
    id-expression           go to state 93
    init-declarator         go to state 282
    init-declarator-list    go to state 283
    literal-operator-id     go to state 95
    namespace-alias         go to state 99
    namespace-name          go to state 102
    nested-name-specifier   go to state 148
    noptr-declarator        go to state 106
    operator-function-id    go to state 108
    ptr-declarator          go to state 110
    ptr-operator            go to state 111
    qualified-id            go to state 112
    ref-qualifier           go to state 284
    simple-template-id      go to state 114
    template-id             go to state 120
    template-name           go to state 142
    type-name               go to state 143
    typedef-name            go to state 126
    unqualified-id          go to state 129


State 72

  223 declaration-seq: declaration •

    $default  reduce using rule 223 (declaration-seq)


State 73

  224 declaration-seq: declaration-seq • declaration
  1060 translation-unit: declaration-seq •

    USING          shift, and go to state 1
    IDENTIFIER     shift, and go to state 2
    SEMICOLON      shift, and go to state 3
    ALIGNAS        shift, and go to state 4
    OPEN_PAREN     shift, and go to state 5
    ELLIPSIS       shift, and go to state 6
    AND            shift, and go to state 7
    ASM            shift, and go to state 8
    SCOPE          shift, and go to state 9
    OPEN_SQUARE    shift, and go to state 10
    VIRTUAL        shift, and go to state 11
    CLASS          shift, and go to state 12
    STRUCT         shift, and go to state 13
    UNION          shift, and go to state 14
    TEMPLATE       shift, and go to state 15
    AND_AND        shift, and go to state 16
    OPERATOR       shift, and go to state 17
    CONST          shift, and go to state 18
    VOLATILE       shift, and go to state 19
    FRIEND         shift, and go to state 20
    TYPEDEF        shift, and go to state 21
    CONSTEXPR      shift, and go to state 22
    CONSTEVAL      shift, and go to state 23
    CONSTINIT      shift, and go to state 24
    INLINE         shift, and go to state 25
    DECLTYPE       shift, and go to state 26
    ENUM           shift, and go to state 27
    EXTERN         shift, and go to state 28
    EXPLICIT       shift, and go to state 29
    EXPORT         shift, and go to state 157
    MULT           shift, and go to state 31
    IMPORT         shift, and go to state 33
    NAMESPACE      shift, and go to state 34
    COMPL          shift, and go to state 35
    AUTO           shift, and go to state 36
    CHAR           shift, and go to state 37
    CHAR8_T        shift, and go to state 38
    CHAR16_T       shift, and go to state 39
    CHAR32_T       shift, and go to state 40
    WCHAR_T        shift, and go to state 41
    BOOL           shift, and go to state 42
    SHORT          shift, and go to state 43
    INT            shift, and go to state 44
    LONG           shift, and go to state 45
    SIGNED         shift, and go to state 46
    UNSIGNED       shift, and go to state 47
    FLOAT          shift, and go to state 48
    DOUBLE         shift, and go to state 49
    VOID           shift, and go to state 50
    STATIC_ASSERT  shift, and go to state 51
    STATIC         shift, and go to state 52
    THREAD_LOCAL   shift, and go to state 53
    MUTABLE        shift, and go to state 54
    TYPENAME       shift, and go to state 55

    $default  reduce using rule 1060 (translation-unit)

    alias-declaration                go to state 56
    alignment-specifier              go to state 57
    asm-declaration                  go to state 58
    attribute-declaration            go to state 59
    attribute-specifier              go to state 60
    attribute-specifier-seq          go to state 61
    block-declaration                go to state 62
    class-head                       go to state 63
    class-key                        go to state 64
    class-name                       go to state 65
    class-specifier                  go to state 66
    concept-name                     go to state 67
    conversion-function-id           go to state 68
    cv-qualifier                     go to state 69
    decl-specifier                   go to state 70
    decl-specifier-seq               go to state 71
    declaration                      go to state 285
    declarator                       go to state 74
    declarator-id                    go to state 75
    decltype-specifier               go to state 76
    deduction-guide                  go to state 77
    defining-type-specifier          go to state 78
    elaborated-enum-specifier        go to state 79
    elaborated-type-specifier        go to state 80
    empty-declaration                go to state 81
    enum-head                        go to state 82
    enum-key                         go to state 83
    enum-name                        go to state 84
    enum-specifier                   go to state 85
    explicit-instantiation           go to state 86
    explicit-specialization          go to state 87
    explicit-specifier               go to state 88
    export-declaration               go to state 89
    function-definition              go to state 90
    function-specifier               go to state 91
    id-expression                    go to state 93
    linkage-specification            go to state 94
    literal-operator-id              go to state 95
    module-import-declaration        go to state 97
    named-namespace-definition       go to state 98
    namespace-alias                  go to state 99
    namespace-alias-definition       go to state 100
    namespace-definition             go to state 101
    namespace-name                   go to state 102
    nested-name-specifier            go to state 103
    nested-namespace-definition      go to state 104
    nodeclspec-function-declaration  go to state 105
    noptr-declarator                 go to state 106
    opaque-enum-declaration          go to state 107
    operator-function-id             go to state 108
    placeholder-type-specifier       go to state 109
    ptr-declarator                   go to state 110
    ptr-operator                     go to state 111
    qualified-id                     go to state 112
    simple-declaration               go to state 113
    simple-template-id               go to state 114
    simple-type-specifier            go to state 115
    static_assert-declaration        go to state 116
    storage-class-specifier          go to state 117
    template-declaration             go to state 118
    template-head                    go to state 119
    template-id                      go to state 120
    template-name                    go to state 121
    type-constraint                  go to state 123
    type-name                        go to state 124
    type-specifier                   go to state 125
    typedef-name                     go to state 126
    typename-specifier               go to state 127
    unnamed-namespace-definition     go to state 128
    unqualified-id                   go to state 129
    using-declaration                go to state 130
    using-directive                  go to state 131
    using-enum-declaration           go to state 132


State 74

  396 function-definition: declarator • function-body
  400                    | declarator • virt-specifier-seq function-body
  404                    | declarator • requires-clause function-body
  691 nodeclspec-function-declaration: declarator • SEMICOLON

    EQ          shift, and go to state 286
    SEMICOLON   shift, and go to state 287
    COLON       shift, and go to state 288
    OPEN_BRACE  shift, and go to state 289
    FINAL       shift, and go to state 290
    TRY         shift, and go to state 291
    REQUIRES    shift, and go to state 292
    OVERRIDE    shift, and go to state 293

    compound-statement  go to state 294
    ctor-initializer    go to state 295
    function-body       go to state 296
    function-try-block  go to state 297
    requires-clause     go to state 298
    virt-specifier      go to state 299
    virt-specifier-seq  go to state 300


State 75

  721 noptr-declarator: declarator-id •
  722                 | declarator-id • attribute-specifier-seq

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    OPEN_SQUARE  [reduce using rule 721 (noptr-declarator)]
    $default     reduce using rule 721 (noptr-declarator)

    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 301


State 76

  658 nested-name-specifier: decltype-specifier • SCOPE
  988 simple-type-specifier: decltype-specifier •

    SCOPE  shift, and go to state 302

    SCOPE     [reduce using rule 988 (simple-type-specifier)]
    $default  reduce using rule 988 (simple-type-specifier)


State 77

  214 declaration: deduction-guide •

    $default  reduce using rule 214 (declaration)


State 78

  199 decl-specifier: defining-type-specifier •

    $default  reduce using rule 199 (decl-specifier)


State 79

  271 elaborated-type-specifier: elaborated-enum-specifier •

    $default  reduce using rule 271 (elaborated-type-specifier)


State 80

  1104 type-specifier: elaborated-type-specifier •

    $default  reduce using rule 1104 (type-specifier)


State 81

  220 declaration: empty-declaration •

    $default  reduce using rule 220 (declaration)


State 82

  295 enum-specifier: enum-head • OPEN_BRACE CLOSE_BRACE
  296               | enum-head • OPEN_BRACE enumerator-list CLOSE_BRACE
  297               | enum-head • OPEN_BRACE enumerator-list COMMA CLOSE_BRACE

    OPEN_BRACE  shift, and go to state 303


State 83

  281 enum-head: enum-key •
  282          | enum-key • attribute-specifier-seq
  283          | enum-key • enum-head-name
  284          | enum-key • attribute-specifier-seq enum-head-name
  285          | enum-key • enum-base
  286          | enum-key • attribute-specifier-seq enum-base
  287          | enum-key • enum-head-name enum-base
  288          | enum-key • attribute-specifier-seq enum-head-name enum-base
  751 opaque-enum-declaration: enum-key • enum-head-name SEMICOLON
  752                        | enum-key • attribute-specifier-seq enum-head-name SEMICOLON
  753                        | enum-key • enum-head-name enum-base SEMICOLON
  754                        | enum-key • attribute-specifier-seq enum-head-name enum-base SEMICOLON

    IDENTIFIER   shift, and go to state 304
    ALIGNAS      shift, and go to state 4
    SCOPE        shift, and go to state 9
    OPEN_SQUARE  shift, and go to state 10
    COLON        shift, and go to state 305
    DECLTYPE     shift, and go to state 134

    $default  reduce using rule 281 (enum-head)

    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 306
    class-name               go to state 65
    decltype-specifier       go to state 138
    enum-base                go to state 307
    enum-head-name           go to state 308
    enum-name                go to state 84
    namespace-alias          go to state 99
    namespace-name           go to state 102
    nested-name-specifier    go to state 309
    simple-template-id       go to state 141
    template-name            go to state 142
    type-name                go to state 143
    typedef-name             go to state 126


State 84

  1079 type-name: enum-name •

    $default  reduce using rule 1079 (type-name)


State 85

  237 defining-type-specifier: enum-specifier •

    $default  reduce using rule 237 (defining-type-specifier)


State 86

  215 declaration: explicit-instantiation •

    $default  reduce using rule 215 (declaration)


State 87

  216 declaration: explicit-specialization •

    $default  reduce using rule 216 (declaration)


State 88

  231 deduction-guide: explicit-specifier • template-name OPEN_PAREN parameter-declaration-clause CLOSE_PAREN DEREF simple-template-id SEMICOLON
  408 function-specifier: explicit-specifier •

    IDENTIFIER  shift, and go to state 310

    IDENTIFIER  [reduce using rule 408 (function-specifier)]
    $default    reduce using rule 408 (function-specifier)

    template-name  go to state 311


State 89

  217 declaration: export-declaration •

    $default  reduce using rule 217 (declaration)


State 90

  212 declaration: function-definition •

    $default  reduce using rule 212 (declaration)


State 91

  200 decl-specifier: function-specifier •

    $default  reduce using rule 200 (decl-specifier)


State 92

  1061 translation-unit: global-module-fragment • module-declaration
  1063                 | global-module-fragment • module-declaration declaration-seq
  1065                 | global-module-fragment • module-declaration private-module-fragment
  1067                 | global-module-fragment • module-declaration declaration-seq private-module-fragment

    EXPORT  shift, and go to state 312
    MODULE  shift, and go to state 313

    module-declaration  go to state 314


State 93

  229 declarator-id: id-expression •

    $default  reduce using rule 229 (declarator-id)


State 94

  218 declaration: linkage-specification •

    $default  reduce using rule 218 (declaration)


State 95

  1050 template-id: literal-operator-id • LESS GREATER
  1051            | literal-operator-id • LESS template-argument-list GREATER
  1143 unqualified-id: literal-operator-id •

    LESS  shift, and go to state 315

    LESS      [reduce using rule 1143 (unqualified-id)]
    $default  reduce using rule 1143 (unqualified-id)


State 96

  1062 translation-unit: module-declaration •
  1064                 | module-declaration • declaration-seq
  1066                 | module-declaration • private-module-fragment
  1068                 | module-declaration • declaration-seq private-module-fragment

    USING          shift, and go to state 1
    IDENTIFIER     shift, and go to state 2
    SEMICOLON      shift, and go to state 3
    ALIGNAS        shift, and go to state 4
    OPEN_PAREN     shift, and go to state 5
    ELLIPSIS       shift, and go to state 6
    AND            shift, and go to state 7
    ASM            shift, and go to state 8
    SCOPE          shift, and go to state 9
    OPEN_SQUARE    shift, and go to state 10
    VIRTUAL        shift, and go to state 11
    CLASS          shift, and go to state 12
    STRUCT         shift, and go to state 13
    UNION          shift, and go to state 14
    TEMPLATE       shift, and go to state 15
    AND_AND        shift, and go to state 16
    OPERATOR       shift, and go to state 17
    CONST          shift, and go to state 18
    VOLATILE       shift, and go to state 19
    FRIEND         shift, and go to state 20
    TYPEDEF        shift, and go to state 21
    CONSTEXPR      shift, and go to state 22
    CONSTEVAL      shift, and go to state 23
    CONSTINIT      shift, and go to state 24
    INLINE         shift, and go to state 25
    DECLTYPE       shift, and go to state 26
    ENUM           shift, and go to state 27
    EXTERN         shift, and go to state 28
    EXPLICIT       shift, and go to state 29
    EXPORT         shift, and go to state 157
    MULT           shift, and go to state 31
    MODULE         shift, and go to state 316
    IMPORT         shift, and go to state 33
    NAMESPACE      shift, and go to state 34
    COMPL          shift, and go to state 35
    AUTO           shift, and go to state 36
    CHAR           shift, and go to state 37
    CHAR8_T        shift, and go to state 38
    CHAR16_T       shift, and go to state 39
    CHAR32_T       shift, and go to state 40
    WCHAR_T        shift, and go to state 41
    BOOL           shift, and go to state 42
    SHORT          shift, and go to state 43
    INT            shift, and go to state 44
    LONG           shift, and go to state 45
    SIGNED         shift, and go to state 46
    UNSIGNED       shift, and go to state 47
    FLOAT          shift, and go to state 48
    DOUBLE         shift, and go to state 49
    VOID           shift, and go to state 50
    STATIC_ASSERT  shift, and go to state 51
    STATIC         shift, and go to state 52
    THREAD_LOCAL   shift, and go to state 53
    MUTABLE        shift, and go to state 54
    TYPENAME       shift, and go to state 55

    $default  reduce using rule 1062 (translation-unit)

    alias-declaration                go to state 56
    alignment-specifier              go to state 57
    asm-declaration                  go to state 58
    attribute-declaration            go to state 59
    attribute-specifier              go to state 60
    attribute-specifier-seq          go to state 61
    block-declaration                go to state 62
    class-head                       go to state 63
    class-key                        go to state 64
    class-name                       go to state 65
    class-specifier                  go to state 66
    concept-name                     go to state 67
    conversion-function-id           go to state 68
    cv-qualifier                     go to state 69
    decl-specifier                   go to state 70
    decl-specifier-seq               go to state 71
    declaration                      go to state 72
    declaration-seq                  go to state 317
    declarator                       go to state 74
    declarator-id                    go to state 75
    decltype-specifier               go to state 76
    deduction-guide                  go to state 77
    defining-type-specifier          go to state 78
    elaborated-enum-specifier        go to state 79
    elaborated-type-specifier        go to state 80
    empty-declaration                go to state 81
    enum-head                        go to state 82
    enum-key                         go to state 83
    enum-name                        go to state 84
    enum-specifier                   go to state 85
    explicit-instantiation           go to state 86
    explicit-specialization          go to state 87
    explicit-specifier               go to state 88
    export-declaration               go to state 89
    function-definition              go to state 90
    function-specifier               go to state 91
    id-expression                    go to state 93
    linkage-specification            go to state 94
    literal-operator-id              go to state 95
    module-import-declaration        go to state 97
    named-namespace-definition       go to state 98
    namespace-alias                  go to state 99
    namespace-alias-definition       go to state 100
    namespace-definition             go to state 101
    namespace-name                   go to state 102
    nested-name-specifier            go to state 103
    nested-namespace-definition      go to state 104
    nodeclspec-function-declaration  go to state 105
    noptr-declarator                 go to state 106
    opaque-enum-declaration          go to state 107
    operator-function-id             go to state 108
    placeholder-type-specifier       go to state 109
    private-module-fragment          go to state 318
    ptr-declarator                   go to state 110
    ptr-operator                     go to state 111
    qualified-id                     go to state 112
    simple-declaration               go to state 113
    simple-template-id               go to state 114
    simple-type-specifier            go to state 115
    static_assert-declaration        go to state 116
    storage-class-specifier          go to state 117
    template-declaration             go to state 118
    template-head                    go to state 119
    template-id                      go to state 120
    template-name                    go to state 121
    type-constraint                  go to state 123
    type-name                        go to state 124
    type-specifier                   go to state 125
    typedef-name                     go to state 126
    typename-specifier               go to state 127
    unnamed-namespace-definition     go to state 128
    unqualified-id                   go to state 129
    using-declaration                go to state 130
    using-directive                  go to state 131
    using-enum-declaration           go to state 132


State 97

  222 declaration: module-import-declaration •

    $default  reduce using rule 222 (declaration)


State 98

  650 namespace-definition: named-namespace-definition •

    $default  reduce using rule 650 (namespace-definition)


State 99

  654 namespace-name: namespace-alias •

    $default  reduce using rule 654 (namespace-name)


State 100

   97 block-declaration: namespace-alias-definition •

    $default  reduce using rule 97 (block-declaration)


State 101

  219 declaration: namespace-definition •

    $default  reduce using rule 219 (declaration)


State 102

  657 nested-name-specifier: namespace-name • SCOPE

    SCOPE  shift, and go to state 319


State 103

  659 nested-name-specifier: nested-name-specifier • IDENTIFIER SCOPE
  660                      | nested-name-specifier • simple-template-id SCOPE
  661                      | nested-name-specifier • TEMPLATE simple-template-id SCOPE
  901 ptr-operator: nested-name-specifier • MULT
  902             | nested-name-specifier • MULT attribute-specifier-seq
  903             | nested-name-specifier • MULT cv-qualifier-seq
  904             | nested-name-specifier • MULT attribute-specifier-seq cv-qualifier-seq
  909 qualified-id: nested-name-specifier • unqualified-id
  910             | nested-name-specifier • TEMPLATE unqualified-id
  985 simple-type-specifier: nested-name-specifier • type-name
  987                      | nested-name-specifier • TEMPLATE simple-template-id
  990                      | nested-name-specifier • template-name
  1070 type-constraint: nested-name-specifier • concept-name
  1072                | nested-name-specifier • concept-name LESS GREATER
  1074                | nested-name-specifier • concept-name LESS template-argument-list GREATER

    IDENTIFIER  shift, and go to state 320
    TEMPLATE    shift, and go to state 321
    OPERATOR    shift, and go to state 17
    MULT        shift, and go to state 322
    COMPL       shift, and go to state 35

    class-name              go to state 65
    concept-name            go to state 323
    conversion-function-id  go to state 68
    enum-name               go to state 84
    literal-operator-id     go to state 95
    operator-function-id    go to state 108
    simple-template-id      go to state 324
    template-id             go to state 120
    template-name           go to state 325
    type-name               go to state 326
    typedef-name            go to state 126
    unqualified-id          go to state 327


State 104

  652 namespace-definition: nested-namespace-definition •

    $default  reduce using rule 652 (namespace-definition)


State 105

  211 declaration: nodeclspec-function-declaration •

    $default  reduce using rule 211 (declaration)


State 106

  227 declarator: noptr-declarator • parameters-and-qualifiers trailing-return-type
  723 noptr-declarator: noptr-declarator • parameters-and-qualifiers
  724                 | noptr-declarator • OPEN_SQUARE CLOSE_SQUARE
  725                 | noptr-declarator • OPEN_SQUARE constant-expression CLOSE_SQUARE
  726                 | noptr-declarator • OPEN_SQUARE CLOSE_SQUARE attribute-specifier-seq
  727                 | noptr-declarator • OPEN_SQUARE constant-expression CLOSE_SQUARE attribute-specifier-seq
  891 ptr-declarator: noptr-declarator •

    OPEN_PAREN   shift, and go to state 328
    OPEN_SQUARE  shift, and go to state 329

    OPEN_PAREN  [reduce using rule 891 (ptr-declarator)]
    $default    reduce using rule 891 (ptr-declarator)

    parameters-and-qualifiers  go to state 330


State 107

  103 block-declaration: opaque-enum-declaration •

    $default  reduce using rule 103 (block-declaration)


State 108

  1048 template-id: operator-function-id • LESS GREATER
  1049            | operator-function-id • LESS template-argument-list GREATER
  1141 unqualified-id: operator-function-id •

    LESS  shift, and go to state 331

    LESS      [reduce using rule 1141 (unqualified-id)]
    $default  reduce using rule 1141 (unqualified-id)


State 109

  989 simple-type-specifier: placeholder-type-specifier •

    $default  reduce using rule 989 (simple-type-specifier)


State 110

  226 declarator: ptr-declarator •

    $default  reduce using rule 226 (declarator)


State 111

  892 ptr-declarator: ptr-operator • ptr-declarator

    IDENTIFIER  shift, and go to state 147
    OPEN_PAREN  shift, and go to state 5
    ELLIPSIS    shift, and go to state 6
    AND         shift, and go to state 7
    SCOPE       shift, and go to state 9
    AND_AND     shift, and go to state 16
    OPERATOR    shift, and go to state 17
    DECLTYPE    shift, and go to state 134
    MULT        shift, and go to state 31
    COMPL       shift, and go to state 35

    class-name              go to state 65
    conversion-function-id  go to state 68
    declarator-id           go to state 75
    decltype-specifier      go to state 138
    enum-name               go to state 84
    id-expression           go to state 93
    literal-operator-id     go to state 95
    namespace-alias         go to state 99
    namespace-name          go to state 102
    nested-name-specifier   go to state 148
    noptr-declarator        go to state 149
    operator-function-id    go to state 108
    ptr-declarator          go to state 332
    ptr-operator            go to state 111
    qualified-id            go to state 112
    simple-template-id      go to state 114
    template-id             go to state 120
    template-name           go to state 142
    type-name               go to state 143
    typedef-name            go to state 126
    unqualified-id          go to state 129


State 112

  460 id-expression: qualified-id •

    $default  reduce using rule 460 (id-expression)


State 113

   95 block-declaration: simple-declaration •

    $default  reduce using rule 95 (block-declaration)


State 114

  146 class-name: simple-template-id •
  1047 template-id: simple-template-id •
  1111 typedef-name: simple-template-id •

    PLUS           reduce using rule 1047 (template-id)
    MINUS          reduce using rule 1047 (template-id)
    USING          reduce using rule 1047 (template-id)
    IDENTIFIER     reduce using rule 146 (class-name)
    IDENTIFIER     [reduce using rule 1047 (template-id)]
    IDENTIFIER     [reduce using rule 1111 (typedef-name)]
    EQ             reduce using rule 146 (class-name)
    EQ             [reduce using rule 1047 (template-id)]
    EQ             [reduce using rule 1111 (typedef-name)]
    SEMICOLON      reduce using rule 146 (class-name)
    SEMICOLON      [reduce using rule 1047 (template-id)]
    SEMICOLON      [reduce using rule 1111 (typedef-name)]
    ALIGNAS        reduce using rule 146 (class-name)
    ALIGNAS        [reduce using rule 1047 (template-id)]
    ALIGNAS        [reduce using rule 1111 (typedef-name)]
    OPEN_PAREN     reduce using rule 146 (class-name)
    OPEN_PAREN     [reduce using rule 1047 (template-id)]
    OPEN_PAREN     [reduce using rule 1111 (typedef-name)]
    CLOSE_PAREN    reduce using rule 146 (class-name)
    CLOSE_PAREN    [reduce using rule 1047 (template-id)]
    CLOSE_PAREN    [reduce using rule 1111 (typedef-name)]
    ELLIPSIS       reduce using rule 146 (class-name)
    ELLIPSIS       [reduce using rule 1047 (template-id)]
    ELLIPSIS       [reduce using rule 1111 (typedef-name)]
    AND            reduce using rule 146 (class-name)
    AND            [reduce using rule 1047 (template-id)]
    AND            [reduce using rule 1111 (typedef-name)]
    ASM            reduce using rule 1047 (template-id)
    MULT_EQ        reduce using rule 1047 (template-id)
    DIV_EQ         reduce using rule 1047 (template-id)
    MOD_EQ         reduce using rule 1047 (template-id)
    PLUS_EQ        reduce using rule 1047 (template-id)
    MINUS_EQ       reduce using rule 1047 (template-id)
    RSHIFT_EQ      reduce using rule 1047 (template-id)
    LSHIFT_EQ      reduce using rule 1047 (template-id)
    AND_EQ         reduce using rule 1047 (template-id)
    XOR_EQ         reduce using rule 1047 (template-id)
    OR_EQ          reduce using rule 1047 (template-id)
    COMMA          reduce using rule 146 (class-name)
    COMMA          [reduce using rule 1047 (template-id)]
    COMMA          [reduce using rule 1111 (typedef-name)]
    SCOPE          reduce using rule 146 (class-name)
    SCOPE          [reduce using rule 1047 (template-id)]
    SCOPE          [reduce using rule 1111 (typedef-name)]
    OPEN_SQUARE    reduce using rule 146 (class-name)
    OPEN_SQUARE    [reduce using rule 1047 (template-id)]
    OPEN_SQUARE    [reduce using rule 1111 (typedef-name)]
    CLOSE_SQUARE   reduce using rule 1047 (template-id)
    COLON          reduce using rule 146 (class-name)
    COLON          [reduce using rule 1047 (template-id)]
    COLON          [reduce using rule 1111 (typedef-name)]
    OPEN_BRACE     reduce using rule 146 (class-name)
    OPEN_BRACE     [reduce using rule 1047 (template-id)]
    OPEN_BRACE     [reduce using rule 1111 (typedef-name)]
    CLOSE_BRACE    reduce using rule 1047 (template-id)
    VIRTUAL        reduce using rule 146 (class-name)
    VIRTUAL        [reduce using rule 1047 (template-id)]
    VIRTUAL        [reduce using rule 1111 (typedef-name)]
    CLASS          reduce using rule 146 (class-name)
    CLASS          [reduce using rule 1047 (template-id)]
    CLASS          [reduce using rule 1111 (typedef-name)]
    STRUCT         reduce using rule 146 (class-name)
    STRUCT         [reduce using rule 1047 (template-id)]
    STRUCT         [reduce using rule 1111 (typedef-name)]
    UNION          reduce using rule 146 (class-name)
    UNION          [reduce using rule 1047 (template-id)]
    UNION          [reduce using rule 1111 (typedef-name)]
    TEMPLATE       reduce using rule 1047 (template-id)
    FINAL          reduce using rule 1047 (template-id)
    SPACESHIP      reduce using rule 1047 (template-id)
    NOEXCEPT       reduce using rule 1047 (template-id)
    CONCEPT        reduce using rule 1047 (template-id)
    QUERY          reduce using rule 1047 (template-id)
    AND_AND        reduce using rule 146 (class-name)
    AND_AND        [reduce using rule 1047 (template-id)]
    AND_AND        [reduce using rule 1111 (typedef-name)]
    OR_OR          reduce using rule 1047 (template-id)
    OPERATOR       reduce using rule 146 (class-name)
    OPERATOR       [reduce using rule 1047 (template-id)]
    OPERATOR       [reduce using rule 1111 (typedef-name)]
    CONST          reduce using rule 146 (class-name)
    CONST          [reduce using rule 1047 (template-id)]
    CONST          [reduce using rule 1111 (typedef-name)]
    VOLATILE       reduce using rule 146 (class-name)
    VOLATILE       [reduce using rule 1047 (template-id)]
    VOLATILE       [reduce using rule 1111 (typedef-name)]
    FRIEND         reduce using rule 146 (class-name)
    FRIEND         [reduce using rule 1047 (template-id)]
    FRIEND         [reduce using rule 1111 (typedef-name)]
    TYPEDEF        reduce using rule 146 (class-name)
    TYPEDEF        [reduce using rule 1047 (template-id)]
    TYPEDEF        [reduce using rule 1111 (typedef-name)]
    CONSTEXPR      reduce using rule 146 (class-name)
    CONSTEXPR      [reduce using rule 1047 (template-id)]
    CONSTEXPR      [reduce using rule 1111 (typedef-name)]
    CONSTEVAL      reduce using rule 146 (class-name)
    CONSTEVAL      [reduce using rule 1047 (template-id)]
    CONSTEVAL      [reduce using rule 1111 (typedef-name)]
    CONSTINIT      reduce using rule 146 (class-name)
    CONSTINIT      [reduce using rule 1047 (template-id)]
    CONSTINIT      [reduce using rule 1111 (typedef-name)]
    INLINE         reduce using rule 146 (class-name)
    INLINE         [reduce using rule 1047 (template-id)]
    INLINE         [reduce using rule 1111 (typedef-name)]
    DECLTYPE       reduce using rule 146 (class-name)
    DECLTYPE       [reduce using rule 1047 (template-id)]
    DECLTYPE       [reduce using rule 1111 (typedef-name)]
    DEREF          reduce using rule 1047 (template-id)
    DOT            reduce using rule 1047 (template-id)
    ENUM           reduce using rule 146 (class-name)
    ENUM           [reduce using rule 1047 (template-id)]
    ENUM           [reduce using rule 1111 (typedef-name)]
    EQ_EQ          reduce using rule 1047 (template-id)
    NOT_EQ         reduce using rule 1047 (template-id)
    XOR            reduce using rule 1047 (template-id)
    EXTERN         reduce using rule 146 (class-name)
    EXTERN         [reduce using rule 1047 (template-id)]
    EXTERN         [reduce using rule 1111 (typedef-name)]
    LESS           reduce using rule 1047 (template-id)
    GREATER        reduce using rule 146 (class-name)
    GREATER        [reduce using rule 1047 (template-id)]
    GREATER        [reduce using rule 1111 (typedef-name)]
    EXPLICIT       reduce using rule 146 (class-name)
    EXPLICIT       [reduce using rule 1047 (template-id)]
    EXPLICIT       [reduce using rule 1111 (typedef-name)]
    EXPORT         reduce using rule 1047 (template-id)
    MULT           reduce using rule 146 (class-name)
    MULT           [reduce using rule 1047 (template-id)]
    MULT           [reduce using rule 1111 (typedef-name)]
    DIV            reduce using rule 1047 (template-id)
    MOD            reduce using rule 1047 (template-id)
    OR             reduce using rule 1047 (template-id)
    LSHIFT         reduce using rule 1047 (template-id)
    RSHIFT         reduce using rule 1047 (template-id)
    LESS_EQ        reduce using rule 1047 (template-id)
    GREATER_EQ     reduce using rule 1047 (template-id)
    DOT_STAR       reduce using rule 1047 (template-id)
    DEREF_STAR     reduce using rule 1047 (template-id)
    TRY            reduce using rule 1047 (template-id)
    IMPORT         reduce using rule 1047 (template-id)
    NAMESPACE      reduce using rule 1047 (template-id)
    REQUIRES       reduce using rule 1047 (template-id)
    COMPL          reduce using rule 146 (class-name)
    COMPL          [reduce using rule 1047 (template-id)]
    COMPL          [reduce using rule 1111 (typedef-name)]
    PLUS_PLUS      reduce using rule 1047 (template-id)
    MINUS_MINUS    reduce using rule 1047 (template-id)
    AUTO           reduce using rule 146 (class-name)
    AUTO           [reduce using rule 1047 (template-id)]
    AUTO           [reduce using rule 1111 (typedef-name)]
    CHAR           reduce using rule 146 (class-name)
    CHAR           [reduce using rule 1047 (template-id)]
    CHAR           [reduce using rule 1111 (typedef-name)]
    CHAR8_T        reduce using rule 146 (class-name)
    CHAR8_T        [reduce using rule 1047 (template-id)]
    CHAR8_T        [reduce using rule 1111 (typedef-name)]
    CHAR16_T       reduce using rule 146 (class-name)
    CHAR16_T       [reduce using rule 1047 (template-id)]
    CHAR16_T       [reduce using rule 1111 (typedef-name)]
    CHAR32_T       reduce using rule 146 (class-name)
    CHAR32_T       [reduce using rule 1047 (template-id)]
    CHAR32_T       [reduce using rule 1111 (typedef-name)]
    WCHAR_T        reduce using rule 146 (class-name)
    WCHAR_T        [reduce using rule 1047 (template-id)]
    WCHAR_T        [reduce using rule 1111 (typedef-name)]
    BOOL           reduce using rule 146 (class-name)
    BOOL           [reduce using rule 1047 (template-id)]
    BOOL           [reduce using rule 1111 (typedef-name)]
    SHORT          reduce using rule 146 (class-name)
    SHORT          [reduce using rule 1047 (template-id)]
    SHORT          [reduce using rule 1111 (typedef-name)]
    INT            reduce using rule 146 (class-name)
    INT            [reduce using rule 1047 (template-id)]
    INT            [reduce using rule 1111 (typedef-name)]
    LONG           reduce using rule 146 (class-name)
    LONG           [reduce using rule 1047 (template-id)]
    LONG           [reduce using rule 1111 (typedef-name)]
    SIGNED         reduce using rule 146 (class-name)
    SIGNED         [reduce using rule 1047 (template-id)]
    SIGNED         [reduce using rule 1111 (typedef-name)]
    UNSIGNED       reduce using rule 146 (class-name)
    UNSIGNED       [reduce using rule 1047 (template-id)]
    UNSIGNED       [reduce using rule 1111 (typedef-name)]
    FLOAT          reduce using rule 146 (class-name)
    FLOAT          [reduce using rule 1047 (template-id)]
    FLOAT          [reduce using rule 1111 (typedef-name)]
    DOUBLE         reduce using rule 146 (class-name)
    DOUBLE         [reduce using rule 1047 (template-id)]
    DOUBLE         [reduce using rule 1111 (typedef-name)]
    VOID           reduce using rule 146 (class-name)
    VOID           [reduce using rule 1047 (template-id)]
    VOID           [reduce using rule 1111 (typedef-name)]
    STATIC_ASSERT  reduce using rule 1047 (template-id)
    STATIC         reduce using rule 146 (class-name)
    STATIC         [reduce using rule 1047 (template-id)]
    STATIC         [reduce using rule 1111 (typedef-name)]
    THREAD_LOCAL   reduce using rule 146 (class-name)
    THREAD_LOCAL   [reduce using rule 1047 (template-id)]
    THREAD_LOCAL   [reduce using rule 1111 (typedef-name)]
    MUTABLE        reduce using rule 146 (class-name)
    MUTABLE        [reduce using rule 1047 (template-id)]
    MUTABLE        [reduce using rule 1111 (typedef-name)]
    TYPENAME       reduce using rule 146 (class-name)
    TYPENAME       [reduce using rule 1047 (template-id)]
    TYPENAME       [reduce using rule 1111 (typedef-name)]
    OVERRIDE       reduce using rule 1047 (template-id)
    $default       reduce using rule 146 (class-name)


State 115

  1103 type-specifier: simple-type-specifier •

    $default  reduce using rule 1103 (type-specifier)


State 116

  101 block-declaration: static_assert-declaration •

    $default  reduce using rule 101 (block-declaration)


State 117

  198 decl-specifier: storage-class-specifier •

    $default  reduce using rule 198 (decl-specifier)


State 118

  213 declaration: template-declaration •

    $default  reduce using rule 213 (declaration)


State 119

  1043 template-declaration: template-head • declaration
  1044                     | template-head • concept-definition

    USING          shift, and go to state 1
    IDENTIFIER     shift, and go to state 2
    SEMICOLON      shift, and go to state 3
    ALIGNAS        shift, and go to state 4
    OPEN_PAREN     shift, and go to state 5
    ELLIPSIS       shift, and go to state 6
    AND            shift, and go to state 7
    ASM            shift, and go to state 8
    SCOPE          shift, and go to state 9
    OPEN_SQUARE    shift, and go to state 10
    VIRTUAL        shift, and go to state 11
    CLASS          shift, and go to state 12
    STRUCT         shift, and go to state 13
    UNION          shift, and go to state 14
    TEMPLATE       shift, and go to state 15
    CONCEPT        shift, and go to state 333
    AND_AND        shift, and go to state 16
    OPERATOR       shift, and go to state 17
    CONST          shift, and go to state 18
    VOLATILE       shift, and go to state 19
    FRIEND         shift, and go to state 20
    TYPEDEF        shift, and go to state 21
    CONSTEXPR      shift, and go to state 22
    CONSTEVAL      shift, and go to state 23
    CONSTINIT      shift, and go to state 24
    INLINE         shift, and go to state 25
    DECLTYPE       shift, and go to state 26
    ENUM           shift, and go to state 27
    EXTERN         shift, and go to state 28
    EXPLICIT       shift, and go to state 29
    EXPORT         shift, and go to state 157
    MULT           shift, and go to state 31
    IMPORT         shift, and go to state 33
    NAMESPACE      shift, and go to state 34
    COMPL          shift, and go to state 35
    AUTO           shift, and go to state 36
    CHAR           shift, and go to state 37
    CHAR8_T        shift, and go to state 38
    CHAR16_T       shift, and go to state 39
    CHAR32_T       shift, and go to state 40
    WCHAR_T        shift, and go to state 41
    BOOL           shift, and go to state 42
    SHORT          shift, and go to state 43
    INT            shift, and go to state 44
    LONG           shift, and go to state 45
    SIGNED         shift, and go to state 46
    UNSIGNED       shift, and go to state 47
    FLOAT          shift, and go to state 48
    DOUBLE         shift, and go to state 49
    VOID           shift, and go to state 50
    STATIC_ASSERT  shift, and go to state 51
    STATIC         shift, and go to state 52
    THREAD_LOCAL   shift, and go to state 53
    MUTABLE        shift, and go to state 54
    TYPENAME       shift, and go to state 55

    alias-declaration                go to state 56
    alignment-specifier              go to state 57
    asm-declaration                  go to state 58
    attribute-declaration            go to state 59
    attribute-specifier              go to state 60
    attribute-specifier-seq          go to state 61
    block-declaration                go to state 62
    class-head                       go to state 63
    class-key                        go to state 64
    class-name                       go to state 65
    class-specifier                  go to state 66
    concept-definition               go to state 334
    concept-name                     go to state 67
    conversion-function-id           go to state 68
    cv-qualifier                     go to state 69
    decl-specifier                   go to state 70
    decl-specifier-seq               go to state 71
    declaration                      go to state 335
    declarator                       go to state 74
    declarator-id                    go to state 75
    decltype-specifier               go to state 76
    deduction-guide                  go to state 77
    defining-type-specifier          go to state 78
    elaborated-enum-specifier        go to state 79
    elaborated-type-specifier        go to state 80
    empty-declaration                go to state 81
    enum-head                        go to state 82
    enum-key                         go to state 83
    enum-name                        go to state 84
    enum-specifier                   go to state 85
    explicit-instantiation           go to state 86
    explicit-specialization          go to state 87
    explicit-specifier               go to state 88
    export-declaration               go to state 89
    function-definition              go to state 90
    function-specifier               go to state 91
    id-expression                    go to state 93
    linkage-specification            go to state 94
    literal-operator-id              go to state 95
    module-import-declaration        go to state 97
    named-namespace-definition       go to state 98
    namespace-alias                  go to state 99
    namespace-alias-definition       go to state 100
    namespace-definition             go to state 101
    namespace-name                   go to state 102
    nested-name-specifier            go to state 103
    nested-namespace-definition      go to state 104
    nodeclspec-function-declaration  go to state 105
    noptr-declarator                 go to state 106
    opaque-enum-declaration          go to state 107
    operator-function-id             go to state 108
    placeholder-type-specifier       go to state 109
    ptr-declarator                   go to state 110
    ptr-operator                     go to state 111
    qualified-id                     go to state 112
    simple-declaration               go to state 113
    simple-template-id               go to state 114
    simple-type-specifier            go to state 115
    static_assert-declaration        go to state 116
    storage-class-specifier          go to state 117
    template-declaration             go to state 118
    template-head                    go to state 119
    template-id                      go to state 120
    template-name                    go to state 121
    type-constraint                  go to state 123
    type-name                        go to state 124
    type-specifier                   go to state 125
    typedef-name                     go to state 126
    typename-specifier               go to state 127
    unnamed-namespace-definition     go to state 128
    unqualified-id                   go to state 129
    using-declaration                go to state 130
    using-directive                  go to state 131
    using-enum-declaration           go to state 132


State 120

  1146 unqualified-id: template-id •

    $default  reduce using rule 1146 (unqualified-id)


State 121

  232 deduction-guide: template-name • OPEN_PAREN parameter-declaration-clause CLOSE_PAREN DEREF simple-template-id SEMICOLON
  983 simple-template-id: template-name • LESS GREATER
  984                   | template-name • LESS template-argument-list GREATER
  991 simple-type-specifier: template-name •

    OPEN_PAREN  shift, and go to state 336
    LESS        shift, and go to state 337

    OPEN_PAREN  [reduce using rule 991 (simple-type-specifier)]
    $default    reduce using rule 991 (simple-type-specifier)


State 122

    0 $accept: translation-unit • $end

    $end  shift, and go to state 338


State 123

  848 placeholder-type-specifier: type-constraint • AUTO
  850                           | type-constraint • DECLTYPE OPEN_PAREN AUTO CLOSE_PAREN

    DECLTYPE  shift, and go to state 339
    AUTO      shift, and go to state 340


State 124

  656 nested-name-specifier: type-name • SCOPE
  986 simple-type-specifier: type-name •

    SCOPE  shift, and go to state 341

    SCOPE     [reduce using rule 986 (simple-type-specifier)]
    $default  reduce using rule 986 (simple-type-specifier)


State 125

  235 defining-type-specifier: type-specifier •

    $default  reduce using rule 235 (defining-type-specifier)


State 126

  1080 type-name: typedef-name •

    $default  reduce using rule 1080 (type-name)


State 127

  1105 type-specifier: typename-specifier •

    $default  reduce using rule 1105 (type-specifier)


State 128

  651 namespace-definition: unnamed-namespace-definition •

    $default  reduce using rule 651 (namespace-definition)


State 129

  459 id-expression: unqualified-id •

    $default  reduce using rule 459 (id-expression)


State 130

   98 block-declaration: using-declaration •

    $default  reduce using rule 98 (block-declaration)


State 131

  100 block-declaration: using-directive •

    $default  reduce using rule 100 (block-declaration)


State 132

   99 block-declaration: using-enum-declaration •

    $default  reduce using rule 99 (block-declaration)


State 133

   13 alias-declaration: USING IDENTIFIER • EQ defining-type-id SEMICOLON
   14                  | USING IDENTIFIER • attribute-specifier-seq EQ defining-type-id SEMICOLON
  145 class-name: IDENTIFIER •
  294 enum-name: IDENTIFIER •
  647 namespace-alias: IDENTIFIER •
  653 namespace-name: IDENTIFIER •
  1052 template-name: IDENTIFIER •
  1110 typedef-name: IDENTIFIER •

    EQ           shift, and go to state 342
    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    SCOPE     reduce using rule 145 (class-name)
    SCOPE     [reduce using rule 294 (enum-name)]
    SCOPE     [reduce using rule 647 (namespace-alias)]
    SCOPE     [reduce using rule 653 (namespace-name)]
    SCOPE     [reduce using rule 1110 (typedef-name)]
    LESS      reduce using rule 1052 (template-name)
    $default  reduce using rule 145 (class-name)

    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 343


State 134

  230 decltype-specifier: DECLTYPE • OPEN_PAREN expression CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 344


State 135

  262 elaborated-enum-specifier: ENUM • IDENTIFIER
  263                          | ENUM • nested-name-specifier IDENTIFIER

    IDENTIFIER  shift, and go to state 221
    SCOPE       shift, and go to state 9
    DECLTYPE    shift, and go to state 134

    class-name             go to state 65
    decltype-specifier     go to state 138
    enum-name              go to state 84
    namespace-alias        go to state 99
    namespace-name         go to state 102
    nested-name-specifier  go to state 224
    simple-template-id     go to state 141
    template-name          go to state 142
    type-name              go to state 143
    typedef-name           go to state 126


State 136

  1172 using-directive: USING NAMESPACE • namespace-name SEMICOLON
  1174                | USING NAMESPACE • nested-name-specifier namespace-name SEMICOLON

    IDENTIFIER  shift, and go to state 253
    SCOPE       shift, and go to state 9
    DECLTYPE    shift, and go to state 134

    class-name             go to state 65
    decltype-specifier     go to state 138
    enum-name              go to state 84
    namespace-alias        go to state 99
    namespace-name         go to state 345
    nested-name-specifier  go to state 346
    simple-template-id     go to state 141
    template-name          go to state 142
    type-name              go to state 143
    typedef-name           go to state 126


State 137

  1165 using-declarator: TYPENAME • nested-name-specifier unqualified-id

    IDENTIFIER  shift, and go to state 253
    SCOPE       shift, and go to state 9
    DECLTYPE    shift, and go to state 134

    class-name             go to state 65
    decltype-specifier     go to state 138
    enum-name              go to state 84
    namespace-alias        go to state 99
    namespace-name         go to state 102
    nested-name-specifier  go to state 347
    simple-template-id     go to state 141
    template-name          go to state 142
    type-name              go to state 143
    typedef-name           go to state 126


State 138

  658 nested-name-specifier: decltype-specifier • SCOPE

    SCOPE  shift, and go to state 302


State 139

  1175 using-enum-declaration: USING elaborated-enum-specifier • SEMICOLON

    SEMICOLON  shift, and go to state 348


State 140

  659 nested-name-specifier: nested-name-specifier • IDENTIFIER SCOPE
  660                      | nested-name-specifier • simple-template-id SCOPE
  661                      | nested-name-specifier • TEMPLATE simple-template-id SCOPE
  1166 using-declarator: nested-name-specifier • unqualified-id

    IDENTIFIER  shift, and go to state 349
    TEMPLATE    shift, and go to state 350
    OPERATOR    shift, and go to state 17
    COMPL       shift, and go to state 35

    conversion-function-id  go to state 68
    literal-operator-id     go to state 95
    operator-function-id    go to state 108
    simple-template-id      go to state 351
    template-id             go to state 120
    template-name           go to state 142
    unqualified-id          go to state 352


State 141

  146 class-name: simple-template-id •
  1111 typedef-name: simple-template-id •

    PLUS           reduce using rule 146 (class-name)
    PLUS           [reduce using rule 1111 (typedef-name)]
    MINUS          reduce using rule 146 (class-name)
    MINUS          [reduce using rule 1111 (typedef-name)]
    USING          reduce using rule 146 (class-name)
    USING          [reduce using rule 1111 (typedef-name)]
    IDENTIFIER     reduce using rule 146 (class-name)
    IDENTIFIER     [reduce using rule 1111 (typedef-name)]
    EQ             reduce using rule 146 (class-name)
    EQ             [reduce using rule 1111 (typedef-name)]
    SEMICOLON      reduce using rule 146 (class-name)
    SEMICOLON      [reduce using rule 1111 (typedef-name)]
    ALIGNAS        reduce using rule 146 (class-name)
    ALIGNAS        [reduce using rule 1111 (typedef-name)]
    OPEN_PAREN     reduce using rule 146 (class-name)
    OPEN_PAREN     [reduce using rule 1111 (typedef-name)]
    CLOSE_PAREN    reduce using rule 146 (class-name)
    CLOSE_PAREN    [reduce using rule 1111 (typedef-name)]
    ELLIPSIS       reduce using rule 146 (class-name)
    ELLIPSIS       [reduce using rule 1111 (typedef-name)]
    AND            reduce using rule 146 (class-name)
    AND            [reduce using rule 1111 (typedef-name)]
    ASM            reduce using rule 146 (class-name)
    ASM            [reduce using rule 1111 (typedef-name)]
    MULT_EQ        reduce using rule 146 (class-name)
    MULT_EQ        [reduce using rule 1111 (typedef-name)]
    DIV_EQ         reduce using rule 146 (class-name)
    DIV_EQ         [reduce using rule 1111 (typedef-name)]
    MOD_EQ         reduce using rule 146 (class-name)
    MOD_EQ         [reduce using rule 1111 (typedef-name)]
    PLUS_EQ        reduce using rule 146 (class-name)
    PLUS_EQ        [reduce using rule 1111 (typedef-name)]
    MINUS_EQ       reduce using rule 146 (class-name)
    MINUS_EQ       [reduce using rule 1111 (typedef-name)]
    RSHIFT_EQ      reduce using rule 146 (class-name)
    RSHIFT_EQ      [reduce using rule 1111 (typedef-name)]
    LSHIFT_EQ      reduce using rule 146 (class-name)
    LSHIFT_EQ      [reduce using rule 1111 (typedef-name)]
    AND_EQ         reduce using rule 146 (class-name)
    AND_EQ         [reduce using rule 1111 (typedef-name)]
    XOR_EQ         reduce using rule 146 (class-name)
    XOR_EQ         [reduce using rule 1111 (typedef-name)]
    OR_EQ          reduce using rule 146 (class-name)
    OR_EQ          [reduce using rule 1111 (typedef-name)]
    COMMA          reduce using rule 146 (class-name)
    COMMA          [reduce using rule 1111 (typedef-name)]
    SCOPE          reduce using rule 146 (class-name)
    SCOPE          [reduce using rule 1111 (typedef-name)]
    OPEN_SQUARE    reduce using rule 146 (class-name)
    OPEN_SQUARE    [reduce using rule 1111 (typedef-name)]
    CLOSE_SQUARE   reduce using rule 146 (class-name)
    CLOSE_SQUARE   [reduce using rule 1111 (typedef-name)]
    COLON          reduce using rule 146 (class-name)
    COLON          [reduce using rule 1111 (typedef-name)]
    OPEN_BRACE     reduce using rule 146 (class-name)
    OPEN_BRACE     [reduce using rule 1111 (typedef-name)]
    CLOSE_BRACE    reduce using rule 146 (class-name)
    CLOSE_BRACE    [reduce using rule 1111 (typedef-name)]
    VIRTUAL        reduce using rule 146 (class-name)
    VIRTUAL        [reduce using rule 1111 (typedef-name)]
    CLASS          reduce using rule 146 (class-name)
    CLASS          [reduce using rule 1111 (typedef-name)]
    STRUCT         reduce using rule 146 (class-name)
    STRUCT         [reduce using rule 1111 (typedef-name)]
    UNION          reduce using rule 146 (class-name)
    UNION          [reduce using rule 1111 (typedef-name)]
    TEMPLATE       reduce using rule 146 (class-name)
    TEMPLATE       [reduce using rule 1111 (typedef-name)]
    FINAL          reduce using rule 146 (class-name)
    FINAL          [reduce using rule 1111 (typedef-name)]
    SPACESHIP      reduce using rule 146 (class-name)
    SPACESHIP      [reduce using rule 1111 (typedef-name)]
    NOEXCEPT       reduce using rule 146 (class-name)
    NOEXCEPT       [reduce using rule 1111 (typedef-name)]
    CONCEPT        reduce using rule 146 (class-name)
    CONCEPT        [reduce using rule 1111 (typedef-name)]
    QUERY          reduce using rule 146 (class-name)
    QUERY          [reduce using rule 1111 (typedef-name)]
    AND_AND        reduce using rule 146 (class-name)
    AND_AND        [reduce using rule 1111 (typedef-name)]
    OR_OR          reduce using rule 146 (class-name)
    OR_OR          [reduce using rule 1111 (typedef-name)]
    OPERATOR       reduce using rule 146 (class-name)
    OPERATOR       [reduce using rule 1111 (typedef-name)]
    CONST          reduce using rule 146 (class-name)
    CONST          [reduce using rule 1111 (typedef-name)]
    VOLATILE       reduce using rule 146 (class-name)
    VOLATILE       [reduce using rule 1111 (typedef-name)]
    FRIEND         reduce using rule 146 (class-name)
    FRIEND         [reduce using rule 1111 (typedef-name)]
    TYPEDEF        reduce using rule 146 (class-name)
    TYPEDEF        [reduce using rule 1111 (typedef-name)]
    CONSTEXPR      reduce using rule 146 (class-name)
    CONSTEXPR      [reduce using rule 1111 (typedef-name)]
    CONSTEVAL      reduce using rule 146 (class-name)
    CONSTEVAL      [reduce using rule 1111 (typedef-name)]
    CONSTINIT      reduce using rule 146 (class-name)
    CONSTINIT      [reduce using rule 1111 (typedef-name)]
    INLINE         reduce using rule 146 (class-name)
    INLINE         [reduce using rule 1111 (typedef-name)]
    DECLTYPE       reduce using rule 146 (class-name)
    DECLTYPE       [reduce using rule 1111 (typedef-name)]
    DEREF          reduce using rule 146 (class-name)
    DEREF          [reduce using rule 1111 (typedef-name)]
    DOT            reduce using rule 146 (class-name)
    DOT            [reduce using rule 1111 (typedef-name)]
    ENUM           reduce using rule 146 (class-name)
    ENUM           [reduce using rule 1111 (typedef-name)]
    EQ_EQ          reduce using rule 146 (class-name)
    EQ_EQ          [reduce using rule 1111 (typedef-name)]
    NOT_EQ         reduce using rule 146 (class-name)
    NOT_EQ         [reduce using rule 1111 (typedef-name)]
    XOR            reduce using rule 146 (class-name)
    XOR            [reduce using rule 1111 (typedef-name)]
    EXTERN         reduce using rule 146 (class-name)
    EXTERN         [reduce using rule 1111 (typedef-name)]
    LESS           reduce using rule 146 (class-name)
    LESS           [reduce using rule 1111 (typedef-name)]
    GREATER        reduce using rule 146 (class-name)
    GREATER        [reduce using rule 1111 (typedef-name)]
    EXPLICIT       reduce using rule 146 (class-name)
    EXPLICIT       [reduce using rule 1111 (typedef-name)]
    EXPORT         reduce using rule 146 (class-name)
    EXPORT         [reduce using rule 1111 (typedef-name)]
    MULT           reduce using rule 146 (class-name)
    MULT           [reduce using rule 1111 (typedef-name)]
    DIV            reduce using rule 146 (class-name)
    DIV            [reduce using rule 1111 (typedef-name)]
    MOD            reduce using rule 146 (class-name)
    MOD            [reduce using rule 1111 (typedef-name)]
    OR             reduce using rule 146 (class-name)
    OR             [reduce using rule 1111 (typedef-name)]
    LSHIFT         reduce using rule 146 (class-name)
    LSHIFT         [reduce using rule 1111 (typedef-name)]
    RSHIFT         reduce using rule 146 (class-name)
    RSHIFT         [reduce using rule 1111 (typedef-name)]
    LESS_EQ        reduce using rule 146 (class-name)
    LESS_EQ        [reduce using rule 1111 (typedef-name)]
    GREATER_EQ     reduce using rule 146 (class-name)
    GREATER_EQ     [reduce using rule 1111 (typedef-name)]
    DOT_STAR       reduce using rule 146 (class-name)
    DOT_STAR       [reduce using rule 1111 (typedef-name)]
    DEREF_STAR     reduce using rule 146 (class-name)
    DEREF_STAR     [reduce using rule 1111 (typedef-name)]
    TRY            reduce using rule 146 (class-name)
    TRY            [reduce using rule 1111 (typedef-name)]
    IMPORT         reduce using rule 146 (class-name)
    IMPORT         [reduce using rule 1111 (typedef-name)]
    NAMESPACE      reduce using rule 146 (class-name)
    NAMESPACE      [reduce using rule 1111 (typedef-name)]
    REQUIRES       reduce using rule 146 (class-name)
    REQUIRES       [reduce using rule 1111 (typedef-name)]
    COMPL          reduce using rule 146 (class-name)
    COMPL          [reduce using rule 1111 (typedef-name)]
    PLUS_PLUS      reduce using rule 146 (class-name)
    PLUS_PLUS      [reduce using rule 1111 (typedef-name)]
    MINUS_MINUS    reduce using rule 146 (class-name)
    MINUS_MINUS    [reduce using rule 1111 (typedef-name)]
    AUTO           reduce using rule 146 (class-name)
    AUTO           [reduce using rule 1111 (typedef-name)]
    CHAR           reduce using rule 146 (class-name)
    CHAR           [reduce using rule 1111 (typedef-name)]
    CHAR8_T        reduce using rule 146 (class-name)
    CHAR8_T        [reduce using rule 1111 (typedef-name)]
    CHAR16_T       reduce using rule 146 (class-name)
    CHAR16_T       [reduce using rule 1111 (typedef-name)]
    CHAR32_T       reduce using rule 146 (class-name)
    CHAR32_T       [reduce using rule 1111 (typedef-name)]
    WCHAR_T        reduce using rule 146 (class-name)
    WCHAR_T        [reduce using rule 1111 (typedef-name)]
    BOOL           reduce using rule 146 (class-name)
    BOOL           [reduce using rule 1111 (typedef-name)]
    SHORT          reduce using rule 146 (class-name)
    SHORT          [reduce using rule 1111 (typedef-name)]
    INT            reduce using rule 146 (class-name)
    INT            [reduce using rule 1111 (typedef-name)]
    LONG           reduce using rule 146 (class-name)
    LONG           [reduce using rule 1111 (typedef-name)]
    SIGNED         reduce using rule 146 (class-name)
    SIGNED         [reduce using rule 1111 (typedef-name)]
    UNSIGNED       reduce using rule 146 (class-name)
    UNSIGNED       [reduce using rule 1111 (typedef-name)]
    FLOAT          reduce using rule 146 (class-name)
    FLOAT          [reduce using rule 1111 (typedef-name)]
    DOUBLE         reduce using rule 146 (class-name)
    DOUBLE         [reduce using rule 1111 (typedef-name)]
    VOID           reduce using rule 146 (class-name)
    VOID           [reduce using rule 1111 (typedef-name)]
    STATIC_ASSERT  reduce using rule 146 (class-name)
    STATIC_ASSERT  [reduce using rule 1111 (typedef-name)]
    STATIC         reduce using rule 146 (class-name)
    STATIC         [reduce using rule 1111 (typedef-name)]
    THREAD_LOCAL   reduce using rule 146 (class-name)
    THREAD_LOCAL   [reduce using rule 1111 (typedef-name)]
    MUTABLE        reduce using rule 146 (class-name)
    MUTABLE        [reduce using rule 1111 (typedef-name)]
    TYPENAME       reduce using rule 146 (class-name)
    TYPENAME       [reduce using rule 1111 (typedef-name)]
    OVERRIDE       reduce using rule 146 (class-name)
    OVERRIDE       [reduce using rule 1111 (typedef-name)]
    $default       reduce using rule 146 (class-name)


State 142

  983 simple-template-id: template-name • LESS GREATER
  984                   | template-name • LESS template-argument-list GREATER

    LESS  shift, and go to state 337


State 143

  656 nested-name-specifier: type-name • SCOPE

    SCOPE  shift, and go to state 341


State 144

  1167 using-declarator-list: using-declarator •
  1168                      | using-declarator • ELLIPSIS

    ELLIPSIS  shift, and go to state 353

    $default  reduce using rule 1167 (using-declarator-list)


State 145

  1164 using-declaration: USING using-declarator-list • SEMICOLON
  1169 using-declarator-list: using-declarator-list • COMMA using-declarator
  1170                      | using-declarator-list • COMMA using-declarator ELLIPSIS

    SEMICOLON  shift, and go to state 354
    COMMA      shift, and go to state 355


State 146

   15 alignment-specifier: ALIGNAS OPEN_PAREN • type-id CLOSE_PAREN
   16                    | ALIGNAS OPEN_PAREN • type-id ELLIPSIS CLOSE_PAREN
   17                    | ALIGNAS OPEN_PAREN • constant-expression CLOSE_PAREN
   18                    | ALIGNAS OPEN_PAREN • constant-expression ELLIPSIS CLOSE_PAREN

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 135
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-key                            go to state 209
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 407
    constant-expression                  go to state 408
    conversion-function-id               go to state 68
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 430
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-id                              go to state 446
    type-name                            go to state 124
    type-specifier                       go to state 216
    type-specifier-seq                   go to state 447
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 147

  145 class-name: IDENTIFIER •
  294 enum-name: IDENTIFIER •
  647 namespace-alias: IDENTIFIER •
  653 namespace-name: IDENTIFIER •
  1052 template-name: IDENTIFIER •
  1110 typedef-name: IDENTIFIER •
  1140 unqualified-id: IDENTIFIER •

    SCOPE     reduce using rule 145 (class-name)
    SCOPE     [reduce using rule 294 (enum-name)]
    SCOPE     [reduce using rule 647 (namespace-alias)]
    SCOPE     [reduce using rule 653 (namespace-name)]
    SCOPE     [reduce using rule 1110 (typedef-name)]
    SCOPE     [reduce using rule 1140 (unqualified-id)]
    LESS      reduce using rule 1052 (template-name)
    LESS      [reduce using rule 1140 (unqualified-id)]
    $default  reduce using rule 1140 (unqualified-id)


State 148

  659 nested-name-specifier: nested-name-specifier • IDENTIFIER SCOPE
  660                      | nested-name-specifier • simple-template-id SCOPE
  661                      | nested-name-specifier • TEMPLATE simple-template-id SCOPE
  901 ptr-operator: nested-name-specifier • MULT
  902             | nested-name-specifier • MULT attribute-specifier-seq
  903             | nested-name-specifier • MULT cv-qualifier-seq
  904             | nested-name-specifier • MULT attribute-specifier-seq cv-qualifier-seq
  909 qualified-id: nested-name-specifier • unqualified-id
  910             | nested-name-specifier • TEMPLATE unqualified-id

    IDENTIFIER  shift, and go to state 349
    TEMPLATE    shift, and go to state 456
    OPERATOR    shift, and go to state 17
    MULT        shift, and go to state 322
    COMPL       shift, and go to state 35

    conversion-function-id  go to state 68
    literal-operator-id     go to state 95
    operator-function-id    go to state 108
    simple-template-id      go to state 351
    template-id             go to state 120
    template-name           go to state 142
    unqualified-id          go to state 327


State 149

  723 noptr-declarator: noptr-declarator • parameters-and-qualifiers
  724                 | noptr-declarator • OPEN_SQUARE CLOSE_SQUARE
  725                 | noptr-declarator • OPEN_SQUARE constant-expression CLOSE_SQUARE
  726                 | noptr-declarator • OPEN_SQUARE CLOSE_SQUARE attribute-specifier-seq
  727                 | noptr-declarator • OPEN_SQUARE constant-expression CLOSE_SQUARE attribute-specifier-seq
  891 ptr-declarator: noptr-declarator •

    OPEN_PAREN   shift, and go to state 328
    OPEN_SQUARE  shift, and go to state 329

    OPEN_PAREN  [reduce using rule 891 (ptr-declarator)]
    $default    reduce using rule 891 (ptr-declarator)

    parameters-and-qualifiers  go to state 457


State 150

  728 noptr-declarator: OPEN_PAREN ptr-declarator • CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 458


State 151

  228 declarator-id: ELLIPSIS id-expression •

    $default  reduce using rule 228 (declarator-id)


State 152

  659 nested-name-specifier: nested-name-specifier • IDENTIFIER SCOPE
  660                      | nested-name-specifier • simple-template-id SCOPE
  661                      | nested-name-specifier • TEMPLATE simple-template-id SCOPE
  909 qualified-id: nested-name-specifier • unqualified-id
  910             | nested-name-specifier • TEMPLATE unqualified-id

    IDENTIFIER  shift, and go to state 349
    TEMPLATE    shift, and go to state 456
    OPERATOR    shift, and go to state 17
    COMPL       shift, and go to state 35

    conversion-function-id  go to state 68
    literal-operator-id     go to state 95
    operator-function-id    go to state 108
    simple-template-id      go to state 351
    template-id             go to state 120
    template-name           go to state 142
    unqualified-id          go to state 327


State 153

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  898 ptr-operator: AND attribute-specifier-seq •

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    ALIGNAS      [reduce using rule 898 (ptr-operator)]
    OPEN_SQUARE  [reduce using rule 898 (ptr-operator)]
    $default     reduce using rule 898 (ptr-operator)

    alignment-specifier  go to state 57
    attribute-specifier  go to state 260


State 154

   22 asm-declaration: ASM OPEN_PAREN • string-literal CLOSE_PAREN SEMICOLON

    UNICODE_8     shift, and go to state 184
    DOUBLE_QUOTE  shift, and go to state 199
    'u'           shift, and go to state 205
    'U'           shift, and go to state 206
    'L'           shift, and go to state 207
    'R'           shift, and go to state 208

    encoding-prefix  go to state 211
    string-literal   go to state 459


State 155

   50 attribute-specifier: OPEN_SQUARE OPEN_SQUARE • attribute-list CLOSE_SQUARE CLOSE_SQUARE
   51                    | OPEN_SQUARE OPEN_SQUARE • attribute-using-prefix attribute-list CLOSE_SQUARE CLOSE_SQUARE

    USING       shift, and go to state 460
    IDENTIFIER  shift, and go to state 461

    attribute               go to state 462
    attribute-list          go to state 463
    attribute-namespace     go to state 464
    attribute-scoped-token  go to state 465
    attribute-token         go to state 466
    attribute-using-prefix  go to state 467


State 156

  321 explicit-specialization: TEMPLATE LESS • GREATER declaration
  1045 template-head: TEMPLATE LESS • template-parameter-list GREATER
  1046              | TEMPLATE LESS • template-parameter-list GREATER requires-clause

    IDENTIFIER    shift, and go to state 162
    ALIGNAS       shift, and go to state 4
    SCOPE         shift, and go to state 9
    OPEN_SQUARE   shift, and go to state 10
    VIRTUAL       shift, and go to state 11
    CLASS         shift, and go to state 468
    STRUCT        shift, and go to state 13
    UNION         shift, and go to state 14
    TEMPLATE      shift, and go to state 469
    CONST         shift, and go to state 18
    VOLATILE      shift, and go to state 19
    FRIEND        shift, and go to state 20
    TYPEDEF       shift, and go to state 21
    CONSTEXPR     shift, and go to state 22
    CONSTEVAL     shift, and go to state 23
    CONSTINIT     shift, and go to state 24
    INLINE        shift, and go to state 258
    DECLTYPE      shift, and go to state 26
    ENUM          shift, and go to state 27
    EXTERN        shift, and go to state 259
    GREATER       shift, and go to state 470
    EXPLICIT      shift, and go to state 29
    THIS          shift, and go to state 471
    AUTO          shift, and go to state 36
    CHAR          shift, and go to state 37
    CHAR8_T       shift, and go to state 38
    CHAR16_T      shift, and go to state 39
    CHAR32_T      shift, and go to state 40
    WCHAR_T       shift, and go to state 41
    BOOL          shift, and go to state 42
    SHORT         shift, and go to state 43
    INT           shift, and go to state 44
    LONG          shift, and go to state 45
    SIGNED        shift, and go to state 46
    UNSIGNED      shift, and go to state 47
    FLOAT         shift, and go to state 48
    DOUBLE        shift, and go to state 49
    VOID          shift, and go to state 50
    STATIC        shift, and go to state 52
    THREAD_LOCAL  shift, and go to state 53
    MUTABLE       shift, and go to state 54
    TYPENAME      shift, and go to state 472

    alignment-specifier         go to state 57
    attribute-specifier         go to state 60
    attribute-specifier-seq     go to state 473
    class-head                  go to state 63
    class-key                   go to state 64
    class-name                  go to state 65
    class-specifier             go to state 66
    concept-name                go to state 67
    cv-qualifier                go to state 69
    decl-specifier              go to state 70
    decl-specifier-seq          go to state 474
    decltype-specifier          go to state 76
    defining-type-specifier     go to state 78
    elaborated-enum-specifier   go to state 79
    elaborated-type-specifier   go to state 80
    enum-head                   go to state 82
    enum-key                    go to state 263
    enum-name                   go to state 84
    enum-specifier              go to state 85
    explicit-specifier          go to state 264
    function-specifier          go to state 91
    namespace-alias             go to state 99
    namespace-name              go to state 102
    nested-name-specifier       go to state 212
    parameter-declaration       go to state 475
    placeholder-type-specifier  go to state 109
    simple-template-id          go to state 141
    simple-type-specifier       go to state 115
    storage-class-specifier     go to state 117
    template-head               go to state 476
    template-name               go to state 215
    template-parameter          go to state 477
    template-parameter-list     go to state 478
    type-constraint             go to state 479
    type-name                   go to state 124
    type-parameter              go to state 480
    type-parameter-key          go to state 481
    type-specifier              go to state 125
    typedef-name                go to state 126
    typename-specifier          go to state 127


State 157

  328 export-declaration: EXPORT • declaration
  329                   | EXPORT • OPEN_BRACE CLOSE_BRACE
  330                   | EXPORT • OPEN_BRACE declaration-seq CLOSE_BRACE
  331                   | EXPORT • module-import-declaration

    USING          shift, and go to state 1
    IDENTIFIER     shift, and go to state 2
    SEMICOLON      shift, and go to state 3
    ALIGNAS        shift, and go to state 4
    OPEN_PAREN     shift, and go to state 5
    ELLIPSIS       shift, and go to state 6
    AND            shift, and go to state 7
    ASM            shift, and go to state 8
    SCOPE          shift, and go to state 9
    OPEN_SQUARE    shift, and go to state 10
    OPEN_BRACE     shift, and go to state 228
    VIRTUAL        shift, and go to state 11
    CLASS          shift, and go to state 12
    STRUCT         shift, and go to state 13
    UNION          shift, and go to state 14
    TEMPLATE       shift, and go to state 15
    AND_AND        shift, and go to state 16
    OPERATOR       shift, and go to state 17
    CONST          shift, and go to state 18
    VOLATILE       shift, and go to state 19
    FRIEND         shift, and go to state 20
    TYPEDEF        shift, and go to state 21
    CONSTEXPR      shift, and go to state 22
    CONSTEVAL      shift, and go to state 23
    CONSTINIT      shift, and go to state 24
    INLINE         shift, and go to state 25
    DECLTYPE       shift, and go to state 26
    ENUM           shift, and go to state 27
    EXTERN         shift, and go to state 28
    EXPLICIT       shift, and go to state 29
    EXPORT         shift, and go to state 157
    MULT           shift, and go to state 31
    IMPORT         shift, and go to state 33
    NAMESPACE      shift, and go to state 34
    COMPL          shift, and go to state 35
    AUTO           shift, and go to state 36
    CHAR           shift, and go to state 37
    CHAR8_T        shift, and go to state 38
    CHAR16_T       shift, and go to state 39
    CHAR32_T       shift, and go to state 40
    WCHAR_T        shift, and go to state 41
    BOOL           shift, and go to state 42
    SHORT          shift, and go to state 43
    INT            shift, and go to state 44
    LONG           shift, and go to state 45
    SIGNED         shift, and go to state 46
    UNSIGNED       shift, and go to state 47
    FLOAT          shift, and go to state 48
    DOUBLE         shift, and go to state 49
    VOID           shift, and go to state 50
    STATIC_ASSERT  shift, and go to state 51
    STATIC         shift, and go to state 52
    THREAD_LOCAL   shift, and go to state 53
    MUTABLE        shift, and go to state 54
    TYPENAME       shift, and go to state 55

    alias-declaration                go to state 56
    alignment-specifier              go to state 57
    asm-declaration                  go to state 58
    attribute-declaration            go to state 59
    attribute-specifier              go to state 60
    attribute-specifier-seq          go to state 61
    block-declaration                go to state 62
    class-head                       go to state 63
    class-key                        go to state 64
    class-name                       go to state 65
    class-specifier                  go to state 66
    concept-name                     go to state 67
    conversion-function-id           go to state 68
    cv-qualifier                     go to state 69
    decl-specifier                   go to state 70
    decl-specifier-seq               go to state 71
    declaration                      go to state 230
    declarator                       go to state 74
    declarator-id                    go to state 75
    decltype-specifier               go to state 76
    deduction-guide                  go to state 77
    defining-type-specifier          go to state 78
    elaborated-enum-specifier        go to state 79
    elaborated-type-specifier        go to state 80
    empty-declaration                go to state 81
    enum-head                        go to state 82
    enum-key                         go to state 83
    enum-name                        go to state 84
    enum-specifier                   go to state 85
    explicit-instantiation           go to state 86
    explicit-specialization          go to state 87
    explicit-specifier               go to state 88
    export-declaration               go to state 89
    function-definition              go to state 90
    function-specifier               go to state 91
    id-expression                    go to state 93
    linkage-specification            go to state 94
    literal-operator-id              go to state 95
    module-import-declaration        go to state 231
    named-namespace-definition       go to state 98
    namespace-alias                  go to state 99
    namespace-alias-definition       go to state 100
    namespace-definition             go to state 101
    namespace-name                   go to state 102
    nested-name-specifier            go to state 103
    nested-namespace-definition      go to state 104
    nodeclspec-function-declaration  go to state 105
    noptr-declarator                 go to state 106
    opaque-enum-declaration          go to state 107
    operator-function-id             go to state 108
    placeholder-type-specifier       go to state 109
    ptr-declarator                   go to state 110
    ptr-operator                     go to state 111
    qualified-id                     go to state 112
    simple-declaration               go to state 113
    simple-template-id               go to state 114
    simple-type-specifier            go to state 115
    static_assert-declaration        go to state 116
    storage-class-specifier          go to state 117
    template-declaration             go to state 118
    template-head                    go to state 119
    template-id                      go to state 120
    template-name                    go to state 121
    type-constraint                  go to state 123
    type-name                        go to state 124
    type-specifier                   go to state 125
    typedef-name                     go to state 126
    typename-specifier               go to state 127
    unnamed-namespace-definition     go to state 128
    unqualified-id                   go to state 129
    using-declaration                go to state 130
    using-directive                  go to state 131
    using-enum-declaration           go to state 132


State 158

  320 explicit-instantiation: TEMPLATE declaration •

    $default  reduce using rule 320 (explicit-instantiation)


State 159

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  900 ptr-operator: AND_AND attribute-specifier-seq •

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    ALIGNAS      [reduce using rule 900 (ptr-operator)]
    OPEN_SQUARE  [reduce using rule 900 (ptr-operator)]
    $default     reduce using rule 900 (ptr-operator)

    alignment-specifier  go to state 57
    attribute-specifier  go to state 260


State 160

  769 overloadable-operator: PLUS •

    $default  reduce using rule 769 (overloadable-operator)


State 161

  770 overloadable-operator: MINUS •

    $default  reduce using rule 770 (overloadable-operator)


State 162

  145 class-name: IDENTIFIER •
  163 concept-name: IDENTIFIER •
  294 enum-name: IDENTIFIER •
  647 namespace-alias: IDENTIFIER •
  653 namespace-name: IDENTIFIER •
  1052 template-name: IDENTIFIER •
  1110 typedef-name: IDENTIFIER •

    PLUS           reduce using rule 145 (class-name)
    PLUS           [reduce using rule 294 (enum-name)]
    PLUS           [reduce using rule 1052 (template-name)]
    PLUS           [reduce using rule 1110 (typedef-name)]
    MINUS          reduce using rule 145 (class-name)
    MINUS          [reduce using rule 294 (enum-name)]
    MINUS          [reduce using rule 1052 (template-name)]
    MINUS          [reduce using rule 1110 (typedef-name)]
    USING          reduce using rule 145 (class-name)
    USING          [reduce using rule 294 (enum-name)]
    USING          [reduce using rule 1052 (template-name)]
    USING          [reduce using rule 1110 (typedef-name)]
    IDENTIFIER     reduce using rule 145 (class-name)
    IDENTIFIER     [reduce using rule 163 (concept-name)]
    IDENTIFIER     [reduce using rule 294 (enum-name)]
    IDENTIFIER     [reduce using rule 1052 (template-name)]
    IDENTIFIER     [reduce using rule 1110 (typedef-name)]
    EQ             reduce using rule 145 (class-name)
    EQ             [reduce using rule 163 (concept-name)]
    EQ             [reduce using rule 294 (enum-name)]
    EQ             [reduce using rule 1052 (template-name)]
    EQ             [reduce using rule 1110 (typedef-name)]
    SEMICOLON      reduce using rule 145 (class-name)
    SEMICOLON      [reduce using rule 163 (concept-name)]
    SEMICOLON      [reduce using rule 294 (enum-name)]
    SEMICOLON      [reduce using rule 1052 (template-name)]
    SEMICOLON      [reduce using rule 1110 (typedef-name)]
    ALIGNAS        reduce using rule 145 (class-name)
    ALIGNAS        [reduce using rule 294 (enum-name)]
    ALIGNAS        [reduce using rule 1052 (template-name)]
    ALIGNAS        [reduce using rule 1110 (typedef-name)]
    OPEN_PAREN     reduce using rule 145 (class-name)
    OPEN_PAREN     [reduce using rule 294 (enum-name)]
    OPEN_PAREN     [reduce using rule 1052 (template-name)]
    OPEN_PAREN     [reduce using rule 1110 (typedef-name)]
    CLOSE_PAREN    reduce using rule 145 (class-name)
    CLOSE_PAREN    [reduce using rule 294 (enum-name)]
    CLOSE_PAREN    [reduce using rule 1052 (template-name)]
    CLOSE_PAREN    [reduce using rule 1110 (typedef-name)]
    ELLIPSIS       reduce using rule 145 (class-name)
    ELLIPSIS       [reduce using rule 163 (concept-name)]
    ELLIPSIS       [reduce using rule 294 (enum-name)]
    ELLIPSIS       [reduce using rule 1052 (template-name)]
    ELLIPSIS       [reduce using rule 1110 (typedef-name)]
    AND            reduce using rule 145 (class-name)
    AND            [reduce using rule 294 (enum-name)]
    AND            [reduce using rule 1052 (template-name)]
    AND            [reduce using rule 1110 (typedef-name)]
    ASM            reduce using rule 145 (class-name)
    ASM            [reduce using rule 294 (enum-name)]
    ASM            [reduce using rule 1052 (template-name)]
    ASM            [reduce using rule 1110 (typedef-name)]
    MULT_EQ        reduce using rule 145 (class-name)
    MULT_EQ        [reduce using rule 294 (enum-name)]
    MULT_EQ        [reduce using rule 1052 (template-name)]
    MULT_EQ        [reduce using rule 1110 (typedef-name)]
    DIV_EQ         reduce using rule 145 (class-name)
    DIV_EQ         [reduce using rule 294 (enum-name)]
    DIV_EQ         [reduce using rule 1052 (template-name)]
    DIV_EQ         [reduce using rule 1110 (typedef-name)]
    MOD_EQ         reduce using rule 145 (class-name)
    MOD_EQ         [reduce using rule 294 (enum-name)]
    MOD_EQ         [reduce using rule 1052 (template-name)]
    MOD_EQ         [reduce using rule 1110 (typedef-name)]
    PLUS_EQ        reduce using rule 145 (class-name)
    PLUS_EQ        [reduce using rule 294 (enum-name)]
    PLUS_EQ        [reduce using rule 1052 (template-name)]
    PLUS_EQ        [reduce using rule 1110 (typedef-name)]
    MINUS_EQ       reduce using rule 145 (class-name)
    MINUS_EQ       [reduce using rule 294 (enum-name)]
    MINUS_EQ       [reduce using rule 1052 (template-name)]
    MINUS_EQ       [reduce using rule 1110 (typedef-name)]
    RSHIFT_EQ      reduce using rule 145 (class-name)
    RSHIFT_EQ      [reduce using rule 294 (enum-name)]
    RSHIFT_EQ      [reduce using rule 1052 (template-name)]
    RSHIFT_EQ      [reduce using rule 1110 (typedef-name)]
    LSHIFT_EQ      reduce using rule 145 (class-name)
    LSHIFT_EQ      [reduce using rule 294 (enum-name)]
    LSHIFT_EQ      [reduce using rule 1052 (template-name)]
    LSHIFT_EQ      [reduce using rule 1110 (typedef-name)]
    AND_EQ         reduce using rule 145 (class-name)
    AND_EQ         [reduce using rule 294 (enum-name)]
    AND_EQ         [reduce using rule 1052 (template-name)]
    AND_EQ         [reduce using rule 1110 (typedef-name)]
    XOR_EQ         reduce using rule 145 (class-name)
    XOR_EQ         [reduce using rule 294 (enum-name)]
    XOR_EQ         [reduce using rule 1052 (template-name)]
    XOR_EQ         [reduce using rule 1110 (typedef-name)]
    OR_EQ          reduce using rule 145 (class-name)
    OR_EQ          [reduce using rule 294 (enum-name)]
    OR_EQ          [reduce using rule 1052 (template-name)]
    OR_EQ          [reduce using rule 1110 (typedef-name)]
    COMMA          reduce using rule 145 (class-name)
    COMMA          [reduce using rule 163 (concept-name)]
    COMMA          [reduce using rule 294 (enum-name)]
    COMMA          [reduce using rule 1052 (template-name)]
    COMMA          [reduce using rule 1110 (typedef-name)]
    SCOPE          reduce using rule 145 (class-name)
    SCOPE          [reduce using rule 294 (enum-name)]
    SCOPE          [reduce using rule 647 (namespace-alias)]
    SCOPE          [reduce using rule 653 (namespace-name)]
    SCOPE          [reduce using rule 1052 (template-name)]
    SCOPE          [reduce using rule 1110 (typedef-name)]
    OPEN_SQUARE    reduce using rule 145 (class-name)
    OPEN_SQUARE    [reduce using rule 294 (enum-name)]
    OPEN_SQUARE    [reduce using rule 1052 (template-name)]
    OPEN_SQUARE    [reduce using rule 1110 (typedef-name)]
    CLOSE_SQUARE   reduce using rule 145 (class-name)
    CLOSE_SQUARE   [reduce using rule 294 (enum-name)]
    CLOSE_SQUARE   [reduce using rule 1052 (template-name)]
    CLOSE_SQUARE   [reduce using rule 1110 (typedef-name)]
    COLON          reduce using rule 145 (class-name)
    COLON          [reduce using rule 294 (enum-name)]
    COLON          [reduce using rule 1052 (template-name)]
    COLON          [reduce using rule 1110 (typedef-name)]
    OPEN_BRACE     reduce using rule 145 (class-name)
    OPEN_BRACE     [reduce using rule 294 (enum-name)]
    OPEN_BRACE     [reduce using rule 1052 (template-name)]
    OPEN_BRACE     [reduce using rule 1110 (typedef-name)]
    CLOSE_BRACE    reduce using rule 145 (class-name)
    CLOSE_BRACE    [reduce using rule 294 (enum-name)]
    CLOSE_BRACE    [reduce using rule 1052 (template-name)]
    CLOSE_BRACE    [reduce using rule 1110 (typedef-name)]
    VIRTUAL        reduce using rule 145 (class-name)
    VIRTUAL        [reduce using rule 294 (enum-name)]
    VIRTUAL        [reduce using rule 1052 (template-name)]
    VIRTUAL        [reduce using rule 1110 (typedef-name)]
    CLASS          reduce using rule 145 (class-name)
    CLASS          [reduce using rule 294 (enum-name)]
    CLASS          [reduce using rule 1052 (template-name)]
    CLASS          [reduce using rule 1110 (typedef-name)]
    STRUCT         reduce using rule 145 (class-name)
    STRUCT         [reduce using rule 294 (enum-name)]
    STRUCT         [reduce using rule 1052 (template-name)]
    STRUCT         [reduce using rule 1110 (typedef-name)]
    UNION          reduce using rule 145 (class-name)
    UNION          [reduce using rule 294 (enum-name)]
    UNION          [reduce using rule 1052 (template-name)]
    UNION          [reduce using rule 1110 (typedef-name)]
    TEMPLATE       reduce using rule 145 (class-name)
    TEMPLATE       [reduce using rule 294 (enum-name)]
    TEMPLATE       [reduce using rule 1052 (template-name)]
    TEMPLATE       [reduce using rule 1110 (typedef-name)]
    FINAL          reduce using rule 145 (class-name)
    FINAL          [reduce using rule 294 (enum-name)]
    FINAL          [reduce using rule 1052 (template-name)]
    FINAL          [reduce using rule 1110 (typedef-name)]
    SPACESHIP      reduce using rule 145 (class-name)
    SPACESHIP      [reduce using rule 294 (enum-name)]
    SPACESHIP      [reduce using rule 1052 (template-name)]
    SPACESHIP      [reduce using rule 1110 (typedef-name)]
    NOEXCEPT       reduce using rule 145 (class-name)
    NOEXCEPT       [reduce using rule 294 (enum-name)]
    NOEXCEPT       [reduce using rule 1052 (template-name)]
    NOEXCEPT       [reduce using rule 1110 (typedef-name)]
    CONCEPT        reduce using rule 145 (class-name)
    CONCEPT        [reduce using rule 294 (enum-name)]
    CONCEPT        [reduce using rule 1052 (template-name)]
    CONCEPT        [reduce using rule 1110 (typedef-name)]
    QUERY          reduce using rule 145 (class-name)
    QUERY          [reduce using rule 294 (enum-name)]
    QUERY          [reduce using rule 1052 (template-name)]
    QUERY          [reduce using rule 1110 (typedef-name)]
    AND_AND        reduce using rule 145 (class-name)
    AND_AND        [reduce using rule 294 (enum-name)]
    AND_AND        [reduce using rule 1052 (template-name)]
    AND_AND        [reduce using rule 1110 (typedef-name)]
    OR_OR          reduce using rule 145 (class-name)
    OR_OR          [reduce using rule 294 (enum-name)]
    OR_OR          [reduce using rule 1052 (template-name)]
    OR_OR          [reduce using rule 1110 (typedef-name)]
    OPERATOR       reduce using rule 145 (class-name)
    OPERATOR       [reduce using rule 294 (enum-name)]
    OPERATOR       [reduce using rule 1052 (template-name)]
    OPERATOR       [reduce using rule 1110 (typedef-name)]
    CONST          reduce using rule 145 (class-name)
    CONST          [reduce using rule 294 (enum-name)]
    CONST          [reduce using rule 1052 (template-name)]
    CONST          [reduce using rule 1110 (typedef-name)]
    VOLATILE       reduce using rule 145 (class-name)
    VOLATILE       [reduce using rule 294 (enum-name)]
    VOLATILE       [reduce using rule 1052 (template-name)]
    VOLATILE       [reduce using rule 1110 (typedef-name)]
    FRIEND         reduce using rule 145 (class-name)
    FRIEND         [reduce using rule 294 (enum-name)]
    FRIEND         [reduce using rule 1052 (template-name)]
    FRIEND         [reduce using rule 1110 (typedef-name)]
    TYPEDEF        reduce using rule 145 (class-name)
    TYPEDEF        [reduce using rule 294 (enum-name)]
    TYPEDEF        [reduce using rule 1052 (template-name)]
    TYPEDEF        [reduce using rule 1110 (typedef-name)]
    CONSTEXPR      reduce using rule 145 (class-name)
    CONSTEXPR      [reduce using rule 294 (enum-name)]
    CONSTEXPR      [reduce using rule 1052 (template-name)]
    CONSTEXPR      [reduce using rule 1110 (typedef-name)]
    CONSTEVAL      reduce using rule 145 (class-name)
    CONSTEVAL      [reduce using rule 294 (enum-name)]
    CONSTEVAL      [reduce using rule 1052 (template-name)]
    CONSTEVAL      [reduce using rule 1110 (typedef-name)]
    CONSTINIT      reduce using rule 145 (class-name)
    CONSTINIT      [reduce using rule 294 (enum-name)]
    CONSTINIT      [reduce using rule 1052 (template-name)]
    CONSTINIT      [reduce using rule 1110 (typedef-name)]
    INLINE         reduce using rule 145 (class-name)
    INLINE         [reduce using rule 294 (enum-name)]
    INLINE         [reduce using rule 1052 (template-name)]
    INLINE         [reduce using rule 1110 (typedef-name)]
    DECLTYPE       reduce using rule 145 (class-name)
    DECLTYPE       [reduce using rule 163 (concept-name)]
    DECLTYPE       [reduce using rule 294 (enum-name)]
    DECLTYPE       [reduce using rule 1052 (template-name)]
    DECLTYPE       [reduce using rule 1110 (typedef-name)]
    DEREF          reduce using rule 145 (class-name)
    DEREF          [reduce using rule 294 (enum-name)]
    DEREF          [reduce using rule 1052 (template-name)]
    DEREF          [reduce using rule 1110 (typedef-name)]
    DOT            reduce using rule 145 (class-name)
    DOT            [reduce using rule 294 (enum-name)]
    DOT            [reduce using rule 1052 (template-name)]
    DOT            [reduce using rule 1110 (typedef-name)]
    ENUM           reduce using rule 145 (class-name)
    ENUM           [reduce using rule 294 (enum-name)]
    ENUM           [reduce using rule 1052 (template-name)]
    ENUM           [reduce using rule 1110 (typedef-name)]
    EQ_EQ          reduce using rule 145 (class-name)
    EQ_EQ          [reduce using rule 294 (enum-name)]
    EQ_EQ          [reduce using rule 1052 (template-name)]
    EQ_EQ          [reduce using rule 1110 (typedef-name)]
    NOT_EQ         reduce using rule 145 (class-name)
    NOT_EQ         [reduce using rule 294 (enum-name)]
    NOT_EQ         [reduce using rule 1052 (template-name)]
    NOT_EQ         [reduce using rule 1110 (typedef-name)]
    XOR            reduce using rule 145 (class-name)
    XOR            [reduce using rule 294 (enum-name)]
    XOR            [reduce using rule 1052 (template-name)]
    XOR            [reduce using rule 1110 (typedef-name)]
    EXTERN         reduce using rule 145 (class-name)
    EXTERN         [reduce using rule 294 (enum-name)]
    EXTERN         [reduce using rule 1052 (template-name)]
    EXTERN         [reduce using rule 1110 (typedef-name)]
    LESS           reduce using rule 145 (class-name)
    LESS           [reduce using rule 163 (concept-name)]
    LESS           [reduce using rule 294 (enum-name)]
    LESS           [reduce using rule 1052 (template-name)]
    LESS           [reduce using rule 1110 (typedef-name)]
    GREATER        reduce using rule 145 (class-name)
    GREATER        [reduce using rule 163 (concept-name)]
    GREATER        [reduce using rule 294 (enum-name)]
    GREATER        [reduce using rule 1052 (template-name)]
    GREATER        [reduce using rule 1110 (typedef-name)]
    EXPLICIT       reduce using rule 145 (class-name)
    EXPLICIT       [reduce using rule 294 (enum-name)]
    EXPLICIT       [reduce using rule 1052 (template-name)]
    EXPLICIT       [reduce using rule 1110 (typedef-name)]
    EXPORT         reduce using rule 145 (class-name)
    EXPORT         [reduce using rule 294 (enum-name)]
    EXPORT         [reduce using rule 1052 (template-name)]
    EXPORT         [reduce using rule 1110 (typedef-name)]
    MULT           reduce using rule 145 (class-name)
    MULT           [reduce using rule 294 (enum-name)]
    MULT           [reduce using rule 1052 (template-name)]
    MULT           [reduce using rule 1110 (typedef-name)]
    DIV            reduce using rule 145 (class-name)
    DIV            [reduce using rule 294 (enum-name)]
    DIV            [reduce using rule 1052 (template-name)]
    DIV            [reduce using rule 1110 (typedef-name)]
    MOD            reduce using rule 145 (class-name)
    MOD            [reduce using rule 294 (enum-name)]
    MOD            [reduce using rule 1052 (template-name)]
    MOD            [reduce using rule 1110 (typedef-name)]
    OR             reduce using rule 145 (class-name)
    OR             [reduce using rule 294 (enum-name)]
    OR             [reduce using rule 1052 (template-name)]
    OR             [reduce using rule 1110 (typedef-name)]
    LSHIFT         reduce using rule 145 (class-name)
    LSHIFT         [reduce using rule 294 (enum-name)]
    LSHIFT         [reduce using rule 1052 (template-name)]
    LSHIFT         [reduce using rule 1110 (typedef-name)]
    RSHIFT         reduce using rule 145 (class-name)
    RSHIFT         [reduce using rule 294 (enum-name)]
    RSHIFT         [reduce using rule 1052 (template-name)]
    RSHIFT         [reduce using rule 1110 (typedef-name)]
    LESS_EQ        reduce using rule 145 (class-name)
    LESS_EQ        [reduce using rule 294 (enum-name)]
    LESS_EQ        [reduce using rule 1052 (template-name)]
    LESS_EQ        [reduce using rule 1110 (typedef-name)]
    GREATER_EQ     reduce using rule 145 (class-name)
    GREATER_EQ     [reduce using rule 294 (enum-name)]
    GREATER_EQ     [reduce using rule 1052 (template-name)]
    GREATER_EQ     [reduce using rule 1110 (typedef-name)]
    DOT_STAR       reduce using rule 145 (class-name)
    DOT_STAR       [reduce using rule 294 (enum-name)]
    DOT_STAR       [reduce using rule 1052 (template-name)]
    DOT_STAR       [reduce using rule 1110 (typedef-name)]
    DEREF_STAR     reduce using rule 145 (class-name)
    DEREF_STAR     [reduce using rule 294 (enum-name)]
    DEREF_STAR     [reduce using rule 1052 (template-name)]
    DEREF_STAR     [reduce using rule 1110 (typedef-name)]
    TRY            reduce using rule 145 (class-name)
    TRY            [reduce using rule 294 (enum-name)]
    TRY            [reduce using rule 1052 (template-name)]
    TRY            [reduce using rule 1110 (typedef-name)]
    IMPORT         reduce using rule 145 (class-name)
    IMPORT         [reduce using rule 294 (enum-name)]
    IMPORT         [reduce using rule 1052 (template-name)]
    IMPORT         [reduce using rule 1110 (typedef-name)]
    NAMESPACE      reduce using rule 145 (class-name)
    NAMESPACE      [reduce using rule 294 (enum-name)]
    NAMESPACE      [reduce using rule 1052 (template-name)]
    NAMESPACE      [reduce using rule 1110 (typedef-name)]
    REQUIRES       reduce using rule 145 (class-name)
    REQUIRES       [reduce using rule 294 (enum-name)]
    REQUIRES       [reduce using rule 1052 (template-name)]
    REQUIRES       [reduce using rule 1110 (typedef-name)]
    COMPL          reduce using rule 145 (class-name)
    COMPL          [reduce using rule 294 (enum-name)]
    COMPL          [reduce using rule 1052 (template-name)]
    COMPL          [reduce using rule 1110 (typedef-name)]
    PLUS_PLUS      reduce using rule 145 (class-name)
    PLUS_PLUS      [reduce using rule 294 (enum-name)]
    PLUS_PLUS      [reduce using rule 1052 (template-name)]
    PLUS_PLUS      [reduce using rule 1110 (typedef-name)]
    MINUS_MINUS    reduce using rule 145 (class-name)
    MINUS_MINUS    [reduce using rule 294 (enum-name)]
    MINUS_MINUS    [reduce using rule 1052 (template-name)]
    MINUS_MINUS    [reduce using rule 1110 (typedef-name)]
    AUTO           reduce using rule 145 (class-name)
    AUTO           [reduce using rule 163 (concept-name)]
    AUTO           [reduce using rule 294 (enum-name)]
    AUTO           [reduce using rule 1052 (template-name)]
    AUTO           [reduce using rule 1110 (typedef-name)]
    CHAR           reduce using rule 145 (class-name)
    CHAR           [reduce using rule 294 (enum-name)]
    CHAR           [reduce using rule 1052 (template-name)]
    CHAR           [reduce using rule 1110 (typedef-name)]
    CHAR8_T        reduce using rule 145 (class-name)
    CHAR8_T        [reduce using rule 294 (enum-name)]
    CHAR8_T        [reduce using rule 1052 (template-name)]
    CHAR8_T        [reduce using rule 1110 (typedef-name)]
    CHAR16_T       reduce using rule 145 (class-name)
    CHAR16_T       [reduce using rule 294 (enum-name)]
    CHAR16_T       [reduce using rule 1052 (template-name)]
    CHAR16_T       [reduce using rule 1110 (typedef-name)]
    CHAR32_T       reduce using rule 145 (class-name)
    CHAR32_T       [reduce using rule 294 (enum-name)]
    CHAR32_T       [reduce using rule 1052 (template-name)]
    CHAR32_T       [reduce using rule 1110 (typedef-name)]
    WCHAR_T        reduce using rule 145 (class-name)
    WCHAR_T        [reduce using rule 294 (enum-name)]
    WCHAR_T        [reduce using rule 1052 (template-name)]
    WCHAR_T        [reduce using rule 1110 (typedef-name)]
    BOOL           reduce using rule 145 (class-name)
    BOOL           [reduce using rule 294 (enum-name)]
    BOOL           [reduce using rule 1052 (template-name)]
    BOOL           [reduce using rule 1110 (typedef-name)]
    SHORT          reduce using rule 145 (class-name)
    SHORT          [reduce using rule 294 (enum-name)]
    SHORT          [reduce using rule 1052 (template-name)]
    SHORT          [reduce using rule 1110 (typedef-name)]
    INT            reduce using rule 145 (class-name)
    INT            [reduce using rule 294 (enum-name)]
    INT            [reduce using rule 1052 (template-name)]
    INT            [reduce using rule 1110 (typedef-name)]
    LONG           reduce using rule 145 (class-name)
    LONG           [reduce using rule 294 (enum-name)]
    LONG           [reduce using rule 1052 (template-name)]
    LONG           [reduce using rule 1110 (typedef-name)]
    SIGNED         reduce using rule 145 (class-name)
    SIGNED         [reduce using rule 294 (enum-name)]
    SIGNED         [reduce using rule 1052 (template-name)]
    SIGNED         [reduce using rule 1110 (typedef-name)]
    UNSIGNED       reduce using rule 145 (class-name)
    UNSIGNED       [reduce using rule 294 (enum-name)]
    UNSIGNED       [reduce using rule 1052 (template-name)]
    UNSIGNED       [reduce using rule 1110 (typedef-name)]
    FLOAT          reduce using rule 145 (class-name)
    FLOAT          [reduce using rule 294 (enum-name)]
    FLOAT          [reduce using rule 1052 (template-name)]
    FLOAT          [reduce using rule 1110 (typedef-name)]
    DOUBLE         reduce using rule 145 (class-name)
    DOUBLE         [reduce using rule 294 (enum-name)]
    DOUBLE         [reduce using rule 1052 (template-name)]
    DOUBLE         [reduce using rule 1110 (typedef-name)]
    VOID           reduce using rule 145 (class-name)
    VOID           [reduce using rule 294 (enum-name)]
    VOID           [reduce using rule 1052 (template-name)]
    VOID           [reduce using rule 1110 (typedef-name)]
    STATIC_ASSERT  reduce using rule 145 (class-name)
    STATIC_ASSERT  [reduce using rule 294 (enum-name)]
    STATIC_ASSERT  [reduce using rule 1052 (template-name)]
    STATIC_ASSERT  [reduce using rule 1110 (typedef-name)]
    STATIC         reduce using rule 145 (class-name)
    STATIC         [reduce using rule 294 (enum-name)]
    STATIC         [reduce using rule 1052 (template-name)]
    STATIC         [reduce using rule 1110 (typedef-name)]
    THREAD_LOCAL   reduce using rule 145 (class-name)
    THREAD_LOCAL   [reduce using rule 294 (enum-name)]
    THREAD_LOCAL   [reduce using rule 1052 (template-name)]
    THREAD_LOCAL   [reduce using rule 1110 (typedef-name)]
    MUTABLE        reduce using rule 145 (class-name)
    MUTABLE        [reduce using rule 294 (enum-name)]
    MUTABLE        [reduce using rule 1052 (template-name)]
    MUTABLE        [reduce using rule 1110 (typedef-name)]
    TYPENAME       reduce using rule 145 (class-name)
    TYPENAME       [reduce using rule 294 (enum-name)]
    TYPENAME       [reduce using rule 1052 (template-name)]
    TYPENAME       [reduce using rule 1110 (typedef-name)]
    OVERRIDE       reduce using rule 145 (class-name)
    OVERRIDE       [reduce using rule 294 (enum-name)]
    OVERRIDE       [reduce using rule 1052 (template-name)]
    OVERRIDE       [reduce using rule 1110 (typedef-name)]
    $default       reduce using rule 145 (class-name)


State 163

  777 overloadable-operator: EQ •

    $default  reduce using rule 777 (overloadable-operator)


State 164

  763 overloadable-operator: OPEN_PAREN • CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 482


State 165

  775 overloadable-operator: AND •

    $default  reduce using rule 775 (overloadable-operator)


State 166

  780 overloadable-operator: MULT_EQ •

    $default  reduce using rule 780 (overloadable-operator)


State 167

  781 overloadable-operator: DIV_EQ •

    $default  reduce using rule 781 (overloadable-operator)


State 168

  782 overloadable-operator: MOD_EQ •

    $default  reduce using rule 782 (overloadable-operator)


State 169

  778 overloadable-operator: PLUS_EQ •

    $default  reduce using rule 778 (overloadable-operator)


State 170

  779 overloadable-operator: MINUS_EQ •

    $default  reduce using rule 779 (overloadable-operator)


State 171

  798 overloadable-operator: RSHIFT_EQ •

    $default  reduce using rule 798 (overloadable-operator)


State 172

  797 overloadable-operator: LSHIFT_EQ •

    $default  reduce using rule 797 (overloadable-operator)


State 173

  784 overloadable-operator: AND_EQ •

    $default  reduce using rule 784 (overloadable-operator)


State 174

  783 overloadable-operator: XOR_EQ •

    $default  reduce using rule 783 (overloadable-operator)


State 175

  785 overloadable-operator: OR_EQ •

    $default  reduce using rule 785 (overloadable-operator)


State 176

  801 overloadable-operator: COMMA •

    $default  reduce using rule 801 (overloadable-operator)


State 177

  764 overloadable-operator: OPEN_SQUARE • CLOSE_SQUARE

    CLOSE_SQUARE  shift, and go to state 483


State 178

  762 overloadable-operator: CO_AWAIT •

    $default  reduce using rule 762 (overloadable-operator)


State 179

  792 overloadable-operator: SPACESHIP •

    $default  reduce using rule 792 (overloadable-operator)


State 180

  793 overloadable-operator: AND_AND •

    $default  reduce using rule 793 (overloadable-operator)


State 181

  794 overloadable-operator: OR_OR •

    $default  reduce using rule 794 (overloadable-operator)


State 182

  765 overloadable-operator: DEREF •

    $default  reduce using rule 765 (overloadable-operator)


State 183

  759 overloadable-operator: DELETE •
  761                      | DELETE • OPEN_SQUARE CLOSE_SQUARE

    OPEN_SQUARE  shift, and go to state 484

    OPEN_SQUARE  [reduce using rule 759 (overloadable-operator)]
    $default     reduce using rule 759 (overloadable-operator)


State 184

  276 encoding-prefix: UNICODE_8 •

    $default  reduce using rule 276 (encoding-prefix)


State 185

  786 overloadable-operator: EQ_EQ •

    $default  reduce using rule 786 (overloadable-operator)


State 186

  787 overloadable-operator: NOT_EQ •

    $default  reduce using rule 787 (overloadable-operator)


State 187

  774 overloadable-operator: XOR •

    $default  reduce using rule 774 (overloadable-operator)


State 188

  788 overloadable-operator: LESS •

    $default  reduce using rule 788 (overloadable-operator)


State 189

  789 overloadable-operator: GREATER •

    $default  reduce using rule 789 (overloadable-operator)


State 190

  771 overloadable-operator: MULT •

    $default  reduce using rule 771 (overloadable-operator)


State 191

  772 overloadable-operator: DIV •

    $default  reduce using rule 772 (overloadable-operator)


State 192

  773 overloadable-operator: MOD •

    $default  reduce using rule 773 (overloadable-operator)


State 193

  776 overloadable-operator: OR •

    $default  reduce using rule 776 (overloadable-operator)


State 194

  795 overloadable-operator: LSHIFT •

    $default  reduce using rule 795 (overloadable-operator)


State 195

  796 overloadable-operator: RSHIFT •

    $default  reduce using rule 796 (overloadable-operator)


State 196

  790 overloadable-operator: LESS_EQ •

    $default  reduce using rule 790 (overloadable-operator)


State 197

  791 overloadable-operator: GREATER_EQ •

    $default  reduce using rule 791 (overloadable-operator)


State 198

  766 overloadable-operator: DEREF_STAR •

    $default  reduce using rule 766 (overloadable-operator)


State 199

  1031 string-literal: DOUBLE_QUOTE • DOUBLE_QUOTE
  1033               | DOUBLE_QUOTE • s-char-sequence DOUBLE_QUOTE

    BASIC_S_CHAR  shift, and go to state 485
    ESCAPE        shift, and go to state 486
    DOUBLE_QUOTE  shift, and go to state 487
    ESCAPE_LX     shift, and go to state 488
    ESCAPE_LU     shift, and go to state 489
    ESCAPE_HU     shift, and go to state 490

    basic-s-char                 go to state 491
    conditional-escape-sequence  go to state 492
    escape-sequence              go to state 493
    hexadecimal-escape-sequence  go to state 494
    numeric-escape-sequence      go to state 495
    octal-escape-sequence        go to state 496
    s-char                       go to state 497
    s-char-sequence              go to state 498
    simple-escape-sequence       go to state 499
    universal-character-name     go to state 500


State 200

  758 overloadable-operator: NEW •
  760                      | NEW • OPEN_SQUARE CLOSE_SQUARE

    OPEN_SQUARE  shift, and go to state 501

    OPEN_SQUARE  [reduce using rule 758 (overloadable-operator)]
    $default     reduce using rule 758 (overloadable-operator)


State 201

  767 overloadable-operator: COMPL •

    $default  reduce using rule 767 (overloadable-operator)


State 202

  768 overloadable-operator: NOT •

    $default  reduce using rule 768 (overloadable-operator)


State 203

  799 overloadable-operator: PLUS_PLUS •

    $default  reduce using rule 799 (overloadable-operator)


State 204

  800 overloadable-operator: MINUS_MINUS •

    $default  reduce using rule 800 (overloadable-operator)


State 205

  277 encoding-prefix: 'u' •

    $default  reduce using rule 277 (encoding-prefix)


State 206

  278 encoding-prefix: 'U' •

    $default  reduce using rule 278 (encoding-prefix)


State 207

  279 encoding-prefix: 'L' •

    $default  reduce using rule 279 (encoding-prefix)


State 208

  1035 string-literal: 'R' • raw-string

    BASIC_S_CHAR  shift, and go to state 502

    raw-string  go to state 503


State 209

  264 elaborated-type-specifier: class-key • IDENTIFIER
  265                          | class-key • attribute-specifier-seq IDENTIFIER
  266                          | class-key • nested-name-specifier IDENTIFIER
  267                          | class-key • attribute-specifier-seq nested-name-specifier IDENTIFIER
  268                          | class-key • simple-template-id
  269                          | class-key • nested-name-specifier simple-template-id
  270                          | class-key • nested-name-specifier TEMPLATE simple-template-id

    IDENTIFIER   shift, and go to state 266
    ALIGNAS      shift, and go to state 4
    SCOPE        shift, and go to state 9
    OPEN_SQUARE  shift, and go to state 10
    DECLTYPE     shift, and go to state 134

    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 504
    class-name               go to state 65
    decltype-specifier       go to state 138
    enum-name                go to state 84
    namespace-alias          go to state 99
    namespace-name           go to state 102
    nested-name-specifier    go to state 505
    simple-template-id       go to state 273
    template-name            go to state 142
    type-name                go to state 143
    typedef-name             go to state 126


State 210

  179 conversion-function-id: OPERATOR conversion-type-id •

    $default  reduce using rule 179 (conversion-function-id)


State 211

  1030 string-literal: encoding-prefix • DOUBLE_QUOTE DOUBLE_QUOTE
  1032               | encoding-prefix • DOUBLE_QUOTE s-char-sequence DOUBLE_QUOTE
  1034               | encoding-prefix • 'R' raw-string

    DOUBLE_QUOTE  shift, and go to state 506
    'R'           shift, and go to state 507


State 212

  659 nested-name-specifier: nested-name-specifier • IDENTIFIER SCOPE
  660                      | nested-name-specifier • simple-template-id SCOPE
  661                      | nested-name-specifier • TEMPLATE simple-template-id SCOPE
  985 simple-type-specifier: nested-name-specifier • type-name
  987                      | nested-name-specifier • TEMPLATE simple-template-id
  990                      | nested-name-specifier • template-name
  1070 type-constraint: nested-name-specifier • concept-name
  1072                | nested-name-specifier • concept-name LESS GREATER
  1074                | nested-name-specifier • concept-name LESS template-argument-list GREATER

    IDENTIFIER  shift, and go to state 508
    TEMPLATE    shift, and go to state 509

    class-name          go to state 65
    concept-name        go to state 323
    enum-name           go to state 84
    simple-template-id  go to state 510
    template-name       go to state 325
    type-name           go to state 326
    typedef-name        go to state 126


State 213

  755 operator-function-id: OPERATOR overloadable-operator •
  756                     | OPERATOR overloadable-operator • LESS GREATER
  757                     | OPERATOR overloadable-operator • LESS template-argument-list GREATER

    LESS  shift, and go to state 511

    LESS      [reduce using rule 755 (operator-function-id)]
    $default  reduce using rule 755 (operator-function-id)


State 214

  561 literal-operator-id: OPERATOR string-literal • IDENTIFIER
  1163 user-defined-string-literal: string-literal • ud-suffix

    IDENTIFIER  shift, and go to state 512

    ud-suffix  go to state 513


State 215

  983 simple-template-id: template-name • LESS GREATER
  984                   | template-name • LESS template-argument-list GREATER
  991 simple-type-specifier: template-name •

    LESS  shift, and go to state 337

    LESS      [reduce using rule 991 (simple-type-specifier)]
    $default  reduce using rule 991 (simple-type-specifier)


State 216

  1107 type-specifier-seq: type-specifier •
  1108                   | type-specifier • attribute-specifier-seq
  1109                   | type-specifier • type-specifier-seq

    IDENTIFIER   shift, and go to state 162
    ALIGNAS      shift, and go to state 4
    SCOPE        shift, and go to state 9
    OPEN_SQUARE  shift, and go to state 10
    CLASS        shift, and go to state 12
    STRUCT       shift, and go to state 13
    UNION        shift, and go to state 14
    CONST        shift, and go to state 18
    VOLATILE     shift, and go to state 19
    DECLTYPE     shift, and go to state 26
    ENUM         shift, and go to state 135
    AUTO         shift, and go to state 36
    CHAR         shift, and go to state 37
    CHAR8_T      shift, and go to state 38
    CHAR16_T     shift, and go to state 39
    CHAR32_T     shift, and go to state 40
    WCHAR_T      shift, and go to state 41
    BOOL         shift, and go to state 42
    SHORT        shift, and go to state 43
    INT          shift, and go to state 44
    LONG         shift, and go to state 45
    SIGNED       shift, and go to state 46
    UNSIGNED     shift, and go to state 47
    FLOAT        shift, and go to state 48
    DOUBLE       shift, and go to state 49
    VOID         shift, and go to state 50
    TYPENAME     shift, and go to state 55

    IDENTIFIER   [reduce using rule 1107 (type-specifier-seq)]
    ALIGNAS      [reduce using rule 1107 (type-specifier-seq)]
    SCOPE        [reduce using rule 1107 (type-specifier-seq)]
    OPEN_SQUARE  [reduce using rule 1107 (type-specifier-seq)]
    CLASS        [reduce using rule 1107 (type-specifier-seq)]
    STRUCT       [reduce using rule 1107 (type-specifier-seq)]
    UNION        [reduce using rule 1107 (type-specifier-seq)]
    CONST        [reduce using rule 1107 (type-specifier-seq)]
    VOLATILE     [reduce using rule 1107 (type-specifier-seq)]
    DECLTYPE     [reduce using rule 1107 (type-specifier-seq)]
    ENUM         [reduce using rule 1107 (type-specifier-seq)]
    AUTO         [reduce using rule 1107 (type-specifier-seq)]
    CHAR         [reduce using rule 1107 (type-specifier-seq)]
    CHAR8_T      [reduce using rule 1107 (type-specifier-seq)]
    CHAR16_T     [reduce using rule 1107 (type-specifier-seq)]
    CHAR32_T     [reduce using rule 1107 (type-specifier-seq)]
    WCHAR_T      [reduce using rule 1107 (type-specifier-seq)]
    BOOL         [reduce using rule 1107 (type-specifier-seq)]
    SHORT        [reduce using rule 1107 (type-specifier-seq)]
    INT          [reduce using rule 1107 (type-specifier-seq)]
    LONG         [reduce using rule 1107 (type-specifier-seq)]
    SIGNED       [reduce using rule 1107 (type-specifier-seq)]
    UNSIGNED     [reduce using rule 1107 (type-specifier-seq)]
    FLOAT        [reduce using rule 1107 (type-specifier-seq)]
    DOUBLE       [reduce using rule 1107 (type-specifier-seq)]
    VOID         [reduce using rule 1107 (type-specifier-seq)]
    TYPENAME     [reduce using rule 1107 (type-specifier-seq)]
    $default     reduce using rule 1107 (type-specifier-seq)

    alignment-specifier         go to state 57
    attribute-specifier         go to state 60
    attribute-specifier-seq     go to state 514
    class-key                   go to state 209
    class-name                  go to state 65
    concept-name                go to state 67
    cv-qualifier                go to state 69
    decltype-specifier          go to state 76
    elaborated-enum-specifier   go to state 79
    elaborated-type-specifier   go to state 80
    enum-name                   go to state 84
    namespace-alias             go to state 99
    namespace-name              go to state 102
    nested-name-specifier       go to state 212
    placeholder-type-specifier  go to state 109
    simple-template-id          go to state 141
    simple-type-specifier       go to state 115
    template-name               go to state 215
    type-constraint             go to state 123
    type-name                   go to state 124
    type-specifier              go to state 216
    type-specifier-seq          go to state 515
    typedef-name                go to state 126
    typename-specifier          go to state 127


State 217

  180 conversion-type-id: type-specifier-seq •
  181                   | type-specifier-seq • conversion-declarator

    IDENTIFIER  shift, and go to state 253
    AND         shift, and go to state 7
    SCOPE       shift, and go to state 9
    AND_AND     shift, and go to state 16
    DECLTYPE    shift, and go to state 134
    MULT        shift, and go to state 31

    IDENTIFIER  [reduce using rule 180 (conversion-type-id)]
    AND         [reduce using rule 180 (conversion-type-id)]
    SCOPE       [reduce using rule 180 (conversion-type-id)]
    AND_AND     [reduce using rule 180 (conversion-type-id)]
    DECLTYPE    [reduce using rule 180 (conversion-type-id)]
    MULT        [reduce using rule 180 (conversion-type-id)]
    $default    reduce using rule 180 (conversion-type-id)

    class-name             go to state 65
    conversion-declarator  go to state 516
    decltype-specifier     go to state 138
    enum-name              go to state 84
    namespace-alias        go to state 99
    namespace-name         go to state 102
    nested-name-specifier  go to state 517
    ptr-operator           go to state 518
    simple-template-id     go to state 141
    template-name          go to state 142
    type-name              go to state 143
    typedef-name           go to state 126


State 218

  562 literal-operator-id: OPERATOR user-defined-string-literal •

    $default  reduce using rule 562 (literal-operator-id)


State 219

  643 named-namespace-definition: INLINE NAMESPACE • IDENTIFIER OPEN_BRACE namespace-body CLOSE_BRACE
  645                           | INLINE NAMESPACE • attribute-specifier-seq IDENTIFIER OPEN_BRACE namespace-body CLOSE_BRACE
  1136 unnamed-namespace-definition: INLINE NAMESPACE • OPEN_BRACE namespace-body CLOSE_BRACE
  1138                             | INLINE NAMESPACE • attribute-specifier-seq OPEN_BRACE namespace-body CLOSE_BRACE

    IDENTIFIER   shift, and go to state 519
    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10
    OPEN_BRACE   shift, and go to state 520

    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 521


State 220

  230 decltype-specifier: DECLTYPE OPEN_PAREN • expression CLOSE_PAREN
  851 placeholder-type-specifier: DECLTYPE OPEN_PAREN • AUTO CLOSE_PAREN

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 522
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 525
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    expression                           go to state 527
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 221

  145 class-name: IDENTIFIER •
  262 elaborated-enum-specifier: ENUM IDENTIFIER •
  294 enum-name: IDENTIFIER •
  647 namespace-alias: IDENTIFIER •
  653 namespace-name: IDENTIFIER •
  1052 template-name: IDENTIFIER •
  1110 typedef-name: IDENTIFIER •

    SCOPE     reduce using rule 145 (class-name)
    SCOPE     [reduce using rule 262 (elaborated-enum-specifier)]
    SCOPE     [reduce using rule 294 (enum-name)]
    SCOPE     [reduce using rule 647 (namespace-alias)]
    SCOPE     [reduce using rule 653 (namespace-name)]
    SCOPE     [reduce using rule 1110 (typedef-name)]
    LESS      reduce using rule 262 (elaborated-enum-specifier)
    LESS      [reduce using rule 1052 (template-name)]
    $default  reduce using rule 262 (elaborated-enum-specifier)


State 222

  292 enum-key: ENUM CLASS •

    $default  reduce using rule 292 (enum-key)


State 223

  293 enum-key: ENUM STRUCT •

    $default  reduce using rule 293 (enum-key)


State 224

  263 elaborated-enum-specifier: ENUM nested-name-specifier • IDENTIFIER
  659 nested-name-specifier: nested-name-specifier • IDENTIFIER SCOPE
  660                      | nested-name-specifier • simple-template-id SCOPE
  661                      | nested-name-specifier • TEMPLATE simple-template-id SCOPE

    IDENTIFIER  shift, and go to state 533
    TEMPLATE    shift, and go to state 350

    simple-template-id  go to state 534
    template-name       go to state 142


State 225

  319 explicit-instantiation: EXTERN TEMPLATE • declaration

    USING          shift, and go to state 1
    IDENTIFIER     shift, and go to state 2
    SEMICOLON      shift, and go to state 3
    ALIGNAS        shift, and go to state 4
    OPEN_PAREN     shift, and go to state 5
    ELLIPSIS       shift, and go to state 6
    AND            shift, and go to state 7
    ASM            shift, and go to state 8
    SCOPE          shift, and go to state 9
    OPEN_SQUARE    shift, and go to state 10
    VIRTUAL        shift, and go to state 11
    CLASS          shift, and go to state 12
    STRUCT         shift, and go to state 13
    UNION          shift, and go to state 14
    TEMPLATE       shift, and go to state 15
    AND_AND        shift, and go to state 16
    OPERATOR       shift, and go to state 17
    CONST          shift, and go to state 18
    VOLATILE       shift, and go to state 19
    FRIEND         shift, and go to state 20
    TYPEDEF        shift, and go to state 21
    CONSTEXPR      shift, and go to state 22
    CONSTEVAL      shift, and go to state 23
    CONSTINIT      shift, and go to state 24
    INLINE         shift, and go to state 25
    DECLTYPE       shift, and go to state 26
    ENUM           shift, and go to state 27
    EXTERN         shift, and go to state 28
    EXPLICIT       shift, and go to state 29
    EXPORT         shift, and go to state 157
    MULT           shift, and go to state 31
    IMPORT         shift, and go to state 33
    NAMESPACE      shift, and go to state 34
    COMPL          shift, and go to state 35
    AUTO           shift, and go to state 36
    CHAR           shift, and go to state 37
    CHAR8_T        shift, and go to state 38
    CHAR16_T       shift, and go to state 39
    CHAR32_T       shift, and go to state 40
    WCHAR_T        shift, and go to state 41
    BOOL           shift, and go to state 42
    SHORT          shift, and go to state 43
    INT            shift, and go to state 44
    LONG           shift, and go to state 45
    SIGNED         shift, and go to state 46
    UNSIGNED       shift, and go to state 47
    FLOAT          shift, and go to state 48
    DOUBLE         shift, and go to state 49
    VOID           shift, and go to state 50
    STATIC_ASSERT  shift, and go to state 51
    STATIC         shift, and go to state 52
    THREAD_LOCAL   shift, and go to state 53
    MUTABLE        shift, and go to state 54
    TYPENAME       shift, and go to state 55

    alias-declaration                go to state 56
    alignment-specifier              go to state 57
    asm-declaration                  go to state 58
    attribute-declaration            go to state 59
    attribute-specifier              go to state 60
    attribute-specifier-seq          go to state 61
    block-declaration                go to state 62
    class-head                       go to state 63
    class-key                        go to state 64
    class-name                       go to state 65
    class-specifier                  go to state 66
    concept-name                     go to state 67
    conversion-function-id           go to state 68
    cv-qualifier                     go to state 69
    decl-specifier                   go to state 70
    decl-specifier-seq               go to state 71
    declaration                      go to state 535
    declarator                       go to state 74
    declarator-id                    go to state 75
    decltype-specifier               go to state 76
    deduction-guide                  go to state 77
    defining-type-specifier          go to state 78
    elaborated-enum-specifier        go to state 79
    elaborated-type-specifier        go to state 80
    empty-declaration                go to state 81
    enum-head                        go to state 82
    enum-key                         go to state 83
    enum-name                        go to state 84
    enum-specifier                   go to state 85
    explicit-instantiation           go to state 86
    explicit-specialization          go to state 87
    explicit-specifier               go to state 88
    export-declaration               go to state 89
    function-definition              go to state 90
    function-specifier               go to state 91
    id-expression                    go to state 93
    linkage-specification            go to state 94
    literal-operator-id              go to state 95
    module-import-declaration        go to state 97
    named-namespace-definition       go to state 98
    namespace-alias                  go to state 99
    namespace-alias-definition       go to state 100
    namespace-definition             go to state 101
    namespace-name                   go to state 102
    nested-name-specifier            go to state 103
    nested-namespace-definition      go to state 104
    nodeclspec-function-declaration  go to state 105
    noptr-declarator                 go to state 106
    opaque-enum-declaration          go to state 107
    operator-function-id             go to state 108
    placeholder-type-specifier       go to state 109
    ptr-declarator                   go to state 110
    ptr-operator                     go to state 111
    qualified-id                     go to state 112
    simple-declaration               go to state 113
    simple-template-id               go to state 114
    simple-type-specifier            go to state 115
    static_assert-declaration        go to state 116
    storage-class-specifier          go to state 117
    template-declaration             go to state 118
    template-head                    go to state 119
    template-id                      go to state 120
    template-name                    go to state 121
    type-constraint                  go to state 123
    type-name                        go to state 124
    type-specifier                   go to state 125
    typedef-name                     go to state 126
    typename-specifier               go to state 127
    unnamed-namespace-definition     go to state 128
    unqualified-id                   go to state 129
    using-declaration                go to state 130
    using-directive                  go to state 131
    using-enum-declaration           go to state 132


State 226

  551 linkage-specification: EXTERN string-literal • OPEN_BRACE CLOSE_BRACE
  552                      | EXTERN string-literal • OPEN_BRACE declaration-seq CLOSE_BRACE
  553                      | EXTERN string-literal • declaration

    USING          shift, and go to state 1
    IDENTIFIER     shift, and go to state 2
    SEMICOLON      shift, and go to state 3
    ALIGNAS        shift, and go to state 4
    OPEN_PAREN     shift, and go to state 5
    ELLIPSIS       shift, and go to state 6
    AND            shift, and go to state 7
    ASM            shift, and go to state 8
    SCOPE          shift, and go to state 9
    OPEN_SQUARE    shift, and go to state 10
    OPEN_BRACE     shift, and go to state 536
    VIRTUAL        shift, and go to state 11
    CLASS          shift, and go to state 12
    STRUCT         shift, and go to state 13
    UNION          shift, and go to state 14
    TEMPLATE       shift, and go to state 15
    AND_AND        shift, and go to state 16
    OPERATOR       shift, and go to state 17
    CONST          shift, and go to state 18
    VOLATILE       shift, and go to state 19
    FRIEND         shift, and go to state 20
    TYPEDEF        shift, and go to state 21
    CONSTEXPR      shift, and go to state 22
    CONSTEVAL      shift, and go to state 23
    CONSTINIT      shift, and go to state 24
    INLINE         shift, and go to state 25
    DECLTYPE       shift, and go to state 26
    ENUM           shift, and go to state 27
    EXTERN         shift, and go to state 28
    EXPLICIT       shift, and go to state 29
    EXPORT         shift, and go to state 157
    MULT           shift, and go to state 31
    IMPORT         shift, and go to state 33
    NAMESPACE      shift, and go to state 34
    COMPL          shift, and go to state 35
    AUTO           shift, and go to state 36
    CHAR           shift, and go to state 37
    CHAR8_T        shift, and go to state 38
    CHAR16_T       shift, and go to state 39
    CHAR32_T       shift, and go to state 40
    WCHAR_T        shift, and go to state 41
    BOOL           shift, and go to state 42
    SHORT          shift, and go to state 43
    INT            shift, and go to state 44
    LONG           shift, and go to state 45
    SIGNED         shift, and go to state 46
    UNSIGNED       shift, and go to state 47
    FLOAT          shift, and go to state 48
    DOUBLE         shift, and go to state 49
    VOID           shift, and go to state 50
    STATIC_ASSERT  shift, and go to state 51
    STATIC         shift, and go to state 52
    THREAD_LOCAL   shift, and go to state 53
    MUTABLE        shift, and go to state 54
    TYPENAME       shift, and go to state 55

    alias-declaration                go to state 56
    alignment-specifier              go to state 57
    asm-declaration                  go to state 58
    attribute-declaration            go to state 59
    attribute-specifier              go to state 60
    attribute-specifier-seq          go to state 61
    block-declaration                go to state 62
    class-head                       go to state 63
    class-key                        go to state 64
    class-name                       go to state 65
    class-specifier                  go to state 66
    concept-name                     go to state 67
    conversion-function-id           go to state 68
    cv-qualifier                     go to state 69
    decl-specifier                   go to state 70
    decl-specifier-seq               go to state 71
    declaration                      go to state 537
    declarator                       go to state 74
    declarator-id                    go to state 75
    decltype-specifier               go to state 76
    deduction-guide                  go to state 77
    defining-type-specifier          go to state 78
    elaborated-enum-specifier        go to state 79
    elaborated-type-specifier        go to state 80
    empty-declaration                go to state 81
    enum-head                        go to state 82
    enum-key                         go to state 83
    enum-name                        go to state 84
    enum-specifier                   go to state 85
    explicit-instantiation           go to state 86
    explicit-specialization          go to state 87
    explicit-specifier               go to state 88
    export-declaration               go to state 89
    function-definition              go to state 90
    function-specifier               go to state 91
    id-expression                    go to state 93
    linkage-specification            go to state 94
    literal-operator-id              go to state 95
    module-import-declaration        go to state 97
    named-namespace-definition       go to state 98
    namespace-alias                  go to state 99
    namespace-alias-definition       go to state 100
    namespace-definition             go to state 101
    namespace-name                   go to state 102
    nested-name-specifier            go to state 103
    nested-namespace-definition      go to state 104
    nodeclspec-function-declaration  go to state 105
    noptr-declarator                 go to state 106
    opaque-enum-declaration          go to state 107
    operator-function-id             go to state 108
    placeholder-type-specifier       go to state 109
    ptr-declarator                   go to state 110
    ptr-operator                     go to state 111
    qualified-id                     go to state 112
    simple-declaration               go to state 113
    simple-template-id               go to state 114
    simple-type-specifier            go to state 115
    static_assert-declaration        go to state 116
    storage-class-specifier          go to state 117
    template-declaration             go to state 118
    template-head                    go to state 119
    template-id                      go to state 120
    template-name                    go to state 121
    type-constraint                  go to state 123
    type-name                        go to state 124
    type-specifier                   go to state 125
    typedef-name                     go to state 126
    typename-specifier               go to state 127
    unnamed-namespace-definition     go to state 128
    unqualified-id                   go to state 129
    using-declaration                go to state 130
    using-directive                  go to state 131
    using-enum-declaration           go to state 132


State 227

  322 explicit-specifier: EXPLICIT OPEN_PAREN • constant-expression CLOSE_PAREN

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 407
    constant-expression                  go to state 538
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 430
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 228

  329 export-declaration: EXPORT OPEN_BRACE • CLOSE_BRACE
  330                   | EXPORT OPEN_BRACE • declaration-seq CLOSE_BRACE

    USING          shift, and go to state 1
    IDENTIFIER     shift, and go to state 2
    SEMICOLON      shift, and go to state 3
    ALIGNAS        shift, and go to state 4
    OPEN_PAREN     shift, and go to state 5
    ELLIPSIS       shift, and go to state 6
    AND            shift, and go to state 7
    ASM            shift, and go to state 8
    SCOPE          shift, and go to state 9
    OPEN_SQUARE    shift, and go to state 10
    CLOSE_BRACE    shift, and go to state 539
    VIRTUAL        shift, and go to state 11
    CLASS          shift, and go to state 12
    STRUCT         shift, and go to state 13
    UNION          shift, and go to state 14
    TEMPLATE       shift, and go to state 15
    AND_AND        shift, and go to state 16
    OPERATOR       shift, and go to state 17
    CONST          shift, and go to state 18
    VOLATILE       shift, and go to state 19
    FRIEND         shift, and go to state 20
    TYPEDEF        shift, and go to state 21
    CONSTEXPR      shift, and go to state 22
    CONSTEVAL      shift, and go to state 23
    CONSTINIT      shift, and go to state 24
    INLINE         shift, and go to state 25
    DECLTYPE       shift, and go to state 26
    ENUM           shift, and go to state 27
    EXTERN         shift, and go to state 28
    EXPLICIT       shift, and go to state 29
    EXPORT         shift, and go to state 157
    MULT           shift, and go to state 31
    IMPORT         shift, and go to state 33
    NAMESPACE      shift, and go to state 34
    COMPL          shift, and go to state 35
    AUTO           shift, and go to state 36
    CHAR           shift, and go to state 37
    CHAR8_T        shift, and go to state 38
    CHAR16_T       shift, and go to state 39
    CHAR32_T       shift, and go to state 40
    WCHAR_T        shift, and go to state 41
    BOOL           shift, and go to state 42
    SHORT          shift, and go to state 43
    INT            shift, and go to state 44
    LONG           shift, and go to state 45
    SIGNED         shift, and go to state 46
    UNSIGNED       shift, and go to state 47
    FLOAT          shift, and go to state 48
    DOUBLE         shift, and go to state 49
    VOID           shift, and go to state 50
    STATIC_ASSERT  shift, and go to state 51
    STATIC         shift, and go to state 52
    THREAD_LOCAL   shift, and go to state 53
    MUTABLE        shift, and go to state 54
    TYPENAME       shift, and go to state 55

    alias-declaration                go to state 56
    alignment-specifier              go to state 57
    asm-declaration                  go to state 58
    attribute-declaration            go to state 59
    attribute-specifier              go to state 60
    attribute-specifier-seq          go to state 61
    block-declaration                go to state 62
    class-head                       go to state 63
    class-key                        go to state 64
    class-name                       go to state 65
    class-specifier                  go to state 66
    concept-name                     go to state 67
    conversion-function-id           go to state 68
    cv-qualifier                     go to state 69
    decl-specifier                   go to state 70
    decl-specifier-seq               go to state 71
    declaration                      go to state 72
    declaration-seq                  go to state 540
    declarator                       go to state 74
    declarator-id                    go to state 75
    decltype-specifier               go to state 76
    deduction-guide                  go to state 77
    defining-type-specifier          go to state 78
    elaborated-enum-specifier        go to state 79
    elaborated-type-specifier        go to state 80
    empty-declaration                go to state 81
    enum-head                        go to state 82
    enum-key                         go to state 83
    enum-name                        go to state 84
    enum-specifier                   go to state 85
    explicit-instantiation           go to state 86
    explicit-specialization          go to state 87
    explicit-specifier               go to state 88
    export-declaration               go to state 89
    function-definition              go to state 90
    function-specifier               go to state 91
    id-expression                    go to state 93
    linkage-specification            go to state 94
    literal-operator-id              go to state 95
    module-import-declaration        go to state 97
    named-namespace-definition       go to state 98
    namespace-alias                  go to state 99
    namespace-alias-definition       go to state 100
    namespace-definition             go to state 101
    namespace-name                   go to state 102
    nested-name-specifier            go to state 103
    nested-namespace-definition      go to state 104
    nodeclspec-function-declaration  go to state 105
    noptr-declarator                 go to state 106
    opaque-enum-declaration          go to state 107
    operator-function-id             go to state 108
    placeholder-type-specifier       go to state 109
    ptr-declarator                   go to state 110
    ptr-operator                     go to state 111
    qualified-id                     go to state 112
    simple-declaration               go to state 113
    simple-template-id               go to state 114
    simple-type-specifier            go to state 115
    static_assert-declaration        go to state 116
    storage-class-specifier          go to state 117
    template-declaration             go to state 118
    template-head                    go to state 119
    template-id                      go to state 120
    template-name                    go to state 121
    type-constraint                  go to state 123
    type-name                        go to state 124
    type-specifier                   go to state 125
    typedef-name                     go to state 126
    typename-specifier               go to state 127
    unnamed-namespace-definition     go to state 128
    unqualified-id                   go to state 129
    using-declaration                go to state 130
    using-directive                  go to state 131
    using-enum-declaration           go to state 132


State 229

  619 module-declaration: EXPORT MODULE • module-name SEMICOLON
  621                   | EXPORT MODULE • module-name module-partition SEMICOLON
  623                   | EXPORT MODULE • module-name attribute-specifier-seq SEMICOLON
  625                   | EXPORT MODULE • module-name module-partition attribute-specifier-seq SEMICOLON

    IDENTIFIER  shift, and go to state 235

    module-name            go to state 541
    module-name-qualifier  go to state 238


State 230

  328 export-declaration: EXPORT declaration •

    $default  reduce using rule 328 (export-declaration)


State 231

  222 declaration: module-import-declaration •
  331 export-declaration: EXPORT module-import-declaration •

    $end           reduce using rule 222 (declaration)
    $end           [reduce using rule 331 (export-declaration)]
    PRIVATE        reduce using rule 222 (declaration)
    PRIVATE        [reduce using rule 331 (export-declaration)]
    PROTECTED      reduce using rule 222 (declaration)
    PROTECTED      [reduce using rule 331 (export-declaration)]
    PUBLIC         reduce using rule 222 (declaration)
    PUBLIC         [reduce using rule 331 (export-declaration)]
    USING          reduce using rule 222 (declaration)
    USING          [reduce using rule 331 (export-declaration)]
    IDENTIFIER     reduce using rule 222 (declaration)
    IDENTIFIER     [reduce using rule 331 (export-declaration)]
    SEMICOLON      reduce using rule 222 (declaration)
    SEMICOLON      [reduce using rule 331 (export-declaration)]
    ALIGNAS        reduce using rule 222 (declaration)
    ALIGNAS        [reduce using rule 331 (export-declaration)]
    OPEN_PAREN     reduce using rule 222 (declaration)
    OPEN_PAREN     [reduce using rule 331 (export-declaration)]
    ELLIPSIS       reduce using rule 222 (declaration)
    ELLIPSIS       [reduce using rule 331 (export-declaration)]
    AND            reduce using rule 222 (declaration)
    AND            [reduce using rule 331 (export-declaration)]
    ASM            reduce using rule 222 (declaration)
    ASM            [reduce using rule 331 (export-declaration)]
    SCOPE          reduce using rule 222 (declaration)
    SCOPE          [reduce using rule 331 (export-declaration)]
    OPEN_SQUARE    reduce using rule 222 (declaration)
    OPEN_SQUARE    [reduce using rule 331 (export-declaration)]
    COLON          reduce using rule 222 (declaration)
    COLON          [reduce using rule 331 (export-declaration)]
    CLOSE_BRACE    reduce using rule 222 (declaration)
    CLOSE_BRACE    [reduce using rule 331 (export-declaration)]
    VIRTUAL        reduce using rule 222 (declaration)
    VIRTUAL        [reduce using rule 331 (export-declaration)]
    CLASS          reduce using rule 222 (declaration)
    CLASS          [reduce using rule 331 (export-declaration)]
    STRUCT         reduce using rule 222 (declaration)
    STRUCT         [reduce using rule 331 (export-declaration)]
    UNION          reduce using rule 222 (declaration)
    UNION          [reduce using rule 331 (export-declaration)]
    TEMPLATE       reduce using rule 222 (declaration)
    TEMPLATE       [reduce using rule 331 (export-declaration)]
    AND_AND        reduce using rule 222 (declaration)
    AND_AND        [reduce using rule 331 (export-declaration)]
    OPERATOR       reduce using rule 222 (declaration)
    OPERATOR       [reduce using rule 331 (export-declaration)]
    CONST          reduce using rule 222 (declaration)
    CONST          [reduce using rule 331 (export-declaration)]
    VOLATILE       reduce using rule 222 (declaration)
    VOLATILE       [reduce using rule 331 (export-declaration)]
    FRIEND         reduce using rule 222 (declaration)
    FRIEND         [reduce using rule 331 (export-declaration)]
    TYPEDEF        reduce using rule 222 (declaration)
    TYPEDEF        [reduce using rule 331 (export-declaration)]
    CONSTEXPR      reduce using rule 222 (declaration)
    CONSTEXPR      [reduce using rule 331 (export-declaration)]
    CONSTEVAL      reduce using rule 222 (declaration)
    CONSTEVAL      [reduce using rule 331 (export-declaration)]
    CONSTINIT      reduce using rule 222 (declaration)
    CONSTINIT      [reduce using rule 331 (export-declaration)]
    INLINE         reduce using rule 222 (declaration)
    INLINE         [reduce using rule 331 (export-declaration)]
    DECLTYPE       reduce using rule 222 (declaration)
    DECLTYPE       [reduce using rule 331 (export-declaration)]
    ENUM           reduce using rule 222 (declaration)
    ENUM           [reduce using rule 331 (export-declaration)]
    EXTERN         reduce using rule 222 (declaration)
    EXTERN         [reduce using rule 331 (export-declaration)]
    EXPLICIT       reduce using rule 222 (declaration)
    EXPLICIT       [reduce using rule 331 (export-declaration)]
    EXPORT         reduce using rule 222 (declaration)
    EXPORT         [reduce using rule 331 (export-declaration)]
    MULT           reduce using rule 222 (declaration)
    MULT           [reduce using rule 331 (export-declaration)]
    MODULE         reduce using rule 222 (declaration)
    MODULE         [reduce using rule 331 (export-declaration)]
    IMPORT         reduce using rule 222 (declaration)
    IMPORT         [reduce using rule 331 (export-declaration)]
    NAMESPACE      reduce using rule 222 (declaration)
    NAMESPACE      [reduce using rule 331 (export-declaration)]
    COMPL          reduce using rule 222 (declaration)
    COMPL          [reduce using rule 331 (export-declaration)]
    AUTO           reduce using rule 222 (declaration)
    AUTO           [reduce using rule 331 (export-declaration)]
    CHAR           reduce using rule 222 (declaration)
    CHAR           [reduce using rule 331 (export-declaration)]
    CHAR8_T        reduce using rule 222 (declaration)
    CHAR8_T        [reduce using rule 331 (export-declaration)]
    CHAR16_T       reduce using rule 222 (declaration)
    CHAR16_T       [reduce using rule 331 (export-declaration)]
    CHAR32_T       reduce using rule 222 (declaration)
    CHAR32_T       [reduce using rule 331 (export-declaration)]
    WCHAR_T        reduce using rule 222 (declaration)
    WCHAR_T        [reduce using rule 331 (export-declaration)]
    BOOL           reduce using rule 222 (declaration)
    BOOL           [reduce using rule 331 (export-declaration)]
    SHORT          reduce using rule 222 (declaration)
    SHORT          [reduce using rule 331 (export-declaration)]
    INT            reduce using rule 222 (declaration)
    INT            [reduce using rule 331 (export-declaration)]
    LONG           reduce using rule 222 (declaration)
    LONG           [reduce using rule 331 (export-declaration)]
    SIGNED         reduce using rule 222 (declaration)
    SIGNED         [reduce using rule 331 (export-declaration)]
    UNSIGNED       reduce using rule 222 (declaration)
    UNSIGNED       [reduce using rule 331 (export-declaration)]
    FLOAT          reduce using rule 222 (declaration)
    FLOAT          [reduce using rule 331 (export-declaration)]
    DOUBLE         reduce using rule 222 (declaration)
    DOUBLE         [reduce using rule 331 (export-declaration)]
    VOID           reduce using rule 222 (declaration)
    VOID           [reduce using rule 331 (export-declaration)]
    STATIC_ASSERT  reduce using rule 222 (declaration)
    STATIC_ASSERT  [reduce using rule 331 (export-declaration)]
    STATIC         reduce using rule 222 (declaration)
    STATIC         [reduce using rule 331 (export-declaration)]
    THREAD_LOCAL   reduce using rule 222 (declaration)
    THREAD_LOCAL   [reduce using rule 331 (export-declaration)]
    MUTABLE        reduce using rule 222 (declaration)
    MUTABLE        [reduce using rule 331 (export-declaration)]
    TYPENAME       reduce using rule 222 (declaration)
    TYPENAME       [reduce using rule 331 (export-declaration)]
    $default       reduce using rule 222 (declaration)


State 232

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  894 ptr-operator: MULT attribute-specifier-seq •
  896             | MULT attribute-specifier-seq • cv-qualifier-seq

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10
    CONST        shift, and go to state 18
    VOLATILE     shift, and go to state 19

    ALIGNAS      [reduce using rule 894 (ptr-operator)]
    OPEN_SQUARE  [reduce using rule 894 (ptr-operator)]
    CONST        [reduce using rule 894 (ptr-operator)]
    VOLATILE     [reduce using rule 894 (ptr-operator)]
    $default     reduce using rule 894 (ptr-operator)

    alignment-specifier  go to state 57
    attribute-specifier  go to state 260
    cv-qualifier         go to state 233
    cv-qualifier-seq     go to state 542


State 233

  187 cv-qualifier-seq: cv-qualifier •
  188                 | cv-qualifier • cv-qualifier-seq

    CONST     shift, and go to state 18
    VOLATILE  shift, and go to state 19

    CONST     [reduce using rule 187 (cv-qualifier-seq)]
    VOLATILE  [reduce using rule 187 (cv-qualifier-seq)]
    $default  reduce using rule 187 (cv-qualifier-seq)

    cv-qualifier      go to state 233
    cv-qualifier-seq  go to state 543


State 234

  895 ptr-operator: MULT cv-qualifier-seq •

    $default  reduce using rule 895 (ptr-operator)


State 235

  634 module-name: IDENTIFIER •
  635 module-name-qualifier: IDENTIFIER • DOT

    DOT  shift, and go to state 544

    $default  reduce using rule 634 (module-name)


State 236

  411 global-module-fragment: MODULE SEMICOLON •
  412                       | MODULE SEMICOLON • declaration-seq

    USING          shift, and go to state 1
    IDENTIFIER     shift, and go to state 2
    SEMICOLON      shift, and go to state 3
    ALIGNAS        shift, and go to state 4
    OPEN_PAREN     shift, and go to state 5
    ELLIPSIS       shift, and go to state 6
    AND            shift, and go to state 7
    ASM            shift, and go to state 8
    SCOPE          shift, and go to state 9
    OPEN_SQUARE    shift, and go to state 10
    VIRTUAL        shift, and go to state 11
    CLASS          shift, and go to state 12
    STRUCT         shift, and go to state 13
    UNION          shift, and go to state 14
    TEMPLATE       shift, and go to state 15
    AND_AND        shift, and go to state 16
    OPERATOR       shift, and go to state 17
    CONST          shift, and go to state 18
    VOLATILE       shift, and go to state 19
    FRIEND         shift, and go to state 20
    TYPEDEF        shift, and go to state 21
    CONSTEXPR      shift, and go to state 22
    CONSTEVAL      shift, and go to state 23
    CONSTINIT      shift, and go to state 24
    INLINE         shift, and go to state 25
    DECLTYPE       shift, and go to state 26
    ENUM           shift, and go to state 27
    EXTERN         shift, and go to state 28
    EXPLICIT       shift, and go to state 29
    EXPORT         shift, and go to state 157
    MULT           shift, and go to state 31
    IMPORT         shift, and go to state 33
    NAMESPACE      shift, and go to state 34
    COMPL          shift, and go to state 35
    AUTO           shift, and go to state 36
    CHAR           shift, and go to state 37
    CHAR8_T        shift, and go to state 38
    CHAR16_T       shift, and go to state 39
    CHAR32_T       shift, and go to state 40
    WCHAR_T        shift, and go to state 41
    BOOL           shift, and go to state 42
    SHORT          shift, and go to state 43
    INT            shift, and go to state 44
    LONG           shift, and go to state 45
    SIGNED         shift, and go to state 46
    UNSIGNED       shift, and go to state 47
    FLOAT          shift, and go to state 48
    DOUBLE         shift, and go to state 49
    VOID           shift, and go to state 50
    STATIC_ASSERT  shift, and go to state 51
    STATIC         shift, and go to state 52
    THREAD_LOCAL   shift, and go to state 53
    MUTABLE        shift, and go to state 54
    TYPENAME       shift, and go to state 55

    EXPORT    [reduce using rule 411 (global-module-fragment)]
    $default  reduce using rule 411 (global-module-fragment)

    alias-declaration                go to state 56
    alignment-specifier              go to state 57
    asm-declaration                  go to state 58
    attribute-declaration            go to state 59
    attribute-specifier              go to state 60
    attribute-specifier-seq          go to state 61
    block-declaration                go to state 62
    class-head                       go to state 63
    class-key                        go to state 64
    class-name                       go to state 65
    class-specifier                  go to state 66
    concept-name                     go to state 67
    conversion-function-id           go to state 68
    cv-qualifier                     go to state 69
    decl-specifier                   go to state 70
    decl-specifier-seq               go to state 71
    declaration                      go to state 72
    declaration-seq                  go to state 545
    declarator                       go to state 74
    declarator-id                    go to state 75
    decltype-specifier               go to state 76
    deduction-guide                  go to state 77
    defining-type-specifier          go to state 78
    elaborated-enum-specifier        go to state 79
    elaborated-type-specifier        go to state 80
    empty-declaration                go to state 81
    enum-head                        go to state 82
    enum-key                         go to state 83
    enum-name                        go to state 84
    enum-specifier                   go to state 85
    explicit-instantiation           go to state 86
    explicit-specialization          go to state 87
    explicit-specifier               go to state 88
    export-declaration               go to state 89
    function-definition              go to state 90
    function-specifier               go to state 91
    id-expression                    go to state 93
    linkage-specification            go to state 94
    literal-operator-id              go to state 95
    module-import-declaration        go to state 97
    named-namespace-definition       go to state 98
    namespace-alias                  go to state 99
    namespace-alias-definition       go to state 100
    namespace-definition             go to state 101
    namespace-name                   go to state 102
    nested-name-specifier            go to state 103
    nested-namespace-definition      go to state 104
    nodeclspec-function-declaration  go to state 105
    noptr-declarator                 go to state 106
    opaque-enum-declaration          go to state 107
    operator-function-id             go to state 108
    placeholder-type-specifier       go to state 109
    ptr-declarator                   go to state 110
    ptr-operator                     go to state 111
    qualified-id                     go to state 112
    simple-declaration               go to state 113
    simple-template-id               go to state 114
    simple-type-specifier            go to state 115
    static_assert-declaration        go to state 116
    storage-class-specifier          go to state 117
    template-declaration             go to state 118
    template-head                    go to state 119
    template-id                      go to state 120
    template-name                    go to state 121
    type-constraint                  go to state 123
    type-name                        go to state 124
    type-specifier                   go to state 125
    typedef-name                     go to state 126
    typename-specifier               go to state 127
    unnamed-namespace-definition     go to state 128
    unqualified-id                   go to state 129
    using-declaration                go to state 130
    using-directive                  go to state 131
    using-enum-declaration           go to state 132


State 237

  620 module-declaration: MODULE module-name • SEMICOLON
  622                   | MODULE module-name • module-partition SEMICOLON
  624                   | MODULE module-name • attribute-specifier-seq SEMICOLON
  626                   | MODULE module-name • module-partition attribute-specifier-seq SEMICOLON

    SEMICOLON    shift, and go to state 546
    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10
    COLON        shift, and go to state 239

    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 547
    module-partition         go to state 548


State 238

  633 module-name: module-name-qualifier • IDENTIFIER
  636 module-name-qualifier: module-name-qualifier • IDENTIFIER DOT

    IDENTIFIER  shift, and go to state 549


State 239

  637 module-partition: COLON • IDENTIFIER
  638                 | COLON • module-name-qualifier IDENTIFIER

    IDENTIFIER  shift, and go to state 550

    module-name-qualifier  go to state 551


State 240

  419 header-name: LESS • h-char-sequence GREATER

    H_CHAR  shift, and go to state 552

    h-char           go to state 553
    h-char-sequence  go to state 554


State 241

  420 header-name: DOUBLE_QUOTE • q-char-sequence DOUBLE_QUOTE

    Q_CHAR  shift, and go to state 555

    q-char           go to state 556
    q-char-sequence  go to state 557


State 242

  631 module-import-declaration: IMPORT header-name • SEMICOLON
  632                          | IMPORT header-name • attribute-specifier-seq SEMICOLON

    SEMICOLON    shift, and go to state 558
    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 559


State 243

  627 module-import-declaration: IMPORT module-name • SEMICOLON
  628                          | IMPORT module-name • attribute-specifier-seq SEMICOLON

    SEMICOLON    shift, and go to state 560
    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 561


State 244

  629 module-import-declaration: IMPORT module-partition • SEMICOLON
  630                          | IMPORT module-partition • attribute-specifier-seq SEMICOLON

    SEMICOLON    shift, and go to state 562
    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 563


State 245

  273 enclosing-namespace-specifier: IDENTIFIER •
  644 named-namespace-definition: NAMESPACE IDENTIFIER • OPEN_BRACE namespace-body CLOSE_BRACE
  648 namespace-alias-definition: NAMESPACE IDENTIFIER • EQ qualified-namespace-specifier SEMICOLON

    EQ          shift, and go to state 564
    OPEN_BRACE  shift, and go to state 565

    $default  reduce using rule 273 (enclosing-namespace-specifier)


State 246

  1137 unnamed-namespace-definition: NAMESPACE OPEN_BRACE • namespace-body CLOSE_BRACE

    USING          shift, and go to state 1
    IDENTIFIER     shift, and go to state 2
    SEMICOLON      shift, and go to state 3
    ALIGNAS        shift, and go to state 4
    OPEN_PAREN     shift, and go to state 5
    ELLIPSIS       shift, and go to state 6
    AND            shift, and go to state 7
    ASM            shift, and go to state 8
    SCOPE          shift, and go to state 9
    OPEN_SQUARE    shift, and go to state 10
    VIRTUAL        shift, and go to state 11
    CLASS          shift, and go to state 12
    STRUCT         shift, and go to state 13
    UNION          shift, and go to state 14
    TEMPLATE       shift, and go to state 15
    AND_AND        shift, and go to state 16
    OPERATOR       shift, and go to state 17
    CONST          shift, and go to state 18
    VOLATILE       shift, and go to state 19
    FRIEND         shift, and go to state 20
    TYPEDEF        shift, and go to state 21
    CONSTEXPR      shift, and go to state 22
    CONSTEVAL      shift, and go to state 23
    CONSTINIT      shift, and go to state 24
    INLINE         shift, and go to state 25
    DECLTYPE       shift, and go to state 26
    ENUM           shift, and go to state 27
    EXTERN         shift, and go to state 28
    EXPLICIT       shift, and go to state 29
    EXPORT         shift, and go to state 157
    MULT           shift, and go to state 31
    IMPORT         shift, and go to state 33
    NAMESPACE      shift, and go to state 34
    COMPL          shift, and go to state 35
    AUTO           shift, and go to state 36
    CHAR           shift, and go to state 37
    CHAR8_T        shift, and go to state 38
    CHAR16_T       shift, and go to state 39
    CHAR32_T       shift, and go to state 40
    WCHAR_T        shift, and go to state 41
    BOOL           shift, and go to state 42
    SHORT          shift, and go to state 43
    INT            shift, and go to state 44
    LONG           shift, and go to state 45
    SIGNED         shift, and go to state 46
    UNSIGNED       shift, and go to state 47
    FLOAT          shift, and go to state 48
    DOUBLE         shift, and go to state 49
    VOID           shift, and go to state 50
    STATIC_ASSERT  shift, and go to state 51
    STATIC         shift, and go to state 52
    THREAD_LOCAL   shift, and go to state 53
    MUTABLE        shift, and go to state 54
    TYPENAME       shift, and go to state 55

    alias-declaration                go to state 56
    alignment-specifier              go to state 57
    asm-declaration                  go to state 58
    attribute-declaration            go to state 59
    attribute-specifier              go to state 60
    attribute-specifier-seq          go to state 61
    block-declaration                go to state 62
    class-head                       go to state 63
    class-key                        go to state 64
    class-name                       go to state 65
    class-specifier                  go to state 66
    concept-name                     go to state 67
    conversion-function-id           go to state 68
    cv-qualifier                     go to state 69
    decl-specifier                   go to state 70
    decl-specifier-seq               go to state 71
    declaration                      go to state 72
    declaration-seq                  go to state 566
    declarator                       go to state 74
    declarator-id                    go to state 75
    decltype-specifier               go to state 76
    deduction-guide                  go to state 77
    defining-type-specifier          go to state 78
    elaborated-enum-specifier        go to state 79
    elaborated-type-specifier        go to state 80
    empty-declaration                go to state 81
    enum-head                        go to state 82
    enum-key                         go to state 83
    enum-name                        go to state 84
    enum-specifier                   go to state 85
    explicit-instantiation           go to state 86
    explicit-specialization          go to state 87
    explicit-specifier               go to state 88
    export-declaration               go to state 89
    function-definition              go to state 90
    function-specifier               go to state 91
    id-expression                    go to state 93
    linkage-specification            go to state 94
    literal-operator-id              go to state 95
    module-import-declaration        go to state 97
    named-namespace-definition       go to state 98
    namespace-alias                  go to state 99
    namespace-alias-definition       go to state 100
    namespace-body                   go to state 567
    namespace-definition             go to state 101
    namespace-name                   go to state 102
    nested-name-specifier            go to state 103
    nested-namespace-definition      go to state 104
    nodeclspec-function-declaration  go to state 105
    noptr-declarator                 go to state 106
    opaque-enum-declaration          go to state 107
    operator-function-id             go to state 108
    placeholder-type-specifier       go to state 109
    ptr-declarator                   go to state 110
    ptr-operator                     go to state 111
    qualified-id                     go to state 112
    simple-declaration               go to state 113
    simple-template-id               go to state 114
    simple-type-specifier            go to state 115
    static_assert-declaration        go to state 116
    storage-class-specifier          go to state 117
    template-declaration             go to state 118
    template-head                    go to state 119
    template-id                      go to state 120
    template-name                    go to state 121
    type-constraint                  go to state 123
    type-name                        go to state 124
    type-specifier                   go to state 125
    typedef-name                     go to state 126
    typename-specifier               go to state 127
    unnamed-namespace-definition     go to state 128
    unqualified-id                   go to state 129
    using-declaration                go to state 130
    using-directive                  go to state 131
    using-enum-declaration           go to state 132


State 247

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  646 named-namespace-definition: NAMESPACE attribute-specifier-seq • IDENTIFIER OPEN_BRACE namespace-body CLOSE_BRACE
  1139 unnamed-namespace-definition: NAMESPACE attribute-specifier-seq • OPEN_BRACE namespace-body CLOSE_BRACE

    IDENTIFIER   shift, and go to state 568
    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10
    OPEN_BRACE   shift, and go to state 569

    alignment-specifier  go to state 57
    attribute-specifier  go to state 260


State 248

  274 enclosing-namespace-specifier: enclosing-namespace-specifier • SCOPE IDENTIFIER
  275                              | enclosing-namespace-specifier • SCOPE INLINE IDENTIFIER
  662 nested-namespace-definition: NAMESPACE enclosing-namespace-specifier • SCOPE IDENTIFIER OPEN_BRACE namespace-body CLOSE_BRACE
  663                            | NAMESPACE enclosing-namespace-specifier • SCOPE INLINE IDENTIFIER OPEN_BRACE namespace-body CLOSE_BRACE

    SCOPE  shift, and go to state 570


State 249

  145 class-name: IDENTIFIER •
  294 enum-name: IDENTIFIER •
  1052 template-name: IDENTIFIER •
  1110 typedef-name: IDENTIFIER •

    PLUS           reduce using rule 145 (class-name)
    PLUS           [reduce using rule 294 (enum-name)]
    PLUS           [reduce using rule 1110 (typedef-name)]
    MINUS          reduce using rule 145 (class-name)
    MINUS          [reduce using rule 294 (enum-name)]
    MINUS          [reduce using rule 1110 (typedef-name)]
    USING          reduce using rule 145 (class-name)
    USING          [reduce using rule 294 (enum-name)]
    USING          [reduce using rule 1110 (typedef-name)]
    IDENTIFIER     reduce using rule 145 (class-name)
    IDENTIFIER     [reduce using rule 294 (enum-name)]
    IDENTIFIER     [reduce using rule 1110 (typedef-name)]
    EQ             reduce using rule 145 (class-name)
    EQ             [reduce using rule 294 (enum-name)]
    EQ             [reduce using rule 1110 (typedef-name)]
    SEMICOLON      reduce using rule 145 (class-name)
    SEMICOLON      [reduce using rule 294 (enum-name)]
    SEMICOLON      [reduce using rule 1110 (typedef-name)]
    ALIGNAS        reduce using rule 145 (class-name)
    ALIGNAS        [reduce using rule 294 (enum-name)]
    ALIGNAS        [reduce using rule 1110 (typedef-name)]
    OPEN_PAREN     reduce using rule 145 (class-name)
    OPEN_PAREN     [reduce using rule 294 (enum-name)]
    OPEN_PAREN     [reduce using rule 1110 (typedef-name)]
    CLOSE_PAREN    reduce using rule 145 (class-name)
    CLOSE_PAREN    [reduce using rule 294 (enum-name)]
    CLOSE_PAREN    [reduce using rule 1110 (typedef-name)]
    ELLIPSIS       reduce using rule 145 (class-name)
    ELLIPSIS       [reduce using rule 294 (enum-name)]
    ELLIPSIS       [reduce using rule 1110 (typedef-name)]
    AND            reduce using rule 145 (class-name)
    AND            [reduce using rule 294 (enum-name)]
    AND            [reduce using rule 1110 (typedef-name)]
    ASM            reduce using rule 145 (class-name)
    ASM            [reduce using rule 294 (enum-name)]
    ASM            [reduce using rule 1110 (typedef-name)]
    MULT_EQ        reduce using rule 145 (class-name)
    MULT_EQ        [reduce using rule 294 (enum-name)]
    MULT_EQ        [reduce using rule 1110 (typedef-name)]
    DIV_EQ         reduce using rule 145 (class-name)
    DIV_EQ         [reduce using rule 294 (enum-name)]
    DIV_EQ         [reduce using rule 1110 (typedef-name)]
    MOD_EQ         reduce using rule 145 (class-name)
    MOD_EQ         [reduce using rule 294 (enum-name)]
    MOD_EQ         [reduce using rule 1110 (typedef-name)]
    PLUS_EQ        reduce using rule 145 (class-name)
    PLUS_EQ        [reduce using rule 294 (enum-name)]
    PLUS_EQ        [reduce using rule 1110 (typedef-name)]
    MINUS_EQ       reduce using rule 145 (class-name)
    MINUS_EQ       [reduce using rule 294 (enum-name)]
    MINUS_EQ       [reduce using rule 1110 (typedef-name)]
    RSHIFT_EQ      reduce using rule 145 (class-name)
    RSHIFT_EQ      [reduce using rule 294 (enum-name)]
    RSHIFT_EQ      [reduce using rule 1110 (typedef-name)]
    LSHIFT_EQ      reduce using rule 145 (class-name)
    LSHIFT_EQ      [reduce using rule 294 (enum-name)]
    LSHIFT_EQ      [reduce using rule 1110 (typedef-name)]
    AND_EQ         reduce using rule 145 (class-name)
    AND_EQ         [reduce using rule 294 (enum-name)]
    AND_EQ         [reduce using rule 1110 (typedef-name)]
    XOR_EQ         reduce using rule 145 (class-name)
    XOR_EQ         [reduce using rule 294 (enum-name)]
    XOR_EQ         [reduce using rule 1110 (typedef-name)]
    OR_EQ          reduce using rule 145 (class-name)
    OR_EQ          [reduce using rule 294 (enum-name)]
    OR_EQ          [reduce using rule 1110 (typedef-name)]
    COMMA          reduce using rule 145 (class-name)
    COMMA          [reduce using rule 294 (enum-name)]
    COMMA          [reduce using rule 1110 (typedef-name)]
    SCOPE          reduce using rule 145 (class-name)
    SCOPE          [reduce using rule 294 (enum-name)]
    SCOPE          [reduce using rule 1110 (typedef-name)]
    OPEN_SQUARE    reduce using rule 145 (class-name)
    OPEN_SQUARE    [reduce using rule 294 (enum-name)]
    OPEN_SQUARE    [reduce using rule 1110 (typedef-name)]
    CLOSE_SQUARE   reduce using rule 145 (class-name)
    CLOSE_SQUARE   [reduce using rule 294 (enum-name)]
    CLOSE_SQUARE   [reduce using rule 1110 (typedef-name)]
    COLON          reduce using rule 145 (class-name)
    COLON          [reduce using rule 294 (enum-name)]
    COLON          [reduce using rule 1110 (typedef-name)]
    OPEN_BRACE     reduce using rule 145 (class-name)
    OPEN_BRACE     [reduce using rule 294 (enum-name)]
    OPEN_BRACE     [reduce using rule 1110 (typedef-name)]
    CLOSE_BRACE    reduce using rule 145 (class-name)
    CLOSE_BRACE    [reduce using rule 294 (enum-name)]
    CLOSE_BRACE    [reduce using rule 1110 (typedef-name)]
    VIRTUAL        reduce using rule 145 (class-name)
    VIRTUAL        [reduce using rule 294 (enum-name)]
    VIRTUAL        [reduce using rule 1110 (typedef-name)]
    CLASS          reduce using rule 145 (class-name)
    CLASS          [reduce using rule 294 (enum-name)]
    CLASS          [reduce using rule 1110 (typedef-name)]
    STRUCT         reduce using rule 145 (class-name)
    STRUCT         [reduce using rule 294 (enum-name)]
    STRUCT         [reduce using rule 1110 (typedef-name)]
    UNION          reduce using rule 145 (class-name)
    UNION          [reduce using rule 294 (enum-name)]
    UNION          [reduce using rule 1110 (typedef-name)]
    TEMPLATE       reduce using rule 145 (class-name)
    TEMPLATE       [reduce using rule 294 (enum-name)]
    TEMPLATE       [reduce using rule 1110 (typedef-name)]
    FINAL          reduce using rule 145 (class-name)
    FINAL          [reduce using rule 294 (enum-name)]
    FINAL          [reduce using rule 1110 (typedef-name)]
    SPACESHIP      reduce using rule 145 (class-name)
    SPACESHIP      [reduce using rule 294 (enum-name)]
    SPACESHIP      [reduce using rule 1110 (typedef-name)]
    NOEXCEPT       reduce using rule 145 (class-name)
    NOEXCEPT       [reduce using rule 294 (enum-name)]
    NOEXCEPT       [reduce using rule 1110 (typedef-name)]
    CONCEPT        reduce using rule 145 (class-name)
    CONCEPT        [reduce using rule 294 (enum-name)]
    CONCEPT        [reduce using rule 1110 (typedef-name)]
    QUERY          reduce using rule 145 (class-name)
    QUERY          [reduce using rule 294 (enum-name)]
    QUERY          [reduce using rule 1110 (typedef-name)]
    AND_AND        reduce using rule 145 (class-name)
    AND_AND        [reduce using rule 294 (enum-name)]
    AND_AND        [reduce using rule 1110 (typedef-name)]
    OR_OR          reduce using rule 145 (class-name)
    OR_OR          [reduce using rule 294 (enum-name)]
    OR_OR          [reduce using rule 1110 (typedef-name)]
    OPERATOR       reduce using rule 145 (class-name)
    OPERATOR       [reduce using rule 294 (enum-name)]
    OPERATOR       [reduce using rule 1110 (typedef-name)]
    CONST          reduce using rule 145 (class-name)
    CONST          [reduce using rule 294 (enum-name)]
    CONST          [reduce using rule 1110 (typedef-name)]
    VOLATILE       reduce using rule 145 (class-name)
    VOLATILE       [reduce using rule 294 (enum-name)]
    VOLATILE       [reduce using rule 1110 (typedef-name)]
    FRIEND         reduce using rule 145 (class-name)
    FRIEND         [reduce using rule 294 (enum-name)]
    FRIEND         [reduce using rule 1110 (typedef-name)]
    TYPEDEF        reduce using rule 145 (class-name)
    TYPEDEF        [reduce using rule 294 (enum-name)]
    TYPEDEF        [reduce using rule 1110 (typedef-name)]
    CONSTEXPR      reduce using rule 145 (class-name)
    CONSTEXPR      [reduce using rule 294 (enum-name)]
    CONSTEXPR      [reduce using rule 1110 (typedef-name)]
    CONSTEVAL      reduce using rule 145 (class-name)
    CONSTEVAL      [reduce using rule 294 (enum-name)]
    CONSTEVAL      [reduce using rule 1110 (typedef-name)]
    CONSTINIT      reduce using rule 145 (class-name)
    CONSTINIT      [reduce using rule 294 (enum-name)]
    CONSTINIT      [reduce using rule 1110 (typedef-name)]
    INLINE         reduce using rule 145 (class-name)
    INLINE         [reduce using rule 294 (enum-name)]
    INLINE         [reduce using rule 1110 (typedef-name)]
    DECLTYPE       reduce using rule 145 (class-name)
    DECLTYPE       [reduce using rule 294 (enum-name)]
    DECLTYPE       [reduce using rule 1110 (typedef-name)]
    DEREF          reduce using rule 145 (class-name)
    DEREF          [reduce using rule 294 (enum-name)]
    DEREF          [reduce using rule 1110 (typedef-name)]
    DOT            reduce using rule 145 (class-name)
    DOT            [reduce using rule 294 (enum-name)]
    DOT            [reduce using rule 1110 (typedef-name)]
    ENUM           reduce using rule 145 (class-name)
    ENUM           [reduce using rule 294 (enum-name)]
    ENUM           [reduce using rule 1110 (typedef-name)]
    EQ_EQ          reduce using rule 145 (class-name)
    EQ_EQ          [reduce using rule 294 (enum-name)]
    EQ_EQ          [reduce using rule 1110 (typedef-name)]
    NOT_EQ         reduce using rule 145 (class-name)
    NOT_EQ         [reduce using rule 294 (enum-name)]
    NOT_EQ         [reduce using rule 1110 (typedef-name)]
    XOR            reduce using rule 145 (class-name)
    XOR            [reduce using rule 294 (enum-name)]
    XOR            [reduce using rule 1110 (typedef-name)]
    EXTERN         reduce using rule 145 (class-name)
    EXTERN         [reduce using rule 294 (enum-name)]
    EXTERN         [reduce using rule 1110 (typedef-name)]
    LESS           reduce using rule 145 (class-name)
    LESS           [reduce using rule 294 (enum-name)]
    LESS           [reduce using rule 1052 (template-name)]
    LESS           [reduce using rule 1110 (typedef-name)]
    GREATER        reduce using rule 145 (class-name)
    GREATER        [reduce using rule 294 (enum-name)]
    GREATER        [reduce using rule 1110 (typedef-name)]
    EXPLICIT       reduce using rule 145 (class-name)
    EXPLICIT       [reduce using rule 294 (enum-name)]
    EXPLICIT       [reduce using rule 1110 (typedef-name)]
    EXPORT         reduce using rule 145 (class-name)
    EXPORT         [reduce using rule 294 (enum-name)]
    EXPORT         [reduce using rule 1110 (typedef-name)]
    MULT           reduce using rule 145 (class-name)
    MULT           [reduce using rule 294 (enum-name)]
    MULT           [reduce using rule 1110 (typedef-name)]
    DIV            reduce using rule 145 (class-name)
    DIV            [reduce using rule 294 (enum-name)]
    DIV            [reduce using rule 1110 (typedef-name)]
    MOD            reduce using rule 145 (class-name)
    MOD            [reduce using rule 294 (enum-name)]
    MOD            [reduce using rule 1110 (typedef-name)]
    OR             reduce using rule 145 (class-name)
    OR             [reduce using rule 294 (enum-name)]
    OR             [reduce using rule 1110 (typedef-name)]
    LSHIFT         reduce using rule 145 (class-name)
    LSHIFT         [reduce using rule 294 (enum-name)]
    LSHIFT         [reduce using rule 1110 (typedef-name)]
    RSHIFT         reduce using rule 145 (class-name)
    RSHIFT         [reduce using rule 294 (enum-name)]
    RSHIFT         [reduce using rule 1110 (typedef-name)]
    LESS_EQ        reduce using rule 145 (class-name)
    LESS_EQ        [reduce using rule 294 (enum-name)]
    LESS_EQ        [reduce using rule 1110 (typedef-name)]
    GREATER_EQ     reduce using rule 145 (class-name)
    GREATER_EQ     [reduce using rule 294 (enum-name)]
    GREATER_EQ     [reduce using rule 1110 (typedef-name)]
    DOT_STAR       reduce using rule 145 (class-name)
    DOT_STAR       [reduce using rule 294 (enum-name)]
    DOT_STAR       [reduce using rule 1110 (typedef-name)]
    DEREF_STAR     reduce using rule 145 (class-name)
    DEREF_STAR     [reduce using rule 294 (enum-name)]
    DEREF_STAR     [reduce using rule 1110 (typedef-name)]
    TRY            reduce using rule 145 (class-name)
    TRY            [reduce using rule 294 (enum-name)]
    TRY            [reduce using rule 1110 (typedef-name)]
    IMPORT         reduce using rule 145 (class-name)
    IMPORT         [reduce using rule 294 (enum-name)]
    IMPORT         [reduce using rule 1110 (typedef-name)]
    NAMESPACE      reduce using rule 145 (class-name)
    NAMESPACE      [reduce using rule 294 (enum-name)]
    NAMESPACE      [reduce using rule 1110 (typedef-name)]
    REQUIRES       reduce using rule 145 (class-name)
    REQUIRES       [reduce using rule 294 (enum-name)]
    REQUIRES       [reduce using rule 1110 (typedef-name)]
    COMPL          reduce using rule 145 (class-name)
    COMPL          [reduce using rule 294 (enum-name)]
    COMPL          [reduce using rule 1110 (typedef-name)]
    PLUS_PLUS      reduce using rule 145 (class-name)
    PLUS_PLUS      [reduce using rule 294 (enum-name)]
    PLUS_PLUS      [reduce using rule 1110 (typedef-name)]
    MINUS_MINUS    reduce using rule 145 (class-name)
    MINUS_MINUS    [reduce using rule 294 (enum-name)]
    MINUS_MINUS    [reduce using rule 1110 (typedef-name)]
    AUTO           reduce using rule 145 (class-name)
    AUTO           [reduce using rule 294 (enum-name)]
    AUTO           [reduce using rule 1110 (typedef-name)]
    CHAR           reduce using rule 145 (class-name)
    CHAR           [reduce using rule 294 (enum-name)]
    CHAR           [reduce using rule 1110 (typedef-name)]
    CHAR8_T        reduce using rule 145 (class-name)
    CHAR8_T        [reduce using rule 294 (enum-name)]
    CHAR8_T        [reduce using rule 1110 (typedef-name)]
    CHAR16_T       reduce using rule 145 (class-name)
    CHAR16_T       [reduce using rule 294 (enum-name)]
    CHAR16_T       [reduce using rule 1110 (typedef-name)]
    CHAR32_T       reduce using rule 145 (class-name)
    CHAR32_T       [reduce using rule 294 (enum-name)]
    CHAR32_T       [reduce using rule 1110 (typedef-name)]
    WCHAR_T        reduce using rule 145 (class-name)
    WCHAR_T        [reduce using rule 294 (enum-name)]
    WCHAR_T        [reduce using rule 1110 (typedef-name)]
    BOOL           reduce using rule 145 (class-name)
    BOOL           [reduce using rule 294 (enum-name)]
    BOOL           [reduce using rule 1110 (typedef-name)]
    SHORT          reduce using rule 145 (class-name)
    SHORT          [reduce using rule 294 (enum-name)]
    SHORT          [reduce using rule 1110 (typedef-name)]
    INT            reduce using rule 145 (class-name)
    INT            [reduce using rule 294 (enum-name)]
    INT            [reduce using rule 1110 (typedef-name)]
    LONG           reduce using rule 145 (class-name)
    LONG           [reduce using rule 294 (enum-name)]
    LONG           [reduce using rule 1110 (typedef-name)]
    SIGNED         reduce using rule 145 (class-name)
    SIGNED         [reduce using rule 294 (enum-name)]
    SIGNED         [reduce using rule 1110 (typedef-name)]
    UNSIGNED       reduce using rule 145 (class-name)
    UNSIGNED       [reduce using rule 294 (enum-name)]
    UNSIGNED       [reduce using rule 1110 (typedef-name)]
    FLOAT          reduce using rule 145 (class-name)
    FLOAT          [reduce using rule 294 (enum-name)]
    FLOAT          [reduce using rule 1110 (typedef-name)]
    DOUBLE         reduce using rule 145 (class-name)
    DOUBLE         [reduce using rule 294 (enum-name)]
    DOUBLE         [reduce using rule 1110 (typedef-name)]
    VOID           reduce using rule 145 (class-name)
    VOID           [reduce using rule 294 (enum-name)]
    VOID           [reduce using rule 1110 (typedef-name)]
    STATIC_ASSERT  reduce using rule 145 (class-name)
    STATIC_ASSERT  [reduce using rule 294 (enum-name)]
    STATIC_ASSERT  [reduce using rule 1110 (typedef-name)]
    STATIC         reduce using rule 145 (class-name)
    STATIC         [reduce using rule 294 (enum-name)]
    STATIC         [reduce using rule 1110 (typedef-name)]
    THREAD_LOCAL   reduce using rule 145 (class-name)
    THREAD_LOCAL   [reduce using rule 294 (enum-name)]
    THREAD_LOCAL   [reduce using rule 1110 (typedef-name)]
    MUTABLE        reduce using rule 145 (class-name)
    MUTABLE        [reduce using rule 294 (enum-name)]
    MUTABLE        [reduce using rule 1110 (typedef-name)]
    TYPENAME       reduce using rule 145 (class-name)
    TYPENAME       [reduce using rule 294 (enum-name)]
    TYPENAME       [reduce using rule 1110 (typedef-name)]
    OVERRIDE       reduce using rule 145 (class-name)
    OVERRIDE       [reduce using rule 294 (enum-name)]
    OVERRIDE       [reduce using rule 1110 (typedef-name)]
    $default       reduce using rule 145 (class-name)


State 250

  1145 unqualified-id: COMPL decltype-specifier •

    $default  reduce using rule 1145 (unqualified-id)


State 251

  1144 unqualified-id: COMPL type-name •

    $default  reduce using rule 1144 (unqualified-id)


State 252

  1024 static_assert-declaration: STATIC_ASSERT OPEN_PAREN • constant-expression CLOSE_PAREN SEMICOLON
  1025                          | STATIC_ASSERT OPEN_PAREN • constant-expression COMMA string-literal CLOSE_PAREN SEMICOLON

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 407
    constant-expression                  go to state 571
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 430
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 253

  145 class-name: IDENTIFIER •
  294 enum-name: IDENTIFIER •
  647 namespace-alias: IDENTIFIER •
  653 namespace-name: IDENTIFIER •
  1052 template-name: IDENTIFIER •
  1110 typedef-name: IDENTIFIER •

    SEMICOLON   reduce using rule 145 (class-name)
    SEMICOLON   [reduce using rule 294 (enum-name)]
    SEMICOLON   [reduce using rule 647 (namespace-alias)]
    SEMICOLON   [reduce using rule 653 (namespace-name)]
    SEMICOLON   [reduce using rule 1110 (typedef-name)]
    ELLIPSIS    reduce using rule 145 (class-name)
    ELLIPSIS    [reduce using rule 294 (enum-name)]
    ELLIPSIS    [reduce using rule 1110 (typedef-name)]
    COMMA       reduce using rule 145 (class-name)
    COMMA       [reduce using rule 294 (enum-name)]
    COMMA       [reduce using rule 1110 (typedef-name)]
    SCOPE       reduce using rule 145 (class-name)
    SCOPE       [reduce using rule 294 (enum-name)]
    SCOPE       [reduce using rule 647 (namespace-alias)]
    SCOPE       [reduce using rule 653 (namespace-name)]
    SCOPE       [reduce using rule 1110 (typedef-name)]
    OPEN_BRACE  reduce using rule 145 (class-name)
    OPEN_BRACE  [reduce using rule 294 (enum-name)]
    OPEN_BRACE  [reduce using rule 1110 (typedef-name)]
    LESS        reduce using rule 1052 (template-name)
    $default    reduce using rule 145 (class-name)


State 254

  659 nested-name-specifier: nested-name-specifier • IDENTIFIER SCOPE
  660                      | nested-name-specifier • simple-template-id SCOPE
  661                      | nested-name-specifier • TEMPLATE simple-template-id SCOPE
  1112 typename-specifier: TYPENAME nested-name-specifier • IDENTIFIER
  1113                   | TYPENAME nested-name-specifier • simple-template-id
  1114                   | TYPENAME nested-name-specifier • TEMPLATE simple-template-id

    IDENTIFIER  shift, and go to state 572
    TEMPLATE    shift, and go to state 573

    simple-template-id  go to state 574
    template-name       go to state 142


State 255

  1171 using-directive: attribute-specifier-seq USING • NAMESPACE namespace-name SEMICOLON
  1173                | attribute-specifier-seq USING • NAMESPACE nested-name-specifier namespace-name SEMICOLON

    NAMESPACE  shift, and go to state 575


State 256

   42 attribute-declaration: attribute-specifier-seq SEMICOLON •

    $default  reduce using rule 42 (attribute-declaration)


State 257

   21 asm-declaration: attribute-specifier-seq ASM • OPEN_PAREN string-literal CLOSE_PAREN SEMICOLON

    OPEN_PAREN  shift, and go to state 576


State 258

  206 decl-specifier: INLINE •

    $default  reduce using rule 206 (decl-specifier)


State 259

  1028 storage-class-specifier: EXTERN •

    $default  reduce using rule 1028 (storage-class-specifier)


State 260

   53 attribute-specifier-seq: attribute-specifier-seq attribute-specifier •

    $default  reduce using rule 53 (attribute-specifier-seq)


State 261

  397 function-definition: attribute-specifier-seq decl-specifier-seq • declarator function-body
  401                    | attribute-specifier-seq decl-specifier-seq • declarator virt-specifier-seq function-body
  405                    | attribute-specifier-seq decl-specifier-seq • declarator requires-clause function-body
  965 simple-declaration: attribute-specifier-seq decl-specifier-seq • init-declarator-list SEMICOLON
  966                   | attribute-specifier-seq decl-specifier-seq • OPEN_SQUARE identifier-list CLOSE_SQUARE initializer SEMICOLON
  968                   | attribute-specifier-seq decl-specifier-seq • ref-qualifier OPEN_SQUARE identifier-list CLOSE_SQUARE initializer SEMICOLON

    IDENTIFIER   shift, and go to state 147
    OPEN_PAREN   shift, and go to state 5
    ELLIPSIS     shift, and go to state 6
    AND          shift, and go to state 278
    SCOPE        shift, and go to state 9
    OPEN_SQUARE  shift, and go to state 577
    AND_AND      shift, and go to state 280
    OPERATOR     shift, and go to state 17
    DECLTYPE     shift, and go to state 134
    MULT         shift, and go to state 31
    COMPL        shift, and go to state 35

    class-name              go to state 65
    conversion-function-id  go to state 68
    declarator              go to state 578
    declarator-id           go to state 75
    decltype-specifier      go to state 138
    enum-name               go to state 84
    id-expression           go to state 93
    init-declarator         go to state 282
    init-declarator-list    go to state 579
    literal-operator-id     go to state 95
    namespace-alias         go to state 99
    namespace-name          go to state 102
    nested-name-specifier   go to state 148
    noptr-declarator        go to state 106
    operator-function-id    go to state 108
    ptr-declarator          go to state 110
    ptr-operator            go to state 111
    qualified-id            go to state 112
    ref-qualifier           go to state 580
    simple-template-id      go to state 114
    template-id             go to state 120
    template-name           go to state 142
    type-name               go to state 143
    typedef-name            go to state 126
    unqualified-id          go to state 129


State 262

  395 function-definition: attribute-specifier-seq declarator • function-body
  399                    | attribute-specifier-seq declarator • virt-specifier-seq function-body
  403                    | attribute-specifier-seq declarator • requires-clause function-body
  690 nodeclspec-function-declaration: attribute-specifier-seq declarator • SEMICOLON

    EQ          shift, and go to state 286
    SEMICOLON   shift, and go to state 581
    COLON       shift, and go to state 288
    OPEN_BRACE  shift, and go to state 289
    FINAL       shift, and go to state 290
    TRY         shift, and go to state 291
    REQUIRES    shift, and go to state 292
    OVERRIDE    shift, and go to state 293

    compound-statement  go to state 294
    ctor-initializer    go to state 295
    function-body       go to state 582
    function-try-block  go to state 297
    requires-clause     go to state 583
    virt-specifier      go to state 299
    virt-specifier-seq  go to state 584


State 263

  281 enum-head: enum-key •
  282          | enum-key • attribute-specifier-seq
  283          | enum-key • enum-head-name
  284          | enum-key • attribute-specifier-seq enum-head-name
  285          | enum-key • enum-base
  286          | enum-key • attribute-specifier-seq enum-base
  287          | enum-key • enum-head-name enum-base
  288          | enum-key • attribute-specifier-seq enum-head-name enum-base

    IDENTIFIER   shift, and go to state 304
    ALIGNAS      shift, and go to state 4
    SCOPE        shift, and go to state 9
    OPEN_SQUARE  shift, and go to state 10
    COLON        shift, and go to state 305
    DECLTYPE     shift, and go to state 134

    $default  reduce using rule 281 (enum-head)

    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 585
    class-name               go to state 65
    decltype-specifier       go to state 138
    enum-base                go to state 307
    enum-head-name           go to state 586
    enum-name                go to state 84
    namespace-alias          go to state 99
    namespace-name           go to state 102
    nested-name-specifier    go to state 309
    simple-template-id       go to state 141
    template-name            go to state 142
    type-name                go to state 143
    typedef-name             go to state 126


State 264

  408 function-specifier: explicit-specifier •

    $default  reduce using rule 408 (function-specifier)


State 265

  151 class-specifier: class-head OPEN_BRACE • CLOSE_BRACE
  152                | class-head OPEN_BRACE • member-specification CLOSE_BRACE

    PRIVATE        shift, and go to state 587
    PROTECTED      shift, and go to state 588
    PUBLIC         shift, and go to state 589
    USING          shift, and go to state 590
    IDENTIFIER     shift, and go to state 591
    SEMICOLON      shift, and go to state 592
    ALIGNAS        shift, and go to state 4
    OPEN_PAREN     shift, and go to state 5
    ELLIPSIS       shift, and go to state 6
    AND            shift, and go to state 7
    SCOPE          shift, and go to state 9
    OPEN_SQUARE    shift, and go to state 10
    COLON          shift, and go to state 593
    CLOSE_BRACE    shift, and go to state 594
    VIRTUAL        shift, and go to state 11
    CLASS          shift, and go to state 12
    STRUCT         shift, and go to state 13
    UNION          shift, and go to state 14
    TEMPLATE       shift, and go to state 595
    AND_AND        shift, and go to state 16
    OPERATOR       shift, and go to state 17
    CONST          shift, and go to state 18
    VOLATILE       shift, and go to state 19
    FRIEND         shift, and go to state 20
    TYPEDEF        shift, and go to state 21
    CONSTEXPR      shift, and go to state 22
    CONSTEVAL      shift, and go to state 23
    CONSTINIT      shift, and go to state 24
    INLINE         shift, and go to state 258
    DECLTYPE       shift, and go to state 26
    ENUM           shift, and go to state 27
    EXTERN         shift, and go to state 259
    EXPLICIT       shift, and go to state 29
    MULT           shift, and go to state 31
    COMPL          shift, and go to state 35
    AUTO           shift, and go to state 36
    CHAR           shift, and go to state 37
    CHAR8_T        shift, and go to state 38
    CHAR16_T       shift, and go to state 39
    CHAR32_T       shift, and go to state 40
    WCHAR_T        shift, and go to state 41
    BOOL           shift, and go to state 42
    SHORT          shift, and go to state 43
    INT            shift, and go to state 44
    LONG           shift, and go to state 45
    SIGNED         shift, and go to state 46
    UNSIGNED       shift, and go to state 47
    FLOAT          shift, and go to state 48
    DOUBLE         shift, and go to state 49
    VOID           shift, and go to state 50
    STATIC_ASSERT  shift, and go to state 51
    STATIC         shift, and go to state 52
    THREAD_LOCAL   shift, and go to state 53
    MUTABLE        shift, and go to state 54
    TYPENAME       shift, and go to state 55

    access-specifier            go to state 596
    alias-declaration           go to state 597
    alignment-specifier         go to state 57
    attribute-specifier         go to state 60
    attribute-specifier-seq     go to state 598
    class-head                  go to state 63
    class-key                   go to state 64
    class-name                  go to state 65
    class-specifier             go to state 66
    concept-name                go to state 67
    conversion-function-id      go to state 68
    cv-qualifier                go to state 69
    decl-specifier              go to state 70
    decl-specifier-seq          go to state 599
    declarator                  go to state 600
    declarator-id               go to state 75
    decltype-specifier          go to state 76
    deduction-guide             go to state 601
    defining-type-specifier     go to state 78
    elaborated-enum-specifier   go to state 79
    elaborated-type-specifier   go to state 80
    empty-declaration           go to state 602
    enum-head                   go to state 82
    enum-key                    go to state 83
    enum-name                   go to state 84
    enum-specifier              go to state 85
    explicit-specialization     go to state 603
    explicit-specifier          go to state 88
    function-definition         go to state 604
    function-specifier          go to state 91
    id-expression               go to state 93
    literal-operator-id         go to state 95
    member-declaration          go to state 605
    member-declarator           go to state 606
    member-declarator-list      go to state 607
    member-specification        go to state 608
    namespace-alias             go to state 99
    namespace-name              go to state 102
    nested-name-specifier       go to state 103
    noptr-declarator            go to state 106
    opaque-enum-declaration     go to state 609
    operator-function-id        go to state 108
    placeholder-type-specifier  go to state 109
    ptr-declarator              go to state 110
    ptr-operator                go to state 111
    qualified-id                go to state 112
    simple-template-id          go to state 114
    simple-type-specifier       go to state 115
    static_assert-declaration   go to state 610
    storage-class-specifier     go to state 117
    template-declaration        go to state 611
    template-head               go to state 119
    template-id                 go to state 120
    template-name               go to state 121
    type-constraint             go to state 123
    type-name                   go to state 124
    type-specifier              go to state 125
    typedef-name                go to state 126
    typename-specifier          go to state 127
    unqualified-id              go to state 129
    using-declaration           go to state 612
    using-enum-declaration      go to state 613


State 266

  145 class-name: IDENTIFIER •
  264 elaborated-type-specifier: class-key IDENTIFIER •
  294 enum-name: IDENTIFIER •
  647 namespace-alias: IDENTIFIER •
  653 namespace-name: IDENTIFIER •
  1052 template-name: IDENTIFIER •
  1110 typedef-name: IDENTIFIER •

    SCOPE       reduce using rule 145 (class-name)
    SCOPE       [reduce using rule 264 (elaborated-type-specifier)]
    SCOPE       [reduce using rule 294 (enum-name)]
    SCOPE       [reduce using rule 647 (namespace-alias)]
    SCOPE       [reduce using rule 653 (namespace-name)]
    SCOPE       [reduce using rule 1110 (typedef-name)]
    COLON       reduce using rule 145 (class-name)
    COLON       [reduce using rule 264 (elaborated-type-specifier)]
    OPEN_BRACE  reduce using rule 145 (class-name)
    OPEN_BRACE  [reduce using rule 264 (elaborated-type-specifier)]
    FINAL       reduce using rule 145 (class-name)
    FINAL       [reduce using rule 264 (elaborated-type-specifier)]
    LESS        reduce using rule 264 (elaborated-type-specifier)
    LESS        [reduce using rule 1052 (template-name)]
    $default    reduce using rule 264 (elaborated-type-specifier)


State 267

   68 base-clause: COLON • base-specifier-list

    PRIVATE      shift, and go to state 587
    PROTECTED    shift, and go to state 588
    PUBLIC       shift, and go to state 589
    IDENTIFIER   shift, and go to state 253
    ALIGNAS      shift, and go to state 4
    SCOPE        shift, and go to state 9
    OPEN_SQUARE  shift, and go to state 10
    VIRTUAL      shift, and go to state 614
    DECLTYPE     shift, and go to state 134

    access-specifier         go to state 615
    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 616
    base-specifier           go to state 617
    base-specifier-list      go to state 618
    class-name               go to state 65
    class-or-decltype        go to state 619
    decltype-specifier       go to state 620
    enum-name                go to state 84
    namespace-alias          go to state 99
    namespace-name           go to state 102
    nested-name-specifier    go to state 621
    simple-template-id       go to state 141
    template-name            go to state 142
    type-name                go to state 622
    typedef-name             go to state 126


State 268

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  129 class-head: class-key attribute-specifier-seq • class-head-name
  131           | class-key attribute-specifier-seq • class-head-name class-virt-specifier
  133           | class-key attribute-specifier-seq • class-head-name base-clause
  135           | class-key attribute-specifier-seq • class-head-name class-virt-specifier base-clause
  137           | class-key attribute-specifier-seq •
  139           | class-key attribute-specifier-seq • base-clause
  265 elaborated-type-specifier: class-key attribute-specifier-seq • IDENTIFIER
  267                          | class-key attribute-specifier-seq • nested-name-specifier IDENTIFIER

    IDENTIFIER   shift, and go to state 623
    ALIGNAS      shift, and go to state 4
    SCOPE        shift, and go to state 9
    OPEN_SQUARE  shift, and go to state 10
    COLON        shift, and go to state 267
    DECLTYPE     shift, and go to state 134

    $default  reduce using rule 137 (class-head)

    alignment-specifier    go to state 57
    attribute-specifier    go to state 260
    base-clause            go to state 624
    class-head-name        go to state 625
    class-name             go to state 271
    decltype-specifier     go to state 138
    enum-name              go to state 84
    namespace-alias        go to state 99
    namespace-name         go to state 102
    nested-name-specifier  go to state 626
    simple-template-id     go to state 141
    template-name          go to state 142
    type-name              go to state 143
    typedef-name           go to state 126


State 269

  138 class-head: class-key base-clause •

    $default  reduce using rule 138 (class-head)


State 270

  128 class-head: class-key class-head-name •
  130           | class-key class-head-name • class-virt-specifier
  132           | class-key class-head-name • base-clause
  134           | class-key class-head-name • class-virt-specifier base-clause

    COLON  shift, and go to state 267
    FINAL  shift, and go to state 627

    $default  reduce using rule 128 (class-head)

    base-clause           go to state 628
    class-virt-specifier  go to state 629


State 271

  141 class-head-name: class-name •
  1078 type-name: class-name •

    SCOPE     reduce using rule 1078 (type-name)
    $default  reduce using rule 141 (class-head-name)


State 272

  140 class-head-name: nested-name-specifier • class-name
  266 elaborated-type-specifier: class-key nested-name-specifier • IDENTIFIER
  269                          | class-key nested-name-specifier • simple-template-id
  270                          | class-key nested-name-specifier • TEMPLATE simple-template-id
  659 nested-name-specifier: nested-name-specifier • IDENTIFIER SCOPE
  660                      | nested-name-specifier • simple-template-id SCOPE
  661                      | nested-name-specifier • TEMPLATE simple-template-id SCOPE

    IDENTIFIER  shift, and go to state 630
    TEMPLATE    shift, and go to state 631

    class-name          go to state 632
    simple-template-id  go to state 633
    template-name       go to state 142


State 273

  146 class-name: simple-template-id •
  268 elaborated-type-specifier: class-key simple-template-id •
  1111 typedef-name: simple-template-id •

    SCOPE       reduce using rule 146 (class-name)
    SCOPE       [reduce using rule 268 (elaborated-type-specifier)]
    SCOPE       [reduce using rule 1111 (typedef-name)]
    COLON       reduce using rule 146 (class-name)
    COLON       [reduce using rule 268 (elaborated-type-specifier)]
    OPEN_BRACE  reduce using rule 146 (class-name)
    OPEN_BRACE  [reduce using rule 268 (elaborated-type-specifier)]
    FINAL       reduce using rule 146 (class-name)
    FINAL       [reduce using rule 268 (elaborated-type-specifier)]
    $default    reduce using rule 268 (elaborated-type-specifier)


State 274

  1073 type-constraint: concept-name LESS • GREATER
  1075                | concept-name LESS • template-argument-list GREATER

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 135
    UNICODE_8         shift, and go to state 184
    GREATER           shift, and go to state 634
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-key                            go to state 209
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 407
    constant-expression                  go to state 635
    conversion-function-id               go to state 68
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 636
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 430
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    string-literal                       go to state 445
    template-argument                    go to state 637
    template-argument-list               go to state 638
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-id                              go to state 639
    type-name                            go to state 124
    type-specifier                       go to state 216
    type-specifier-seq                   go to state 447
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 275

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  208 decl-specifier-seq: decl-specifier attribute-specifier-seq •

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    ALIGNAS      [reduce using rule 208 (decl-specifier-seq)]
    OPEN_SQUARE  [reduce using rule 208 (decl-specifier-seq)]
    $default     reduce using rule 208 (decl-specifier-seq)

    alignment-specifier  go to state 57
    attribute-specifier  go to state 260


State 276

  209 decl-specifier-seq: decl-specifier decl-specifier-seq •

    $default  reduce using rule 209 (decl-specifier-seq)


State 277

  963 simple-declaration: decl-specifier-seq SEMICOLON •

    $default  reduce using rule 963 (simple-declaration)


State 278

  897 ptr-operator: AND •
  898             | AND • attribute-specifier-seq
  914 ref-qualifier: AND •

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    OPEN_SQUARE  [reduce using rule 914 (ref-qualifier)]
    $default     reduce using rule 897 (ptr-operator)

    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 153


State 279

  967 simple-declaration: decl-specifier-seq OPEN_SQUARE • identifier-list CLOSE_SQUARE initializer SEMICOLON

    IDENTIFIER  shift, and go to state 640

    identifier-list  go to state 641


State 280

  899 ptr-operator: AND_AND •
  900             | AND_AND • attribute-specifier-seq
  915 ref-qualifier: AND_AND •

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    OPEN_SQUARE  [reduce using rule 915 (ref-qualifier)]
    $default     reduce using rule 899 (ptr-operator)

    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 159


State 281

  398 function-definition: decl-specifier-seq declarator • function-body
  402                    | decl-specifier-seq declarator • virt-specifier-seq function-body
  406                    | decl-specifier-seq declarator • requires-clause function-body
  469 init-declarator: declarator •
  470                | declarator • initializer
  471                | declarator • requires-clause

    EQ          shift, and go to state 642
    OPEN_PAREN  shift, and go to state 643
    COLON       shift, and go to state 288
    OPEN_BRACE  shift, and go to state 644
    FINAL       shift, and go to state 290
    TRY         shift, and go to state 291
    REQUIRES    shift, and go to state 292
    OVERRIDE    shift, and go to state 293

    $default  reduce using rule 469 (init-declarator)

    brace-or-equal-initializer  go to state 645
    braced-init-list            go to state 646
    compound-statement          go to state 294
    ctor-initializer            go to state 295
    function-body               go to state 647
    function-try-block          go to state 297
    initializer                 go to state 648
    requires-clause             go to state 649
    virt-specifier              go to state 299
    virt-specifier-seq          go to state 650


State 282

  472 init-declarator-list: init-declarator •

    $default  reduce using rule 472 (init-declarator-list)


State 283

  473 init-declarator-list: init-declarator-list • COMMA init-declarator
  964 simple-declaration: decl-specifier-seq init-declarator-list • SEMICOLON

    SEMICOLON  shift, and go to state 651
    COMMA      shift, and go to state 652


State 284

  969 simple-declaration: decl-specifier-seq ref-qualifier • OPEN_SQUARE identifier-list CLOSE_SQUARE initializer SEMICOLON

    OPEN_SQUARE  shift, and go to state 653


State 285

  224 declaration-seq: declaration-seq declaration •

    $default  reduce using rule 224 (declaration-seq)


State 286

  393 function-body: EQ • DEFAULT SEMICOLON
  394              | EQ • DELETE SEMICOLON

    DELETE   shift, and go to state 654
    DEFAULT  shift, and go to state 655


State 287

  691 nodeclspec-function-declaration: declarator SEMICOLON •

    $default  reduce using rule 691 (nodeclspec-function-declaration)


State 288

  184 ctor-initializer: COLON • mem-initializer-list

    IDENTIFIER  shift, and go to state 656
    SCOPE       shift, and go to state 9
    DECLTYPE    shift, and go to state 134

    class-name             go to state 65
    class-or-decltype      go to state 657
    decltype-specifier     go to state 620
    enum-name              go to state 84
    mem-initializer        go to state 658
    mem-initializer-id     go to state 659
    mem-initializer-list   go to state 660
    namespace-alias        go to state 99
    namespace-name         go to state 102
    nested-name-specifier  go to state 621
    simple-template-id     go to state 141
    template-name          go to state 142
    type-name              go to state 622
    typedef-name           go to state 126


State 289

  160 compound-statement: OPEN_BRACE • CLOSE_BRACE
  161                   | OPEN_BRACE • statement-seq CLOSE_BRACE

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    USING             shift, and go to state 1
    IDENTIFIER        shift, and go to state 661
    SEMICOLON         shift, and go to state 662
    ALIGNAS           shift, and go to state 4
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    ASM               shift, and go to state 8
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 663
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 289
    CLOSE_BRACE       shift, and go to state 664
    VIRTUAL           shift, and go to state 11
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CO_RETURN         shift, and go to state 665
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    FRIEND            shift, and go to state 20
    TYPEDEF           shift, and go to state 21
    CONSTEXPR         shift, and go to state 22
    CONSTEVAL         shift, and go to state 23
    CONSTINIT         shift, and go to state 24
    INLINE            shift, and go to state 258
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 27
    UNICODE_8         shift, and go to state 184
    EXTERN            shift, and go to state 259
    EXPLICIT          shift, and go to state 29
    MULT              shift, and go to state 371
    DEFAULT           shift, and go to state 666
    TRY               shift, and go to state 667
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    WHILE             shift, and go to state 668
    DO                shift, and go to state 669
    FOR               shift, and go to state 670
    BREAK             shift, and go to state 671
    CONTINUE          shift, and go to state 672
    RETURN            shift, and go to state 673
    GOTO              shift, and go to state 674
    CASE              shift, and go to state 675
    NAMESPACE         shift, and go to state 676
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    IF                shift, and go to state 677
    SWITCH            shift, and go to state 678
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    STATIC_ASSERT     shift, and go to state 51
    STATIC            shift, and go to state 52
    THREAD_LOCAL      shift, and go to state 53
    MUTABLE           shift, and go to state 54
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    alias-declaration                    go to state 56
    alignment-specifier                  go to state 57
    and-expression                       go to state 400
    asm-declaration                      go to state 58
    assignment-expression                go to state 525
    attribute-specifier                  go to state 60
    attribute-specifier-seq              go to state 679
    await-expression                     go to state 401
    binary-literal                       go to state 402
    block-declaration                    go to state 680
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-head                           go to state 63
    class-key                            go to state 64
    class-name                           go to state 65
    class-specifier                      go to state 66
    compare-expression                   go to state 406
    compound-statement                   go to state 681
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    coroutine-return-statement           go to state 682
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decl-specifier                       go to state 70
    decl-specifier-seq                   go to state 683
    declaration-statement                go to state 684
    decltype-specifier                   go to state 76
    defining-type-specifier              go to state 78
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-head                            go to state 82
    enum-key                             go to state 83
    enum-name                            go to state 84
    enum-specifier                       go to state 85
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    explicit-specifier                   go to state 264
    expression                           go to state 685
    expression-statement                 go to state 686
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    function-specifier                   go to state 91
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    iteration-statement                  go to state 687
    jump-statement                       go to state 688
    labeled-statement                    go to state 689
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-alias-definition           go to state 100
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    opaque-enum-declaration              go to state 107
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    selection-statement                  go to state 690
    shift-expression                     go to state 443
    simple-declaration                   go to state 113
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    statement                            go to state 691
    statement-seq                        go to state 692
    static_assert-declaration            go to state 116
    storage-class-specifier              go to state 117
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    try-block                            go to state 693
    type-constraint                      go to state 123
    type-name                            go to state 124
    type-specifier                       go to state 125
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    using-declaration                    go to state 130
    using-directive                      go to state 131
    using-enum-declaration               go to state 132
    yield-expression                     go to state 532


State 290

  1177 virt-specifier: FINAL •

    $default  reduce using rule 1177 (virt-specifier)


State 291

  409 function-try-block: TRY • compound-statement handler-seq
  410                   | TRY • ctor-initializer compound-statement handler-seq

    COLON       shift, and go to state 288
    OPEN_BRACE  shift, and go to state 289

    compound-statement  go to state 694
    ctor-initializer    go to state 695


State 292

  929 requires-clause: REQUIRES • constraint-logical-or-expression

    IDENTIFIER    shift, and go to state 147
    OPEN_PAREN    shift, and go to state 696
    SCOPE         shift, and go to state 9
    OPEN_SQUARE   shift, and go to state 361
    ZERO_LB       shift, and go to state 363
    ZERO_HB       shift, and go to state 364
    SINGLE_QUOTE  shift, and go to state 365
    FALSE         shift, and go to state 366
    TRUE          shift, and go to state 367
    OPERATOR      shift, and go to state 17
    DECLTYPE      shift, and go to state 134
    DOT           shift, and go to state 370
    UNICODE_8     shift, and go to state 184
    DOUBLE_QUOTE  shift, and go to state 199
    ZERO_LX       shift, and go to state 372
    ZERO_HX       shift, and go to state 373
    REQUIRES      shift, and go to state 374
    COMPL         shift, and go to state 35
    THIS          shift, and go to state 380
    NULLPTR       shift, and go to state 381
    '0'           shift, and go to state 389
    '1'           shift, and go to state 390
    '2'           shift, and go to state 391
    '3'           shift, and go to state 392
    '4'           shift, and go to state 393
    '5'           shift, and go to state 394
    '6'           shift, and go to state 395
    '7'           shift, and go to state 396
    '8'           shift, and go to state 397
    '9'           shift, and go to state 398
    'u'           shift, and go to state 205
    'U'           shift, and go to state 206
    'L'           shift, and go to state 207
    'R'           shift, and go to state 208

    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    character-literal                    go to state 405
    class-name                           go to state 65
    constraint-logical-and-expression    go to state 697
    constraint-logical-or-expression     go to state 698
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 138
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 152
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    pointer-literal                      go to state 438
    primary-expression                   go to state 699
    qualified-id                         go to state 112
    requires-expression                  go to state 442
    simple-template-id                   go to state 114
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 142
    type-name                            go to state 143
    typedef-name                         go to state 126
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 293

  1176 virt-specifier: OVERRIDE •

    $default  reduce using rule 1176 (virt-specifier)


State 294

  391 function-body: compound-statement •

    $default  reduce using rule 391 (function-body)


State 295

  390 function-body: ctor-initializer • compound-statement

    OPEN_BRACE  shift, and go to state 289

    compound-statement  go to state 700


State 296

  396 function-definition: declarator function-body •

    $default  reduce using rule 396 (function-definition)


State 297

  392 function-body: function-try-block •

    $default  reduce using rule 392 (function-body)


State 298

  404 function-definition: declarator requires-clause • function-body

    EQ          shift, and go to state 286
    COLON       shift, and go to state 288
    OPEN_BRACE  shift, and go to state 289
    TRY         shift, and go to state 291

    compound-statement  go to state 294
    ctor-initializer    go to state 295
    function-body       go to state 701
    function-try-block  go to state 297


State 299

  1178 virt-specifier-seq: virt-specifier •

    $default  reduce using rule 1178 (virt-specifier-seq)


State 300

  400 function-definition: declarator virt-specifier-seq • function-body
  1179 virt-specifier-seq: virt-specifier-seq • virt-specifier

    EQ          shift, and go to state 286
    COLON       shift, and go to state 288
    OPEN_BRACE  shift, and go to state 289
    FINAL       shift, and go to state 290
    TRY         shift, and go to state 291
    OVERRIDE    shift, and go to state 293

    compound-statement  go to state 294
    ctor-initializer    go to state 295
    function-body       go to state 702
    function-try-block  go to state 297
    virt-specifier      go to state 703


State 301

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  722 noptr-declarator: declarator-id attribute-specifier-seq •

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    OPEN_SQUARE  [reduce using rule 722 (noptr-declarator)]
    $default     reduce using rule 722 (noptr-declarator)

    alignment-specifier  go to state 57
    attribute-specifier  go to state 260


State 302

  658 nested-name-specifier: decltype-specifier SCOPE •

    $default  reduce using rule 658 (nested-name-specifier)


State 303

  295 enum-specifier: enum-head OPEN_BRACE • CLOSE_BRACE
  296               | enum-head OPEN_BRACE • enumerator-list CLOSE_BRACE
  297               | enum-head OPEN_BRACE • enumerator-list COMMA CLOSE_BRACE

    IDENTIFIER   shift, and go to state 704
    CLOSE_BRACE  shift, and go to state 705

    enumerator             go to state 706
    enumerator-definition  go to state 707
    enumerator-list        go to state 708


State 304

  145 class-name: IDENTIFIER •
  290 enum-head-name: IDENTIFIER •
  294 enum-name: IDENTIFIER •
  647 namespace-alias: IDENTIFIER •
  653 namespace-name: IDENTIFIER •
  1052 template-name: IDENTIFIER •
  1110 typedef-name: IDENTIFIER •

    SCOPE     reduce using rule 145 (class-name)
    SCOPE     [reduce using rule 294 (enum-name)]
    SCOPE     [reduce using rule 647 (namespace-alias)]
    SCOPE     [reduce using rule 653 (namespace-name)]
    SCOPE     [reduce using rule 1110 (typedef-name)]
    LESS      reduce using rule 1052 (template-name)
    $default  reduce using rule 290 (enum-head-name)


State 305

  280 enum-base: COLON • type-specifier-seq

    IDENTIFIER  shift, and go to state 162
    SCOPE       shift, and go to state 9
    CLASS       shift, and go to state 12
    STRUCT      shift, and go to state 13
    UNION       shift, and go to state 14
    CONST       shift, and go to state 18
    VOLATILE    shift, and go to state 19
    DECLTYPE    shift, and go to state 26
    ENUM        shift, and go to state 135
    AUTO        shift, and go to state 36
    CHAR        shift, and go to state 37
    CHAR8_T     shift, and go to state 38
    CHAR16_T    shift, and go to state 39
    CHAR32_T    shift, and go to state 40
    WCHAR_T     shift, and go to state 41
    BOOL        shift, and go to state 42
    SHORT       shift, and go to state 43
    INT         shift, and go to state 44
    LONG        shift, and go to state 45
    SIGNED      shift, and go to state 46
    UNSIGNED    shift, and go to state 47
    FLOAT       shift, and go to state 48
    DOUBLE      shift, and go to state 49
    VOID        shift, and go to state 50
    TYPENAME    shift, and go to state 55

    class-key                   go to state 209
    class-name                  go to state 65
    concept-name                go to state 67
    cv-qualifier                go to state 69
    decltype-specifier          go to state 76
    elaborated-enum-specifier   go to state 79
    elaborated-type-specifier   go to state 80
    enum-name                   go to state 84
    namespace-alias             go to state 99
    namespace-name              go to state 102
    nested-name-specifier       go to state 212
    placeholder-type-specifier  go to state 109
    simple-template-id          go to state 141
    simple-type-specifier       go to state 115
    template-name               go to state 215
    type-constraint             go to state 123
    type-name                   go to state 124
    type-specifier              go to state 216
    type-specifier-seq          go to state 709
    typedef-name                go to state 126
    typename-specifier          go to state 127


State 306

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  282 enum-head: enum-key attribute-specifier-seq •
  284          | enum-key attribute-specifier-seq • enum-head-name
  286          | enum-key attribute-specifier-seq • enum-base
  288          | enum-key attribute-specifier-seq • enum-head-name enum-base
  752 opaque-enum-declaration: enum-key attribute-specifier-seq • enum-head-name SEMICOLON
  754                        | enum-key attribute-specifier-seq • enum-head-name enum-base SEMICOLON

    IDENTIFIER   shift, and go to state 304
    ALIGNAS      shift, and go to state 4
    SCOPE        shift, and go to state 9
    OPEN_SQUARE  shift, and go to state 10
    COLON        shift, and go to state 305
    DECLTYPE     shift, and go to state 134

    $default  reduce using rule 282 (enum-head)

    alignment-specifier    go to state 57
    attribute-specifier    go to state 260
    class-name             go to state 65
    decltype-specifier     go to state 138
    enum-base              go to state 710
    enum-head-name         go to state 711
    enum-name              go to state 84
    namespace-alias        go to state 99
    namespace-name         go to state 102
    nested-name-specifier  go to state 309
    simple-template-id     go to state 141
    template-name          go to state 142
    type-name              go to state 143
    typedef-name           go to state 126


State 307

  285 enum-head: enum-key enum-base •

    $default  reduce using rule 285 (enum-head)


State 308

  283 enum-head: enum-key enum-head-name •
  287          | enum-key enum-head-name • enum-base
  751 opaque-enum-declaration: enum-key enum-head-name • SEMICOLON
  753                        | enum-key enum-head-name • enum-base SEMICOLON

    SEMICOLON  shift, and go to state 712
    COLON      shift, and go to state 305

    $default  reduce using rule 283 (enum-head)

    enum-base  go to state 713


State 309

  289 enum-head-name: nested-name-specifier • IDENTIFIER
  659 nested-name-specifier: nested-name-specifier • IDENTIFIER SCOPE
  660                      | nested-name-specifier • simple-template-id SCOPE
  661                      | nested-name-specifier • TEMPLATE simple-template-id SCOPE

    IDENTIFIER  shift, and go to state 714
    TEMPLATE    shift, and go to state 350

    simple-template-id  go to state 534
    template-name       go to state 142


State 310

  1052 template-name: IDENTIFIER •

    $default  reduce using rule 1052 (template-name)


State 311

  231 deduction-guide: explicit-specifier template-name • OPEN_PAREN parameter-declaration-clause CLOSE_PAREN DEREF simple-template-id SEMICOLON

    OPEN_PAREN  shift, and go to state 715


State 312

  619 module-declaration: EXPORT • MODULE module-name SEMICOLON
  621                   | EXPORT • MODULE module-name module-partition SEMICOLON
  623                   | EXPORT • MODULE module-name attribute-specifier-seq SEMICOLON
  625                   | EXPORT • MODULE module-name module-partition attribute-specifier-seq SEMICOLON

    MODULE  shift, and go to state 229


State 313

  620 module-declaration: MODULE • module-name SEMICOLON
  622                   | MODULE • module-name module-partition SEMICOLON
  624                   | MODULE • module-name attribute-specifier-seq SEMICOLON
  626                   | MODULE • module-name module-partition attribute-specifier-seq SEMICOLON

    IDENTIFIER  shift, and go to state 235

    module-name            go to state 237
    module-name-qualifier  go to state 238


State 314

  1061 translation-unit: global-module-fragment module-declaration •
  1063                 | global-module-fragment module-declaration • declaration-seq
  1065                 | global-module-fragment module-declaration • private-module-fragment
  1067                 | global-module-fragment module-declaration • declaration-seq private-module-fragment

    USING          shift, and go to state 1
    IDENTIFIER     shift, and go to state 2
    SEMICOLON      shift, and go to state 3
    ALIGNAS        shift, and go to state 4
    OPEN_PAREN     shift, and go to state 5
    ELLIPSIS       shift, and go to state 6
    AND            shift, and go to state 7
    ASM            shift, and go to state 8
    SCOPE          shift, and go to state 9
    OPEN_SQUARE    shift, and go to state 10
    VIRTUAL        shift, and go to state 11
    CLASS          shift, and go to state 12
    STRUCT         shift, and go to state 13
    UNION          shift, and go to state 14
    TEMPLATE       shift, and go to state 15
    AND_AND        shift, and go to state 16
    OPERATOR       shift, and go to state 17
    CONST          shift, and go to state 18
    VOLATILE       shift, and go to state 19
    FRIEND         shift, and go to state 20
    TYPEDEF        shift, and go to state 21
    CONSTEXPR      shift, and go to state 22
    CONSTEVAL      shift, and go to state 23
    CONSTINIT      shift, and go to state 24
    INLINE         shift, and go to state 25
    DECLTYPE       shift, and go to state 26
    ENUM           shift, and go to state 27
    EXTERN         shift, and go to state 28
    EXPLICIT       shift, and go to state 29
    EXPORT         shift, and go to state 157
    MULT           shift, and go to state 31
    MODULE         shift, and go to state 316
    IMPORT         shift, and go to state 33
    NAMESPACE      shift, and go to state 34
    COMPL          shift, and go to state 35
    AUTO           shift, and go to state 36
    CHAR           shift, and go to state 37
    CHAR8_T        shift, and go to state 38
    CHAR16_T       shift, and go to state 39
    CHAR32_T       shift, and go to state 40
    WCHAR_T        shift, and go to state 41
    BOOL           shift, and go to state 42
    SHORT          shift, and go to state 43
    INT            shift, and go to state 44
    LONG           shift, and go to state 45
    SIGNED         shift, and go to state 46
    UNSIGNED       shift, and go to state 47
    FLOAT          shift, and go to state 48
    DOUBLE         shift, and go to state 49
    VOID           shift, and go to state 50
    STATIC_ASSERT  shift, and go to state 51
    STATIC         shift, and go to state 52
    THREAD_LOCAL   shift, and go to state 53
    MUTABLE        shift, and go to state 54
    TYPENAME       shift, and go to state 55

    $default  reduce using rule 1061 (translation-unit)

    alias-declaration                go to state 56
    alignment-specifier              go to state 57
    asm-declaration                  go to state 58
    attribute-declaration            go to state 59
    attribute-specifier              go to state 60
    attribute-specifier-seq          go to state 61
    block-declaration                go to state 62
    class-head                       go to state 63
    class-key                        go to state 64
    class-name                       go to state 65
    class-specifier                  go to state 66
    concept-name                     go to state 67
    conversion-function-id           go to state 68
    cv-qualifier                     go to state 69
    decl-specifier                   go to state 70
    decl-specifier-seq               go to state 71
    declaration                      go to state 72
    declaration-seq                  go to state 716
    declarator                       go to state 74
    declarator-id                    go to state 75
    decltype-specifier               go to state 76
    deduction-guide                  go to state 77
    defining-type-specifier          go to state 78
    elaborated-enum-specifier        go to state 79
    elaborated-type-specifier        go to state 80
    empty-declaration                go to state 81
    enum-head                        go to state 82
    enum-key                         go to state 83
    enum-name                        go to state 84
    enum-specifier                   go to state 85
    explicit-instantiation           go to state 86
    explicit-specialization          go to state 87
    explicit-specifier               go to state 88
    export-declaration               go to state 89
    function-definition              go to state 90
    function-specifier               go to state 91
    id-expression                    go to state 93
    linkage-specification            go to state 94
    literal-operator-id              go to state 95
    module-import-declaration        go to state 97
    named-namespace-definition       go to state 98
    namespace-alias                  go to state 99
    namespace-alias-definition       go to state 100
    namespace-definition             go to state 101
    namespace-name                   go to state 102
    nested-name-specifier            go to state 103
    nested-namespace-definition      go to state 104
    nodeclspec-function-declaration  go to state 105
    noptr-declarator                 go to state 106
    opaque-enum-declaration          go to state 107
    operator-function-id             go to state 108
    placeholder-type-specifier       go to state 109
    private-module-fragment          go to state 717
    ptr-declarator                   go to state 110
    ptr-operator                     go to state 111
    qualified-id                     go to state 112
    simple-declaration               go to state 113
    simple-template-id               go to state 114
    simple-type-specifier            go to state 115
    static_assert-declaration        go to state 116
    storage-class-specifier          go to state 117
    template-declaration             go to state 118
    template-head                    go to state 119
    template-id                      go to state 120
    template-name                    go to state 121
    type-constraint                  go to state 123
    type-name                        go to state 124
    type-specifier                   go to state 125
    typedef-name                     go to state 126
    typename-specifier               go to state 127
    unnamed-namespace-definition     go to state 128
    unqualified-id                   go to state 129
    using-declaration                go to state 130
    using-directive                  go to state 131
    using-enum-declaration           go to state 132


State 315

  1050 template-id: literal-operator-id LESS • GREATER
  1051            | literal-operator-id LESS • template-argument-list GREATER

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 135
    UNICODE_8         shift, and go to state 184
    GREATER           shift, and go to state 718
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-key                            go to state 209
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 407
    constant-expression                  go to state 635
    conversion-function-id               go to state 68
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 636
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 430
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    string-literal                       go to state 445
    template-argument                    go to state 637
    template-argument-list               go to state 719
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-id                              go to state 639
    type-name                            go to state 124
    type-specifier                       go to state 216
    type-specifier-seq                   go to state 447
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 316

  886 private-module-fragment: MODULE • COLON PRIVATE SEMICOLON
  887                        | MODULE • COLON PRIVATE SEMICOLON declaration-seq

    COLON  shift, and go to state 720


State 317

  224 declaration-seq: declaration-seq • declaration
  1064 translation-unit: module-declaration declaration-seq •
  1068                 | module-declaration declaration-seq • private-module-fragment

    USING          shift, and go to state 1
    IDENTIFIER     shift, and go to state 2
    SEMICOLON      shift, and go to state 3
    ALIGNAS        shift, and go to state 4
    OPEN_PAREN     shift, and go to state 5
    ELLIPSIS       shift, and go to state 6
    AND            shift, and go to state 7
    ASM            shift, and go to state 8
    SCOPE          shift, and go to state 9
    OPEN_SQUARE    shift, and go to state 10
    VIRTUAL        shift, and go to state 11
    CLASS          shift, and go to state 12
    STRUCT         shift, and go to state 13
    UNION          shift, and go to state 14
    TEMPLATE       shift, and go to state 15
    AND_AND        shift, and go to state 16
    OPERATOR       shift, and go to state 17
    CONST          shift, and go to state 18
    VOLATILE       shift, and go to state 19
    FRIEND         shift, and go to state 20
    TYPEDEF        shift, and go to state 21
    CONSTEXPR      shift, and go to state 22
    CONSTEVAL      shift, and go to state 23
    CONSTINIT      shift, and go to state 24
    INLINE         shift, and go to state 25
    DECLTYPE       shift, and go to state 26
    ENUM           shift, and go to state 27
    EXTERN         shift, and go to state 28
    EXPLICIT       shift, and go to state 29
    EXPORT         shift, and go to state 157
    MULT           shift, and go to state 31
    MODULE         shift, and go to state 316
    IMPORT         shift, and go to state 33
    NAMESPACE      shift, and go to state 34
    COMPL          shift, and go to state 35
    AUTO           shift, and go to state 36
    CHAR           shift, and go to state 37
    CHAR8_T        shift, and go to state 38
    CHAR16_T       shift, and go to state 39
    CHAR32_T       shift, and go to state 40
    WCHAR_T        shift, and go to state 41
    BOOL           shift, and go to state 42
    SHORT          shift, and go to state 43
    INT            shift, and go to state 44
    LONG           shift, and go to state 45
    SIGNED         shift, and go to state 46
    UNSIGNED       shift, and go to state 47
    FLOAT          shift, and go to state 48
    DOUBLE         shift, and go to state 49
    VOID           shift, and go to state 50
    STATIC_ASSERT  shift, and go to state 51
    STATIC         shift, and go to state 52
    THREAD_LOCAL   shift, and go to state 53
    MUTABLE        shift, and go to state 54
    TYPENAME       shift, and go to state 55

    $default  reduce using rule 1064 (translation-unit)

    alias-declaration                go to state 56
    alignment-specifier              go to state 57
    asm-declaration                  go to state 58
    attribute-declaration            go to state 59
    attribute-specifier              go to state 60
    attribute-specifier-seq          go to state 61
    block-declaration                go to state 62
    class-head                       go to state 63
    class-key                        go to state 64
    class-name                       go to state 65
    class-specifier                  go to state 66
    concept-name                     go to state 67
    conversion-function-id           go to state 68
    cv-qualifier                     go to state 69
    decl-specifier                   go to state 70
    decl-specifier-seq               go to state 71
    declaration                      go to state 285
    declarator                       go to state 74
    declarator-id                    go to state 75
    decltype-specifier               go to state 76
    deduction-guide                  go to state 77
    defining-type-specifier          go to state 78
    elaborated-enum-specifier        go to state 79
    elaborated-type-specifier        go to state 80
    empty-declaration                go to state 81
    enum-head                        go to state 82
    enum-key                         go to state 83
    enum-name                        go to state 84
    enum-specifier                   go to state 85
    explicit-instantiation           go to state 86
    explicit-specialization          go to state 87
    explicit-specifier               go to state 88
    export-declaration               go to state 89
    function-definition              go to state 90
    function-specifier               go to state 91
    id-expression                    go to state 93
    linkage-specification            go to state 94
    literal-operator-id              go to state 95
    module-import-declaration        go to state 97
    named-namespace-definition       go to state 98
    namespace-alias                  go to state 99
    namespace-alias-definition       go to state 100
    namespace-definition             go to state 101
    namespace-name                   go to state 102
    nested-name-specifier            go to state 103
    nested-namespace-definition      go to state 104
    nodeclspec-function-declaration  go to state 105
    noptr-declarator                 go to state 106
    opaque-enum-declaration          go to state 107
    operator-function-id             go to state 108
    placeholder-type-specifier       go to state 109
    private-module-fragment          go to state 721
    ptr-declarator                   go to state 110
    ptr-operator                     go to state 111
    qualified-id                     go to state 112
    simple-declaration               go to state 113
    simple-template-id               go to state 114
    simple-type-specifier            go to state 115
    static_assert-declaration        go to state 116
    storage-class-specifier          go to state 117
    template-declaration             go to state 118
    template-head                    go to state 119
    template-id                      go to state 120
    template-name                    go to state 121
    type-constraint                  go to state 123
    type-name                        go to state 124
    type-specifier                   go to state 125
    typedef-name                     go to state 126
    typename-specifier               go to state 127
    unnamed-namespace-definition     go to state 128
    unqualified-id                   go to state 129
    using-declaration                go to state 130
    using-directive                  go to state 131
    using-enum-declaration           go to state 132


State 318

  1066 translation-unit: module-declaration private-module-fragment •

    $default  reduce using rule 1066 (translation-unit)


State 319

  657 nested-name-specifier: namespace-name SCOPE •

    $default  reduce using rule 657 (nested-name-specifier)


State 320

  145 class-name: IDENTIFIER •
  163 concept-name: IDENTIFIER •
  294 enum-name: IDENTIFIER •
  659 nested-name-specifier: nested-name-specifier IDENTIFIER • SCOPE
  1052 template-name: IDENTIFIER •
  1110 typedef-name: IDENTIFIER •
  1140 unqualified-id: IDENTIFIER •

    SCOPE  shift, and go to state 722

    PLUS          reduce using rule 1140 (unqualified-id)
    MINUS         reduce using rule 1140 (unqualified-id)
    IDENTIFIER    reduce using rule 145 (class-name)
    IDENTIFIER    [reduce using rule 294 (enum-name)]
    IDENTIFIER    [reduce using rule 1052 (template-name)]
    IDENTIFIER    [reduce using rule 1110 (typedef-name)]
    EQ            reduce using rule 145 (class-name)
    EQ            [reduce using rule 294 (enum-name)]
    EQ            [reduce using rule 1052 (template-name)]
    EQ            [reduce using rule 1110 (typedef-name)]
    EQ            [reduce using rule 1140 (unqualified-id)]
    SEMICOLON     reduce using rule 145 (class-name)
    SEMICOLON     [reduce using rule 294 (enum-name)]
    SEMICOLON     [reduce using rule 1052 (template-name)]
    SEMICOLON     [reduce using rule 1110 (typedef-name)]
    SEMICOLON     [reduce using rule 1140 (unqualified-id)]
    ALIGNAS       reduce using rule 145 (class-name)
    ALIGNAS       [reduce using rule 294 (enum-name)]
    ALIGNAS       [reduce using rule 1052 (template-name)]
    ALIGNAS       [reduce using rule 1110 (typedef-name)]
    ALIGNAS       [reduce using rule 1140 (unqualified-id)]
    OPEN_PAREN    reduce using rule 145 (class-name)
    OPEN_PAREN    [reduce using rule 294 (enum-name)]
    OPEN_PAREN    [reduce using rule 1052 (template-name)]
    OPEN_PAREN    [reduce using rule 1110 (typedef-name)]
    OPEN_PAREN    [reduce using rule 1140 (unqualified-id)]
    CLOSE_PAREN   reduce using rule 145 (class-name)
    CLOSE_PAREN   [reduce using rule 294 (enum-name)]
    CLOSE_PAREN   [reduce using rule 1052 (template-name)]
    CLOSE_PAREN   [reduce using rule 1110 (typedef-name)]
    CLOSE_PAREN   [reduce using rule 1140 (unqualified-id)]
    ELLIPSIS      reduce using rule 145 (class-name)
    ELLIPSIS      [reduce using rule 294 (enum-name)]
    ELLIPSIS      [reduce using rule 1052 (template-name)]
    ELLIPSIS      [reduce using rule 1110 (typedef-name)]
    ELLIPSIS      [reduce using rule 1140 (unqualified-id)]
    AND           reduce using rule 145 (class-name)
    AND           [reduce using rule 294 (enum-name)]
    AND           [reduce using rule 1052 (template-name)]
    AND           [reduce using rule 1110 (typedef-name)]
    AND           [reduce using rule 1140 (unqualified-id)]
    MULT_EQ       reduce using rule 1140 (unqualified-id)
    DIV_EQ        reduce using rule 1140 (unqualified-id)
    MOD_EQ        reduce using rule 1140 (unqualified-id)
    PLUS_EQ       reduce using rule 1140 (unqualified-id)
    MINUS_EQ      reduce using rule 1140 (unqualified-id)
    RSHIFT_EQ     reduce using rule 1140 (unqualified-id)
    LSHIFT_EQ     reduce using rule 1140 (unqualified-id)
    AND_EQ        reduce using rule 1140 (unqualified-id)
    XOR_EQ        reduce using rule 1140 (unqualified-id)
    OR_EQ         reduce using rule 1140 (unqualified-id)
    COMMA         reduce using rule 145 (class-name)
    COMMA         [reduce using rule 294 (enum-name)]
    COMMA         [reduce using rule 1052 (template-name)]
    COMMA         [reduce using rule 1110 (typedef-name)]
    COMMA         [reduce using rule 1140 (unqualified-id)]
    SCOPE         [reduce using rule 145 (class-name)]
    SCOPE         [reduce using rule 294 (enum-name)]
    SCOPE         [reduce using rule 1052 (template-name)]
    SCOPE         [reduce using rule 1110 (typedef-name)]
    OPEN_SQUARE   reduce using rule 145 (class-name)
    OPEN_SQUARE   [reduce using rule 294 (enum-name)]
    OPEN_SQUARE   [reduce using rule 1052 (template-name)]
    OPEN_SQUARE   [reduce using rule 1110 (typedef-name)]
    OPEN_SQUARE   [reduce using rule 1140 (unqualified-id)]
    CLOSE_SQUARE  reduce using rule 1140 (unqualified-id)
    COLON         reduce using rule 145 (class-name)
    COLON         [reduce using rule 294 (enum-name)]
    COLON         [reduce using rule 1052 (template-name)]
    COLON         [reduce using rule 1110 (typedef-name)]
    COLON         [reduce using rule 1140 (unqualified-id)]
    OPEN_BRACE    reduce using rule 145 (class-name)
    OPEN_BRACE    [reduce using rule 294 (enum-name)]
    OPEN_BRACE    [reduce using rule 1052 (template-name)]
    OPEN_BRACE    [reduce using rule 1110 (typedef-name)]
    OPEN_BRACE    [reduce using rule 1140 (unqualified-id)]
    CLOSE_BRACE   reduce using rule 1140 (unqualified-id)
    VIRTUAL       reduce using rule 145 (class-name)
    VIRTUAL       [reduce using rule 294 (enum-name)]
    VIRTUAL       [reduce using rule 1052 (template-name)]
    VIRTUAL       [reduce using rule 1110 (typedef-name)]
    CLASS         reduce using rule 145 (class-name)
    CLASS         [reduce using rule 294 (enum-name)]
    CLASS         [reduce using rule 1052 (template-name)]
    CLASS         [reduce using rule 1110 (typedef-name)]
    STRUCT        reduce using rule 145 (class-name)
    STRUCT        [reduce using rule 294 (enum-name)]
    STRUCT        [reduce using rule 1052 (template-name)]
    STRUCT        [reduce using rule 1110 (typedef-name)]
    UNION         reduce using rule 145 (class-name)
    UNION         [reduce using rule 294 (enum-name)]
    UNION         [reduce using rule 1052 (template-name)]
    UNION         [reduce using rule 1110 (typedef-name)]
    FINAL         reduce using rule 1140 (unqualified-id)
    SPACESHIP     reduce using rule 1140 (unqualified-id)
    QUERY         reduce using rule 1140 (unqualified-id)
    AND_AND       reduce using rule 145 (class-name)
    AND_AND       [reduce using rule 294 (enum-name)]
    AND_AND       [reduce using rule 1052 (template-name)]
    AND_AND       [reduce using rule 1110 (typedef-name)]
    AND_AND       [reduce using rule 1140 (unqualified-id)]
    OR_OR         reduce using rule 1140 (unqualified-id)
    OPERATOR      reduce using rule 145 (class-name)
    OPERATOR      [reduce using rule 294 (enum-name)]
    OPERATOR      [reduce using rule 1052 (template-name)]
    OPERATOR      [reduce using rule 1110 (typedef-name)]
    CONST         reduce using rule 145 (class-name)
    CONST         [reduce using rule 294 (enum-name)]
    CONST         [reduce using rule 1052 (template-name)]
    CONST         [reduce using rule 1110 (typedef-name)]
    VOLATILE      reduce using rule 145 (class-name)
    VOLATILE      [reduce using rule 294 (enum-name)]
    VOLATILE      [reduce using rule 1052 (template-name)]
    VOLATILE      [reduce using rule 1110 (typedef-name)]
    FRIEND        reduce using rule 145 (class-name)
    FRIEND        [reduce using rule 294 (enum-name)]
    FRIEND        [reduce using rule 1052 (template-name)]
    FRIEND        [reduce using rule 1110 (typedef-name)]
    TYPEDEF       reduce using rule 145 (class-name)
    TYPEDEF       [reduce using rule 294 (enum-name)]
    TYPEDEF       [reduce using rule 1052 (template-name)]
    TYPEDEF       [reduce using rule 1110 (typedef-name)]
    CONSTEXPR     reduce using rule 145 (class-name)
    CONSTEXPR     [reduce using rule 294 (enum-name)]
    CONSTEXPR     [reduce using rule 1052 (template-name)]
    CONSTEXPR     [reduce using rule 1110 (typedef-name)]
    CONSTEVAL     reduce using rule 145 (class-name)
    CONSTEVAL     [reduce using rule 294 (enum-name)]
    CONSTEVAL     [reduce using rule 1052 (template-name)]
    CONSTEVAL     [reduce using rule 1110 (typedef-name)]
    CONSTINIT     reduce using rule 145 (class-name)
    CONSTINIT     [reduce using rule 294 (enum-name)]
    CONSTINIT     [reduce using rule 1052 (template-name)]
    CONSTINIT     [reduce using rule 1110 (typedef-name)]
    INLINE        reduce using rule 145 (class-name)
    INLINE        [reduce using rule 294 (enum-name)]
    INLINE        [reduce using rule 1052 (template-name)]
    INLINE        [reduce using rule 1110 (typedef-name)]
    DECLTYPE      reduce using rule 145 (class-name)
    DECLTYPE      [reduce using rule 163 (concept-name)]
    DECLTYPE      [reduce using rule 294 (enum-name)]
    DECLTYPE      [reduce using rule 1052 (template-name)]
    DECLTYPE      [reduce using rule 1110 (typedef-name)]
    DEREF         reduce using rule 1140 (unqualified-id)
    DOT           reduce using rule 1140 (unqualified-id)
    ENUM          reduce using rule 145 (class-name)
    ENUM          [reduce using rule 294 (enum-name)]
    ENUM          [reduce using rule 1052 (template-name)]
    ENUM          [reduce using rule 1110 (typedef-name)]
    EQ_EQ         reduce using rule 1140 (unqualified-id)
    NOT_EQ        reduce using rule 1140 (unqualified-id)
    XOR           reduce using rule 1140 (unqualified-id)
    EXTERN        reduce using rule 145 (class-name)
    EXTERN        [reduce using rule 294 (enum-name)]
    EXTERN        [reduce using rule 1052 (template-name)]
    EXTERN        [reduce using rule 1110 (typedef-name)]
    LESS          reduce using rule 163 (concept-name)
    LESS          [reduce using rule 1052 (template-name)]
    LESS          [reduce using rule 1140 (unqualified-id)]
    GREATER       reduce using rule 145 (class-name)
    GREATER       [reduce using rule 294 (enum-name)]
    GREATER       [reduce using rule 1052 (template-name)]
    GREATER       [reduce using rule 1110 (typedef-name)]
    GREATER       [reduce using rule 1140 (unqualified-id)]
    EXPLICIT      reduce using rule 145 (class-name)
    EXPLICIT      [reduce using rule 294 (enum-name)]
    EXPLICIT      [reduce using rule 1052 (template-name)]
    EXPLICIT      [reduce using rule 1110 (typedef-name)]
    MULT          reduce using rule 145 (class-name)
    MULT          [reduce using rule 294 (enum-name)]
    MULT          [reduce using rule 1052 (template-name)]
    MULT          [reduce using rule 1110 (typedef-name)]
    MULT          [reduce using rule 1140 (unqualified-id)]
    DIV           reduce using rule 1140 (unqualified-id)
    MOD           reduce using rule 1140 (unqualified-id)
    OR            reduce using rule 1140 (unqualified-id)
    LSHIFT        reduce using rule 1140 (unqualified-id)
    RSHIFT        reduce using rule 1140 (unqualified-id)
    LESS_EQ       reduce using rule 1140 (unqualified-id)
    GREATER_EQ    reduce using rule 1140 (unqualified-id)
    DOT_STAR      reduce using rule 1140 (unqualified-id)
    DEREF_STAR    reduce using rule 1140 (unqualified-id)
    TRY           reduce using rule 1140 (unqualified-id)
    REQUIRES      reduce using rule 1140 (unqualified-id)
    COMPL         reduce using rule 145 (class-name)
    COMPL         [reduce using rule 294 (enum-name)]
    COMPL         [reduce using rule 1052 (template-name)]
    COMPL         [reduce using rule 1110 (typedef-name)]
    PLUS_PLUS     reduce using rule 1140 (unqualified-id)
    MINUS_MINUS   reduce using rule 1140 (unqualified-id)
    AUTO          reduce using rule 145 (class-name)
    AUTO          [reduce using rule 163 (concept-name)]
    AUTO          [reduce using rule 294 (enum-name)]
    AUTO          [reduce using rule 1052 (template-name)]
    AUTO          [reduce using rule 1110 (typedef-name)]
    CHAR          reduce using rule 145 (class-name)
    CHAR          [reduce using rule 294 (enum-name)]
    CHAR          [reduce using rule 1052 (template-name)]
    CHAR          [reduce using rule 1110 (typedef-name)]
    CHAR8_T       reduce using rule 145 (class-name)
    CHAR8_T       [reduce using rule 294 (enum-name)]
    CHAR8_T       [reduce using rule 1052 (template-name)]
    CHAR8_T       [reduce using rule 1110 (typedef-name)]
    CHAR16_T      reduce using rule 145 (class-name)
    CHAR16_T      [reduce using rule 294 (enum-name)]
    CHAR16_T      [reduce using rule 1052 (template-name)]
    CHAR16_T      [reduce using rule 1110 (typedef-name)]
    CHAR32_T      reduce using rule 145 (class-name)
    CHAR32_T      [reduce using rule 294 (enum-name)]
    CHAR32_T      [reduce using rule 1052 (template-name)]
    CHAR32_T      [reduce using rule 1110 (typedef-name)]
    WCHAR_T       reduce using rule 145 (class-name)
    WCHAR_T       [reduce using rule 294 (enum-name)]
    WCHAR_T       [reduce using rule 1052 (template-name)]
    WCHAR_T       [reduce using rule 1110 (typedef-name)]
    BOOL          reduce using rule 145 (class-name)
    BOOL          [reduce using rule 294 (enum-name)]
    BOOL          [reduce using rule 1052 (template-name)]
    BOOL          [reduce using rule 1110 (typedef-name)]
    SHORT         reduce using rule 145 (class-name)
    SHORT         [reduce using rule 294 (enum-name)]
    SHORT         [reduce using rule 1052 (template-name)]
    SHORT         [reduce using rule 1110 (typedef-name)]
    INT           reduce using rule 145 (class-name)
    INT           [reduce using rule 294 (enum-name)]
    INT           [reduce using rule 1052 (template-name)]
    INT           [reduce using rule 1110 (typedef-name)]
    LONG          reduce using rule 145 (class-name)
    LONG          [reduce using rule 294 (enum-name)]
    LONG          [reduce using rule 1052 (template-name)]
    LONG          [reduce using rule 1110 (typedef-name)]
    SIGNED        reduce using rule 145 (class-name)
    SIGNED        [reduce using rule 294 (enum-name)]
    SIGNED        [reduce using rule 1052 (template-name)]
    SIGNED        [reduce using rule 1110 (typedef-name)]
    UNSIGNED      reduce using rule 145 (class-name)
    UNSIGNED      [reduce using rule 294 (enum-name)]
    UNSIGNED      [reduce using rule 1052 (template-name)]
    UNSIGNED      [reduce using rule 1110 (typedef-name)]
    FLOAT         reduce using rule 145 (class-name)
    FLOAT         [reduce using rule 294 (enum-name)]
    FLOAT         [reduce using rule 1052 (template-name)]
    FLOAT         [reduce using rule 1110 (typedef-name)]
    DOUBLE        reduce using rule 145 (class-name)
    DOUBLE        [reduce using rule 294 (enum-name)]
    DOUBLE        [reduce using rule 1052 (template-name)]
    DOUBLE        [reduce using rule 1110 (typedef-name)]
    VOID          reduce using rule 145 (class-name)
    VOID          [reduce using rule 294 (enum-name)]
    VOID          [reduce using rule 1052 (template-name)]
    VOID          [reduce using rule 1110 (typedef-name)]
    STATIC        reduce using rule 145 (class-name)
    STATIC        [reduce using rule 294 (enum-name)]
    STATIC        [reduce using rule 1052 (template-name)]
    STATIC        [reduce using rule 1110 (typedef-name)]
    THREAD_LOCAL  reduce using rule 145 (class-name)
    THREAD_LOCAL  [reduce using rule 294 (enum-name)]
    THREAD_LOCAL  [reduce using rule 1052 (template-name)]
    THREAD_LOCAL  [reduce using rule 1110 (typedef-name)]
    MUTABLE       reduce using rule 145 (class-name)
    MUTABLE       [reduce using rule 294 (enum-name)]
    MUTABLE       [reduce using rule 1052 (template-name)]
    MUTABLE       [reduce using rule 1110 (typedef-name)]
    TYPENAME      reduce using rule 145 (class-name)
    TYPENAME      [reduce using rule 294 (enum-name)]
    TYPENAME      [reduce using rule 1052 (template-name)]
    TYPENAME      [reduce using rule 1110 (typedef-name)]
    OVERRIDE      reduce using rule 1140 (unqualified-id)
    $default      reduce using rule 145 (class-name)


State 321

  661 nested-name-specifier: nested-name-specifier TEMPLATE • simple-template-id SCOPE
  910 qualified-id: nested-name-specifier TEMPLATE • unqualified-id
  987 simple-type-specifier: nested-name-specifier TEMPLATE • simple-template-id

    IDENTIFIER  shift, and go to state 723
    OPERATOR    shift, and go to state 17
    COMPL       shift, and go to state 35

    conversion-function-id  go to state 68
    literal-operator-id     go to state 95
    operator-function-id    go to state 108
    simple-template-id      go to state 724
    template-id             go to state 120
    template-name           go to state 142
    unqualified-id          go to state 725


State 322

  901 ptr-operator: nested-name-specifier MULT •
  902             | nested-name-specifier MULT • attribute-specifier-seq
  903             | nested-name-specifier MULT • cv-qualifier-seq
  904             | nested-name-specifier MULT • attribute-specifier-seq cv-qualifier-seq

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10
    CONST        shift, and go to state 18
    VOLATILE     shift, and go to state 19

    ALIGNAS      [reduce using rule 901 (ptr-operator)]
    OPEN_SQUARE  [reduce using rule 901 (ptr-operator)]
    CONST        [reduce using rule 901 (ptr-operator)]
    VOLATILE     [reduce using rule 901 (ptr-operator)]
    $default     reduce using rule 901 (ptr-operator)

    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 726
    cv-qualifier             go to state 233
    cv-qualifier-seq         go to state 727


State 323

  1070 type-constraint: nested-name-specifier concept-name •
  1072                | nested-name-specifier concept-name • LESS GREATER
  1074                | nested-name-specifier concept-name • LESS template-argument-list GREATER

    LESS  shift, and go to state 728

    $default  reduce using rule 1070 (type-constraint)


State 324

  146 class-name: simple-template-id •
  660 nested-name-specifier: nested-name-specifier simple-template-id • SCOPE
  1047 template-id: simple-template-id •
  1111 typedef-name: simple-template-id •

    SCOPE  shift, and go to state 729

    PLUS          reduce using rule 1047 (template-id)
    MINUS         reduce using rule 1047 (template-id)
    IDENTIFIER    reduce using rule 146 (class-name)
    IDENTIFIER    [reduce using rule 1111 (typedef-name)]
    EQ            reduce using rule 146 (class-name)
    EQ            [reduce using rule 1047 (template-id)]
    EQ            [reduce using rule 1111 (typedef-name)]
    SEMICOLON     reduce using rule 146 (class-name)
    SEMICOLON     [reduce using rule 1047 (template-id)]
    SEMICOLON     [reduce using rule 1111 (typedef-name)]
    ALIGNAS       reduce using rule 146 (class-name)
    ALIGNAS       [reduce using rule 1047 (template-id)]
    ALIGNAS       [reduce using rule 1111 (typedef-name)]
    OPEN_PAREN    reduce using rule 146 (class-name)
    OPEN_PAREN    [reduce using rule 1047 (template-id)]
    OPEN_PAREN    [reduce using rule 1111 (typedef-name)]
    CLOSE_PAREN   reduce using rule 146 (class-name)
    CLOSE_PAREN   [reduce using rule 1047 (template-id)]
    CLOSE_PAREN   [reduce using rule 1111 (typedef-name)]
    ELLIPSIS      reduce using rule 146 (class-name)
    ELLIPSIS      [reduce using rule 1047 (template-id)]
    ELLIPSIS      [reduce using rule 1111 (typedef-name)]
    AND           reduce using rule 146 (class-name)
    AND           [reduce using rule 1047 (template-id)]
    AND           [reduce using rule 1111 (typedef-name)]
    MULT_EQ       reduce using rule 1047 (template-id)
    DIV_EQ        reduce using rule 1047 (template-id)
    MOD_EQ        reduce using rule 1047 (template-id)
    PLUS_EQ       reduce using rule 1047 (template-id)
    MINUS_EQ      reduce using rule 1047 (template-id)
    RSHIFT_EQ     reduce using rule 1047 (template-id)
    LSHIFT_EQ     reduce using rule 1047 (template-id)
    AND_EQ        reduce using rule 1047 (template-id)
    XOR_EQ        reduce using rule 1047 (template-id)
    OR_EQ         reduce using rule 1047 (template-id)
    COMMA         reduce using rule 146 (class-name)
    COMMA         [reduce using rule 1047 (template-id)]
    COMMA         [reduce using rule 1111 (typedef-name)]
    SCOPE         [reduce using rule 146 (class-name)]
    SCOPE         [reduce using rule 1111 (typedef-name)]
    OPEN_SQUARE   reduce using rule 146 (class-name)
    OPEN_SQUARE   [reduce using rule 1047 (template-id)]
    OPEN_SQUARE   [reduce using rule 1111 (typedef-name)]
    CLOSE_SQUARE  reduce using rule 1047 (template-id)
    COLON         reduce using rule 146 (class-name)
    COLON         [reduce using rule 1047 (template-id)]
    COLON         [reduce using rule 1111 (typedef-name)]
    OPEN_BRACE    reduce using rule 146 (class-name)
    OPEN_BRACE    [reduce using rule 1047 (template-id)]
    OPEN_BRACE    [reduce using rule 1111 (typedef-name)]
    CLOSE_BRACE   reduce using rule 1047 (template-id)
    VIRTUAL       reduce using rule 146 (class-name)
    VIRTUAL       [reduce using rule 1111 (typedef-name)]
    CLASS         reduce using rule 146 (class-name)
    CLASS         [reduce using rule 1111 (typedef-name)]
    STRUCT        reduce using rule 146 (class-name)
    STRUCT        [reduce using rule 1111 (typedef-name)]
    UNION         reduce using rule 146 (class-name)
    UNION         [reduce using rule 1111 (typedef-name)]
    FINAL         reduce using rule 1047 (template-id)
    SPACESHIP     reduce using rule 1047 (template-id)
    QUERY         reduce using rule 1047 (template-id)
    AND_AND       reduce using rule 146 (class-name)
    AND_AND       [reduce using rule 1047 (template-id)]
    AND_AND       [reduce using rule 1111 (typedef-name)]
    OR_OR         reduce using rule 1047 (template-id)
    OPERATOR      reduce using rule 146 (class-name)
    OPERATOR      [reduce using rule 1111 (typedef-name)]
    CONST         reduce using rule 146 (class-name)
    CONST         [reduce using rule 1111 (typedef-name)]
    VOLATILE      reduce using rule 146 (class-name)
    VOLATILE      [reduce using rule 1111 (typedef-name)]
    FRIEND        reduce using rule 146 (class-name)
    FRIEND        [reduce using rule 1111 (typedef-name)]
    TYPEDEF       reduce using rule 146 (class-name)
    TYPEDEF       [reduce using rule 1111 (typedef-name)]
    CONSTEXPR     reduce using rule 146 (class-name)
    CONSTEXPR     [reduce using rule 1111 (typedef-name)]
    CONSTEVAL     reduce using rule 146 (class-name)
    CONSTEVAL     [reduce using rule 1111 (typedef-name)]
    CONSTINIT     reduce using rule 146 (class-name)
    CONSTINIT     [reduce using rule 1111 (typedef-name)]
    INLINE        reduce using rule 146 (class-name)
    INLINE        [reduce using rule 1111 (typedef-name)]
    DECLTYPE      reduce using rule 146 (class-name)
    DECLTYPE      [reduce using rule 1111 (typedef-name)]
    DEREF         reduce using rule 1047 (template-id)
    DOT           reduce using rule 1047 (template-id)
    ENUM          reduce using rule 146 (class-name)
    ENUM          [reduce using rule 1111 (typedef-name)]
    EQ_EQ         reduce using rule 1047 (template-id)
    NOT_EQ        reduce using rule 1047 (template-id)
    XOR           reduce using rule 1047 (template-id)
    EXTERN        reduce using rule 146 (class-name)
    EXTERN        [reduce using rule 1111 (typedef-name)]
    LESS          reduce using rule 1047 (template-id)
    GREATER       reduce using rule 146 (class-name)
    GREATER       [reduce using rule 1047 (template-id)]
    GREATER       [reduce using rule 1111 (typedef-name)]
    EXPLICIT      reduce using rule 146 (class-name)
    EXPLICIT      [reduce using rule 1111 (typedef-name)]
    MULT          reduce using rule 146 (class-name)
    MULT          [reduce using rule 1047 (template-id)]
    MULT          [reduce using rule 1111 (typedef-name)]
    DIV           reduce using rule 1047 (template-id)
    MOD           reduce using rule 1047 (template-id)
    OR            reduce using rule 1047 (template-id)
    LSHIFT        reduce using rule 1047 (template-id)
    RSHIFT        reduce using rule 1047 (template-id)
    LESS_EQ       reduce using rule 1047 (template-id)
    GREATER_EQ    reduce using rule 1047 (template-id)
    DOT_STAR      reduce using rule 1047 (template-id)
    DEREF_STAR    reduce using rule 1047 (template-id)
    TRY           reduce using rule 1047 (template-id)
    REQUIRES      reduce using rule 1047 (template-id)
    COMPL         reduce using rule 146 (class-name)
    COMPL         [reduce using rule 1111 (typedef-name)]
    PLUS_PLUS     reduce using rule 1047 (template-id)
    MINUS_MINUS   reduce using rule 1047 (template-id)
    AUTO          reduce using rule 146 (class-name)
    AUTO          [reduce using rule 1111 (typedef-name)]
    CHAR          reduce using rule 146 (class-name)
    CHAR          [reduce using rule 1111 (typedef-name)]
    CHAR8_T       reduce using rule 146 (class-name)
    CHAR8_T       [reduce using rule 1111 (typedef-name)]
    CHAR16_T      reduce using rule 146 (class-name)
    CHAR16_T      [reduce using rule 1111 (typedef-name)]
    CHAR32_T      reduce using rule 146 (class-name)
    CHAR32_T      [reduce using rule 1111 (typedef-name)]
    WCHAR_T       reduce using rule 146 (class-name)
    WCHAR_T       [reduce using rule 1111 (typedef-name)]
    BOOL          reduce using rule 146 (class-name)
    BOOL          [reduce using rule 1111 (typedef-name)]
    SHORT         reduce using rule 146 (class-name)
    SHORT         [reduce using rule 1111 (typedef-name)]
    INT           reduce using rule 146 (class-name)
    INT           [reduce using rule 1111 (typedef-name)]
    LONG          reduce using rule 146 (class-name)
    LONG          [reduce using rule 1111 (typedef-name)]
    SIGNED        reduce using rule 146 (class-name)
    SIGNED        [reduce using rule 1111 (typedef-name)]
    UNSIGNED      reduce using rule 146 (class-name)
    UNSIGNED      [reduce using rule 1111 (typedef-name)]
    FLOAT         reduce using rule 146 (class-name)
    FLOAT         [reduce using rule 1111 (typedef-name)]
    DOUBLE        reduce using rule 146 (class-name)
    DOUBLE        [reduce using rule 1111 (typedef-name)]
    VOID          reduce using rule 146 (class-name)
    VOID          [reduce using rule 1111 (typedef-name)]
    STATIC        reduce using rule 146 (class-name)
    STATIC        [reduce using rule 1111 (typedef-name)]
    THREAD_LOCAL  reduce using rule 146 (class-name)
    THREAD_LOCAL  [reduce using rule 1111 (typedef-name)]
    MUTABLE       reduce using rule 146 (class-name)
    MUTABLE       [reduce using rule 1111 (typedef-name)]
    TYPENAME      reduce using rule 146 (class-name)
    TYPENAME      [reduce using rule 1111 (typedef-name)]
    OVERRIDE      reduce using rule 1047 (template-id)
    $default      reduce using rule 146 (class-name)


State 325

  983 simple-template-id: template-name • LESS GREATER
  984                   | template-name • LESS template-argument-list GREATER
  990 simple-type-specifier: nested-name-specifier template-name •

    LESS  shift, and go to state 337

    LESS      [reduce using rule 990 (simple-type-specifier)]
    $default  reduce using rule 990 (simple-type-specifier)


State 326

  985 simple-type-specifier: nested-name-specifier type-name •

    $default  reduce using rule 985 (simple-type-specifier)


State 327

  909 qualified-id: nested-name-specifier unqualified-id •

    $default  reduce using rule 909 (qualified-id)


State 328

  832 parameters-and-qualifiers: OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN
  833                          | OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq
  834                          | OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN ref-qualifier
  835                          | OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq ref-qualifier
  836                          | OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN noexcept-specifier
  837                          | OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq noexcept-specifier
  838                          | OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN ref-qualifier noexcept-specifier
  839                          | OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq ref-qualifier noexcept-specifier
  840                          | OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN attribute-specifier-seq
  841                          | OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq attribute-specifier-seq
  842                          | OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN ref-qualifier attribute-specifier-seq
  843                          | OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq ref-qualifier attribute-specifier-seq
  844                          | OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN noexcept-specifier attribute-specifier-seq
  845                          | OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq noexcept-specifier attribute-specifier-seq
  846                          | OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN ref-qualifier noexcept-specifier attribute-specifier-seq
  847                          | OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq ref-qualifier noexcept-specifier attribute-specifier-seq

    IDENTIFIER    shift, and go to state 162
    ALIGNAS       shift, and go to state 4
    ELLIPSIS      shift, and go to state 730
    SCOPE         shift, and go to state 9
    OPEN_SQUARE   shift, and go to state 10
    VIRTUAL       shift, and go to state 11
    CLASS         shift, and go to state 12
    STRUCT        shift, and go to state 13
    UNION         shift, and go to state 14
    CONST         shift, and go to state 18
    VOLATILE      shift, and go to state 19
    FRIEND        shift, and go to state 20
    TYPEDEF       shift, and go to state 21
    CONSTEXPR     shift, and go to state 22
    CONSTEVAL     shift, and go to state 23
    CONSTINIT     shift, and go to state 24
    INLINE        shift, and go to state 258
    DECLTYPE      shift, and go to state 26
    ENUM          shift, and go to state 27
    EXTERN        shift, and go to state 259
    EXPLICIT      shift, and go to state 29
    THIS          shift, and go to state 471
    AUTO          shift, and go to state 36
    CHAR          shift, and go to state 37
    CHAR8_T       shift, and go to state 38
    CHAR16_T      shift, and go to state 39
    CHAR32_T      shift, and go to state 40
    WCHAR_T       shift, and go to state 41
    BOOL          shift, and go to state 42
    SHORT         shift, and go to state 43
    INT           shift, and go to state 44
    LONG          shift, and go to state 45
    SIGNED        shift, and go to state 46
    UNSIGNED      shift, and go to state 47
    FLOAT         shift, and go to state 48
    DOUBLE        shift, and go to state 49
    VOID          shift, and go to state 50
    STATIC        shift, and go to state 52
    THREAD_LOCAL  shift, and go to state 53
    MUTABLE       shift, and go to state 54
    TYPENAME      shift, and go to state 55

    alignment-specifier           go to state 57
    attribute-specifier           go to state 60
    attribute-specifier-seq       go to state 473
    class-head                    go to state 63
    class-key                     go to state 64
    class-name                    go to state 65
    class-specifier               go to state 66
    concept-name                  go to state 67
    cv-qualifier                  go to state 69
    decl-specifier                go to state 70
    decl-specifier-seq            go to state 474
    decltype-specifier            go to state 76
    defining-type-specifier       go to state 78
    elaborated-enum-specifier     go to state 79
    elaborated-type-specifier     go to state 80
    enum-head                     go to state 82
    enum-key                      go to state 263
    enum-name                     go to state 84
    enum-specifier                go to state 85
    explicit-specifier            go to state 264
    function-specifier            go to state 91
    namespace-alias               go to state 99
    namespace-name                go to state 102
    nested-name-specifier         go to state 212
    parameter-declaration         go to state 731
    parameter-declaration-clause  go to state 732
    parameter-declaration-list    go to state 733
    placeholder-type-specifier    go to state 109
    simple-template-id            go to state 141
    simple-type-specifier         go to state 115
    storage-class-specifier       go to state 117
    template-name                 go to state 215
    type-constraint               go to state 123
    type-name                     go to state 124
    type-specifier                go to state 125
    typedef-name                  go to state 126
    typename-specifier            go to state 127


State 329

  724 noptr-declarator: noptr-declarator OPEN_SQUARE • CLOSE_SQUARE
  725                 | noptr-declarator OPEN_SQUARE • constant-expression CLOSE_SQUARE
  726                 | noptr-declarator OPEN_SQUARE • CLOSE_SQUARE attribute-specifier-seq
  727                 | noptr-declarator OPEN_SQUARE • constant-expression CLOSE_SQUARE attribute-specifier-seq

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CLOSE_SQUARE      shift, and go to state 734
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 407
    constant-expression                  go to state 735
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 430
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 330

  227 declarator: noptr-declarator parameters-and-qualifiers • trailing-return-type
  723 noptr-declarator: noptr-declarator parameters-and-qualifiers •

    DEREF  shift, and go to state 736

    $default  reduce using rule 723 (noptr-declarator)

    trailing-return-type  go to state 737


State 331

  1048 template-id: operator-function-id LESS • GREATER
  1049            | operator-function-id LESS • template-argument-list GREATER

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 135
    UNICODE_8         shift, and go to state 184
    GREATER           shift, and go to state 738
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-key                            go to state 209
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 407
    constant-expression                  go to state 635
    conversion-function-id               go to state 68
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 636
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 430
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    string-literal                       go to state 445
    template-argument                    go to state 637
    template-argument-list               go to state 739
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-id                              go to state 639
    type-name                            go to state 124
    type-specifier                       go to state 216
    type-specifier-seq                   go to state 447
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 332

  892 ptr-declarator: ptr-operator ptr-declarator •

    $default  reduce using rule 892 (ptr-declarator)


State 333

  162 concept-definition: CONCEPT • concept-name EQ constraint-expression SEMICOLON

    IDENTIFIER  shift, and go to state 740

    concept-name  go to state 741


State 334

  1044 template-declaration: template-head concept-definition •

    $default  reduce using rule 1044 (template-declaration)


State 335

  1043 template-declaration: template-head declaration •

    $default  reduce using rule 1043 (template-declaration)


State 336

  232 deduction-guide: template-name OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN DEREF simple-template-id SEMICOLON

    IDENTIFIER    shift, and go to state 162
    ALIGNAS       shift, and go to state 4
    ELLIPSIS      shift, and go to state 730
    SCOPE         shift, and go to state 9
    OPEN_SQUARE   shift, and go to state 10
    VIRTUAL       shift, and go to state 11
    CLASS         shift, and go to state 12
    STRUCT        shift, and go to state 13
    UNION         shift, and go to state 14
    CONST         shift, and go to state 18
    VOLATILE      shift, and go to state 19
    FRIEND        shift, and go to state 20
    TYPEDEF       shift, and go to state 21
    CONSTEXPR     shift, and go to state 22
    CONSTEVAL     shift, and go to state 23
    CONSTINIT     shift, and go to state 24
    INLINE        shift, and go to state 258
    DECLTYPE      shift, and go to state 26
    ENUM          shift, and go to state 27
    EXTERN        shift, and go to state 259
    EXPLICIT      shift, and go to state 29
    THIS          shift, and go to state 471
    AUTO          shift, and go to state 36
    CHAR          shift, and go to state 37
    CHAR8_T       shift, and go to state 38
    CHAR16_T      shift, and go to state 39
    CHAR32_T      shift, and go to state 40
    WCHAR_T       shift, and go to state 41
    BOOL          shift, and go to state 42
    SHORT         shift, and go to state 43
    INT           shift, and go to state 44
    LONG          shift, and go to state 45
    SIGNED        shift, and go to state 46
    UNSIGNED      shift, and go to state 47
    FLOAT         shift, and go to state 48
    DOUBLE        shift, and go to state 49
    VOID          shift, and go to state 50
    STATIC        shift, and go to state 52
    THREAD_LOCAL  shift, and go to state 53
    MUTABLE       shift, and go to state 54
    TYPENAME      shift, and go to state 55

    alignment-specifier           go to state 57
    attribute-specifier           go to state 60
    attribute-specifier-seq       go to state 473
    class-head                    go to state 63
    class-key                     go to state 64
    class-name                    go to state 65
    class-specifier               go to state 66
    concept-name                  go to state 67
    cv-qualifier                  go to state 69
    decl-specifier                go to state 70
    decl-specifier-seq            go to state 474
    decltype-specifier            go to state 76
    defining-type-specifier       go to state 78
    elaborated-enum-specifier     go to state 79
    elaborated-type-specifier     go to state 80
    enum-head                     go to state 82
    enum-key                      go to state 263
    enum-name                     go to state 84
    enum-specifier                go to state 85
    explicit-specifier            go to state 264
    function-specifier            go to state 91
    namespace-alias               go to state 99
    namespace-name                go to state 102
    nested-name-specifier         go to state 212
    parameter-declaration         go to state 731
    parameter-declaration-clause  go to state 742
    parameter-declaration-list    go to state 733
    placeholder-type-specifier    go to state 109
    simple-template-id            go to state 141
    simple-type-specifier         go to state 115
    storage-class-specifier       go to state 117
    template-name                 go to state 215
    type-constraint               go to state 123
    type-name                     go to state 124
    type-specifier                go to state 125
    typedef-name                  go to state 126
    typename-specifier            go to state 127


State 337

  983 simple-template-id: template-name LESS • GREATER
  984                   | template-name LESS • template-argument-list GREATER

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 135
    UNICODE_8         shift, and go to state 184
    GREATER           shift, and go to state 743
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-key                            go to state 209
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 407
    constant-expression                  go to state 635
    conversion-function-id               go to state 68
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 636
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 430
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    string-literal                       go to state 445
    template-argument                    go to state 637
    template-argument-list               go to state 744
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-id                              go to state 639
    type-name                            go to state 124
    type-specifier                       go to state 216
    type-specifier-seq                   go to state 447
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 338

    0 $accept: translation-unit $end •

    $default  accept


State 339

  850 placeholder-type-specifier: type-constraint DECLTYPE • OPEN_PAREN AUTO CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 745


State 340

  848 placeholder-type-specifier: type-constraint AUTO •

    $default  reduce using rule 848 (placeholder-type-specifier)


State 341

  656 nested-name-specifier: type-name SCOPE •

    $default  reduce using rule 656 (nested-name-specifier)


State 342

   13 alias-declaration: USING IDENTIFIER EQ • defining-type-id SEMICOLON

    IDENTIFIER  shift, and go to state 162
    SCOPE       shift, and go to state 9
    CLASS       shift, and go to state 12
    STRUCT      shift, and go to state 13
    UNION       shift, and go to state 14
    CONST       shift, and go to state 18
    VOLATILE    shift, and go to state 19
    DECLTYPE    shift, and go to state 26
    ENUM        shift, and go to state 27
    AUTO        shift, and go to state 36
    CHAR        shift, and go to state 37
    CHAR8_T     shift, and go to state 38
    CHAR16_T    shift, and go to state 39
    CHAR32_T    shift, and go to state 40
    WCHAR_T     shift, and go to state 41
    BOOL        shift, and go to state 42
    SHORT       shift, and go to state 43
    INT         shift, and go to state 44
    LONG        shift, and go to state 45
    SIGNED      shift, and go to state 46
    UNSIGNED    shift, and go to state 47
    FLOAT       shift, and go to state 48
    DOUBLE      shift, and go to state 49
    VOID        shift, and go to state 50
    TYPENAME    shift, and go to state 55

    class-head                   go to state 63
    class-key                    go to state 64
    class-name                   go to state 65
    class-specifier              go to state 66
    concept-name                 go to state 67
    cv-qualifier                 go to state 69
    decltype-specifier           go to state 76
    defining-type-id             go to state 746
    defining-type-specifier      go to state 747
    defining-type-specifier-seq  go to state 748
    elaborated-enum-specifier    go to state 79
    elaborated-type-specifier    go to state 80
    enum-head                    go to state 82
    enum-key                     go to state 263
    enum-name                    go to state 84
    enum-specifier               go to state 85
    namespace-alias              go to state 99
    namespace-name               go to state 102
    nested-name-specifier        go to state 212
    placeholder-type-specifier   go to state 109
    simple-template-id           go to state 141
    simple-type-specifier        go to state 115
    template-name                go to state 215
    type-constraint              go to state 123
    type-name                    go to state 124
    type-specifier               go to state 125
    typedef-name                 go to state 126
    typename-specifier           go to state 127


State 343

   14 alias-declaration: USING IDENTIFIER attribute-specifier-seq • EQ defining-type-id SEMICOLON
   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier

    EQ           shift, and go to state 749
    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    alignment-specifier  go to state 57
    attribute-specifier  go to state 260


State 344

  230 decltype-specifier: DECLTYPE OPEN_PAREN • expression CLOSE_PAREN

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 525
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    expression                           go to state 527
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 345

  657 nested-name-specifier: namespace-name • SCOPE
  1172 using-directive: USING NAMESPACE namespace-name • SEMICOLON

    SEMICOLON  shift, and go to state 750
    SCOPE      shift, and go to state 319


State 346

  659 nested-name-specifier: nested-name-specifier • IDENTIFIER SCOPE
  660                      | nested-name-specifier • simple-template-id SCOPE
  661                      | nested-name-specifier • TEMPLATE simple-template-id SCOPE
  1174 using-directive: USING NAMESPACE nested-name-specifier • namespace-name SEMICOLON

    IDENTIFIER  shift, and go to state 751
    TEMPLATE    shift, and go to state 350

    namespace-alias     go to state 99
    namespace-name      go to state 752
    simple-template-id  go to state 534
    template-name       go to state 142


State 347

  659 nested-name-specifier: nested-name-specifier • IDENTIFIER SCOPE
  660                      | nested-name-specifier • simple-template-id SCOPE
  661                      | nested-name-specifier • TEMPLATE simple-template-id SCOPE
  1165 using-declarator: TYPENAME nested-name-specifier • unqualified-id

    IDENTIFIER  shift, and go to state 349
    TEMPLATE    shift, and go to state 350
    OPERATOR    shift, and go to state 17
    COMPL       shift, and go to state 35

    conversion-function-id  go to state 68
    literal-operator-id     go to state 95
    operator-function-id    go to state 108
    simple-template-id      go to state 351
    template-id             go to state 120
    template-name           go to state 142
    unqualified-id          go to state 753


State 348

  1175 using-enum-declaration: USING elaborated-enum-specifier SEMICOLON •

    $default  reduce using rule 1175 (using-enum-declaration)


State 349

  659 nested-name-specifier: nested-name-specifier IDENTIFIER • SCOPE
  1052 template-name: IDENTIFIER •
  1140 unqualified-id: IDENTIFIER •

    SCOPE  shift, and go to state 722

    SCOPE     [reduce using rule 1140 (unqualified-id)]
    LESS      reduce using rule 1052 (template-name)
    LESS      [reduce using rule 1140 (unqualified-id)]
    $default  reduce using rule 1140 (unqualified-id)


State 350

  661 nested-name-specifier: nested-name-specifier TEMPLATE • simple-template-id SCOPE

    IDENTIFIER  shift, and go to state 310

    simple-template-id  go to state 754
    template-name       go to state 142


State 351

  660 nested-name-specifier: nested-name-specifier simple-template-id • SCOPE
  1047 template-id: simple-template-id •

    SCOPE  shift, and go to state 729

    SCOPE     [reduce using rule 1047 (template-id)]
    $default  reduce using rule 1047 (template-id)


State 352

  1166 using-declarator: nested-name-specifier unqualified-id •

    $default  reduce using rule 1166 (using-declarator)


State 353

  1168 using-declarator-list: using-declarator ELLIPSIS •

    $default  reduce using rule 1168 (using-declarator-list)


State 354

  1164 using-declaration: USING using-declarator-list SEMICOLON •

    $default  reduce using rule 1164 (using-declaration)


State 355

  1169 using-declarator-list: using-declarator-list COMMA • using-declarator
  1170                      | using-declarator-list COMMA • using-declarator ELLIPSIS

    IDENTIFIER  shift, and go to state 253
    SCOPE       shift, and go to state 9
    DECLTYPE    shift, and go to state 134
    TYPENAME    shift, and go to state 137

    class-name             go to state 65
    decltype-specifier     go to state 138
    enum-name              go to state 84
    namespace-alias        go to state 99
    namespace-name         go to state 102
    nested-name-specifier  go to state 140
    simple-template-id     go to state 141
    template-name          go to state 142
    type-name              go to state 143
    typedef-name           go to state 126
    using-declarator       go to state 755


State 356

  1130 unary-operator: PLUS •

    $default  reduce using rule 1130 (unary-operator)


State 357

  1131 unary-operator: MINUS •

    $default  reduce using rule 1131 (unary-operator)


State 358

  125 cast-expression: OPEN_PAREN • type-id CLOSE_PAREN cast-expression
  345 fold-expression: OPEN_PAREN • cast-expression fold-operator ELLIPSIS CLOSE_PAREN
  346                | OPEN_PAREN • ELLIPSIS fold-operator cast-expression CLOSE_PAREN
  347                | OPEN_PAREN • cast-expression fold-operator ELLIPSIS fold-operator cast-expression CLOSE_PAREN
  881 primary-expression: OPEN_PAREN • expression CLOSE_PAREN

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    ELLIPSIS          shift, and go to state 756
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 135
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 525
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 757
    character-literal                    go to state 405
    class-key                            go to state 209
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    expression                           go to state 758
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-id                              go to state 759
    type-name                            go to state 124
    type-specifier                       go to state 216
    type-specifier-seq                   go to state 447
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 359

  1129 unary-operator: AND •

    $default  reduce using rule 1129 (unary-operator)


State 360

  241 delete-expression: SCOPE • DELETE cast-expression
  243                  | SCOPE • DELETE OPEN_SQUARE CLOSE_SQUARE cast-expression
  655 nested-name-specifier: SCOPE •
  668 new-expression: SCOPE • NEW new-type-id
  670               | SCOPE • NEW new-placement new-type-id
  672               | SCOPE • NEW new-type-id new-initializer
  674               | SCOPE • NEW new-placement new-type-id new-initializer
  676               | SCOPE • NEW OPEN_PAREN type-id CLOSE_PAREN
  678               | SCOPE • NEW new-placement OPEN_PAREN type-id CLOSE_PAREN
  680               | SCOPE • NEW OPEN_PAREN type-id CLOSE_PAREN new-initializer
  682               | SCOPE • NEW new-placement OPEN_PAREN type-id CLOSE_PAREN new-initializer

    DELETE  shift, and go to state 760
    NEW     shift, and go to state 761

    $default  reduce using rule 655 (nested-name-specifier)


State 361

  534 lambda-introducer: OPEN_SQUARE • CLOSE_SQUARE
  535                  | OPEN_SQUARE • lambda-capture CLOSE_SQUARE

    IDENTIFIER    shift, and go to state 762
    EQ            shift, and go to state 763
    ELLIPSIS      shift, and go to state 764
    AND           shift, and go to state 765
    CLOSE_SQUARE  shift, and go to state 766
    MULT          shift, and go to state 767
    THIS          shift, and go to state 768

    capture          go to state 769
    capture-default  go to state 770
    capture-list     go to state 771
    init-capture     go to state 772
    lambda-capture   go to state 773
    simple-capture   go to state 774


State 362

   58 await-expression: CO_AWAIT • cast-expression

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 775
    character-literal                    go to state 405
    class-name                           go to state 65
    concept-name                         go to state 67
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    requires-expression                  go to state 442
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 363

   91 binary-literal: ZERO_LB • binary-digit

    '0'  shift, and go to state 776
    '1'  shift, and go to state 777

    binary-digit  go to state 778


State 364

   92 binary-literal: ZERO_HB • binary-digit

    '0'  shift, and go to state 776
    '1'  shift, and go to state 777

    binary-digit  go to state 779


State 365

  127 character-literal: SINGLE_QUOTE • c-char-sequence SINGLE_QUOTE

    BASIC_C_CHAR  shift, and go to state 780
    ESCAPE        shift, and go to state 486
    ESCAPE_LX     shift, and go to state 488
    ESCAPE_LU     shift, and go to state 489
    ESCAPE_HU     shift, and go to state 490

    basic-c-char                 go to state 781
    c-char                       go to state 782
    c-char-sequence              go to state 783
    conditional-escape-sequence  go to state 492
    escape-sequence              go to state 784
    hexadecimal-escape-sequence  go to state 494
    numeric-escape-sequence      go to state 495
    octal-escape-sequence        go to state 496
    simple-escape-sequence       go to state 499
    universal-character-name     go to state 785


State 366

  104 boolean-literal: FALSE •

    $default  reduce using rule 104 (boolean-literal)


State 367

  105 boolean-literal: TRUE •

    $default  reduce using rule 105 (boolean-literal)


State 368

  692 noexcept-expression: NOEXCEPT • OPEN_PAREN expression CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 786


State 369

  242 delete-expression: DELETE • cast-expression
  244                  | DELETE • OPEN_SQUARE CLOSE_SQUARE cast-expression

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 787
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 788
    character-literal                    go to state 405
    class-name                           go to state 65
    concept-name                         go to state 67
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    requires-expression                  go to state 442
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 370

  388 fractional-constant: DOT • digit-sequence

    '0'  shift, and go to state 789
    '1'  shift, and go to state 790
    '2'  shift, and go to state 791
    '3'  shift, and go to state 792
    '4'  shift, and go to state 793
    '5'  shift, and go to state 794
    '6'  shift, and go to state 795
    '7'  shift, and go to state 796
    '8'  shift, and go to state 797
    '9'  shift, and go to state 798

    digit           go to state 412
    digit-sequence  go to state 799


State 371

  1128 unary-operator: MULT •

    $default  reduce using rule 1128 (unary-operator)


State 372

  457 hexadecimal-prefix: ZERO_LX •

    $default  reduce using rule 457 (hexadecimal-prefix)


State 373

  458 hexadecimal-prefix: ZERO_HX •

    $default  reduce using rule 458 (hexadecimal-prefix)


State 374

  930 requires-expression: REQUIRES • requirement-body
  931                    | REQUIRES • requirement-parameter-list requirement-body

    OPEN_PAREN  shift, and go to state 800
    OPEN_BRACE  shift, and go to state 801

    requirement-body            go to state 802
    requirement-parameter-list  go to state 803


State 375

  669 new-expression: NEW • new-type-id
  671               | NEW • new-placement new-type-id
  673               | NEW • new-type-id new-initializer
  675               | NEW • new-placement new-type-id new-initializer
  677               | NEW • OPEN_PAREN type-id CLOSE_PAREN
  679               | NEW • new-placement OPEN_PAREN type-id CLOSE_PAREN
  681               | NEW • OPEN_PAREN type-id CLOSE_PAREN new-initializer
  683               | NEW • new-placement OPEN_PAREN type-id CLOSE_PAREN new-initializer

    IDENTIFIER  shift, and go to state 162
    OPEN_PAREN  shift, and go to state 804
    SCOPE       shift, and go to state 9
    CLASS       shift, and go to state 12
    STRUCT      shift, and go to state 13
    UNION       shift, and go to state 14
    CONST       shift, and go to state 18
    VOLATILE    shift, and go to state 19
    DECLTYPE    shift, and go to state 26
    ENUM        shift, and go to state 135
    AUTO        shift, and go to state 36
    CHAR        shift, and go to state 37
    CHAR8_T     shift, and go to state 38
    CHAR16_T    shift, and go to state 39
    CHAR32_T    shift, and go to state 40
    WCHAR_T     shift, and go to state 41
    BOOL        shift, and go to state 42
    SHORT       shift, and go to state 43
    INT         shift, and go to state 44
    LONG        shift, and go to state 45
    SIGNED      shift, and go to state 46
    UNSIGNED    shift, and go to state 47
    FLOAT       shift, and go to state 48
    DOUBLE      shift, and go to state 49
    VOID        shift, and go to state 50
    TYPENAME    shift, and go to state 55

    class-key                   go to state 209
    class-name                  go to state 65
    concept-name                go to state 67
    cv-qualifier                go to state 69
    decltype-specifier          go to state 76
    elaborated-enum-specifier   go to state 79
    elaborated-type-specifier   go to state 80
    enum-name                   go to state 84
    namespace-alias             go to state 99
    namespace-name              go to state 102
    nested-name-specifier       go to state 212
    new-placement               go to state 805
    new-type-id                 go to state 806
    placeholder-type-specifier  go to state 109
    simple-template-id          go to state 141
    simple-type-specifier       go to state 115
    template-name               go to state 215
    type-constraint             go to state 123
    type-name                   go to state 124
    type-specifier              go to state 216
    type-specifier-seq          go to state 807
    typedef-name                go to state 126
    typename-specifier          go to state 127


State 376

  1133 unary-operator: COMPL •
  1144 unqualified-id: COMPL • type-name
  1145               | COMPL • decltype-specifier

    IDENTIFIER  shift, and go to state 249
    DECLTYPE    shift, and go to state 134

    IDENTIFIER  [reduce using rule 1133 (unary-operator)]
    DECLTYPE    [reduce using rule 1133 (unary-operator)]
    $default    reduce using rule 1133 (unary-operator)

    class-name          go to state 65
    decltype-specifier  go to state 250
    enum-name           go to state 84
    simple-template-id  go to state 141
    template-name       go to state 142
    type-name           go to state 251
    typedef-name        go to state 126


State 377

  1132 unary-operator: NOT •

    $default  reduce using rule 1132 (unary-operator)


State 378

  1118 unary-expression: PLUS_PLUS • cast-expression

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 808
    character-literal                    go to state 405
    class-name                           go to state 65
    concept-name                         go to state 67
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    requires-expression                  go to state 442
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 379

  1119 unary-expression: MINUS_MINUS • cast-expression

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 809
    character-literal                    go to state 405
    class-name                           go to state 65
    concept-name                         go to state 67
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    requires-expression                  go to state 442
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 380

  880 primary-expression: THIS •

    $default  reduce using rule 880 (primary-expression)


State 381

  855 pointer-literal: NULLPTR •

    $default  reduce using rule 855 (pointer-literal)


State 382

  873 postfix-expression: DYNAMIC_CAST • LESS type-id GREATER OPEN_PAREN expression CLOSE_PAREN

    LESS  shift, and go to state 810


State 383

  874 postfix-expression: STATIC_CAST • LESS type-id GREATER OPEN_PAREN expression CLOSE_PAREN

    LESS  shift, and go to state 811


State 384

  875 postfix-expression: REINTERPRET_CAST • LESS type-id GREATER OPEN_PAREN expression CLOSE_PAREN

    LESS  shift, and go to state 812


State 385

  876 postfix-expression: CONST_CAST • LESS type-id GREATER OPEN_PAREN expression CLOSE_PAREN

    LESS  shift, and go to state 813


State 386

  877 postfix-expression: TYPEID • OPEN_PAREN expression CLOSE_PAREN
  878                   | TYPEID • OPEN_PAREN type-id CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 814


State 387

  1121 unary-expression: SIZEOF • unary-expression
  1122                 | SIZEOF • OPEN_PAREN type-id CLOSE_PAREN
  1123                 | SIZEOF • ELLIPSIS OPEN_PAREN IDENTIFIER CLOSE_PAREN

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 815
    ELLIPSIS          shift, and go to state 816
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    character-literal                    go to state 405
    class-name                           go to state 65
    concept-name                         go to state 67
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    requires-expression                  go to state 442
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 817
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 388

  1124 unary-expression: ALIGNOF • OPEN_PAREN type-id CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 818


State 389

  249 digit: '0' •
  748 octal-literal: '0' •

    SINGLE_QUOTE  reduce using rule 249 (digit)
    SINGLE_QUOTE  [reduce using rule 748 (octal-literal)]
    DOT           reduce using rule 249 (digit)
    DOT           [reduce using rule 748 (octal-literal)]
    '0'           reduce using rule 249 (digit)
    '0'           [reduce using rule 748 (octal-literal)]
    '1'           reduce using rule 249 (digit)
    '1'           [reduce using rule 748 (octal-literal)]
    '2'           reduce using rule 249 (digit)
    '2'           [reduce using rule 748 (octal-literal)]
    '3'           reduce using rule 249 (digit)
    '3'           [reduce using rule 748 (octal-literal)]
    '4'           reduce using rule 249 (digit)
    '4'           [reduce using rule 748 (octal-literal)]
    '5'           reduce using rule 249 (digit)
    '5'           [reduce using rule 748 (octal-literal)]
    '6'           reduce using rule 249 (digit)
    '6'           [reduce using rule 748 (octal-literal)]
    '7'           reduce using rule 249 (digit)
    '7'           [reduce using rule 748 (octal-literal)]
    '8'           reduce using rule 249 (digit)
    '9'           reduce using rule 249 (digit)
    'e'           reduce using rule 249 (digit)
    'E'           reduce using rule 249 (digit)
    $default      reduce using rule 748 (octal-literal)


State 390

  250 digit: '1' •
  695 nonzero-digit: '1' •

    SINGLE_QUOTE  reduce using rule 250 (digit)
    SINGLE_QUOTE  [reduce using rule 695 (nonzero-digit)]
    DOT           reduce using rule 250 (digit)
    DOT           [reduce using rule 695 (nonzero-digit)]
    '0'           reduce using rule 250 (digit)
    '0'           [reduce using rule 695 (nonzero-digit)]
    '1'           reduce using rule 250 (digit)
    '1'           [reduce using rule 695 (nonzero-digit)]
    '2'           reduce using rule 250 (digit)
    '2'           [reduce using rule 695 (nonzero-digit)]
    '3'           reduce using rule 250 (digit)
    '3'           [reduce using rule 695 (nonzero-digit)]
    '4'           reduce using rule 250 (digit)
    '4'           [reduce using rule 695 (nonzero-digit)]
    '5'           reduce using rule 250 (digit)
    '5'           [reduce using rule 695 (nonzero-digit)]
    '6'           reduce using rule 250 (digit)
    '6'           [reduce using rule 695 (nonzero-digit)]
    '7'           reduce using rule 250 (digit)
    '7'           [reduce using rule 695 (nonzero-digit)]
    '8'           reduce using rule 250 (digit)
    '8'           [reduce using rule 695 (nonzero-digit)]
    '9'           reduce using rule 250 (digit)
    '9'           [reduce using rule 695 (nonzero-digit)]
    'e'           reduce using rule 250 (digit)
    'E'           reduce using rule 250 (digit)
    $default      reduce using rule 695 (nonzero-digit)


State 391

  251 digit: '2' •
  696 nonzero-digit: '2' •

    SINGLE_QUOTE  reduce using rule 251 (digit)
    SINGLE_QUOTE  [reduce using rule 696 (nonzero-digit)]
    DOT           reduce using rule 251 (digit)
    DOT           [reduce using rule 696 (nonzero-digit)]
    '0'           reduce using rule 251 (digit)
    '0'           [reduce using rule 696 (nonzero-digit)]
    '1'           reduce using rule 251 (digit)
    '1'           [reduce using rule 696 (nonzero-digit)]
    '2'           reduce using rule 251 (digit)
    '2'           [reduce using rule 696 (nonzero-digit)]
    '3'           reduce using rule 251 (digit)
    '3'           [reduce using rule 696 (nonzero-digit)]
    '4'           reduce using rule 251 (digit)
    '4'           [reduce using rule 696 (nonzero-digit)]
    '5'           reduce using rule 251 (digit)
    '5'           [reduce using rule 696 (nonzero-digit)]
    '6'           reduce using rule 251 (digit)
    '6'           [reduce using rule 696 (nonzero-digit)]
    '7'           reduce using rule 251 (digit)
    '7'           [reduce using rule 696 (nonzero-digit)]
    '8'           reduce using rule 251 (digit)
    '8'           [reduce using rule 696 (nonzero-digit)]
    '9'           reduce using rule 251 (digit)
    '9'           [reduce using rule 696 (nonzero-digit)]
    'e'           reduce using rule 251 (digit)
    'E'           reduce using rule 251 (digit)
    $default      reduce using rule 696 (nonzero-digit)


State 392

  252 digit: '3' •
  697 nonzero-digit: '3' •

    SINGLE_QUOTE  reduce using rule 252 (digit)
    SINGLE_QUOTE  [reduce using rule 697 (nonzero-digit)]
    DOT           reduce using rule 252 (digit)
    DOT           [reduce using rule 697 (nonzero-digit)]
    '0'           reduce using rule 252 (digit)
    '0'           [reduce using rule 697 (nonzero-digit)]
    '1'           reduce using rule 252 (digit)
    '1'           [reduce using rule 697 (nonzero-digit)]
    '2'           reduce using rule 252 (digit)
    '2'           [reduce using rule 697 (nonzero-digit)]
    '3'           reduce using rule 252 (digit)
    '3'           [reduce using rule 697 (nonzero-digit)]
    '4'           reduce using rule 252 (digit)
    '4'           [reduce using rule 697 (nonzero-digit)]
    '5'           reduce using rule 252 (digit)
    '5'           [reduce using rule 697 (nonzero-digit)]
    '6'           reduce using rule 252 (digit)
    '6'           [reduce using rule 697 (nonzero-digit)]
    '7'           reduce using rule 252 (digit)
    '7'           [reduce using rule 697 (nonzero-digit)]
    '8'           reduce using rule 252 (digit)
    '8'           [reduce using rule 697 (nonzero-digit)]
    '9'           reduce using rule 252 (digit)
    '9'           [reduce using rule 697 (nonzero-digit)]
    'e'           reduce using rule 252 (digit)
    'E'           reduce using rule 252 (digit)
    $default      reduce using rule 697 (nonzero-digit)


State 393

  253 digit: '4' •
  698 nonzero-digit: '4' •

    SINGLE_QUOTE  reduce using rule 253 (digit)
    SINGLE_QUOTE  [reduce using rule 698 (nonzero-digit)]
    DOT           reduce using rule 253 (digit)
    DOT           [reduce using rule 698 (nonzero-digit)]
    '0'           reduce using rule 253 (digit)
    '0'           [reduce using rule 698 (nonzero-digit)]
    '1'           reduce using rule 253 (digit)
    '1'           [reduce using rule 698 (nonzero-digit)]
    '2'           reduce using rule 253 (digit)
    '2'           [reduce using rule 698 (nonzero-digit)]
    '3'           reduce using rule 253 (digit)
    '3'           [reduce using rule 698 (nonzero-digit)]
    '4'           reduce using rule 253 (digit)
    '4'           [reduce using rule 698 (nonzero-digit)]
    '5'           reduce using rule 253 (digit)
    '5'           [reduce using rule 698 (nonzero-digit)]
    '6'           reduce using rule 253 (digit)
    '6'           [reduce using rule 698 (nonzero-digit)]
    '7'           reduce using rule 253 (digit)
    '7'           [reduce using rule 698 (nonzero-digit)]
    '8'           reduce using rule 253 (digit)
    '8'           [reduce using rule 698 (nonzero-digit)]
    '9'           reduce using rule 253 (digit)
    '9'           [reduce using rule 698 (nonzero-digit)]
    'e'           reduce using rule 253 (digit)
    'E'           reduce using rule 253 (digit)
    $default      reduce using rule 698 (nonzero-digit)


State 394

  254 digit: '5' •
  699 nonzero-digit: '5' •

    SINGLE_QUOTE  reduce using rule 254 (digit)
    SINGLE_QUOTE  [reduce using rule 699 (nonzero-digit)]
    DOT           reduce using rule 254 (digit)
    DOT           [reduce using rule 699 (nonzero-digit)]
    '0'           reduce using rule 254 (digit)
    '0'           [reduce using rule 699 (nonzero-digit)]
    '1'           reduce using rule 254 (digit)
    '1'           [reduce using rule 699 (nonzero-digit)]
    '2'           reduce using rule 254 (digit)
    '2'           [reduce using rule 699 (nonzero-digit)]
    '3'           reduce using rule 254 (digit)
    '3'           [reduce using rule 699 (nonzero-digit)]
    '4'           reduce using rule 254 (digit)
    '4'           [reduce using rule 699 (nonzero-digit)]
    '5'           reduce using rule 254 (digit)
    '5'           [reduce using rule 699 (nonzero-digit)]
    '6'           reduce using rule 254 (digit)
    '6'           [reduce using rule 699 (nonzero-digit)]
    '7'           reduce using rule 254 (digit)
    '7'           [reduce using rule 699 (nonzero-digit)]
    '8'           reduce using rule 254 (digit)
    '8'           [reduce using rule 699 (nonzero-digit)]
    '9'           reduce using rule 254 (digit)
    '9'           [reduce using rule 699 (nonzero-digit)]
    'e'           reduce using rule 254 (digit)
    'E'           reduce using rule 254 (digit)
    $default      reduce using rule 699 (nonzero-digit)


State 395

  255 digit: '6' •
  700 nonzero-digit: '6' •

    SINGLE_QUOTE  reduce using rule 255 (digit)
    SINGLE_QUOTE  [reduce using rule 700 (nonzero-digit)]
    DOT           reduce using rule 255 (digit)
    DOT           [reduce using rule 700 (nonzero-digit)]
    '0'           reduce using rule 255 (digit)
    '0'           [reduce using rule 700 (nonzero-digit)]
    '1'           reduce using rule 255 (digit)
    '1'           [reduce using rule 700 (nonzero-digit)]
    '2'           reduce using rule 255 (digit)
    '2'           [reduce using rule 700 (nonzero-digit)]
    '3'           reduce using rule 255 (digit)
    '3'           [reduce using rule 700 (nonzero-digit)]
    '4'           reduce using rule 255 (digit)
    '4'           [reduce using rule 700 (nonzero-digit)]
    '5'           reduce using rule 255 (digit)
    '5'           [reduce using rule 700 (nonzero-digit)]
    '6'           reduce using rule 255 (digit)
    '6'           [reduce using rule 700 (nonzero-digit)]
    '7'           reduce using rule 255 (digit)
    '7'           [reduce using rule 700 (nonzero-digit)]
    '8'           reduce using rule 255 (digit)
    '8'           [reduce using rule 700 (nonzero-digit)]
    '9'           reduce using rule 255 (digit)
    '9'           [reduce using rule 700 (nonzero-digit)]
    'e'           reduce using rule 255 (digit)
    'E'           reduce using rule 255 (digit)
    $default      reduce using rule 700 (nonzero-digit)


State 396

  256 digit: '7' •
  701 nonzero-digit: '7' •

    SINGLE_QUOTE  reduce using rule 256 (digit)
    SINGLE_QUOTE  [reduce using rule 701 (nonzero-digit)]
    DOT           reduce using rule 256 (digit)
    DOT           [reduce using rule 701 (nonzero-digit)]
    '0'           reduce using rule 256 (digit)
    '0'           [reduce using rule 701 (nonzero-digit)]
    '1'           reduce using rule 256 (digit)
    '1'           [reduce using rule 701 (nonzero-digit)]
    '2'           reduce using rule 256 (digit)
    '2'           [reduce using rule 701 (nonzero-digit)]
    '3'           reduce using rule 256 (digit)
    '3'           [reduce using rule 701 (nonzero-digit)]
    '4'           reduce using rule 256 (digit)
    '4'           [reduce using rule 701 (nonzero-digit)]
    '5'           reduce using rule 256 (digit)
    '5'           [reduce using rule 701 (nonzero-digit)]
    '6'           reduce using rule 256 (digit)
    '6'           [reduce using rule 701 (nonzero-digit)]
    '7'           reduce using rule 256 (digit)
    '7'           [reduce using rule 701 (nonzero-digit)]
    '8'           reduce using rule 256 (digit)
    '8'           [reduce using rule 701 (nonzero-digit)]
    '9'           reduce using rule 256 (digit)
    '9'           [reduce using rule 701 (nonzero-digit)]
    'e'           reduce using rule 256 (digit)
    'E'           reduce using rule 256 (digit)
    $default      reduce using rule 701 (nonzero-digit)


State 397

  257 digit: '8' •
  702 nonzero-digit: '8' •

    SINGLE_QUOTE  reduce using rule 257 (digit)
    SINGLE_QUOTE  [reduce using rule 702 (nonzero-digit)]
    DOT           reduce using rule 257 (digit)
    DOT           [reduce using rule 702 (nonzero-digit)]
    '0'           reduce using rule 257 (digit)
    '0'           [reduce using rule 702 (nonzero-digit)]
    '1'           reduce using rule 257 (digit)
    '1'           [reduce using rule 702 (nonzero-digit)]
    '2'           reduce using rule 257 (digit)
    '2'           [reduce using rule 702 (nonzero-digit)]
    '3'           reduce using rule 257 (digit)
    '3'           [reduce using rule 702 (nonzero-digit)]
    '4'           reduce using rule 257 (digit)
    '4'           [reduce using rule 702 (nonzero-digit)]
    '5'           reduce using rule 257 (digit)
    '5'           [reduce using rule 702 (nonzero-digit)]
    '6'           reduce using rule 257 (digit)
    '6'           [reduce using rule 702 (nonzero-digit)]
    '7'           reduce using rule 257 (digit)
    '7'           [reduce using rule 702 (nonzero-digit)]
    '8'           reduce using rule 257 (digit)
    '8'           [reduce using rule 702 (nonzero-digit)]
    '9'           reduce using rule 257 (digit)
    '9'           [reduce using rule 702 (nonzero-digit)]
    'e'           reduce using rule 257 (digit)
    'E'           reduce using rule 257 (digit)
    $default      reduce using rule 702 (nonzero-digit)


State 398

  258 digit: '9' •
  703 nonzero-digit: '9' •

    SINGLE_QUOTE  reduce using rule 258 (digit)
    SINGLE_QUOTE  [reduce using rule 703 (nonzero-digit)]
    DOT           reduce using rule 258 (digit)
    DOT           [reduce using rule 703 (nonzero-digit)]
    '0'           reduce using rule 258 (digit)
    '0'           [reduce using rule 703 (nonzero-digit)]
    '1'           reduce using rule 258 (digit)
    '1'           [reduce using rule 703 (nonzero-digit)]
    '2'           reduce using rule 258 (digit)
    '2'           [reduce using rule 703 (nonzero-digit)]
    '3'           reduce using rule 258 (digit)
    '3'           [reduce using rule 703 (nonzero-digit)]
    '4'           reduce using rule 258 (digit)
    '4'           [reduce using rule 703 (nonzero-digit)]
    '5'           reduce using rule 258 (digit)
    '5'           [reduce using rule 703 (nonzero-digit)]
    '6'           reduce using rule 258 (digit)
    '6'           [reduce using rule 703 (nonzero-digit)]
    '7'           reduce using rule 258 (digit)
    '7'           [reduce using rule 703 (nonzero-digit)]
    '8'           reduce using rule 258 (digit)
    '8'           [reduce using rule 703 (nonzero-digit)]
    '9'           reduce using rule 258 (digit)
    '9'           [reduce using rule 703 (nonzero-digit)]
    'e'           reduce using rule 258 (digit)
    'E'           reduce using rule 258 (digit)
    $default      reduce using rule 703 (nonzero-digit)


State 399

   11 additive-expression: additive-expression • PLUS multiplicative-expression
   12                    | additive-expression • MINUS multiplicative-expression
  952 shift-expression: additive-expression •

    PLUS   shift, and go to state 819
    MINUS  shift, and go to state 820

    $default  reduce using rule 952 (shift-expression)


State 400

   20 and-expression: and-expression • AND equality-expression
  317 exclusive-or-expression: and-expression •

    AND  shift, and go to state 821

    $default  reduce using rule 317 (exclusive-or-expression)


State 401

  1120 unary-expression: await-expression •

    $default  reduce using rule 1120 (unary-expression)


State 402

   93 binary-literal: binary-literal • binary-digit
   94               | binary-literal • SINGLE_QUOTE binary-digit
  485 integer-literal: binary-literal •
  486                | binary-literal • integer-suffix
  1158 user-defined-integer-literal: binary-literal • ud-suffix

    IDENTIFIER    shift, and go to state 822
    SINGLE_QUOTE  shift, and go to state 823
    LONG_LONG_L   shift, and go to state 824
    LONG_LONG_H   shift, and go to state 825
    '0'           shift, and go to state 776
    '1'           shift, and go to state 777
    'u'           shift, and go to state 826
    'U'           shift, and go to state 827
    'L'           shift, and go to state 828
    'l'           shift, and go to state 829
    'z'           shift, and go to state 830
    'Z'           shift, and go to state 831

    IDENTIFIER  [reduce using rule 485 (integer-literal)]
    $default    reduce using rule 485 (integer-literal)

    binary-digit      go to state 832
    integer-suffix    go to state 833
    long-long-suffix  go to state 834
    long-suffix       go to state 835
    size-suffix       go to state 836
    ud-suffix         go to state 837
    unsigned-suffix   go to state 838


State 403

  558 literal: boolean-literal •

    $default  reduce using rule 558 (literal)


State 404

  852 pm-expression: cast-expression •

    $default  reduce using rule 852 (pm-expression)


State 405

  555 literal: character-literal •
  1149 user-defined-character-literal: character-literal • ud-suffix

    IDENTIFIER  shift, and go to state 822

    IDENTIFIER  [reduce using rule 555 (literal)]
    $default    reduce using rule 555 (literal)

    ud-suffix  go to state 839


State 406

  155 compare-expression: compare-expression • SPACESHIP shift-expression
  916 relational-expression: compare-expression •

    SPACESHIP  shift, and go to state 840

    $default  reduce using rule 916 (relational-expression)


State 407

  171 constant-expression: conditional-expression •

    $default  reduce using rule 171 (constant-expression)


State 408

   17 alignment-specifier: ALIGNAS OPEN_PAREN constant-expression • CLOSE_PAREN
   18                    | ALIGNAS OPEN_PAREN constant-expression • ELLIPSIS CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 841
    ELLIPSIS     shift, and go to state 842


State 409

  339 floating-point-literal: decimal-floating-point-literal •

    $default  reduce using rule 339 (floating-point-literal)


State 410

  196 decimal-literal: decimal-literal • digit
  197                | decimal-literal • SINGLE_QUOTE digit
  489 integer-literal: decimal-literal •
  490                | decimal-literal • integer-suffix
  1155 user-defined-integer-literal: decimal-literal • ud-suffix

    IDENTIFIER    shift, and go to state 822
    SINGLE_QUOTE  shift, and go to state 843
    LONG_LONG_L   shift, and go to state 824
    LONG_LONG_H   shift, and go to state 825
    '0'           shift, and go to state 789
    '1'           shift, and go to state 790
    '2'           shift, and go to state 791
    '3'           shift, and go to state 792
    '4'           shift, and go to state 793
    '5'           shift, and go to state 794
    '6'           shift, and go to state 795
    '7'           shift, and go to state 796
    '8'           shift, and go to state 797
    '9'           shift, and go to state 798
    'u'           shift, and go to state 826
    'U'           shift, and go to state 827
    'L'           shift, and go to state 828
    'l'           shift, and go to state 829
    'z'           shift, and go to state 830
    'Z'           shift, and go to state 831

    IDENTIFIER  [reduce using rule 489 (integer-literal)]
    $default    reduce using rule 489 (integer-literal)

    digit             go to state 844
    integer-suffix    go to state 845
    long-long-suffix  go to state 834
    long-suffix       go to state 835
    size-suffix       go to state 836
    ud-suffix         go to state 846
    unsigned-suffix   go to state 838


State 411

  1127 unary-expression: delete-expression •

    $default  reduce using rule 1127 (unary-expression)


State 412

  259 digit-sequence: digit •

    $default  reduce using rule 259 (digit-sequence)


State 413

  193 decimal-floating-point-literal: digit-sequence • exponent-part
  194                               | digit-sequence • exponent-part floating-point-suffix
  260 digit-sequence: digit-sequence • digit
  261               | digit-sequence • SINGLE_QUOTE digit
  387 fractional-constant: digit-sequence • DOT digit-sequence
  389                    | digit-sequence • DOT
  1152 user-defined-floating-point-literal: digit-sequence • exponent-part ud-suffix

    SINGLE_QUOTE  shift, and go to state 847
    DOT           shift, and go to state 848
    '0'           shift, and go to state 789
    '1'           shift, and go to state 790
    '2'           shift, and go to state 791
    '3'           shift, and go to state 792
    '4'           shift, and go to state 793
    '5'           shift, and go to state 794
    '6'           shift, and go to state 795
    '7'           shift, and go to state 796
    '8'           shift, and go to state 797
    '9'           shift, and go to state 798
    'e'           shift, and go to state 849
    'E'           shift, and go to state 850

    digit          go to state 851
    exponent-part  go to state 852


State 414

  126 character-literal: encoding-prefix • SINGLE_QUOTE c-char-sequence SINGLE_QUOTE
  1030 string-literal: encoding-prefix • DOUBLE_QUOTE DOUBLE_QUOTE
  1032               | encoding-prefix • DOUBLE_QUOTE s-char-sequence DOUBLE_QUOTE
  1034               | encoding-prefix • 'R' raw-string

    SINGLE_QUOTE  shift, and go to state 853
    DOUBLE_QUOTE  shift, and go to state 506
    'R'           shift, and go to state 507


State 415

   19 and-expression: equality-expression •
  305 equality-expression: equality-expression • EQ_EQ relational-expression
  306                    | equality-expression • NOT_EQ relational-expression

    EQ_EQ   shift, and go to state 854
    NOT_EQ  shift, and go to state 855

    $default  reduce using rule 19 (and-expression)


State 416

  318 exclusive-or-expression: exclusive-or-expression • XOR and-expression
  463 inclusive-or-expression: exclusive-or-expression •

    XOR  shift, and go to state 856

    $default  reduce using rule 463 (inclusive-or-expression)


State 417

  556 literal: floating-point-literal •

    $default  reduce using rule 556 (literal)


State 418

  884 primary-expression: fold-expression •

    $default  reduce using rule 884 (primary-expression)


State 419

  189 decimal-floating-point-literal: fractional-constant •
  190                               | fractional-constant • exponent-part
  191                               | fractional-constant • floating-point-suffix
  192                               | fractional-constant • exponent-part floating-point-suffix
  1150 user-defined-floating-point-literal: fractional-constant • ud-suffix
  1151                                    | fractional-constant • exponent-part ud-suffix

    IDENTIFIER  shift, and go to state 822
    'L'         shift, and go to state 857
    'e'         shift, and go to state 849
    'E'         shift, and go to state 850
    'f'         shift, and go to state 858
    'l'         shift, and go to state 859
    'F'         shift, and go to state 860

    IDENTIFIER  [reduce using rule 189 (decimal-floating-point-literal)]
    $default    reduce using rule 189 (decimal-floating-point-literal)

    exponent-part          go to state 861
    floating-point-suffix  go to state 862
    ud-suffix              go to state 863


State 420

  340 floating-point-literal: hexadecimal-floating-point-literal •

    $default  reduce using rule 340 (floating-point-literal)


State 421

  491 integer-literal: hexadecimal-literal •
  492                | hexadecimal-literal • integer-suffix
  1157 user-defined-integer-literal: hexadecimal-literal • ud-suffix

    IDENTIFIER   shift, and go to state 822
    LONG_LONG_L  shift, and go to state 824
    LONG_LONG_H  shift, and go to state 825
    'u'          shift, and go to state 826
    'U'          shift, and go to state 827
    'L'          shift, and go to state 828
    'l'          shift, and go to state 829
    'z'          shift, and go to state 830
    'Z'          shift, and go to state 831

    IDENTIFIER  [reduce using rule 491 (integer-literal)]
    $default    reduce using rule 491 (integer-literal)

    integer-suffix    go to state 864
    long-long-suffix  go to state 834
    long-suffix       go to state 835
    size-suffix       go to state 836
    ud-suffix         go to state 865
    unsigned-suffix   go to state 838


State 422

  449 hexadecimal-floating-point-literal: hexadecimal-prefix • hexadecimal-fractional-constant binary-exponent-part
  450                                   | hexadecimal-prefix • hexadecimal-fractional-constant binary-exponent-part floating-point-suffix
  451                                   | hexadecimal-prefix • hexadecimal-digit-sequence binary-exponent-part
  452                                   | hexadecimal-prefix • hexadecimal-digit-sequence binary-exponent-part floating-point-suffix
  456 hexadecimal-literal: hexadecimal-prefix • hexadecimal-digit-sequence
  1153 user-defined-floating-point-literal: hexadecimal-prefix • hexadecimal-fractional-constant binary-exponent-part ud-suffix
  1154                                    | hexadecimal-prefix • hexadecimal-digit-sequence binary-exponent-part ud-suffix

    DOT  shift, and go to state 866
    '0'  shift, and go to state 867
    '1'  shift, and go to state 868
    '2'  shift, and go to state 869
    '3'  shift, and go to state 870
    '4'  shift, and go to state 871
    '5'  shift, and go to state 872
    '6'  shift, and go to state 873
    '7'  shift, and go to state 874
    '8'  shift, and go to state 875
    '9'  shift, and go to state 876
    'e'  shift, and go to state 877
    'E'  shift, and go to state 878
    'f'  shift, and go to state 879
    'F'  shift, and go to state 880
    'a'  shift, and go to state 881
    'b'  shift, and go to state 882
    'c'  shift, and go to state 883
    'd'  shift, and go to state 884
    'A'  shift, and go to state 885
    'B'  shift, and go to state 886
    'C'  shift, and go to state 887
    'D'  shift, and go to state 888

    hexadecimal-digit                go to state 889
    hexadecimal-digit-sequence       go to state 890
    hexadecimal-fractional-constant  go to state 891


State 423

  882 primary-expression: id-expression •

    $default  reduce using rule 882 (primary-expression)


State 424

  464 inclusive-or-expression: inclusive-or-expression • OR exclusive-or-expression
  563 logical-and-expression: inclusive-or-expression •

    OR  shift, and go to state 892

    $default  reduce using rule 563 (logical-and-expression)


State 425

  554 literal: integer-literal •

    $default  reduce using rule 554 (literal)


State 426

  883 primary-expression: lambda-expression •

    $default  reduce using rule 883 (primary-expression)


State 427

  531 lambda-expression: lambda-introducer • lambda-declarator compound-statement
  532                  | lambda-introducer • LESS template-parameter-list GREATER lambda-declarator compound-statement
  533                  | lambda-introducer • LESS template-parameter-list GREATER requires-clause lambda-declarator compound-statement

    IDENTIFIER    shift, and go to state 162
    ALIGNAS       shift, and go to state 4
    OPEN_PAREN    shift, and go to state 893
    SCOPE         shift, and go to state 9
    OPEN_SQUARE   shift, and go to state 10
    VIRTUAL       shift, and go to state 11
    CLASS         shift, and go to state 12
    STRUCT        shift, and go to state 13
    UNION         shift, and go to state 14
    NOEXCEPT      shift, and go to state 894
    CONST         shift, and go to state 18
    VOLATILE      shift, and go to state 19
    FRIEND        shift, and go to state 20
    TYPEDEF       shift, and go to state 21
    CONSTEXPR     shift, and go to state 22
    CONSTEVAL     shift, and go to state 23
    CONSTINIT     shift, and go to state 24
    INLINE        shift, and go to state 258
    DECLTYPE      shift, and go to state 26
    DEREF         shift, and go to state 736
    ENUM          shift, and go to state 27
    EXTERN        shift, and go to state 259
    LESS          shift, and go to state 895
    EXPLICIT      shift, and go to state 29
    AUTO          shift, and go to state 36
    CHAR          shift, and go to state 37
    CHAR8_T       shift, and go to state 38
    CHAR16_T      shift, and go to state 39
    CHAR32_T      shift, and go to state 40
    WCHAR_T       shift, and go to state 41
    BOOL          shift, and go to state 42
    SHORT         shift, and go to state 43
    INT           shift, and go to state 44
    LONG          shift, and go to state 45
    SIGNED        shift, and go to state 46
    UNSIGNED      shift, and go to state 47
    FLOAT         shift, and go to state 48
    DOUBLE        shift, and go to state 49
    VOID          shift, and go to state 50
    STATIC        shift, and go to state 52
    THREAD_LOCAL  shift, and go to state 53
    MUTABLE       shift, and go to state 54
    TYPENAME      shift, and go to state 55

    alignment-specifier         go to state 57
    attribute-specifier         go to state 60
    attribute-specifier-seq     go to state 896
    class-head                  go to state 63
    class-key                   go to state 64
    class-name                  go to state 65
    class-specifier             go to state 66
    concept-name                go to state 67
    cv-qualifier                go to state 69
    decl-specifier              go to state 70
    decl-specifier-seq          go to state 897
    decltype-specifier          go to state 76
    defining-type-specifier     go to state 78
    elaborated-enum-specifier   go to state 79
    elaborated-type-specifier   go to state 80
    enum-head                   go to state 82
    enum-key                    go to state 263
    enum-name                   go to state 84
    enum-specifier              go to state 85
    explicit-specifier          go to state 264
    function-specifier          go to state 91
    lambda-declarator           go to state 898
    lambda-specifiers           go to state 899
    namespace-alias             go to state 99
    namespace-name              go to state 102
    nested-name-specifier       go to state 212
    noexcept-specifier          go to state 900
    placeholder-type-specifier  go to state 109
    simple-template-id          go to state 141
    simple-type-specifier       go to state 115
    storage-class-specifier     go to state 117
    template-name               go to state 215
    trailing-return-type        go to state 901
    type-constraint             go to state 123
    type-name                   go to state 124
    type-specifier              go to state 125
    typedef-name                go to state 126
    typename-specifier          go to state 127


State 428

  879 primary-expression: literal •

    $default  reduce using rule 879 (primary-expression)


State 429

  564 logical-and-expression: logical-and-expression • AND_AND inclusive-or-expression
  565 logical-or-expression: logical-and-expression •

    AND_AND  shift, and go to state 902

    $default  reduce using rule 565 (logical-or-expression)


State 430

  169 conditional-expression: logical-or-expression •
  170                       | logical-or-expression • QUERY expression COLON assignment-expression
  566 logical-or-expression: logical-or-expression • OR_OR logical-and-expression

    QUERY  shift, and go to state 903
    OR_OR  shift, and go to state 904

    $default  reduce using rule 169 (conditional-expression)


State 431

   10 additive-expression: multiplicative-expression •
  640 multiplicative-expression: multiplicative-expression • MULT pm-expression
  641                          | multiplicative-expression • DIV pm-expression
  642                          | multiplicative-expression • MOD pm-expression

    MULT  shift, and go to state 905
    DIV   shift, and go to state 906
    MOD   shift, and go to state 907

    $default  reduce using rule 10 (additive-expression)


State 432

  659 nested-name-specifier: nested-name-specifier • IDENTIFIER SCOPE
  660                      | nested-name-specifier • simple-template-id SCOPE
  661                      | nested-name-specifier • TEMPLATE simple-template-id SCOPE
  909 qualified-id: nested-name-specifier • unqualified-id
  910             | nested-name-specifier • TEMPLATE unqualified-id
  985 simple-type-specifier: nested-name-specifier • type-name
  987                      | nested-name-specifier • TEMPLATE simple-template-id
  990                      | nested-name-specifier • template-name
  1070 type-constraint: nested-name-specifier • concept-name
  1072                | nested-name-specifier • concept-name LESS GREATER
  1074                | nested-name-specifier • concept-name LESS template-argument-list GREATER

    IDENTIFIER  shift, and go to state 320
    TEMPLATE    shift, and go to state 321
    OPERATOR    shift, and go to state 17
    COMPL       shift, and go to state 35

    class-name              go to state 65
    concept-name            go to state 323
    conversion-function-id  go to state 68
    enum-name               go to state 84
    literal-operator-id     go to state 95
    operator-function-id    go to state 108
    simple-template-id      go to state 324
    template-id             go to state 120
    template-name           go to state 325
    type-name               go to state 326
    typedef-name            go to state 126
    unqualified-id          go to state 327


State 433

  1126 unary-expression: new-expression •

    $default  reduce using rule 1126 (unary-expression)


State 434

  1125 unary-expression: noexcept-expression •

    $default  reduce using rule 1125 (unary-expression)


State 435

  195 decimal-literal: nonzero-digit •

    $default  reduce using rule 195 (decimal-literal)


State 436

  487 integer-literal: octal-literal •
  488                | octal-literal • integer-suffix
  749 octal-literal: octal-literal • octal-digit
  750              | octal-literal • SINGLE_QUOTE octal-digit
  1156 user-defined-integer-literal: octal-literal • ud-suffix

    IDENTIFIER    shift, and go to state 822
    SINGLE_QUOTE  shift, and go to state 908
    LONG_LONG_L   shift, and go to state 824
    LONG_LONG_H   shift, and go to state 825
    '0'           shift, and go to state 909
    '1'           shift, and go to state 910
    '2'           shift, and go to state 911
    '3'           shift, and go to state 912
    '4'           shift, and go to state 913
    '5'           shift, and go to state 914
    '6'           shift, and go to state 915
    '7'           shift, and go to state 916
    'u'           shift, and go to state 826
    'U'           shift, and go to state 827
    'L'           shift, and go to state 828
    'l'           shift, and go to state 829
    'z'           shift, and go to state 830
    'Z'           shift, and go to state 831

    IDENTIFIER  [reduce using rule 487 (integer-literal)]
    $default    reduce using rule 487 (integer-literal)

    integer-suffix    go to state 917
    long-long-suffix  go to state 834
    long-suffix       go to state 835
    octal-digit       go to state 918
    size-suffix       go to state 836
    ud-suffix         go to state 919
    unsigned-suffix   go to state 838


State 437

  639 multiplicative-expression: pm-expression •
  853 pm-expression: pm-expression • DOT_STAR cast-expression
  854              | pm-expression • DEREF_STAR cast-expression

    DOT_STAR    shift, and go to state 920
    DEREF_STAR  shift, and go to state 921

    $default  reduce using rule 639 (multiplicative-expression)


State 438

  559 literal: pointer-literal •

    $default  reduce using rule 559 (literal)


State 439

  857 postfix-expression: postfix-expression • OPEN_SQUARE CLOSE_SQUARE
  858                   | postfix-expression • OPEN_SQUARE expression-list CLOSE_SQUARE
  859                   | postfix-expression • OPEN_PAREN CLOSE_PAREN
  860                   | postfix-expression • OPEN_PAREN expression-list CLOSE_PAREN
  867                   | postfix-expression • DOT id-expression
  868                   | postfix-expression • DOT TEMPLATE id-expression
  869                   | postfix-expression • DEREF id-expression
  870                   | postfix-expression • DEREF TEMPLATE id-expression
  871                   | postfix-expression • PLUS_PLUS
  872                   | postfix-expression • MINUS_MINUS
  1116 unary-expression: postfix-expression •

    OPEN_PAREN   shift, and go to state 922
    OPEN_SQUARE  shift, and go to state 923
    DEREF        shift, and go to state 924
    DOT          shift, and go to state 925
    PLUS_PLUS    shift, and go to state 926
    MINUS_MINUS  shift, and go to state 927

    $default  reduce using rule 1116 (unary-expression)


State 440

  856 postfix-expression: primary-expression •

    $default  reduce using rule 856 (postfix-expression)


State 441

  304 equality-expression: relational-expression •
  917 relational-expression: relational-expression • LESS compare-expression
  918                      | relational-expression • GREATER compare-expression
  919                      | relational-expression • LESS_EQ compare-expression
  920                      | relational-expression • GREATER_EQ compare-expression

    LESS        shift, and go to state 928
    GREATER     shift, and go to state 929
    LESS_EQ     shift, and go to state 930
    GREATER_EQ  shift, and go to state 931

    GREATER   [reduce using rule 304 (equality-expression)]
    $default  reduce using rule 304 (equality-expression)


State 442

  885 primary-expression: requires-expression •

    $default  reduce using rule 885 (primary-expression)


State 443

  154 compare-expression: shift-expression •
  953 shift-expression: shift-expression • LSHIFT additive-expression
  954                 | shift-expression • RSHIFT additive-expression

    LSHIFT  shift, and go to state 932
    RSHIFT  shift, and go to state 933

    $default  reduce using rule 154 (compare-expression)


State 444

  861 postfix-expression: simple-type-specifier • OPEN_PAREN CLOSE_PAREN
  862                   | simple-type-specifier • OPEN_PAREN expression-list CLOSE_PAREN
  865                   | simple-type-specifier • braced-init-list
  1103 type-specifier: simple-type-specifier •

    OPEN_PAREN  shift, and go to state 934
    OPEN_BRACE  shift, and go to state 935

    OPEN_PAREN  [reduce using rule 1103 (type-specifier)]
    $default    reduce using rule 1103 (type-specifier)

    braced-init-list  go to state 936


State 445

  557 literal: string-literal •
  1163 user-defined-string-literal: string-literal • ud-suffix

    IDENTIFIER  shift, and go to state 822

    IDENTIFIER  [reduce using rule 557 (literal)]
    $default    reduce using rule 557 (literal)

    ud-suffix  go to state 513


State 446

   15 alignment-specifier: ALIGNAS OPEN_PAREN type-id • CLOSE_PAREN
   16                    | ALIGNAS OPEN_PAREN type-id • ELLIPSIS CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 937
    ELLIPSIS     shift, and go to state 938


State 447

  1076 type-id: type-specifier-seq •
  1077        | type-specifier-seq • abstract-declarator

    IDENTIFIER   shift, and go to state 253
    OPEN_PAREN   shift, and go to state 939
    ELLIPSIS     shift, and go to state 940
    AND          shift, and go to state 7
    SCOPE        shift, and go to state 9
    OPEN_SQUARE  shift, and go to state 941
    AND_AND      shift, and go to state 16
    DECLTYPE     shift, and go to state 134
    MULT         shift, and go to state 31

    OPEN_PAREN  [reduce using rule 1076 (type-id)]
    ELLIPSIS    [reduce using rule 1076 (type-id)]
    $default    reduce using rule 1076 (type-id)

    abstract-declarator             go to state 942
    abstract-pack-declarator        go to state 943
    class-name                      go to state 65
    decltype-specifier              go to state 138
    enum-name                       go to state 84
    namespace-alias                 go to state 99
    namespace-name                  go to state 102
    nested-name-specifier           go to state 517
    noptr-abstract-declarator       go to state 944
    noptr-abstract-pack-declarator  go to state 945
    parameters-and-qualifiers       go to state 946
    ptr-abstract-declarator         go to state 947
    ptr-operator                    go to state 948
    simple-template-id              go to state 141
    template-name                   go to state 142
    type-name                       go to state 143
    typedef-name                    go to state 126


State 448

  863 postfix-expression: typename-specifier • OPEN_PAREN CLOSE_PAREN
  864                   | typename-specifier • OPEN_PAREN expression-list CLOSE_PAREN
  866                   | typename-specifier • braced-init-list
  1105 type-specifier: typename-specifier •

    OPEN_PAREN  shift, and go to state 949
    OPEN_BRACE  shift, and go to state 935

    OPEN_PAREN  [reduce using rule 1105 (type-specifier)]
    $default    reduce using rule 1105 (type-specifier)

    braced-init-list  go to state 950


State 449

  124 cast-expression: unary-expression •

    $default  reduce using rule 124 (cast-expression)


State 450

  1117 unary-expression: unary-operator • cast-expression

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 951
    character-literal                    go to state 405
    class-name                           go to state 65
    concept-name                         go to state 67
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    requires-expression                  go to state 442
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 451

  1162 user-defined-literal: user-defined-character-literal •

    $default  reduce using rule 1162 (user-defined-literal)


State 452

  1160 user-defined-literal: user-defined-floating-point-literal •

    $default  reduce using rule 1160 (user-defined-literal)


State 453

  1159 user-defined-literal: user-defined-integer-literal •

    $default  reduce using rule 1159 (user-defined-literal)


State 454

  560 literal: user-defined-literal •

    $default  reduce using rule 560 (literal)


State 455

  1161 user-defined-literal: user-defined-string-literal •

    $default  reduce using rule 1161 (user-defined-literal)


State 456

  661 nested-name-specifier: nested-name-specifier TEMPLATE • simple-template-id SCOPE
  910 qualified-id: nested-name-specifier TEMPLATE • unqualified-id

    IDENTIFIER  shift, and go to state 723
    OPERATOR    shift, and go to state 17
    COMPL       shift, and go to state 35

    conversion-function-id  go to state 68
    literal-operator-id     go to state 95
    operator-function-id    go to state 108
    simple-template-id      go to state 952
    template-id             go to state 120
    template-name           go to state 142
    unqualified-id          go to state 725


State 457

  723 noptr-declarator: noptr-declarator parameters-and-qualifiers •

    $default  reduce using rule 723 (noptr-declarator)


State 458

  728 noptr-declarator: OPEN_PAREN ptr-declarator CLOSE_PAREN •

    $default  reduce using rule 728 (noptr-declarator)


State 459

   22 asm-declaration: ASM OPEN_PAREN string-literal • CLOSE_PAREN SEMICOLON

    CLOSE_PAREN  shift, and go to state 953


State 460

   57 attribute-using-prefix: USING • attribute-namespace COLON

    IDENTIFIER  shift, and go to state 954

    attribute-namespace  go to state 955


State 461

   48 attribute-namespace: IDENTIFIER •
   55 attribute-token: IDENTIFIER •

    SCOPE     reduce using rule 48 (attribute-namespace)
    $default  reduce using rule 55 (attribute-token)


State 462

   43 attribute-list: attribute •
   46               | attribute • ELLIPSIS

    ELLIPSIS  shift, and go to state 956

    $default  reduce using rule 43 (attribute-list)


State 463

   44 attribute-list: attribute-list • COMMA
   45               | attribute-list • COMMA attribute
   47               | attribute-list • COMMA attribute ELLIPSIS
   50 attribute-specifier: OPEN_SQUARE OPEN_SQUARE attribute-list • CLOSE_SQUARE CLOSE_SQUARE

    COMMA         shift, and go to state 957
    CLOSE_SQUARE  shift, and go to state 958


State 464

   49 attribute-scoped-token: attribute-namespace • SCOPE IDENTIFIER

    SCOPE  shift, and go to state 959


State 465

   56 attribute-token: attribute-scoped-token •

    $default  reduce using rule 56 (attribute-token)


State 466

   38 attribute: attribute-token •
   39          | attribute-token • attribute-argument-clause

    OPEN_PAREN  shift, and go to state 960

    $default  reduce using rule 38 (attribute)

    attribute-argument-clause  go to state 961


State 467

   51 attribute-specifier: OPEN_SQUARE OPEN_SQUARE attribute-using-prefix • attribute-list CLOSE_SQUARE CLOSE_SQUARE

    IDENTIFIER  shift, and go to state 461

    attribute               go to state 462
    attribute-list          go to state 962
    attribute-namespace     go to state 464
    attribute-scoped-token  go to state 465
    attribute-token         go to state 466


State 468

  142 class-key: CLASS •
  1099 type-parameter-key: CLASS •

    IDENTIFIER  reduce using rule 142 (class-key)
    IDENTIFIER  [reduce using rule 1099 (type-parameter-key)]
    EQ          reduce using rule 1099 (type-parameter-key)
    ELLIPSIS    reduce using rule 1099 (type-parameter-key)
    COMMA       reduce using rule 1099 (type-parameter-key)
    GREATER     reduce using rule 1099 (type-parameter-key)
    $default    reduce using rule 142 (class-key)


State 469

  1045 template-head: TEMPLATE • LESS template-parameter-list GREATER
  1046              | TEMPLATE • LESS template-parameter-list GREATER requires-clause

    LESS  shift, and go to state 963


State 470

  321 explicit-specialization: TEMPLATE LESS GREATER • declaration

    USING          shift, and go to state 1
    IDENTIFIER     shift, and go to state 2
    SEMICOLON      shift, and go to state 3
    ALIGNAS        shift, and go to state 4
    OPEN_PAREN     shift, and go to state 5
    ELLIPSIS       shift, and go to state 6
    AND            shift, and go to state 7
    ASM            shift, and go to state 8
    SCOPE          shift, and go to state 9
    OPEN_SQUARE    shift, and go to state 10
    VIRTUAL        shift, and go to state 11
    CLASS          shift, and go to state 12
    STRUCT         shift, and go to state 13
    UNION          shift, and go to state 14
    TEMPLATE       shift, and go to state 15
    AND_AND        shift, and go to state 16
    OPERATOR       shift, and go to state 17
    CONST          shift, and go to state 18
    VOLATILE       shift, and go to state 19
    FRIEND         shift, and go to state 20
    TYPEDEF        shift, and go to state 21
    CONSTEXPR      shift, and go to state 22
    CONSTEVAL      shift, and go to state 23
    CONSTINIT      shift, and go to state 24
    INLINE         shift, and go to state 25
    DECLTYPE       shift, and go to state 26
    ENUM           shift, and go to state 27
    EXTERN         shift, and go to state 28
    EXPLICIT       shift, and go to state 29
    EXPORT         shift, and go to state 157
    MULT           shift, and go to state 31
    IMPORT         shift, and go to state 33
    NAMESPACE      shift, and go to state 34
    COMPL          shift, and go to state 35
    AUTO           shift, and go to state 36
    CHAR           shift, and go to state 37
    CHAR8_T        shift, and go to state 38
    CHAR16_T       shift, and go to state 39
    CHAR32_T       shift, and go to state 40
    WCHAR_T        shift, and go to state 41
    BOOL           shift, and go to state 42
    SHORT          shift, and go to state 43
    INT            shift, and go to state 44
    LONG           shift, and go to state 45
    SIGNED         shift, and go to state 46
    UNSIGNED       shift, and go to state 47
    FLOAT          shift, and go to state 48
    DOUBLE         shift, and go to state 49
    VOID           shift, and go to state 50
    STATIC_ASSERT  shift, and go to state 51
    STATIC         shift, and go to state 52
    THREAD_LOCAL   shift, and go to state 53
    MUTABLE        shift, and go to state 54
    TYPENAME       shift, and go to state 55

    alias-declaration                go to state 56
    alignment-specifier              go to state 57
    asm-declaration                  go to state 58
    attribute-declaration            go to state 59
    attribute-specifier              go to state 60
    attribute-specifier-seq          go to state 61
    block-declaration                go to state 62
    class-head                       go to state 63
    class-key                        go to state 64
    class-name                       go to state 65
    class-specifier                  go to state 66
    concept-name                     go to state 67
    conversion-function-id           go to state 68
    cv-qualifier                     go to state 69
    decl-specifier                   go to state 70
    decl-specifier-seq               go to state 71
    declaration                      go to state 964
    declarator                       go to state 74
    declarator-id                    go to state 75
    decltype-specifier               go to state 76
    deduction-guide                  go to state 77
    defining-type-specifier          go to state 78
    elaborated-enum-specifier        go to state 79
    elaborated-type-specifier        go to state 80
    empty-declaration                go to state 81
    enum-head                        go to state 82
    enum-key                         go to state 83
    enum-name                        go to state 84
    enum-specifier                   go to state 85
    explicit-instantiation           go to state 86
    explicit-specialization          go to state 87
    explicit-specifier               go to state 88
    export-declaration               go to state 89
    function-definition              go to state 90
    function-specifier               go to state 91
    id-expression                    go to state 93
    linkage-specification            go to state 94
    literal-operator-id              go to state 95
    module-import-declaration        go to state 97
    named-namespace-definition       go to state 98
    namespace-alias                  go to state 99
    namespace-alias-definition       go to state 100
    namespace-definition             go to state 101
    namespace-name                   go to state 102
    nested-name-specifier            go to state 103
    nested-namespace-definition      go to state 104
    nodeclspec-function-declaration  go to state 105
    noptr-declarator                 go to state 106
    opaque-enum-declaration          go to state 107
    operator-function-id             go to state 108
    placeholder-type-specifier       go to state 109
    ptr-declarator                   go to state 110
    ptr-operator                     go to state 111
    qualified-id                     go to state 112
    simple-declaration               go to state 113
    simple-template-id               go to state 114
    simple-type-specifier            go to state 115
    static_assert-declaration        go to state 116
    storage-class-specifier          go to state 117
    template-declaration             go to state 118
    template-head                    go to state 119
    template-id                      go to state 120
    template-name                    go to state 121
    type-constraint                  go to state 123
    type-name                        go to state 124
    type-specifier                   go to state 125
    typedef-name                     go to state 126
    typename-specifier               go to state 127
    unnamed-namespace-definition     go to state 128
    unqualified-id                   go to state 129
    using-declaration                go to state 130
    using-directive                  go to state 131
    using-enum-declaration           go to state 132


State 471

  805 parameter-declaration: THIS • decl-specifier-seq declarator
  809                      | THIS • decl-specifier-seq declarator EQ initializer-clause
  813                      | THIS • decl-specifier-seq
  817                      | THIS • decl-specifier-seq abstract-declarator
  821                      | THIS • decl-specifier-seq EQ initializer-clause
  825                      | THIS • decl-specifier-seq abstract-declarator EQ initializer-clause

    IDENTIFIER    shift, and go to state 162
    SCOPE         shift, and go to state 9
    VIRTUAL       shift, and go to state 11
    CLASS         shift, and go to state 12
    STRUCT        shift, and go to state 13
    UNION         shift, and go to state 14
    CONST         shift, and go to state 18
    VOLATILE      shift, and go to state 19
    FRIEND        shift, and go to state 20
    TYPEDEF       shift, and go to state 21
    CONSTEXPR     shift, and go to state 22
    CONSTEVAL     shift, and go to state 23
    CONSTINIT     shift, and go to state 24
    INLINE        shift, and go to state 258
    DECLTYPE      shift, and go to state 26
    ENUM          shift, and go to state 27
    EXTERN        shift, and go to state 259
    EXPLICIT      shift, and go to state 29
    AUTO          shift, and go to state 36
    CHAR          shift, and go to state 37
    CHAR8_T       shift, and go to state 38
    CHAR16_T      shift, and go to state 39
    CHAR32_T      shift, and go to state 40
    WCHAR_T       shift, and go to state 41
    BOOL          shift, and go to state 42
    SHORT         shift, and go to state 43
    INT           shift, and go to state 44
    LONG          shift, and go to state 45
    SIGNED        shift, and go to state 46
    UNSIGNED      shift, and go to state 47
    FLOAT         shift, and go to state 48
    DOUBLE        shift, and go to state 49
    VOID          shift, and go to state 50
    STATIC        shift, and go to state 52
    THREAD_LOCAL  shift, and go to state 53
    MUTABLE       shift, and go to state 54
    TYPENAME      shift, and go to state 55

    class-head                  go to state 63
    class-key                   go to state 64
    class-name                  go to state 65
    class-specifier             go to state 66
    concept-name                go to state 67
    cv-qualifier                go to state 69
    decl-specifier              go to state 70
    decl-specifier-seq          go to state 965
    decltype-specifier          go to state 76
    defining-type-specifier     go to state 78
    elaborated-enum-specifier   go to state 79
    elaborated-type-specifier   go to state 80
    enum-head                   go to state 82
    enum-key                    go to state 263
    enum-name                   go to state 84
    enum-specifier              go to state 85
    explicit-specifier          go to state 264
    function-specifier          go to state 91
    namespace-alias             go to state 99
    namespace-name              go to state 102
    nested-name-specifier       go to state 212
    placeholder-type-specifier  go to state 109
    simple-template-id          go to state 141
    simple-type-specifier       go to state 115
    storage-class-specifier     go to state 117
    template-name               go to state 215
    type-constraint             go to state 123
    type-name                   go to state 124
    type-specifier              go to state 125
    typedef-name                go to state 126
    typename-specifier          go to state 127


State 472

  1100 type-parameter-key: TYPENAME •
  1112 typename-specifier: TYPENAME • nested-name-specifier IDENTIFIER
  1113                   | TYPENAME • nested-name-specifier simple-template-id
  1114                   | TYPENAME • nested-name-specifier TEMPLATE simple-template-id

    IDENTIFIER  shift, and go to state 253
    SCOPE       shift, and go to state 9
    DECLTYPE    shift, and go to state 134

    IDENTIFIER  [reduce using rule 1100 (type-parameter-key)]
    $default    reduce using rule 1100 (type-parameter-key)

    class-name             go to state 65
    decltype-specifier     go to state 138
    enum-name              go to state 84
    namespace-alias        go to state 99
    namespace-name         go to state 102
    nested-name-specifier  go to state 254
    simple-template-id     go to state 141
    template-name          go to state 142
    type-name              go to state 143
    typedef-name           go to state 126


State 473

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  802 parameter-declaration: attribute-specifier-seq • decl-specifier-seq declarator
  804                      | attribute-specifier-seq • THIS decl-specifier-seq declarator
  806                      | attribute-specifier-seq • decl-specifier-seq declarator EQ initializer-clause
  808                      | attribute-specifier-seq • THIS decl-specifier-seq declarator EQ initializer-clause
  810                      | attribute-specifier-seq • decl-specifier-seq
  812                      | attribute-specifier-seq • THIS decl-specifier-seq
  814                      | attribute-specifier-seq • decl-specifier-seq abstract-declarator
  816                      | attribute-specifier-seq • THIS decl-specifier-seq abstract-declarator
  818                      | attribute-specifier-seq • decl-specifier-seq EQ initializer-clause
  820                      | attribute-specifier-seq • THIS decl-specifier-seq EQ initializer-clause
  822                      | attribute-specifier-seq • decl-specifier-seq abstract-declarator EQ initializer-clause
  824                      | attribute-specifier-seq • THIS decl-specifier-seq abstract-declarator EQ initializer-clause

    IDENTIFIER    shift, and go to state 162
    ALIGNAS       shift, and go to state 4
    SCOPE         shift, and go to state 9
    OPEN_SQUARE   shift, and go to state 10
    VIRTUAL       shift, and go to state 11
    CLASS         shift, and go to state 12
    STRUCT        shift, and go to state 13
    UNION         shift, and go to state 14
    CONST         shift, and go to state 18
    VOLATILE      shift, and go to state 19
    FRIEND        shift, and go to state 20
    TYPEDEF       shift, and go to state 21
    CONSTEXPR     shift, and go to state 22
    CONSTEVAL     shift, and go to state 23
    CONSTINIT     shift, and go to state 24
    INLINE        shift, and go to state 258
    DECLTYPE      shift, and go to state 26
    ENUM          shift, and go to state 27
    EXTERN        shift, and go to state 259
    EXPLICIT      shift, and go to state 29
    THIS          shift, and go to state 966
    AUTO          shift, and go to state 36
    CHAR          shift, and go to state 37
    CHAR8_T       shift, and go to state 38
    CHAR16_T      shift, and go to state 39
    CHAR32_T      shift, and go to state 40
    WCHAR_T       shift, and go to state 41
    BOOL          shift, and go to state 42
    SHORT         shift, and go to state 43
    INT           shift, and go to state 44
    LONG          shift, and go to state 45
    SIGNED        shift, and go to state 46
    UNSIGNED      shift, and go to state 47
    FLOAT         shift, and go to state 48
    DOUBLE        shift, and go to state 49
    VOID          shift, and go to state 50
    STATIC        shift, and go to state 52
    THREAD_LOCAL  shift, and go to state 53
    MUTABLE       shift, and go to state 54
    TYPENAME      shift, and go to state 55

    alignment-specifier         go to state 57
    attribute-specifier         go to state 260
    class-head                  go to state 63
    class-key                   go to state 64
    class-name                  go to state 65
    class-specifier             go to state 66
    concept-name                go to state 67
    cv-qualifier                go to state 69
    decl-specifier              go to state 70
    decl-specifier-seq          go to state 967
    decltype-specifier          go to state 76
    defining-type-specifier     go to state 78
    elaborated-enum-specifier   go to state 79
    elaborated-type-specifier   go to state 80
    enum-head                   go to state 82
    enum-key                    go to state 263
    enum-name                   go to state 84
    enum-specifier              go to state 85
    explicit-specifier          go to state 264
    function-specifier          go to state 91
    namespace-alias             go to state 99
    namespace-name              go to state 102
    nested-name-specifier       go to state 212
    placeholder-type-specifier  go to state 109
    simple-template-id          go to state 141
    simple-type-specifier       go to state 115
    storage-class-specifier     go to state 117
    template-name               go to state 215
    type-constraint             go to state 123
    type-name                   go to state 124
    type-specifier              go to state 125
    typedef-name                go to state 126
    typename-specifier          go to state 127


State 474

  803 parameter-declaration: decl-specifier-seq • declarator
  807                      | decl-specifier-seq • declarator EQ initializer-clause
  811                      | decl-specifier-seq •
  815                      | decl-specifier-seq • abstract-declarator
  819                      | decl-specifier-seq • EQ initializer-clause
  823                      | decl-specifier-seq • abstract-declarator EQ initializer-clause

    IDENTIFIER   shift, and go to state 147
    EQ           shift, and go to state 968
    OPEN_PAREN   shift, and go to state 969
    ELLIPSIS     shift, and go to state 970
    AND          shift, and go to state 7
    SCOPE        shift, and go to state 9
    OPEN_SQUARE  shift, and go to state 941
    AND_AND      shift, and go to state 16
    OPERATOR     shift, and go to state 17
    DECLTYPE     shift, and go to state 134
    MULT         shift, and go to state 31
    COMPL        shift, and go to state 35

    ELLIPSIS  [reduce using rule 811 (parameter-declaration)]
    $default  reduce using rule 811 (parameter-declaration)

    abstract-declarator             go to state 971
    abstract-pack-declarator        go to state 943
    class-name                      go to state 65
    conversion-function-id          go to state 68
    declarator                      go to state 972
    declarator-id                   go to state 75
    decltype-specifier              go to state 138
    enum-name                       go to state 84
    id-expression                   go to state 93
    literal-operator-id             go to state 95
    namespace-alias                 go to state 99
    namespace-name                  go to state 102
    nested-name-specifier           go to state 148
    noptr-abstract-declarator       go to state 944
    noptr-abstract-pack-declarator  go to state 945
    noptr-declarator                go to state 106
    operator-function-id            go to state 108
    parameters-and-qualifiers       go to state 946
    ptr-abstract-declarator         go to state 947
    ptr-declarator                  go to state 110
    ptr-operator                    go to state 973
    qualified-id                    go to state 112
    simple-template-id              go to state 114
    template-id                     go to state 120
    template-name                   go to state 142
    type-name                       go to state 143
    typedef-name                    go to state 126
    unqualified-id                  go to state 129


State 475

  1054 template-parameter: parameter-declaration •

    $default  reduce using rule 1054 (template-parameter)


State 476

  1093 type-parameter: template-head • type-parameter-key
  1094               | template-head • type-parameter-key ELLIPSIS
  1095               | template-head • type-parameter-key IDENTIFIER
  1096               | template-head • type-parameter-key ELLIPSIS IDENTIFIER
  1097               | template-head • type-parameter-key EQ id-expression
  1098               | template-head • type-parameter-key IDENTIFIER EQ id-expression

    CLASS     shift, and go to state 974
    TYPENAME  shift, and go to state 975

    type-parameter-key  go to state 976


State 477

  1055 template-parameter-list: template-parameter •

    $default  reduce using rule 1055 (template-parameter-list)


State 478

  1045 template-head: TEMPLATE LESS template-parameter-list • GREATER
  1046              | TEMPLATE LESS template-parameter-list • GREATER requires-clause
  1056 template-parameter-list: template-parameter-list • COMMA template-parameter

    COMMA    shift, and go to state 977
    GREATER  shift, and go to state 978


State 479

  848 placeholder-type-specifier: type-constraint • AUTO
  850                           | type-constraint • DECLTYPE OPEN_PAREN AUTO CLOSE_PAREN
  1087 type-parameter: type-constraint •
  1088               | type-constraint • ELLIPSIS
  1089               | type-constraint • IDENTIFIER
  1090               | type-constraint • ELLIPSIS IDENTIFIER
  1091               | type-constraint • EQ type-id
  1092               | type-constraint • IDENTIFIER EQ type-id

    IDENTIFIER  shift, and go to state 979
    EQ          shift, and go to state 980
    ELLIPSIS    shift, and go to state 981
    DECLTYPE    shift, and go to state 339
    AUTO        shift, and go to state 340

    $default  reduce using rule 1087 (type-parameter)


State 480

  1053 template-parameter: type-parameter •

    $default  reduce using rule 1053 (template-parameter)


State 481

  1081 type-parameter: type-parameter-key •
  1082               | type-parameter-key • ELLIPSIS
  1083               | type-parameter-key • IDENTIFIER
  1084               | type-parameter-key • ELLIPSIS IDENTIFIER
  1085               | type-parameter-key • EQ type-id
  1086               | type-parameter-key • IDENTIFIER EQ type-id

    IDENTIFIER  shift, and go to state 982
    EQ          shift, and go to state 983
    ELLIPSIS    shift, and go to state 984

    $default  reduce using rule 1081 (type-parameter)


State 482

  763 overloadable-operator: OPEN_PAREN CLOSE_PAREN •

    $default  reduce using rule 763 (overloadable-operator)


State 483

  764 overloadable-operator: OPEN_SQUARE CLOSE_SQUARE •

    $default  reduce using rule 764 (overloadable-operator)


State 484

  761 overloadable-operator: DELETE OPEN_SQUARE • CLOSE_SQUARE

    CLOSE_SQUARE  shift, and go to state 985


State 485

   84 basic-s-char: BASIC_S_CHAR •

    $default  reduce using rule 84 (basic-s-char)


State 486

  167 conditional-escape-sequence: ESCAPE • conditional-escape-sequence-char
  745 octal-escape-sequence: ESCAPE • octal-digit
  746                      | ESCAPE • octal-digit octal-digit
  747                      | ESCAPE • octal-digit octal-digit octal-digit
  970 simple-escape-sequence: ESCAPE • simple-escape-sequence-char

    SINGLE_QUOTE                      shift, and go to state 986
    ESCAPE                            shift, and go to state 987
    CONDITIONAL_ESCAPE_SEQUENCE_CHAR  shift, and go to state 988
    QUERY                             shift, and go to state 989
    DOUBLE_QUOTE                      shift, and go to state 990
    '0'                               shift, and go to state 909
    '1'                               shift, and go to state 910
    '2'                               shift, and go to state 911
    '3'                               shift, and go to state 912
    '4'                               shift, and go to state 913
    '5'                               shift, and go to state 914
    '6'                               shift, and go to state 915
    '7'                               shift, and go to state 916
    'f'                               shift, and go to state 991
    'a'                               shift, and go to state 992
    'b'                               shift, and go to state 993
    'n'                               shift, and go to state 994
    'r'                               shift, and go to state 995
    't'                               shift, and go to state 996
    'v'                               shift, and go to state 997

    conditional-escape-sequence-char  go to state 998
    octal-digit                       go to state 999
    simple-escape-sequence-char       go to state 1000


State 487

  1031 string-literal: DOUBLE_QUOTE DOUBLE_QUOTE •

    $default  reduce using rule 1031 (string-literal)


State 488

  447 hexadecimal-escape-sequence: ESCAPE_LX • hexadecimal-digit

    '0'  shift, and go to state 867
    '1'  shift, and go to state 868
    '2'  shift, and go to state 869
    '3'  shift, and go to state 870
    '4'  shift, and go to state 871
    '5'  shift, and go to state 872
    '6'  shift, and go to state 873
    '7'  shift, and go to state 874
    '8'  shift, and go to state 875
    '9'  shift, and go to state 876
    'e'  shift, and go to state 877
    'E'  shift, and go to state 878
    'f'  shift, and go to state 879
    'F'  shift, and go to state 880
    'a'  shift, and go to state 881
    'b'  shift, and go to state 882
    'c'  shift, and go to state 883
    'd'  shift, and go to state 884
    'A'  shift, and go to state 885
    'B'  shift, and go to state 886
    'C'  shift, and go to state 887
    'D'  shift, and go to state 888

    hexadecimal-digit  go to state 1001


State 489

  1134 universal-character-name: ESCAPE_LU • hex-quad

    '0'  shift, and go to state 867
    '1'  shift, and go to state 868
    '2'  shift, and go to state 869
    '3'  shift, and go to state 870
    '4'  shift, and go to state 871
    '5'  shift, and go to state 872
    '6'  shift, and go to state 873
    '7'  shift, and go to state 874
    '8'  shift, and go to state 875
    '9'  shift, and go to state 876
    'e'  shift, and go to state 877
    'E'  shift, and go to state 878
    'f'  shift, and go to state 879
    'F'  shift, and go to state 880
    'a'  shift, and go to state 881
    'b'  shift, and go to state 882
    'c'  shift, and go to state 883
    'd'  shift, and go to state 884
    'A'  shift, and go to state 885
    'B'  shift, and go to state 886
    'C'  shift, and go to state 887
    'D'  shift, and go to state 888

    hex-quad           go to state 1002
    hexadecimal-digit  go to state 1003


State 490

  1135 universal-character-name: ESCAPE_HU • hex-quad hex-quad

    '0'  shift, and go to state 867
    '1'  shift, and go to state 868
    '2'  shift, and go to state 869
    '3'  shift, and go to state 870
    '4'  shift, and go to state 871
    '5'  shift, and go to state 872
    '6'  shift, and go to state 873
    '7'  shift, and go to state 874
    '8'  shift, and go to state 875
    '9'  shift, and go to state 876
    'e'  shift, and go to state 877
    'E'  shift, and go to state 878
    'f'  shift, and go to state 879
    'F'  shift, and go to state 880
    'a'  shift, and go to state 881
    'b'  shift, and go to state 882
    'c'  shift, and go to state 883
    'd'  shift, and go to state 884
    'A'  shift, and go to state 885
    'B'  shift, and go to state 886
    'C'  shift, and go to state 887
    'D'  shift, and go to state 888

    hex-quad           go to state 1004
    hexadecimal-digit  go to state 1003


State 491

  933 s-char: basic-s-char •

    $default  reduce using rule 933 (s-char)


State 492

  309 escape-sequence: conditional-escape-sequence •

    $default  reduce using rule 309 (escape-sequence)


State 493

  934 s-char: escape-sequence •

    $default  reduce using rule 934 (s-char)


State 494

  448 hexadecimal-escape-sequence: hexadecimal-escape-sequence • hexadecimal-digit
  736 numeric-escape-sequence: hexadecimal-escape-sequence •

    '0'  shift, and go to state 867
    '1'  shift, and go to state 868
    '2'  shift, and go to state 869
    '3'  shift, and go to state 870
    '4'  shift, and go to state 871
    '5'  shift, and go to state 872
    '6'  shift, and go to state 873
    '7'  shift, and go to state 874
    '8'  shift, and go to state 875
    '9'  shift, and go to state 876
    'e'  shift, and go to state 877
    'E'  shift, and go to state 878
    'f'  shift, and go to state 879
    'F'  shift, and go to state 880
    'a'  shift, and go to state 881
    'b'  shift, and go to state 882
    'c'  shift, and go to state 883
    'd'  shift, and go to state 884
    'A'  shift, and go to state 885
    'B'  shift, and go to state 886
    'C'  shift, and go to state 887
    'D'  shift, and go to state 888

    $default  reduce using rule 736 (numeric-escape-sequence)

    hexadecimal-digit  go to state 1005


State 495

  308 escape-sequence: numeric-escape-sequence •

    $default  reduce using rule 308 (escape-sequence)


State 496

  735 numeric-escape-sequence: octal-escape-sequence •

    $default  reduce using rule 735 (numeric-escape-sequence)


State 497

  936 s-char-sequence: s-char •

    $default  reduce using rule 936 (s-char-sequence)


State 498

  937 s-char-sequence: s-char-sequence • s-char
  1033 string-literal: DOUBLE_QUOTE s-char-sequence • DOUBLE_QUOTE

    BASIC_S_CHAR  shift, and go to state 485
    ESCAPE        shift, and go to state 486
    DOUBLE_QUOTE  shift, and go to state 1006
    ESCAPE_LX     shift, and go to state 488
    ESCAPE_LU     shift, and go to state 489
    ESCAPE_HU     shift, and go to state 490

    basic-s-char                 go to state 491
    conditional-escape-sequence  go to state 492
    escape-sequence              go to state 493
    hexadecimal-escape-sequence  go to state 494
    numeric-escape-sequence      go to state 495
    octal-escape-sequence        go to state 496
    s-char                       go to state 1007
    simple-escape-sequence       go to state 499
    universal-character-name     go to state 500


State 499

  307 escape-sequence: simple-escape-sequence •

    $default  reduce using rule 307 (escape-sequence)


State 500

  935 s-char: universal-character-name •

    $default  reduce using rule 935 (s-char)


State 501

  760 overloadable-operator: NEW OPEN_SQUARE • CLOSE_SQUARE

    CLOSE_SQUARE  shift, and go to state 1008


State 502

  913 raw-string: BASIC_S_CHAR •

    $default  reduce using rule 913 (raw-string)


State 503

  1035 string-literal: 'R' raw-string •

    $default  reduce using rule 1035 (string-literal)


State 504

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  265 elaborated-type-specifier: class-key attribute-specifier-seq • IDENTIFIER
  267                          | class-key attribute-specifier-seq • nested-name-specifier IDENTIFIER

    IDENTIFIER   shift, and go to state 623
    ALIGNAS      shift, and go to state 4
    SCOPE        shift, and go to state 9
    OPEN_SQUARE  shift, and go to state 10
    DECLTYPE     shift, and go to state 134

    alignment-specifier    go to state 57
    attribute-specifier    go to state 260
    class-name             go to state 65
    decltype-specifier     go to state 138
    enum-name              go to state 84
    namespace-alias        go to state 99
    namespace-name         go to state 102
    nested-name-specifier  go to state 1009
    simple-template-id     go to state 141
    template-name          go to state 142
    type-name              go to state 143
    typedef-name           go to state 126


State 505

  266 elaborated-type-specifier: class-key nested-name-specifier • IDENTIFIER
  269                          | class-key nested-name-specifier • simple-template-id
  270                          | class-key nested-name-specifier • TEMPLATE simple-template-id
  659 nested-name-specifier: nested-name-specifier • IDENTIFIER SCOPE
  660                      | nested-name-specifier • simple-template-id SCOPE
  661                      | nested-name-specifier • TEMPLATE simple-template-id SCOPE

    IDENTIFIER  shift, and go to state 1010
    TEMPLATE    shift, and go to state 631

    simple-template-id  go to state 1011
    template-name       go to state 142


State 506

  1030 string-literal: encoding-prefix DOUBLE_QUOTE • DOUBLE_QUOTE
  1032               | encoding-prefix DOUBLE_QUOTE • s-char-sequence DOUBLE_QUOTE

    BASIC_S_CHAR  shift, and go to state 485
    ESCAPE        shift, and go to state 486
    DOUBLE_QUOTE  shift, and go to state 1012
    ESCAPE_LX     shift, and go to state 488
    ESCAPE_LU     shift, and go to state 489
    ESCAPE_HU     shift, and go to state 490

    basic-s-char                 go to state 491
    conditional-escape-sequence  go to state 492
    escape-sequence              go to state 493
    hexadecimal-escape-sequence  go to state 494
    numeric-escape-sequence      go to state 495
    octal-escape-sequence        go to state 496
    s-char                       go to state 497
    s-char-sequence              go to state 1013
    simple-escape-sequence       go to state 499
    universal-character-name     go to state 500


State 507

  1034 string-literal: encoding-prefix 'R' • raw-string

    BASIC_S_CHAR  shift, and go to state 502

    raw-string  go to state 1014


State 508

  145 class-name: IDENTIFIER •
  163 concept-name: IDENTIFIER •
  294 enum-name: IDENTIFIER •
  659 nested-name-specifier: nested-name-specifier IDENTIFIER • SCOPE
  1052 template-name: IDENTIFIER •
  1110 typedef-name: IDENTIFIER •

    SCOPE  shift, and go to state 722

    PLUS           reduce using rule 145 (class-name)
    PLUS           [reduce using rule 294 (enum-name)]
    PLUS           [reduce using rule 1052 (template-name)]
    PLUS           [reduce using rule 1110 (typedef-name)]
    MINUS          reduce using rule 145 (class-name)
    MINUS          [reduce using rule 294 (enum-name)]
    MINUS          [reduce using rule 1052 (template-name)]
    MINUS          [reduce using rule 1110 (typedef-name)]
    USING          reduce using rule 145 (class-name)
    USING          [reduce using rule 294 (enum-name)]
    USING          [reduce using rule 1052 (template-name)]
    USING          [reduce using rule 1110 (typedef-name)]
    IDENTIFIER     reduce using rule 145 (class-name)
    IDENTIFIER     [reduce using rule 163 (concept-name)]
    IDENTIFIER     [reduce using rule 294 (enum-name)]
    IDENTIFIER     [reduce using rule 1052 (template-name)]
    IDENTIFIER     [reduce using rule 1110 (typedef-name)]
    EQ             reduce using rule 145 (class-name)
    EQ             [reduce using rule 163 (concept-name)]
    EQ             [reduce using rule 294 (enum-name)]
    EQ             [reduce using rule 1052 (template-name)]
    EQ             [reduce using rule 1110 (typedef-name)]
    SEMICOLON      reduce using rule 145 (class-name)
    SEMICOLON      [reduce using rule 294 (enum-name)]
    SEMICOLON      [reduce using rule 1052 (template-name)]
    SEMICOLON      [reduce using rule 1110 (typedef-name)]
    ALIGNAS        reduce using rule 145 (class-name)
    ALIGNAS        [reduce using rule 294 (enum-name)]
    ALIGNAS        [reduce using rule 1052 (template-name)]
    ALIGNAS        [reduce using rule 1110 (typedef-name)]
    OPEN_PAREN     reduce using rule 145 (class-name)
    OPEN_PAREN     [reduce using rule 294 (enum-name)]
    OPEN_PAREN     [reduce using rule 1052 (template-name)]
    OPEN_PAREN     [reduce using rule 1110 (typedef-name)]
    CLOSE_PAREN    reduce using rule 145 (class-name)
    CLOSE_PAREN    [reduce using rule 294 (enum-name)]
    CLOSE_PAREN    [reduce using rule 1052 (template-name)]
    CLOSE_PAREN    [reduce using rule 1110 (typedef-name)]
    ELLIPSIS       reduce using rule 145 (class-name)
    ELLIPSIS       [reduce using rule 163 (concept-name)]
    ELLIPSIS       [reduce using rule 294 (enum-name)]
    ELLIPSIS       [reduce using rule 1052 (template-name)]
    ELLIPSIS       [reduce using rule 1110 (typedef-name)]
    AND            reduce using rule 145 (class-name)
    AND            [reduce using rule 294 (enum-name)]
    AND            [reduce using rule 1052 (template-name)]
    AND            [reduce using rule 1110 (typedef-name)]
    ASM            reduce using rule 145 (class-name)
    ASM            [reduce using rule 294 (enum-name)]
    ASM            [reduce using rule 1052 (template-name)]
    ASM            [reduce using rule 1110 (typedef-name)]
    MULT_EQ        reduce using rule 145 (class-name)
    MULT_EQ        [reduce using rule 294 (enum-name)]
    MULT_EQ        [reduce using rule 1052 (template-name)]
    MULT_EQ        [reduce using rule 1110 (typedef-name)]
    DIV_EQ         reduce using rule 145 (class-name)
    DIV_EQ         [reduce using rule 294 (enum-name)]
    DIV_EQ         [reduce using rule 1052 (template-name)]
    DIV_EQ         [reduce using rule 1110 (typedef-name)]
    MOD_EQ         reduce using rule 145 (class-name)
    MOD_EQ         [reduce using rule 294 (enum-name)]
    MOD_EQ         [reduce using rule 1052 (template-name)]
    MOD_EQ         [reduce using rule 1110 (typedef-name)]
    PLUS_EQ        reduce using rule 145 (class-name)
    PLUS_EQ        [reduce using rule 294 (enum-name)]
    PLUS_EQ        [reduce using rule 1052 (template-name)]
    PLUS_EQ        [reduce using rule 1110 (typedef-name)]
    MINUS_EQ       reduce using rule 145 (class-name)
    MINUS_EQ       [reduce using rule 294 (enum-name)]
    MINUS_EQ       [reduce using rule 1052 (template-name)]
    MINUS_EQ       [reduce using rule 1110 (typedef-name)]
    RSHIFT_EQ      reduce using rule 145 (class-name)
    RSHIFT_EQ      [reduce using rule 294 (enum-name)]
    RSHIFT_EQ      [reduce using rule 1052 (template-name)]
    RSHIFT_EQ      [reduce using rule 1110 (typedef-name)]
    LSHIFT_EQ      reduce using rule 145 (class-name)
    LSHIFT_EQ      [reduce using rule 294 (enum-name)]
    LSHIFT_EQ      [reduce using rule 1052 (template-name)]
    LSHIFT_EQ      [reduce using rule 1110 (typedef-name)]
    AND_EQ         reduce using rule 145 (class-name)
    AND_EQ         [reduce using rule 294 (enum-name)]
    AND_EQ         [reduce using rule 1052 (template-name)]
    AND_EQ         [reduce using rule 1110 (typedef-name)]
    XOR_EQ         reduce using rule 145 (class-name)
    XOR_EQ         [reduce using rule 294 (enum-name)]
    XOR_EQ         [reduce using rule 1052 (template-name)]
    XOR_EQ         [reduce using rule 1110 (typedef-name)]
    OR_EQ          reduce using rule 145 (class-name)
    OR_EQ          [reduce using rule 294 (enum-name)]
    OR_EQ          [reduce using rule 1052 (template-name)]
    OR_EQ          [reduce using rule 1110 (typedef-name)]
    COMMA          reduce using rule 145 (class-name)
    COMMA          [reduce using rule 163 (concept-name)]
    COMMA          [reduce using rule 294 (enum-name)]
    COMMA          [reduce using rule 1052 (template-name)]
    COMMA          [reduce using rule 1110 (typedef-name)]
    SCOPE          [reduce using rule 145 (class-name)]
    SCOPE          [reduce using rule 294 (enum-name)]
    SCOPE          [reduce using rule 1052 (template-name)]
    SCOPE          [reduce using rule 1110 (typedef-name)]
    OPEN_SQUARE    reduce using rule 145 (class-name)
    OPEN_SQUARE    [reduce using rule 294 (enum-name)]
    OPEN_SQUARE    [reduce using rule 1052 (template-name)]
    OPEN_SQUARE    [reduce using rule 1110 (typedef-name)]
    CLOSE_SQUARE   reduce using rule 145 (class-name)
    CLOSE_SQUARE   [reduce using rule 294 (enum-name)]
    CLOSE_SQUARE   [reduce using rule 1052 (template-name)]
    CLOSE_SQUARE   [reduce using rule 1110 (typedef-name)]
    COLON          reduce using rule 145 (class-name)
    COLON          [reduce using rule 294 (enum-name)]
    COLON          [reduce using rule 1052 (template-name)]
    COLON          [reduce using rule 1110 (typedef-name)]
    OPEN_BRACE     reduce using rule 145 (class-name)
    OPEN_BRACE     [reduce using rule 294 (enum-name)]
    OPEN_BRACE     [reduce using rule 1052 (template-name)]
    OPEN_BRACE     [reduce using rule 1110 (typedef-name)]
    CLOSE_BRACE    reduce using rule 145 (class-name)
    CLOSE_BRACE    [reduce using rule 294 (enum-name)]
    CLOSE_BRACE    [reduce using rule 1052 (template-name)]
    CLOSE_BRACE    [reduce using rule 1110 (typedef-name)]
    VIRTUAL        reduce using rule 145 (class-name)
    VIRTUAL        [reduce using rule 294 (enum-name)]
    VIRTUAL        [reduce using rule 1052 (template-name)]
    VIRTUAL        [reduce using rule 1110 (typedef-name)]
    CLASS          reduce using rule 145 (class-name)
    CLASS          [reduce using rule 294 (enum-name)]
    CLASS          [reduce using rule 1052 (template-name)]
    CLASS          [reduce using rule 1110 (typedef-name)]
    STRUCT         reduce using rule 145 (class-name)
    STRUCT         [reduce using rule 294 (enum-name)]
    STRUCT         [reduce using rule 1052 (template-name)]
    STRUCT         [reduce using rule 1110 (typedef-name)]
    UNION          reduce using rule 145 (class-name)
    UNION          [reduce using rule 294 (enum-name)]
    UNION          [reduce using rule 1052 (template-name)]
    UNION          [reduce using rule 1110 (typedef-name)]
    TEMPLATE       reduce using rule 145 (class-name)
    TEMPLATE       [reduce using rule 294 (enum-name)]
    TEMPLATE       [reduce using rule 1052 (template-name)]
    TEMPLATE       [reduce using rule 1110 (typedef-name)]
    FINAL          reduce using rule 145 (class-name)
    FINAL          [reduce using rule 294 (enum-name)]
    FINAL          [reduce using rule 1052 (template-name)]
    FINAL          [reduce using rule 1110 (typedef-name)]
    SPACESHIP      reduce using rule 145 (class-name)
    SPACESHIP      [reduce using rule 294 (enum-name)]
    SPACESHIP      [reduce using rule 1052 (template-name)]
    SPACESHIP      [reduce using rule 1110 (typedef-name)]
    NOEXCEPT       reduce using rule 145 (class-name)
    NOEXCEPT       [reduce using rule 294 (enum-name)]
    NOEXCEPT       [reduce using rule 1052 (template-name)]
    NOEXCEPT       [reduce using rule 1110 (typedef-name)]
    CONCEPT        reduce using rule 145 (class-name)
    CONCEPT        [reduce using rule 294 (enum-name)]
    CONCEPT        [reduce using rule 1052 (template-name)]
    CONCEPT        [reduce using rule 1110 (typedef-name)]
    QUERY          reduce using rule 145 (class-name)
    QUERY          [reduce using rule 294 (enum-name)]
    QUERY          [reduce using rule 1052 (template-name)]
    QUERY          [reduce using rule 1110 (typedef-name)]
    AND_AND        reduce using rule 145 (class-name)
    AND_AND        [reduce using rule 294 (enum-name)]
    AND_AND        [reduce using rule 1052 (template-name)]
    AND_AND        [reduce using rule 1110 (typedef-name)]
    OR_OR          reduce using rule 145 (class-name)
    OR_OR          [reduce using rule 294 (enum-name)]
    OR_OR          [reduce using rule 1052 (template-name)]
    OR_OR          [reduce using rule 1110 (typedef-name)]
    OPERATOR       reduce using rule 145 (class-name)
    OPERATOR       [reduce using rule 294 (enum-name)]
    OPERATOR       [reduce using rule 1052 (template-name)]
    OPERATOR       [reduce using rule 1110 (typedef-name)]
    CONST          reduce using rule 145 (class-name)
    CONST          [reduce using rule 294 (enum-name)]
    CONST          [reduce using rule 1052 (template-name)]
    CONST          [reduce using rule 1110 (typedef-name)]
    VOLATILE       reduce using rule 145 (class-name)
    VOLATILE       [reduce using rule 294 (enum-name)]
    VOLATILE       [reduce using rule 1052 (template-name)]
    VOLATILE       [reduce using rule 1110 (typedef-name)]
    FRIEND         reduce using rule 145 (class-name)
    FRIEND         [reduce using rule 294 (enum-name)]
    FRIEND         [reduce using rule 1052 (template-name)]
    FRIEND         [reduce using rule 1110 (typedef-name)]
    TYPEDEF        reduce using rule 145 (class-name)
    TYPEDEF        [reduce using rule 294 (enum-name)]
    TYPEDEF        [reduce using rule 1052 (template-name)]
    TYPEDEF        [reduce using rule 1110 (typedef-name)]
    CONSTEXPR      reduce using rule 145 (class-name)
    CONSTEXPR      [reduce using rule 294 (enum-name)]
    CONSTEXPR      [reduce using rule 1052 (template-name)]
    CONSTEXPR      [reduce using rule 1110 (typedef-name)]
    CONSTEVAL      reduce using rule 145 (class-name)
    CONSTEVAL      [reduce using rule 294 (enum-name)]
    CONSTEVAL      [reduce using rule 1052 (template-name)]
    CONSTEVAL      [reduce using rule 1110 (typedef-name)]
    CONSTINIT      reduce using rule 145 (class-name)
    CONSTINIT      [reduce using rule 294 (enum-name)]
    CONSTINIT      [reduce using rule 1052 (template-name)]
    CONSTINIT      [reduce using rule 1110 (typedef-name)]
    INLINE         reduce using rule 145 (class-name)
    INLINE         [reduce using rule 294 (enum-name)]
    INLINE         [reduce using rule 1052 (template-name)]
    INLINE         [reduce using rule 1110 (typedef-name)]
    DECLTYPE       reduce using rule 145 (class-name)
    DECLTYPE       [reduce using rule 163 (concept-name)]
    DECLTYPE       [reduce using rule 294 (enum-name)]
    DECLTYPE       [reduce using rule 1052 (template-name)]
    DECLTYPE       [reduce using rule 1110 (typedef-name)]
    DEREF          reduce using rule 145 (class-name)
    DEREF          [reduce using rule 294 (enum-name)]
    DEREF          [reduce using rule 1052 (template-name)]
    DEREF          [reduce using rule 1110 (typedef-name)]
    DOT            reduce using rule 145 (class-name)
    DOT            [reduce using rule 294 (enum-name)]
    DOT            [reduce using rule 1052 (template-name)]
    DOT            [reduce using rule 1110 (typedef-name)]
    ENUM           reduce using rule 145 (class-name)
    ENUM           [reduce using rule 294 (enum-name)]
    ENUM           [reduce using rule 1052 (template-name)]
    ENUM           [reduce using rule 1110 (typedef-name)]
    EQ_EQ          reduce using rule 145 (class-name)
    EQ_EQ          [reduce using rule 294 (enum-name)]
    EQ_EQ          [reduce using rule 1052 (template-name)]
    EQ_EQ          [reduce using rule 1110 (typedef-name)]
    NOT_EQ         reduce using rule 145 (class-name)
    NOT_EQ         [reduce using rule 294 (enum-name)]
    NOT_EQ         [reduce using rule 1052 (template-name)]
    NOT_EQ         [reduce using rule 1110 (typedef-name)]
    XOR            reduce using rule 145 (class-name)
    XOR            [reduce using rule 294 (enum-name)]
    XOR            [reduce using rule 1052 (template-name)]
    XOR            [reduce using rule 1110 (typedef-name)]
    EXTERN         reduce using rule 145 (class-name)
    EXTERN         [reduce using rule 294 (enum-name)]
    EXTERN         [reduce using rule 1052 (template-name)]
    EXTERN         [reduce using rule 1110 (typedef-name)]
    LESS           reduce using rule 145 (class-name)
    LESS           [reduce using rule 163 (concept-name)]
    LESS           [reduce using rule 294 (enum-name)]
    LESS           [reduce using rule 1052 (template-name)]
    LESS           [reduce using rule 1110 (typedef-name)]
    GREATER        reduce using rule 145 (class-name)
    GREATER        [reduce using rule 163 (concept-name)]
    GREATER        [reduce using rule 294 (enum-name)]
    GREATER        [reduce using rule 1052 (template-name)]
    GREATER        [reduce using rule 1110 (typedef-name)]
    EXPLICIT       reduce using rule 145 (class-name)
    EXPLICIT       [reduce using rule 294 (enum-name)]
    EXPLICIT       [reduce using rule 1052 (template-name)]
    EXPLICIT       [reduce using rule 1110 (typedef-name)]
    EXPORT         reduce using rule 145 (class-name)
    EXPORT         [reduce using rule 294 (enum-name)]
    EXPORT         [reduce using rule 1052 (template-name)]
    EXPORT         [reduce using rule 1110 (typedef-name)]
    MULT           reduce using rule 145 (class-name)
    MULT           [reduce using rule 294 (enum-name)]
    MULT           [reduce using rule 1052 (template-name)]
    MULT           [reduce using rule 1110 (typedef-name)]
    DIV            reduce using rule 145 (class-name)
    DIV            [reduce using rule 294 (enum-name)]
    DIV            [reduce using rule 1052 (template-name)]
    DIV            [reduce using rule 1110 (typedef-name)]
    MOD            reduce using rule 145 (class-name)
    MOD            [reduce using rule 294 (enum-name)]
    MOD            [reduce using rule 1052 (template-name)]
    MOD            [reduce using rule 1110 (typedef-name)]
    OR             reduce using rule 145 (class-name)
    OR             [reduce using rule 294 (enum-name)]
    OR             [reduce using rule 1052 (template-name)]
    OR             [reduce using rule 1110 (typedef-name)]
    LSHIFT         reduce using rule 145 (class-name)
    LSHIFT         [reduce using rule 294 (enum-name)]
    LSHIFT         [reduce using rule 1052 (template-name)]
    LSHIFT         [reduce using rule 1110 (typedef-name)]
    RSHIFT         reduce using rule 145 (class-name)
    RSHIFT         [reduce using rule 294 (enum-name)]
    RSHIFT         [reduce using rule 1052 (template-name)]
    RSHIFT         [reduce using rule 1110 (typedef-name)]
    LESS_EQ        reduce using rule 145 (class-name)
    LESS_EQ        [reduce using rule 294 (enum-name)]
    LESS_EQ        [reduce using rule 1052 (template-name)]
    LESS_EQ        [reduce using rule 1110 (typedef-name)]
    GREATER_EQ     reduce using rule 145 (class-name)
    GREATER_EQ     [reduce using rule 294 (enum-name)]
    GREATER_EQ     [reduce using rule 1052 (template-name)]
    GREATER_EQ     [reduce using rule 1110 (typedef-name)]
    DOT_STAR       reduce using rule 145 (class-name)
    DOT_STAR       [reduce using rule 294 (enum-name)]
    DOT_STAR       [reduce using rule 1052 (template-name)]
    DOT_STAR       [reduce using rule 1110 (typedef-name)]
    DEREF_STAR     reduce using rule 145 (class-name)
    DEREF_STAR     [reduce using rule 294 (enum-name)]
    DEREF_STAR     [reduce using rule 1052 (template-name)]
    DEREF_STAR     [reduce using rule 1110 (typedef-name)]
    TRY            reduce using rule 145 (class-name)
    TRY            [reduce using rule 294 (enum-name)]
    TRY            [reduce using rule 1052 (template-name)]
    TRY            [reduce using rule 1110 (typedef-name)]
    IMPORT         reduce using rule 145 (class-name)
    IMPORT         [reduce using rule 294 (enum-name)]
    IMPORT         [reduce using rule 1052 (template-name)]
    IMPORT         [reduce using rule 1110 (typedef-name)]
    NAMESPACE      reduce using rule 145 (class-name)
    NAMESPACE      [reduce using rule 294 (enum-name)]
    NAMESPACE      [reduce using rule 1052 (template-name)]
    NAMESPACE      [reduce using rule 1110 (typedef-name)]
    REQUIRES       reduce using rule 145 (class-name)
    REQUIRES       [reduce using rule 294 (enum-name)]
    REQUIRES       [reduce using rule 1052 (template-name)]
    REQUIRES       [reduce using rule 1110 (typedef-name)]
    COMPL          reduce using rule 145 (class-name)
    COMPL          [reduce using rule 294 (enum-name)]
    COMPL          [reduce using rule 1052 (template-name)]
    COMPL          [reduce using rule 1110 (typedef-name)]
    PLUS_PLUS      reduce using rule 145 (class-name)
    PLUS_PLUS      [reduce using rule 294 (enum-name)]
    PLUS_PLUS      [reduce using rule 1052 (template-name)]
    PLUS_PLUS      [reduce using rule 1110 (typedef-name)]
    MINUS_MINUS    reduce using rule 145 (class-name)
    MINUS_MINUS    [reduce using rule 294 (enum-name)]
    MINUS_MINUS    [reduce using rule 1052 (template-name)]
    MINUS_MINUS    [reduce using rule 1110 (typedef-name)]
    AUTO           reduce using rule 145 (class-name)
    AUTO           [reduce using rule 163 (concept-name)]
    AUTO           [reduce using rule 294 (enum-name)]
    AUTO           [reduce using rule 1052 (template-name)]
    AUTO           [reduce using rule 1110 (typedef-name)]
    CHAR           reduce using rule 145 (class-name)
    CHAR           [reduce using rule 294 (enum-name)]
    CHAR           [reduce using rule 1052 (template-name)]
    CHAR           [reduce using rule 1110 (typedef-name)]
    CHAR8_T        reduce using rule 145 (class-name)
    CHAR8_T        [reduce using rule 294 (enum-name)]
    CHAR8_T        [reduce using rule 1052 (template-name)]
    CHAR8_T        [reduce using rule 1110 (typedef-name)]
    CHAR16_T       reduce using rule 145 (class-name)
    CHAR16_T       [reduce using rule 294 (enum-name)]
    CHAR16_T       [reduce using rule 1052 (template-name)]
    CHAR16_T       [reduce using rule 1110 (typedef-name)]
    CHAR32_T       reduce using rule 145 (class-name)
    CHAR32_T       [reduce using rule 294 (enum-name)]
    CHAR32_T       [reduce using rule 1052 (template-name)]
    CHAR32_T       [reduce using rule 1110 (typedef-name)]
    WCHAR_T        reduce using rule 145 (class-name)
    WCHAR_T        [reduce using rule 294 (enum-name)]
    WCHAR_T        [reduce using rule 1052 (template-name)]
    WCHAR_T        [reduce using rule 1110 (typedef-name)]
    BOOL           reduce using rule 145 (class-name)
    BOOL           [reduce using rule 294 (enum-name)]
    BOOL           [reduce using rule 1052 (template-name)]
    BOOL           [reduce using rule 1110 (typedef-name)]
    SHORT          reduce using rule 145 (class-name)
    SHORT          [reduce using rule 294 (enum-name)]
    SHORT          [reduce using rule 1052 (template-name)]
    SHORT          [reduce using rule 1110 (typedef-name)]
    INT            reduce using rule 145 (class-name)
    INT            [reduce using rule 294 (enum-name)]
    INT            [reduce using rule 1052 (template-name)]
    INT            [reduce using rule 1110 (typedef-name)]
    LONG           reduce using rule 145 (class-name)
    LONG           [reduce using rule 294 (enum-name)]
    LONG           [reduce using rule 1052 (template-name)]
    LONG           [reduce using rule 1110 (typedef-name)]
    SIGNED         reduce using rule 145 (class-name)
    SIGNED         [reduce using rule 294 (enum-name)]
    SIGNED         [reduce using rule 1052 (template-name)]
    SIGNED         [reduce using rule 1110 (typedef-name)]
    UNSIGNED       reduce using rule 145 (class-name)
    UNSIGNED       [reduce using rule 294 (enum-name)]
    UNSIGNED       [reduce using rule 1052 (template-name)]
    UNSIGNED       [reduce using rule 1110 (typedef-name)]
    FLOAT          reduce using rule 145 (class-name)
    FLOAT          [reduce using rule 294 (enum-name)]
    FLOAT          [reduce using rule 1052 (template-name)]
    FLOAT          [reduce using rule 1110 (typedef-name)]
    DOUBLE         reduce using rule 145 (class-name)
    DOUBLE         [reduce using rule 294 (enum-name)]
    DOUBLE         [reduce using rule 1052 (template-name)]
    DOUBLE         [reduce using rule 1110 (typedef-name)]
    VOID           reduce using rule 145 (class-name)
    VOID           [reduce using rule 294 (enum-name)]
    VOID           [reduce using rule 1052 (template-name)]
    VOID           [reduce using rule 1110 (typedef-name)]
    STATIC_ASSERT  reduce using rule 145 (class-name)
    STATIC_ASSERT  [reduce using rule 294 (enum-name)]
    STATIC_ASSERT  [reduce using rule 1052 (template-name)]
    STATIC_ASSERT  [reduce using rule 1110 (typedef-name)]
    STATIC         reduce using rule 145 (class-name)
    STATIC         [reduce using rule 294 (enum-name)]
    STATIC         [reduce using rule 1052 (template-name)]
    STATIC         [reduce using rule 1110 (typedef-name)]
    THREAD_LOCAL   reduce using rule 145 (class-name)
    THREAD_LOCAL   [reduce using rule 294 (enum-name)]
    THREAD_LOCAL   [reduce using rule 1052 (template-name)]
    THREAD_LOCAL   [reduce using rule 1110 (typedef-name)]
    MUTABLE        reduce using rule 145 (class-name)
    MUTABLE        [reduce using rule 294 (enum-name)]
    MUTABLE        [reduce using rule 1052 (template-name)]
    MUTABLE        [reduce using rule 1110 (typedef-name)]
    TYPENAME       reduce using rule 145 (class-name)
    TYPENAME       [reduce using rule 294 (enum-name)]
    TYPENAME       [reduce using rule 1052 (template-name)]
    TYPENAME       [reduce using rule 1110 (typedef-name)]
    OVERRIDE       reduce using rule 145 (class-name)
    OVERRIDE       [reduce using rule 294 (enum-name)]
    OVERRIDE       [reduce using rule 1052 (template-name)]
    OVERRIDE       [reduce using rule 1110 (typedef-name)]
    $default       reduce using rule 145 (class-name)


State 509

  661 nested-name-specifier: nested-name-specifier TEMPLATE • simple-template-id SCOPE
  987 simple-type-specifier: nested-name-specifier TEMPLATE • simple-template-id

    IDENTIFIER  shift, and go to state 310

    simple-template-id  go to state 1015
    template-name       go to state 142


State 510

  146 class-name: simple-template-id •
  660 nested-name-specifier: nested-name-specifier simple-template-id • SCOPE
  1111 typedef-name: simple-template-id •

    SCOPE  shift, and go to state 729

    PLUS           reduce using rule 146 (class-name)
    PLUS           [reduce using rule 1111 (typedef-name)]
    MINUS          reduce using rule 146 (class-name)
    MINUS          [reduce using rule 1111 (typedef-name)]
    USING          reduce using rule 146 (class-name)
    USING          [reduce using rule 1111 (typedef-name)]
    IDENTIFIER     reduce using rule 146 (class-name)
    IDENTIFIER     [reduce using rule 1111 (typedef-name)]
    EQ             reduce using rule 146 (class-name)
    EQ             [reduce using rule 1111 (typedef-name)]
    SEMICOLON      reduce using rule 146 (class-name)
    SEMICOLON      [reduce using rule 1111 (typedef-name)]
    ALIGNAS        reduce using rule 146 (class-name)
    ALIGNAS        [reduce using rule 1111 (typedef-name)]
    OPEN_PAREN     reduce using rule 146 (class-name)
    OPEN_PAREN     [reduce using rule 1111 (typedef-name)]
    CLOSE_PAREN    reduce using rule 146 (class-name)
    CLOSE_PAREN    [reduce using rule 1111 (typedef-name)]
    ELLIPSIS       reduce using rule 146 (class-name)
    ELLIPSIS       [reduce using rule 1111 (typedef-name)]
    AND            reduce using rule 146 (class-name)
    AND            [reduce using rule 1111 (typedef-name)]
    ASM            reduce using rule 146 (class-name)
    ASM            [reduce using rule 1111 (typedef-name)]
    MULT_EQ        reduce using rule 146 (class-name)
    MULT_EQ        [reduce using rule 1111 (typedef-name)]
    DIV_EQ         reduce using rule 146 (class-name)
    DIV_EQ         [reduce using rule 1111 (typedef-name)]
    MOD_EQ         reduce using rule 146 (class-name)
    MOD_EQ         [reduce using rule 1111 (typedef-name)]
    PLUS_EQ        reduce using rule 146 (class-name)
    PLUS_EQ        [reduce using rule 1111 (typedef-name)]
    MINUS_EQ       reduce using rule 146 (class-name)
    MINUS_EQ       [reduce using rule 1111 (typedef-name)]
    RSHIFT_EQ      reduce using rule 146 (class-name)
    RSHIFT_EQ      [reduce using rule 1111 (typedef-name)]
    LSHIFT_EQ      reduce using rule 146 (class-name)
    LSHIFT_EQ      [reduce using rule 1111 (typedef-name)]
    AND_EQ         reduce using rule 146 (class-name)
    AND_EQ         [reduce using rule 1111 (typedef-name)]
    XOR_EQ         reduce using rule 146 (class-name)
    XOR_EQ         [reduce using rule 1111 (typedef-name)]
    OR_EQ          reduce using rule 146 (class-name)
    OR_EQ          [reduce using rule 1111 (typedef-name)]
    COMMA          reduce using rule 146 (class-name)
    COMMA          [reduce using rule 1111 (typedef-name)]
    SCOPE          [reduce using rule 146 (class-name)]
    SCOPE          [reduce using rule 1111 (typedef-name)]
    OPEN_SQUARE    reduce using rule 146 (class-name)
    OPEN_SQUARE    [reduce using rule 1111 (typedef-name)]
    CLOSE_SQUARE   reduce using rule 146 (class-name)
    CLOSE_SQUARE   [reduce using rule 1111 (typedef-name)]
    COLON          reduce using rule 146 (class-name)
    COLON          [reduce using rule 1111 (typedef-name)]
    OPEN_BRACE     reduce using rule 146 (class-name)
    OPEN_BRACE     [reduce using rule 1111 (typedef-name)]
    CLOSE_BRACE    reduce using rule 146 (class-name)
    CLOSE_BRACE    [reduce using rule 1111 (typedef-name)]
    VIRTUAL        reduce using rule 146 (class-name)
    VIRTUAL        [reduce using rule 1111 (typedef-name)]
    CLASS          reduce using rule 146 (class-name)
    CLASS          [reduce using rule 1111 (typedef-name)]
    STRUCT         reduce using rule 146 (class-name)
    STRUCT         [reduce using rule 1111 (typedef-name)]
    UNION          reduce using rule 146 (class-name)
    UNION          [reduce using rule 1111 (typedef-name)]
    TEMPLATE       reduce using rule 146 (class-name)
    TEMPLATE       [reduce using rule 1111 (typedef-name)]
    FINAL          reduce using rule 146 (class-name)
    FINAL          [reduce using rule 1111 (typedef-name)]
    SPACESHIP      reduce using rule 146 (class-name)
    SPACESHIP      [reduce using rule 1111 (typedef-name)]
    NOEXCEPT       reduce using rule 146 (class-name)
    NOEXCEPT       [reduce using rule 1111 (typedef-name)]
    CONCEPT        reduce using rule 146 (class-name)
    CONCEPT        [reduce using rule 1111 (typedef-name)]
    QUERY          reduce using rule 146 (class-name)
    QUERY          [reduce using rule 1111 (typedef-name)]
    AND_AND        reduce using rule 146 (class-name)
    AND_AND        [reduce using rule 1111 (typedef-name)]
    OR_OR          reduce using rule 146 (class-name)
    OR_OR          [reduce using rule 1111 (typedef-name)]
    OPERATOR       reduce using rule 146 (class-name)
    OPERATOR       [reduce using rule 1111 (typedef-name)]
    CONST          reduce using rule 146 (class-name)
    CONST          [reduce using rule 1111 (typedef-name)]
    VOLATILE       reduce using rule 146 (class-name)
    VOLATILE       [reduce using rule 1111 (typedef-name)]
    FRIEND         reduce using rule 146 (class-name)
    FRIEND         [reduce using rule 1111 (typedef-name)]
    TYPEDEF        reduce using rule 146 (class-name)
    TYPEDEF        [reduce using rule 1111 (typedef-name)]
    CONSTEXPR      reduce using rule 146 (class-name)
    CONSTEXPR      [reduce using rule 1111 (typedef-name)]
    CONSTEVAL      reduce using rule 146 (class-name)
    CONSTEVAL      [reduce using rule 1111 (typedef-name)]
    CONSTINIT      reduce using rule 146 (class-name)
    CONSTINIT      [reduce using rule 1111 (typedef-name)]
    INLINE         reduce using rule 146 (class-name)
    INLINE         [reduce using rule 1111 (typedef-name)]
    DECLTYPE       reduce using rule 146 (class-name)
    DECLTYPE       [reduce using rule 1111 (typedef-name)]
    DEREF          reduce using rule 146 (class-name)
    DEREF          [reduce using rule 1111 (typedef-name)]
    DOT            reduce using rule 146 (class-name)
    DOT            [reduce using rule 1111 (typedef-name)]
    ENUM           reduce using rule 146 (class-name)
    ENUM           [reduce using rule 1111 (typedef-name)]
    EQ_EQ          reduce using rule 146 (class-name)
    EQ_EQ          [reduce using rule 1111 (typedef-name)]
    NOT_EQ         reduce using rule 146 (class-name)
    NOT_EQ         [reduce using rule 1111 (typedef-name)]
    XOR            reduce using rule 146 (class-name)
    XOR            [reduce using rule 1111 (typedef-name)]
    EXTERN         reduce using rule 146 (class-name)
    EXTERN         [reduce using rule 1111 (typedef-name)]
    LESS           reduce using rule 146 (class-name)
    LESS           [reduce using rule 1111 (typedef-name)]
    GREATER        reduce using rule 146 (class-name)
    GREATER        [reduce using rule 1111 (typedef-name)]
    EXPLICIT       reduce using rule 146 (class-name)
    EXPLICIT       [reduce using rule 1111 (typedef-name)]
    EXPORT         reduce using rule 146 (class-name)
    EXPORT         [reduce using rule 1111 (typedef-name)]
    MULT           reduce using rule 146 (class-name)
    MULT           [reduce using rule 1111 (typedef-name)]
    DIV            reduce using rule 146 (class-name)
    DIV            [reduce using rule 1111 (typedef-name)]
    MOD            reduce using rule 146 (class-name)
    MOD            [reduce using rule 1111 (typedef-name)]
    OR             reduce using rule 146 (class-name)
    OR             [reduce using rule 1111 (typedef-name)]
    LSHIFT         reduce using rule 146 (class-name)
    LSHIFT         [reduce using rule 1111 (typedef-name)]
    RSHIFT         reduce using rule 146 (class-name)
    RSHIFT         [reduce using rule 1111 (typedef-name)]
    LESS_EQ        reduce using rule 146 (class-name)
    LESS_EQ        [reduce using rule 1111 (typedef-name)]
    GREATER_EQ     reduce using rule 146 (class-name)
    GREATER_EQ     [reduce using rule 1111 (typedef-name)]
    DOT_STAR       reduce using rule 146 (class-name)
    DOT_STAR       [reduce using rule 1111 (typedef-name)]
    DEREF_STAR     reduce using rule 146 (class-name)
    DEREF_STAR     [reduce using rule 1111 (typedef-name)]
    TRY            reduce using rule 146 (class-name)
    TRY            [reduce using rule 1111 (typedef-name)]
    IMPORT         reduce using rule 146 (class-name)
    IMPORT         [reduce using rule 1111 (typedef-name)]
    NAMESPACE      reduce using rule 146 (class-name)
    NAMESPACE      [reduce using rule 1111 (typedef-name)]
    REQUIRES       reduce using rule 146 (class-name)
    REQUIRES       [reduce using rule 1111 (typedef-name)]
    COMPL          reduce using rule 146 (class-name)
    COMPL          [reduce using rule 1111 (typedef-name)]
    PLUS_PLUS      reduce using rule 146 (class-name)
    PLUS_PLUS      [reduce using rule 1111 (typedef-name)]
    MINUS_MINUS    reduce using rule 146 (class-name)
    MINUS_MINUS    [reduce using rule 1111 (typedef-name)]
    AUTO           reduce using rule 146 (class-name)
    AUTO           [reduce using rule 1111 (typedef-name)]
    CHAR           reduce using rule 146 (class-name)
    CHAR           [reduce using rule 1111 (typedef-name)]
    CHAR8_T        reduce using rule 146 (class-name)
    CHAR8_T        [reduce using rule 1111 (typedef-name)]
    CHAR16_T       reduce using rule 146 (class-name)
    CHAR16_T       [reduce using rule 1111 (typedef-name)]
    CHAR32_T       reduce using rule 146 (class-name)
    CHAR32_T       [reduce using rule 1111 (typedef-name)]
    WCHAR_T        reduce using rule 146 (class-name)
    WCHAR_T        [reduce using rule 1111 (typedef-name)]
    BOOL           reduce using rule 146 (class-name)
    BOOL           [reduce using rule 1111 (typedef-name)]
    SHORT          reduce using rule 146 (class-name)
    SHORT          [reduce using rule 1111 (typedef-name)]
    INT            reduce using rule 146 (class-name)
    INT            [reduce using rule 1111 (typedef-name)]
    LONG           reduce using rule 146 (class-name)
    LONG           [reduce using rule 1111 (typedef-name)]
    SIGNED         reduce using rule 146 (class-name)
    SIGNED         [reduce using rule 1111 (typedef-name)]
    UNSIGNED       reduce using rule 146 (class-name)
    UNSIGNED       [reduce using rule 1111 (typedef-name)]
    FLOAT          reduce using rule 146 (class-name)
    FLOAT          [reduce using rule 1111 (typedef-name)]
    DOUBLE         reduce using rule 146 (class-name)
    DOUBLE         [reduce using rule 1111 (typedef-name)]
    VOID           reduce using rule 146 (class-name)
    VOID           [reduce using rule 1111 (typedef-name)]
    STATIC_ASSERT  reduce using rule 146 (class-name)
    STATIC_ASSERT  [reduce using rule 1111 (typedef-name)]
    STATIC         reduce using rule 146 (class-name)
    STATIC         [reduce using rule 1111 (typedef-name)]
    THREAD_LOCAL   reduce using rule 146 (class-name)
    THREAD_LOCAL   [reduce using rule 1111 (typedef-name)]
    MUTABLE        reduce using rule 146 (class-name)
    MUTABLE        [reduce using rule 1111 (typedef-name)]
    TYPENAME       reduce using rule 146 (class-name)
    TYPENAME       [reduce using rule 1111 (typedef-name)]
    OVERRIDE       reduce using rule 146 (class-name)
    OVERRIDE       [reduce using rule 1111 (typedef-name)]
    $default       reduce using rule 146 (class-name)


State 511

  756 operator-function-id: OPERATOR overloadable-operator LESS • GREATER
  757                     | OPERATOR overloadable-operator LESS • template-argument-list GREATER

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 135
    UNICODE_8         shift, and go to state 184
    GREATER           shift, and go to state 1016
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-key                            go to state 209
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 407
    constant-expression                  go to state 635
    conversion-function-id               go to state 68
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 636
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 430
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    string-literal                       go to state 445
    template-argument                    go to state 637
    template-argument-list               go to state 1017
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-id                              go to state 639
    type-name                            go to state 124
    type-specifier                       go to state 216
    type-specifier-seq                   go to state 447
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 512

  561 literal-operator-id: OPERATOR string-literal IDENTIFIER •
  1115 ud-suffix: IDENTIFIER •

    PLUS           reduce using rule 561 (literal-operator-id)
    PLUS           [reduce using rule 1115 (ud-suffix)]
    MINUS          reduce using rule 561 (literal-operator-id)
    MINUS          [reduce using rule 1115 (ud-suffix)]
    USING          reduce using rule 561 (literal-operator-id)
    USING          [reduce using rule 1115 (ud-suffix)]
    IDENTIFIER     reduce using rule 561 (literal-operator-id)
    IDENTIFIER     [reduce using rule 1115 (ud-suffix)]
    EQ             reduce using rule 561 (literal-operator-id)
    EQ             [reduce using rule 1115 (ud-suffix)]
    SEMICOLON      reduce using rule 561 (literal-operator-id)
    SEMICOLON      [reduce using rule 1115 (ud-suffix)]
    ALIGNAS        reduce using rule 561 (literal-operator-id)
    ALIGNAS        [reduce using rule 1115 (ud-suffix)]
    OPEN_PAREN     reduce using rule 561 (literal-operator-id)
    OPEN_PAREN     [reduce using rule 1115 (ud-suffix)]
    CLOSE_PAREN    reduce using rule 561 (literal-operator-id)
    CLOSE_PAREN    [reduce using rule 1115 (ud-suffix)]
    ELLIPSIS       reduce using rule 561 (literal-operator-id)
    ELLIPSIS       [reduce using rule 1115 (ud-suffix)]
    AND            reduce using rule 561 (literal-operator-id)
    AND            [reduce using rule 1115 (ud-suffix)]
    ASM            reduce using rule 561 (literal-operator-id)
    ASM            [reduce using rule 1115 (ud-suffix)]
    MULT_EQ        reduce using rule 561 (literal-operator-id)
    MULT_EQ        [reduce using rule 1115 (ud-suffix)]
    DIV_EQ         reduce using rule 561 (literal-operator-id)
    DIV_EQ         [reduce using rule 1115 (ud-suffix)]
    MOD_EQ         reduce using rule 561 (literal-operator-id)
    MOD_EQ         [reduce using rule 1115 (ud-suffix)]
    PLUS_EQ        reduce using rule 561 (literal-operator-id)
    PLUS_EQ        [reduce using rule 1115 (ud-suffix)]
    MINUS_EQ       reduce using rule 561 (literal-operator-id)
    MINUS_EQ       [reduce using rule 1115 (ud-suffix)]
    RSHIFT_EQ      reduce using rule 561 (literal-operator-id)
    RSHIFT_EQ      [reduce using rule 1115 (ud-suffix)]
    LSHIFT_EQ      reduce using rule 561 (literal-operator-id)
    LSHIFT_EQ      [reduce using rule 1115 (ud-suffix)]
    AND_EQ         reduce using rule 561 (literal-operator-id)
    AND_EQ         [reduce using rule 1115 (ud-suffix)]
    XOR_EQ         reduce using rule 561 (literal-operator-id)
    XOR_EQ         [reduce using rule 1115 (ud-suffix)]
    OR_EQ          reduce using rule 561 (literal-operator-id)
    OR_EQ          [reduce using rule 1115 (ud-suffix)]
    COMMA          reduce using rule 561 (literal-operator-id)
    COMMA          [reduce using rule 1115 (ud-suffix)]
    SCOPE          reduce using rule 561 (literal-operator-id)
    SCOPE          [reduce using rule 1115 (ud-suffix)]
    OPEN_SQUARE    reduce using rule 561 (literal-operator-id)
    OPEN_SQUARE    [reduce using rule 1115 (ud-suffix)]
    CLOSE_SQUARE   reduce using rule 561 (literal-operator-id)
    CLOSE_SQUARE   [reduce using rule 1115 (ud-suffix)]
    COLON          reduce using rule 561 (literal-operator-id)
    COLON          [reduce using rule 1115 (ud-suffix)]
    OPEN_BRACE     reduce using rule 561 (literal-operator-id)
    OPEN_BRACE     [reduce using rule 1115 (ud-suffix)]
    CLOSE_BRACE    reduce using rule 561 (literal-operator-id)
    CLOSE_BRACE    [reduce using rule 1115 (ud-suffix)]
    VIRTUAL        reduce using rule 561 (literal-operator-id)
    VIRTUAL        [reduce using rule 1115 (ud-suffix)]
    CLASS          reduce using rule 561 (literal-operator-id)
    CLASS          [reduce using rule 1115 (ud-suffix)]
    STRUCT         reduce using rule 561 (literal-operator-id)
    STRUCT         [reduce using rule 1115 (ud-suffix)]
    UNION          reduce using rule 561 (literal-operator-id)
    UNION          [reduce using rule 1115 (ud-suffix)]
    TEMPLATE       reduce using rule 561 (literal-operator-id)
    TEMPLATE       [reduce using rule 1115 (ud-suffix)]
    FINAL          reduce using rule 561 (literal-operator-id)
    FINAL          [reduce using rule 1115 (ud-suffix)]
    SPACESHIP      reduce using rule 561 (literal-operator-id)
    SPACESHIP      [reduce using rule 1115 (ud-suffix)]
    NOEXCEPT       reduce using rule 561 (literal-operator-id)
    NOEXCEPT       [reduce using rule 1115 (ud-suffix)]
    CONCEPT        reduce using rule 561 (literal-operator-id)
    CONCEPT        [reduce using rule 1115 (ud-suffix)]
    QUERY          reduce using rule 561 (literal-operator-id)
    QUERY          [reduce using rule 1115 (ud-suffix)]
    AND_AND        reduce using rule 561 (literal-operator-id)
    AND_AND        [reduce using rule 1115 (ud-suffix)]
    OR_OR          reduce using rule 561 (literal-operator-id)
    OR_OR          [reduce using rule 1115 (ud-suffix)]
    OPERATOR       reduce using rule 561 (literal-operator-id)
    OPERATOR       [reduce using rule 1115 (ud-suffix)]
    CONST          reduce using rule 561 (literal-operator-id)
    CONST          [reduce using rule 1115 (ud-suffix)]
    VOLATILE       reduce using rule 561 (literal-operator-id)
    VOLATILE       [reduce using rule 1115 (ud-suffix)]
    FRIEND         reduce using rule 561 (literal-operator-id)
    FRIEND         [reduce using rule 1115 (ud-suffix)]
    TYPEDEF        reduce using rule 561 (literal-operator-id)
    TYPEDEF        [reduce using rule 1115 (ud-suffix)]
    CONSTEXPR      reduce using rule 561 (literal-operator-id)
    CONSTEXPR      [reduce using rule 1115 (ud-suffix)]
    CONSTEVAL      reduce using rule 561 (literal-operator-id)
    CONSTEVAL      [reduce using rule 1115 (ud-suffix)]
    CONSTINIT      reduce using rule 561 (literal-operator-id)
    CONSTINIT      [reduce using rule 1115 (ud-suffix)]
    INLINE         reduce using rule 561 (literal-operator-id)
    INLINE         [reduce using rule 1115 (ud-suffix)]
    DECLTYPE       reduce using rule 561 (literal-operator-id)
    DECLTYPE       [reduce using rule 1115 (ud-suffix)]
    DEREF          reduce using rule 561 (literal-operator-id)
    DEREF          [reduce using rule 1115 (ud-suffix)]
    DOT            reduce using rule 561 (literal-operator-id)
    DOT            [reduce using rule 1115 (ud-suffix)]
    ENUM           reduce using rule 561 (literal-operator-id)
    ENUM           [reduce using rule 1115 (ud-suffix)]
    EQ_EQ          reduce using rule 561 (literal-operator-id)
    EQ_EQ          [reduce using rule 1115 (ud-suffix)]
    NOT_EQ         reduce using rule 561 (literal-operator-id)
    NOT_EQ         [reduce using rule 1115 (ud-suffix)]
    XOR            reduce using rule 561 (literal-operator-id)
    XOR            [reduce using rule 1115 (ud-suffix)]
    EXTERN         reduce using rule 561 (literal-operator-id)
    EXTERN         [reduce using rule 1115 (ud-suffix)]
    LESS           reduce using rule 561 (literal-operator-id)
    LESS           [reduce using rule 1115 (ud-suffix)]
    GREATER        reduce using rule 561 (literal-operator-id)
    GREATER        [reduce using rule 1115 (ud-suffix)]
    EXPLICIT       reduce using rule 561 (literal-operator-id)
    EXPLICIT       [reduce using rule 1115 (ud-suffix)]
    EXPORT         reduce using rule 561 (literal-operator-id)
    EXPORT         [reduce using rule 1115 (ud-suffix)]
    MULT           reduce using rule 561 (literal-operator-id)
    MULT           [reduce using rule 1115 (ud-suffix)]
    DIV            reduce using rule 561 (literal-operator-id)
    DIV            [reduce using rule 1115 (ud-suffix)]
    MOD            reduce using rule 561 (literal-operator-id)
    MOD            [reduce using rule 1115 (ud-suffix)]
    OR             reduce using rule 561 (literal-operator-id)
    OR             [reduce using rule 1115 (ud-suffix)]
    LSHIFT         reduce using rule 561 (literal-operator-id)
    LSHIFT         [reduce using rule 1115 (ud-suffix)]
    RSHIFT         reduce using rule 561 (literal-operator-id)
    RSHIFT         [reduce using rule 1115 (ud-suffix)]
    LESS_EQ        reduce using rule 561 (literal-operator-id)
    LESS_EQ        [reduce using rule 1115 (ud-suffix)]
    GREATER_EQ     reduce using rule 561 (literal-operator-id)
    GREATER_EQ     [reduce using rule 1115 (ud-suffix)]
    DOT_STAR       reduce using rule 561 (literal-operator-id)
    DOT_STAR       [reduce using rule 1115 (ud-suffix)]
    DEREF_STAR     reduce using rule 561 (literal-operator-id)
    DEREF_STAR     [reduce using rule 1115 (ud-suffix)]
    TRY            reduce using rule 561 (literal-operator-id)
    TRY            [reduce using rule 1115 (ud-suffix)]
    IMPORT         reduce using rule 561 (literal-operator-id)
    IMPORT         [reduce using rule 1115 (ud-suffix)]
    NAMESPACE      reduce using rule 561 (literal-operator-id)
    NAMESPACE      [reduce using rule 1115 (ud-suffix)]
    REQUIRES       reduce using rule 561 (literal-operator-id)
    REQUIRES       [reduce using rule 1115 (ud-suffix)]
    COMPL          reduce using rule 561 (literal-operator-id)
    COMPL          [reduce using rule 1115 (ud-suffix)]
    PLUS_PLUS      reduce using rule 561 (literal-operator-id)
    PLUS_PLUS      [reduce using rule 1115 (ud-suffix)]
    MINUS_MINUS    reduce using rule 561 (literal-operator-id)
    MINUS_MINUS    [reduce using rule 1115 (ud-suffix)]
    AUTO           reduce using rule 561 (literal-operator-id)
    AUTO           [reduce using rule 1115 (ud-suffix)]
    CHAR           reduce using rule 561 (literal-operator-id)
    CHAR           [reduce using rule 1115 (ud-suffix)]
    CHAR8_T        reduce using rule 561 (literal-operator-id)
    CHAR8_T        [reduce using rule 1115 (ud-suffix)]
    CHAR16_T       reduce using rule 561 (literal-operator-id)
    CHAR16_T       [reduce using rule 1115 (ud-suffix)]
    CHAR32_T       reduce using rule 561 (literal-operator-id)
    CHAR32_T       [reduce using rule 1115 (ud-suffix)]
    WCHAR_T        reduce using rule 561 (literal-operator-id)
    WCHAR_T        [reduce using rule 1115 (ud-suffix)]
    BOOL           reduce using rule 561 (literal-operator-id)
    BOOL           [reduce using rule 1115 (ud-suffix)]
    SHORT          reduce using rule 561 (literal-operator-id)
    SHORT          [reduce using rule 1115 (ud-suffix)]
    INT            reduce using rule 561 (literal-operator-id)
    INT            [reduce using rule 1115 (ud-suffix)]
    LONG           reduce using rule 561 (literal-operator-id)
    LONG           [reduce using rule 1115 (ud-suffix)]
    SIGNED         reduce using rule 561 (literal-operator-id)
    SIGNED         [reduce using rule 1115 (ud-suffix)]
    UNSIGNED       reduce using rule 561 (literal-operator-id)
    UNSIGNED       [reduce using rule 1115 (ud-suffix)]
    FLOAT          reduce using rule 561 (literal-operator-id)
    FLOAT          [reduce using rule 1115 (ud-suffix)]
    DOUBLE         reduce using rule 561 (literal-operator-id)
    DOUBLE         [reduce using rule 1115 (ud-suffix)]
    VOID           reduce using rule 561 (literal-operator-id)
    VOID           [reduce using rule 1115 (ud-suffix)]
    STATIC_ASSERT  reduce using rule 561 (literal-operator-id)
    STATIC_ASSERT  [reduce using rule 1115 (ud-suffix)]
    STATIC         reduce using rule 561 (literal-operator-id)
    STATIC         [reduce using rule 1115 (ud-suffix)]
    THREAD_LOCAL   reduce using rule 561 (literal-operator-id)
    THREAD_LOCAL   [reduce using rule 1115 (ud-suffix)]
    MUTABLE        reduce using rule 561 (literal-operator-id)
    MUTABLE        [reduce using rule 1115 (ud-suffix)]
    TYPENAME       reduce using rule 561 (literal-operator-id)
    TYPENAME       [reduce using rule 1115 (ud-suffix)]
    OVERRIDE       reduce using rule 561 (literal-operator-id)
    OVERRIDE       [reduce using rule 1115 (ud-suffix)]
    $default       reduce using rule 561 (literal-operator-id)


State 513

  1163 user-defined-string-literal: string-literal ud-suffix •

    $default  reduce using rule 1163 (user-defined-string-literal)


State 514

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  1108 type-specifier-seq: type-specifier attribute-specifier-seq •

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    ALIGNAS      [reduce using rule 1108 (type-specifier-seq)]
    OPEN_SQUARE  [reduce using rule 1108 (type-specifier-seq)]
    $default     reduce using rule 1108 (type-specifier-seq)

    alignment-specifier  go to state 57
    attribute-specifier  go to state 260


State 515

  1109 type-specifier-seq: type-specifier type-specifier-seq •

    $default  reduce using rule 1109 (type-specifier-seq)


State 516

  181 conversion-type-id: type-specifier-seq conversion-declarator •

    $default  reduce using rule 181 (conversion-type-id)


State 517

  659 nested-name-specifier: nested-name-specifier • IDENTIFIER SCOPE
  660                      | nested-name-specifier • simple-template-id SCOPE
  661                      | nested-name-specifier • TEMPLATE simple-template-id SCOPE
  901 ptr-operator: nested-name-specifier • MULT
  902             | nested-name-specifier • MULT attribute-specifier-seq
  903             | nested-name-specifier • MULT cv-qualifier-seq
  904             | nested-name-specifier • MULT attribute-specifier-seq cv-qualifier-seq

    IDENTIFIER  shift, and go to state 1018
    TEMPLATE    shift, and go to state 350
    MULT        shift, and go to state 322

    simple-template-id  go to state 534
    template-name       go to state 142


State 518

  177 conversion-declarator: ptr-operator •
  178                      | ptr-operator • conversion-declarator

    IDENTIFIER  shift, and go to state 253
    AND         shift, and go to state 7
    SCOPE       shift, and go to state 9
    AND_AND     shift, and go to state 16
    DECLTYPE    shift, and go to state 134
    MULT        shift, and go to state 31

    IDENTIFIER  [reduce using rule 177 (conversion-declarator)]
    AND         [reduce using rule 177 (conversion-declarator)]
    SCOPE       [reduce using rule 177 (conversion-declarator)]
    AND_AND     [reduce using rule 177 (conversion-declarator)]
    DECLTYPE    [reduce using rule 177 (conversion-declarator)]
    MULT        [reduce using rule 177 (conversion-declarator)]
    $default    reduce using rule 177 (conversion-declarator)

    class-name             go to state 65
    conversion-declarator  go to state 1019
    decltype-specifier     go to state 138
    enum-name              go to state 84
    namespace-alias        go to state 99
    namespace-name         go to state 102
    nested-name-specifier  go to state 517
    ptr-operator           go to state 518
    simple-template-id     go to state 141
    template-name          go to state 142
    type-name              go to state 143
    typedef-name           go to state 126


State 519

  643 named-namespace-definition: INLINE NAMESPACE IDENTIFIER • OPEN_BRACE namespace-body CLOSE_BRACE

    OPEN_BRACE  shift, and go to state 1020


State 520

  1136 unnamed-namespace-definition: INLINE NAMESPACE OPEN_BRACE • namespace-body CLOSE_BRACE

    USING          shift, and go to state 1
    IDENTIFIER     shift, and go to state 2
    SEMICOLON      shift, and go to state 3
    ALIGNAS        shift, and go to state 4
    OPEN_PAREN     shift, and go to state 5
    ELLIPSIS       shift, and go to state 6
    AND            shift, and go to state 7
    ASM            shift, and go to state 8
    SCOPE          shift, and go to state 9
    OPEN_SQUARE    shift, and go to state 10
    VIRTUAL        shift, and go to state 11
    CLASS          shift, and go to state 12
    STRUCT         shift, and go to state 13
    UNION          shift, and go to state 14
    TEMPLATE       shift, and go to state 15
    AND_AND        shift, and go to state 16
    OPERATOR       shift, and go to state 17
    CONST          shift, and go to state 18
    VOLATILE       shift, and go to state 19
    FRIEND         shift, and go to state 20
    TYPEDEF        shift, and go to state 21
    CONSTEXPR      shift, and go to state 22
    CONSTEVAL      shift, and go to state 23
    CONSTINIT      shift, and go to state 24
    INLINE         shift, and go to state 25
    DECLTYPE       shift, and go to state 26
    ENUM           shift, and go to state 27
    EXTERN         shift, and go to state 28
    EXPLICIT       shift, and go to state 29
    EXPORT         shift, and go to state 157
    MULT           shift, and go to state 31
    IMPORT         shift, and go to state 33
    NAMESPACE      shift, and go to state 34
    COMPL          shift, and go to state 35
    AUTO           shift, and go to state 36
    CHAR           shift, and go to state 37
    CHAR8_T        shift, and go to state 38
    CHAR16_T       shift, and go to state 39
    CHAR32_T       shift, and go to state 40
    WCHAR_T        shift, and go to state 41
    BOOL           shift, and go to state 42
    SHORT          shift, and go to state 43
    INT            shift, and go to state 44
    LONG           shift, and go to state 45
    SIGNED         shift, and go to state 46
    UNSIGNED       shift, and go to state 47
    FLOAT          shift, and go to state 48
    DOUBLE         shift, and go to state 49
    VOID           shift, and go to state 50
    STATIC_ASSERT  shift, and go to state 51
    STATIC         shift, and go to state 52
    THREAD_LOCAL   shift, and go to state 53
    MUTABLE        shift, and go to state 54
    TYPENAME       shift, and go to state 55

    alias-declaration                go to state 56
    alignment-specifier              go to state 57
    asm-declaration                  go to state 58
    attribute-declaration            go to state 59
    attribute-specifier              go to state 60
    attribute-specifier-seq          go to state 61
    block-declaration                go to state 62
    class-head                       go to state 63
    class-key                        go to state 64
    class-name                       go to state 65
    class-specifier                  go to state 66
    concept-name                     go to state 67
    conversion-function-id           go to state 68
    cv-qualifier                     go to state 69
    decl-specifier                   go to state 70
    decl-specifier-seq               go to state 71
    declaration                      go to state 72
    declaration-seq                  go to state 566
    declarator                       go to state 74
    declarator-id                    go to state 75
    decltype-specifier               go to state 76
    deduction-guide                  go to state 77
    defining-type-specifier          go to state 78
    elaborated-enum-specifier        go to state 79
    elaborated-type-specifier        go to state 80
    empty-declaration                go to state 81
    enum-head                        go to state 82
    enum-key                         go to state 83
    enum-name                        go to state 84
    enum-specifier                   go to state 85
    explicit-instantiation           go to state 86
    explicit-specialization          go to state 87
    explicit-specifier               go to state 88
    export-declaration               go to state 89
    function-definition              go to state 90
    function-specifier               go to state 91
    id-expression                    go to state 93
    linkage-specification            go to state 94
    literal-operator-id              go to state 95
    module-import-declaration        go to state 97
    named-namespace-definition       go to state 98
    namespace-alias                  go to state 99
    namespace-alias-definition       go to state 100
    namespace-body                   go to state 1021
    namespace-definition             go to state 101
    namespace-name                   go to state 102
    nested-name-specifier            go to state 103
    nested-namespace-definition      go to state 104
    nodeclspec-function-declaration  go to state 105
    noptr-declarator                 go to state 106
    opaque-enum-declaration          go to state 107
    operator-function-id             go to state 108
    placeholder-type-specifier       go to state 109
    ptr-declarator                   go to state 110
    ptr-operator                     go to state 111
    qualified-id                     go to state 112
    simple-declaration               go to state 113
    simple-template-id               go to state 114
    simple-type-specifier            go to state 115
    static_assert-declaration        go to state 116
    storage-class-specifier          go to state 117
    template-declaration             go to state 118
    template-head                    go to state 119
    template-id                      go to state 120
    template-name                    go to state 121
    type-constraint                  go to state 123
    type-name                        go to state 124
    type-specifier                   go to state 125
    typedef-name                     go to state 126
    typename-specifier               go to state 127
    unnamed-namespace-definition     go to state 128
    unqualified-id                   go to state 129
    using-declaration                go to state 130
    using-directive                  go to state 131
    using-enum-declaration           go to state 132


State 521

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  645 named-namespace-definition: INLINE NAMESPACE attribute-specifier-seq • IDENTIFIER OPEN_BRACE namespace-body CLOSE_BRACE
  1138 unnamed-namespace-definition: INLINE NAMESPACE attribute-specifier-seq • OPEN_BRACE namespace-body CLOSE_BRACE

    IDENTIFIER   shift, and go to state 1022
    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10
    OPEN_BRACE   shift, and go to state 1023

    alignment-specifier  go to state 57
    attribute-specifier  go to state 260


State 522

  849 placeholder-type-specifier: AUTO •
  851                           | DECLTYPE OPEN_PAREN AUTO • CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 1024

    $default  reduce using rule 849 (placeholder-type-specifier)


State 523

  1057 throw-expression: THROW •
  1058                 | THROW • assignment-expression

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    $default  reduce using rule 1057 (throw-expression)

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 1025
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 524

  1180 yield-expression: CO_YIELD • assignment-expression
  1181                 | CO_YIELD • braced-init-list

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 935
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 1026
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    braced-init-list                     go to state 1027
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 525

  334 expression: assignment-expression •

    $default  reduce using rule 334 (expression)


State 526

   23 assignment-expression: conditional-expression •

    $default  reduce using rule 23 (assignment-expression)


State 527

  230 decltype-specifier: DECLTYPE OPEN_PAREN expression • CLOSE_PAREN
  335 expression: expression • COMMA assignment-expression

    CLOSE_PAREN  shift, and go to state 1028
    COMMA        shift, and go to state 1029


State 528

   26 assignment-expression: logical-or-expression • assignment-operator initializer-clause
  169 conditional-expression: logical-or-expression •
  170                       | logical-or-expression • QUERY expression COLON assignment-expression
  566 logical-or-expression: logical-or-expression • OR_OR logical-and-expression

    EQ         shift, and go to state 1030
    MULT_EQ    shift, and go to state 1031
    DIV_EQ     shift, and go to state 1032
    MOD_EQ     shift, and go to state 1033
    PLUS_EQ    shift, and go to state 1034
    MINUS_EQ   shift, and go to state 1035
    RSHIFT_EQ  shift, and go to state 1036
    LSHIFT_EQ  shift, and go to state 1037
    AND_EQ     shift, and go to state 1038
    XOR_EQ     shift, and go to state 1039
    OR_EQ      shift, and go to state 1040
    QUERY      shift, and go to state 903
    OR_OR      shift, and go to state 904

    EQ        [reduce using rule 169 (conditional-expression)]
    $default  reduce using rule 169 (conditional-expression)

    assignment-operator  go to state 1041


State 529

  861 postfix-expression: simple-type-specifier • OPEN_PAREN CLOSE_PAREN
  862                   | simple-type-specifier • OPEN_PAREN expression-list CLOSE_PAREN
  865                   | simple-type-specifier • braced-init-list

    OPEN_PAREN  shift, and go to state 934
    OPEN_BRACE  shift, and go to state 935

    braced-init-list  go to state 936


State 530

   25 assignment-expression: throw-expression •

    $default  reduce using rule 25 (assignment-expression)


State 531

  863 postfix-expression: typename-specifier • OPEN_PAREN CLOSE_PAREN
  864                   | typename-specifier • OPEN_PAREN expression-list CLOSE_PAREN
  866                   | typename-specifier • braced-init-list

    OPEN_PAREN  shift, and go to state 949
    OPEN_BRACE  shift, and go to state 935

    braced-init-list  go to state 950


State 532

   24 assignment-expression: yield-expression •

    $default  reduce using rule 24 (assignment-expression)


State 533

  263 elaborated-enum-specifier: ENUM nested-name-specifier IDENTIFIER •
  659 nested-name-specifier: nested-name-specifier IDENTIFIER • SCOPE
  1052 template-name: IDENTIFIER •

    SCOPE  shift, and go to state 722

    SCOPE     [reduce using rule 263 (elaborated-enum-specifier)]
    LESS      reduce using rule 263 (elaborated-enum-specifier)
    LESS      [reduce using rule 1052 (template-name)]
    $default  reduce using rule 263 (elaborated-enum-specifier)


State 534

  660 nested-name-specifier: nested-name-specifier simple-template-id • SCOPE

    SCOPE  shift, and go to state 729


State 535

  319 explicit-instantiation: EXTERN TEMPLATE declaration •

    $default  reduce using rule 319 (explicit-instantiation)


State 536

  551 linkage-specification: EXTERN string-literal OPEN_BRACE • CLOSE_BRACE
  552                      | EXTERN string-literal OPEN_BRACE • declaration-seq CLOSE_BRACE

    USING          shift, and go to state 1
    IDENTIFIER     shift, and go to state 2
    SEMICOLON      shift, and go to state 3
    ALIGNAS        shift, and go to state 4
    OPEN_PAREN     shift, and go to state 5
    ELLIPSIS       shift, and go to state 6
    AND            shift, and go to state 7
    ASM            shift, and go to state 8
    SCOPE          shift, and go to state 9
    OPEN_SQUARE    shift, and go to state 10
    CLOSE_BRACE    shift, and go to state 1042
    VIRTUAL        shift, and go to state 11
    CLASS          shift, and go to state 12
    STRUCT         shift, and go to state 13
    UNION          shift, and go to state 14
    TEMPLATE       shift, and go to state 15
    AND_AND        shift, and go to state 16
    OPERATOR       shift, and go to state 17
    CONST          shift, and go to state 18
    VOLATILE       shift, and go to state 19
    FRIEND         shift, and go to state 20
    TYPEDEF        shift, and go to state 21
    CONSTEXPR      shift, and go to state 22
    CONSTEVAL      shift, and go to state 23
    CONSTINIT      shift, and go to state 24
    INLINE         shift, and go to state 25
    DECLTYPE       shift, and go to state 26
    ENUM           shift, and go to state 27
    EXTERN         shift, and go to state 28
    EXPLICIT       shift, and go to state 29
    EXPORT         shift, and go to state 157
    MULT           shift, and go to state 31
    IMPORT         shift, and go to state 33
    NAMESPACE      shift, and go to state 34
    COMPL          shift, and go to state 35
    AUTO           shift, and go to state 36
    CHAR           shift, and go to state 37
    CHAR8_T        shift, and go to state 38
    CHAR16_T       shift, and go to state 39
    CHAR32_T       shift, and go to state 40
    WCHAR_T        shift, and go to state 41
    BOOL           shift, and go to state 42
    SHORT          shift, and go to state 43
    INT            shift, and go to state 44
    LONG           shift, and go to state 45
    SIGNED         shift, and go to state 46
    UNSIGNED       shift, and go to state 47
    FLOAT          shift, and go to state 48
    DOUBLE         shift, and go to state 49
    VOID           shift, and go to state 50
    STATIC_ASSERT  shift, and go to state 51
    STATIC         shift, and go to state 52
    THREAD_LOCAL   shift, and go to state 53
    MUTABLE        shift, and go to state 54
    TYPENAME       shift, and go to state 55

    alias-declaration                go to state 56
    alignment-specifier              go to state 57
    asm-declaration                  go to state 58
    attribute-declaration            go to state 59
    attribute-specifier              go to state 60
    attribute-specifier-seq          go to state 61
    block-declaration                go to state 62
    class-head                       go to state 63
    class-key                        go to state 64
    class-name                       go to state 65
    class-specifier                  go to state 66
    concept-name                     go to state 67
    conversion-function-id           go to state 68
    cv-qualifier                     go to state 69
    decl-specifier                   go to state 70
    decl-specifier-seq               go to state 71
    declaration                      go to state 72
    declaration-seq                  go to state 1043
    declarator                       go to state 74
    declarator-id                    go to state 75
    decltype-specifier               go to state 76
    deduction-guide                  go to state 77
    defining-type-specifier          go to state 78
    elaborated-enum-specifier        go to state 79
    elaborated-type-specifier        go to state 80
    empty-declaration                go to state 81
    enum-head                        go to state 82
    enum-key                         go to state 83
    enum-name                        go to state 84
    enum-specifier                   go to state 85
    explicit-instantiation           go to state 86
    explicit-specialization          go to state 87
    explicit-specifier               go to state 88
    export-declaration               go to state 89
    function-definition              go to state 90
    function-specifier               go to state 91
    id-expression                    go to state 93
    linkage-specification            go to state 94
    literal-operator-id              go to state 95
    module-import-declaration        go to state 97
    named-namespace-definition       go to state 98
    namespace-alias                  go to state 99
    namespace-alias-definition       go to state 100
    namespace-definition             go to state 101
    namespace-name                   go to state 102
    nested-name-specifier            go to state 103
    nested-namespace-definition      go to state 104
    nodeclspec-function-declaration  go to state 105
    noptr-declarator                 go to state 106
    opaque-enum-declaration          go to state 107
    operator-function-id             go to state 108
    placeholder-type-specifier       go to state 109
    ptr-declarator                   go to state 110
    ptr-operator                     go to state 111
    qualified-id                     go to state 112
    simple-declaration               go to state 113
    simple-template-id               go to state 114
    simple-type-specifier            go to state 115
    static_assert-declaration        go to state 116
    storage-class-specifier          go to state 117
    template-declaration             go to state 118
    template-head                    go to state 119
    template-id                      go to state 120
    template-name                    go to state 121
    type-constraint                  go to state 123
    type-name                        go to state 124
    type-specifier                   go to state 125
    typedef-name                     go to state 126
    typename-specifier               go to state 127
    unnamed-namespace-definition     go to state 128
    unqualified-id                   go to state 129
    using-declaration                go to state 130
    using-directive                  go to state 131
    using-enum-declaration           go to state 132


State 537

  553 linkage-specification: EXTERN string-literal declaration •

    $default  reduce using rule 553 (linkage-specification)


State 538

  322 explicit-specifier: EXPLICIT OPEN_PAREN constant-expression • CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 1044


State 539

  329 export-declaration: EXPORT OPEN_BRACE CLOSE_BRACE •

    $default  reduce using rule 329 (export-declaration)


State 540

  224 declaration-seq: declaration-seq • declaration
  330 export-declaration: EXPORT OPEN_BRACE declaration-seq • CLOSE_BRACE

    USING          shift, and go to state 1
    IDENTIFIER     shift, and go to state 2
    SEMICOLON      shift, and go to state 3
    ALIGNAS        shift, and go to state 4
    OPEN_PAREN     shift, and go to state 5
    ELLIPSIS       shift, and go to state 6
    AND            shift, and go to state 7
    ASM            shift, and go to state 8
    SCOPE          shift, and go to state 9
    OPEN_SQUARE    shift, and go to state 10
    CLOSE_BRACE    shift, and go to state 1045
    VIRTUAL        shift, and go to state 11
    CLASS          shift, and go to state 12
    STRUCT         shift, and go to state 13
    UNION          shift, and go to state 14
    TEMPLATE       shift, and go to state 15
    AND_AND        shift, and go to state 16
    OPERATOR       shift, and go to state 17
    CONST          shift, and go to state 18
    VOLATILE       shift, and go to state 19
    FRIEND         shift, and go to state 20
    TYPEDEF        shift, and go to state 21
    CONSTEXPR      shift, and go to state 22
    CONSTEVAL      shift, and go to state 23
    CONSTINIT      shift, and go to state 24
    INLINE         shift, and go to state 25
    DECLTYPE       shift, and go to state 26
    ENUM           shift, and go to state 27
    EXTERN         shift, and go to state 28
    EXPLICIT       shift, and go to state 29
    EXPORT         shift, and go to state 157
    MULT           shift, and go to state 31
    IMPORT         shift, and go to state 33
    NAMESPACE      shift, and go to state 34
    COMPL          shift, and go to state 35
    AUTO           shift, and go to state 36
    CHAR           shift, and go to state 37
    CHAR8_T        shift, and go to state 38
    CHAR16_T       shift, and go to state 39
    CHAR32_T       shift, and go to state 40
    WCHAR_T        shift, and go to state 41
    BOOL           shift, and go to state 42
    SHORT          shift, and go to state 43
    INT            shift, and go to state 44
    LONG           shift, and go to state 45
    SIGNED         shift, and go to state 46
    UNSIGNED       shift, and go to state 47
    FLOAT          shift, and go to state 48
    DOUBLE         shift, and go to state 49
    VOID           shift, and go to state 50
    STATIC_ASSERT  shift, and go to state 51
    STATIC         shift, and go to state 52
    THREAD_LOCAL   shift, and go to state 53
    MUTABLE        shift, and go to state 54
    TYPENAME       shift, and go to state 55

    alias-declaration                go to state 56
    alignment-specifier              go to state 57
    asm-declaration                  go to state 58
    attribute-declaration            go to state 59
    attribute-specifier              go to state 60
    attribute-specifier-seq          go to state 61
    block-declaration                go to state 62
    class-head                       go to state 63
    class-key                        go to state 64
    class-name                       go to state 65
    class-specifier                  go to state 66
    concept-name                     go to state 67
    conversion-function-id           go to state 68
    cv-qualifier                     go to state 69
    decl-specifier                   go to state 70
    decl-specifier-seq               go to state 71
    declaration                      go to state 285
    declarator                       go to state 74
    declarator-id                    go to state 75
    decltype-specifier               go to state 76
    deduction-guide                  go to state 77
    defining-type-specifier          go to state 78
    elaborated-enum-specifier        go to state 79
    elaborated-type-specifier        go to state 80
    empty-declaration                go to state 81
    enum-head                        go to state 82
    enum-key                         go to state 83
    enum-name                        go to state 84
    enum-specifier                   go to state 85
    explicit-instantiation           go to state 86
    explicit-specialization          go to state 87
    explicit-specifier               go to state 88
    export-declaration               go to state 89
    function-definition              go to state 90
    function-specifier               go to state 91
    id-expression                    go to state 93
    linkage-specification            go to state 94
    literal-operator-id              go to state 95
    module-import-declaration        go to state 97
    named-namespace-definition       go to state 98
    namespace-alias                  go to state 99
    namespace-alias-definition       go to state 100
    namespace-definition             go to state 101
    namespace-name                   go to state 102
    nested-name-specifier            go to state 103
    nested-namespace-definition      go to state 104
    nodeclspec-function-declaration  go to state 105
    noptr-declarator                 go to state 106
    opaque-enum-declaration          go to state 107
    operator-function-id             go to state 108
    placeholder-type-specifier       go to state 109
    ptr-declarator                   go to state 110
    ptr-operator                     go to state 111
    qualified-id                     go to state 112
    simple-declaration               go to state 113
    simple-template-id               go to state 114
    simple-type-specifier            go to state 115
    static_assert-declaration        go to state 116
    storage-class-specifier          go to state 117
    template-declaration             go to state 118
    template-head                    go to state 119
    template-id                      go to state 120
    template-name                    go to state 121
    type-constraint                  go to state 123
    type-name                        go to state 124
    type-specifier                   go to state 125
    typedef-name                     go to state 126
    typename-specifier               go to state 127
    unnamed-namespace-definition     go to state 128
    unqualified-id                   go to state 129
    using-declaration                go to state 130
    using-directive                  go to state 131
    using-enum-declaration           go to state 132


State 541

  619 module-declaration: EXPORT MODULE module-name • SEMICOLON
  621                   | EXPORT MODULE module-name • module-partition SEMICOLON
  623                   | EXPORT MODULE module-name • attribute-specifier-seq SEMICOLON
  625                   | EXPORT MODULE module-name • module-partition attribute-specifier-seq SEMICOLON

    SEMICOLON    shift, and go to state 1046
    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10
    COLON        shift, and go to state 239

    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 1047
    module-partition         go to state 1048


State 542

  896 ptr-operator: MULT attribute-specifier-seq cv-qualifier-seq •

    $default  reduce using rule 896 (ptr-operator)


State 543

  188 cv-qualifier-seq: cv-qualifier cv-qualifier-seq •

    $default  reduce using rule 188 (cv-qualifier-seq)


State 544

  635 module-name-qualifier: IDENTIFIER DOT •

    $default  reduce using rule 635 (module-name-qualifier)


State 545

  224 declaration-seq: declaration-seq • declaration
  412 global-module-fragment: MODULE SEMICOLON declaration-seq •

    USING          shift, and go to state 1
    IDENTIFIER     shift, and go to state 2
    SEMICOLON      shift, and go to state 3
    ALIGNAS        shift, and go to state 4
    OPEN_PAREN     shift, and go to state 5
    ELLIPSIS       shift, and go to state 6
    AND            shift, and go to state 7
    ASM            shift, and go to state 8
    SCOPE          shift, and go to state 9
    OPEN_SQUARE    shift, and go to state 10
    VIRTUAL        shift, and go to state 11
    CLASS          shift, and go to state 12
    STRUCT         shift, and go to state 13
    UNION          shift, and go to state 14
    TEMPLATE       shift, and go to state 15
    AND_AND        shift, and go to state 16
    OPERATOR       shift, and go to state 17
    CONST          shift, and go to state 18
    VOLATILE       shift, and go to state 19
    FRIEND         shift, and go to state 20
    TYPEDEF        shift, and go to state 21
    CONSTEXPR      shift, and go to state 22
    CONSTEVAL      shift, and go to state 23
    CONSTINIT      shift, and go to state 24
    INLINE         shift, and go to state 25
    DECLTYPE       shift, and go to state 26
    ENUM           shift, and go to state 27
    EXTERN         shift, and go to state 28
    EXPLICIT       shift, and go to state 29
    EXPORT         shift, and go to state 157
    MULT           shift, and go to state 31
    IMPORT         shift, and go to state 33
    NAMESPACE      shift, and go to state 34
    COMPL          shift, and go to state 35
    AUTO           shift, and go to state 36
    CHAR           shift, and go to state 37
    CHAR8_T        shift, and go to state 38
    CHAR16_T       shift, and go to state 39
    CHAR32_T       shift, and go to state 40
    WCHAR_T        shift, and go to state 41
    BOOL           shift, and go to state 42
    SHORT          shift, and go to state 43
    INT            shift, and go to state 44
    LONG           shift, and go to state 45
    SIGNED         shift, and go to state 46
    UNSIGNED       shift, and go to state 47
    FLOAT          shift, and go to state 48
    DOUBLE         shift, and go to state 49
    VOID           shift, and go to state 50
    STATIC_ASSERT  shift, and go to state 51
    STATIC         shift, and go to state 52
    THREAD_LOCAL   shift, and go to state 53
    MUTABLE        shift, and go to state 54
    TYPENAME       shift, and go to state 55

    EXPORT    [reduce using rule 412 (global-module-fragment)]
    $default  reduce using rule 412 (global-module-fragment)

    alias-declaration                go to state 56
    alignment-specifier              go to state 57
    asm-declaration                  go to state 58
    attribute-declaration            go to state 59
    attribute-specifier              go to state 60
    attribute-specifier-seq          go to state 61
    block-declaration                go to state 62
    class-head                       go to state 63
    class-key                        go to state 64
    class-name                       go to state 65
    class-specifier                  go to state 66
    concept-name                     go to state 67
    conversion-function-id           go to state 68
    cv-qualifier                     go to state 69
    decl-specifier                   go to state 70
    decl-specifier-seq               go to state 71
    declaration                      go to state 285
    declarator                       go to state 74
    declarator-id                    go to state 75
    decltype-specifier               go to state 76
    deduction-guide                  go to state 77
    defining-type-specifier          go to state 78
    elaborated-enum-specifier        go to state 79
    elaborated-type-specifier        go to state 80
    empty-declaration                go to state 81
    enum-head                        go to state 82
    enum-key                         go to state 83
    enum-name                        go to state 84
    enum-specifier                   go to state 85
    explicit-instantiation           go to state 86
    explicit-specialization          go to state 87
    explicit-specifier               go to state 88
    export-declaration               go to state 89
    function-definition              go to state 90
    function-specifier               go to state 91
    id-expression                    go to state 93
    linkage-specification            go to state 94
    literal-operator-id              go to state 95
    module-import-declaration        go to state 97
    named-namespace-definition       go to state 98
    namespace-alias                  go to state 99
    namespace-alias-definition       go to state 100
    namespace-definition             go to state 101
    namespace-name                   go to state 102
    nested-name-specifier            go to state 103
    nested-namespace-definition      go to state 104
    nodeclspec-function-declaration  go to state 105
    noptr-declarator                 go to state 106
    opaque-enum-declaration          go to state 107
    operator-function-id             go to state 108
    placeholder-type-specifier       go to state 109
    ptr-declarator                   go to state 110
    ptr-operator                     go to state 111
    qualified-id                     go to state 112
    simple-declaration               go to state 113
    simple-template-id               go to state 114
    simple-type-specifier            go to state 115
    static_assert-declaration        go to state 116
    storage-class-specifier          go to state 117
    template-declaration             go to state 118
    template-head                    go to state 119
    template-id                      go to state 120
    template-name                    go to state 121
    type-constraint                  go to state 123
    type-name                        go to state 124
    type-specifier                   go to state 125
    typedef-name                     go to state 126
    typename-specifier               go to state 127
    unnamed-namespace-definition     go to state 128
    unqualified-id                   go to state 129
    using-declaration                go to state 130
    using-directive                  go to state 131
    using-enum-declaration           go to state 132


State 546

  620 module-declaration: MODULE module-name SEMICOLON •

    $default  reduce using rule 620 (module-declaration)


State 547

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  624 module-declaration: MODULE module-name attribute-specifier-seq • SEMICOLON

    SEMICOLON    shift, and go to state 1049
    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    alignment-specifier  go to state 57
    attribute-specifier  go to state 260


State 548

  622 module-declaration: MODULE module-name module-partition • SEMICOLON
  626                   | MODULE module-name module-partition • attribute-specifier-seq SEMICOLON

    SEMICOLON    shift, and go to state 1050
    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 1051


State 549

  633 module-name: module-name-qualifier IDENTIFIER •
  636 module-name-qualifier: module-name-qualifier IDENTIFIER • DOT

    DOT  shift, and go to state 1052

    $default  reduce using rule 633 (module-name)


State 550

  635 module-name-qualifier: IDENTIFIER • DOT
  637 module-partition: COLON IDENTIFIER •

    DOT  shift, and go to state 544

    $default  reduce using rule 637 (module-partition)


State 551

  636 module-name-qualifier: module-name-qualifier • IDENTIFIER DOT
  638 module-partition: COLON module-name-qualifier • IDENTIFIER

    IDENTIFIER  shift, and go to state 1053


State 552

  413 h-char: H_CHAR •

    $default  reduce using rule 413 (h-char)


State 553

  414 h-char-sequence: h-char •

    $default  reduce using rule 414 (h-char-sequence)


State 554

  415 h-char-sequence: h-char-sequence • h-char
  419 header-name: LESS h-char-sequence • GREATER

    GREATER  shift, and go to state 1054
    H_CHAR   shift, and go to state 552

    h-char  go to state 1055


State 555

  906 q-char: Q_CHAR •

    $default  reduce using rule 906 (q-char)


State 556

  907 q-char-sequence: q-char •

    $default  reduce using rule 907 (q-char-sequence)


State 557

  420 header-name: DOUBLE_QUOTE q-char-sequence • DOUBLE_QUOTE
  908 q-char-sequence: q-char-sequence • q-char

    DOUBLE_QUOTE  shift, and go to state 1056
    Q_CHAR        shift, and go to state 555

    q-char  go to state 1057


State 558

  631 module-import-declaration: IMPORT header-name SEMICOLON •

    $default  reduce using rule 631 (module-import-declaration)


State 559

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  632 module-import-declaration: IMPORT header-name attribute-specifier-seq • SEMICOLON

    SEMICOLON    shift, and go to state 1058
    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    alignment-specifier  go to state 57
    attribute-specifier  go to state 260


State 560

  627 module-import-declaration: IMPORT module-name SEMICOLON •

    $default  reduce using rule 627 (module-import-declaration)


State 561

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  628 module-import-declaration: IMPORT module-name attribute-specifier-seq • SEMICOLON

    SEMICOLON    shift, and go to state 1059
    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    alignment-specifier  go to state 57
    attribute-specifier  go to state 260


State 562

  629 module-import-declaration: IMPORT module-partition SEMICOLON •

    $default  reduce using rule 629 (module-import-declaration)


State 563

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  630 module-import-declaration: IMPORT module-partition attribute-specifier-seq • SEMICOLON

    SEMICOLON    shift, and go to state 1060
    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    alignment-specifier  go to state 57
    attribute-specifier  go to state 260


State 564

  648 namespace-alias-definition: NAMESPACE IDENTIFIER EQ • qualified-namespace-specifier SEMICOLON

    IDENTIFIER  shift, and go to state 253
    SCOPE       shift, and go to state 9
    DECLTYPE    shift, and go to state 134

    class-name                     go to state 65
    decltype-specifier             go to state 138
    enum-name                      go to state 84
    namespace-alias                go to state 99
    namespace-name                 go to state 1061
    nested-name-specifier          go to state 1062
    qualified-namespace-specifier  go to state 1063
    simple-template-id             go to state 141
    template-name                  go to state 142
    type-name                      go to state 143
    typedef-name                   go to state 126


State 565

  644 named-namespace-definition: NAMESPACE IDENTIFIER OPEN_BRACE • namespace-body CLOSE_BRACE

    USING          shift, and go to state 1
    IDENTIFIER     shift, and go to state 2
    SEMICOLON      shift, and go to state 3
    ALIGNAS        shift, and go to state 4
    OPEN_PAREN     shift, and go to state 5
    ELLIPSIS       shift, and go to state 6
    AND            shift, and go to state 7
    ASM            shift, and go to state 8
    SCOPE          shift, and go to state 9
    OPEN_SQUARE    shift, and go to state 10
    VIRTUAL        shift, and go to state 11
    CLASS          shift, and go to state 12
    STRUCT         shift, and go to state 13
    UNION          shift, and go to state 14
    TEMPLATE       shift, and go to state 15
    AND_AND        shift, and go to state 16
    OPERATOR       shift, and go to state 17
    CONST          shift, and go to state 18
    VOLATILE       shift, and go to state 19
    FRIEND         shift, and go to state 20
    TYPEDEF        shift, and go to state 21
    CONSTEXPR      shift, and go to state 22
    CONSTEVAL      shift, and go to state 23
    CONSTINIT      shift, and go to state 24
    INLINE         shift, and go to state 25
    DECLTYPE       shift, and go to state 26
    ENUM           shift, and go to state 27
    EXTERN         shift, and go to state 28
    EXPLICIT       shift, and go to state 29
    EXPORT         shift, and go to state 157
    MULT           shift, and go to state 31
    IMPORT         shift, and go to state 33
    NAMESPACE      shift, and go to state 34
    COMPL          shift, and go to state 35
    AUTO           shift, and go to state 36
    CHAR           shift, and go to state 37
    CHAR8_T        shift, and go to state 38
    CHAR16_T       shift, and go to state 39
    CHAR32_T       shift, and go to state 40
    WCHAR_T        shift, and go to state 41
    BOOL           shift, and go to state 42
    SHORT          shift, and go to state 43
    INT            shift, and go to state 44
    LONG           shift, and go to state 45
    SIGNED         shift, and go to state 46
    UNSIGNED       shift, and go to state 47
    FLOAT          shift, and go to state 48
    DOUBLE         shift, and go to state 49
    VOID           shift, and go to state 50
    STATIC_ASSERT  shift, and go to state 51
    STATIC         shift, and go to state 52
    THREAD_LOCAL   shift, and go to state 53
    MUTABLE        shift, and go to state 54
    TYPENAME       shift, and go to state 55

    alias-declaration                go to state 56
    alignment-specifier              go to state 57
    asm-declaration                  go to state 58
    attribute-declaration            go to state 59
    attribute-specifier              go to state 60
    attribute-specifier-seq          go to state 61
    block-declaration                go to state 62
    class-head                       go to state 63
    class-key                        go to state 64
    class-name                       go to state 65
    class-specifier                  go to state 66
    concept-name                     go to state 67
    conversion-function-id           go to state 68
    cv-qualifier                     go to state 69
    decl-specifier                   go to state 70
    decl-specifier-seq               go to state 71
    declaration                      go to state 72
    declaration-seq                  go to state 566
    declarator                       go to state 74
    declarator-id                    go to state 75
    decltype-specifier               go to state 76
    deduction-guide                  go to state 77
    defining-type-specifier          go to state 78
    elaborated-enum-specifier        go to state 79
    elaborated-type-specifier        go to state 80
    empty-declaration                go to state 81
    enum-head                        go to state 82
    enum-key                         go to state 83
    enum-name                        go to state 84
    enum-specifier                   go to state 85
    explicit-instantiation           go to state 86
    explicit-specialization          go to state 87
    explicit-specifier               go to state 88
    export-declaration               go to state 89
    function-definition              go to state 90
    function-specifier               go to state 91
    id-expression                    go to state 93
    linkage-specification            go to state 94
    literal-operator-id              go to state 95
    module-import-declaration        go to state 97
    named-namespace-definition       go to state 98
    namespace-alias                  go to state 99
    namespace-alias-definition       go to state 100
    namespace-body                   go to state 1064
    namespace-definition             go to state 101
    namespace-name                   go to state 102
    nested-name-specifier            go to state 103
    nested-namespace-definition      go to state 104
    nodeclspec-function-declaration  go to state 105
    noptr-declarator                 go to state 106
    opaque-enum-declaration          go to state 107
    operator-function-id             go to state 108
    placeholder-type-specifier       go to state 109
    ptr-declarator                   go to state 110
    ptr-operator                     go to state 111
    qualified-id                     go to state 112
    simple-declaration               go to state 113
    simple-template-id               go to state 114
    simple-type-specifier            go to state 115
    static_assert-declaration        go to state 116
    storage-class-specifier          go to state 117
    template-declaration             go to state 118
    template-head                    go to state 119
    template-id                      go to state 120
    template-name                    go to state 121
    type-constraint                  go to state 123
    type-name                        go to state 124
    type-specifier                   go to state 125
    typedef-name                     go to state 126
    typename-specifier               go to state 127
    unnamed-namespace-definition     go to state 128
    unqualified-id                   go to state 129
    using-declaration                go to state 130
    using-directive                  go to state 131
    using-enum-declaration           go to state 132


State 566

  224 declaration-seq: declaration-seq • declaration
  649 namespace-body: declaration-seq •

    USING          shift, and go to state 1
    IDENTIFIER     shift, and go to state 2
    SEMICOLON      shift, and go to state 3
    ALIGNAS        shift, and go to state 4
    OPEN_PAREN     shift, and go to state 5
    ELLIPSIS       shift, and go to state 6
    AND            shift, and go to state 7
    ASM            shift, and go to state 8
    SCOPE          shift, and go to state 9
    OPEN_SQUARE    shift, and go to state 10
    VIRTUAL        shift, and go to state 11
    CLASS          shift, and go to state 12
    STRUCT         shift, and go to state 13
    UNION          shift, and go to state 14
    TEMPLATE       shift, and go to state 15
    AND_AND        shift, and go to state 16
    OPERATOR       shift, and go to state 17
    CONST          shift, and go to state 18
    VOLATILE       shift, and go to state 19
    FRIEND         shift, and go to state 20
    TYPEDEF        shift, and go to state 21
    CONSTEXPR      shift, and go to state 22
    CONSTEVAL      shift, and go to state 23
    CONSTINIT      shift, and go to state 24
    INLINE         shift, and go to state 25
    DECLTYPE       shift, and go to state 26
    ENUM           shift, and go to state 27
    EXTERN         shift, and go to state 28
    EXPLICIT       shift, and go to state 29
    EXPORT         shift, and go to state 157
    MULT           shift, and go to state 31
    IMPORT         shift, and go to state 33
    NAMESPACE      shift, and go to state 34
    COMPL          shift, and go to state 35
    AUTO           shift, and go to state 36
    CHAR           shift, and go to state 37
    CHAR8_T        shift, and go to state 38
    CHAR16_T       shift, and go to state 39
    CHAR32_T       shift, and go to state 40
    WCHAR_T        shift, and go to state 41
    BOOL           shift, and go to state 42
    SHORT          shift, and go to state 43
    INT            shift, and go to state 44
    LONG           shift, and go to state 45
    SIGNED         shift, and go to state 46
    UNSIGNED       shift, and go to state 47
    FLOAT          shift, and go to state 48
    DOUBLE         shift, and go to state 49
    VOID           shift, and go to state 50
    STATIC_ASSERT  shift, and go to state 51
    STATIC         shift, and go to state 52
    THREAD_LOCAL   shift, and go to state 53
    MUTABLE        shift, and go to state 54
    TYPENAME       shift, and go to state 55

    $default  reduce using rule 649 (namespace-body)

    alias-declaration                go to state 56
    alignment-specifier              go to state 57
    asm-declaration                  go to state 58
    attribute-declaration            go to state 59
    attribute-specifier              go to state 60
    attribute-specifier-seq          go to state 61
    block-declaration                go to state 62
    class-head                       go to state 63
    class-key                        go to state 64
    class-name                       go to state 65
    class-specifier                  go to state 66
    concept-name                     go to state 67
    conversion-function-id           go to state 68
    cv-qualifier                     go to state 69
    decl-specifier                   go to state 70
    decl-specifier-seq               go to state 71
    declaration                      go to state 285
    declarator                       go to state 74
    declarator-id                    go to state 75
    decltype-specifier               go to state 76
    deduction-guide                  go to state 77
    defining-type-specifier          go to state 78
    elaborated-enum-specifier        go to state 79
    elaborated-type-specifier        go to state 80
    empty-declaration                go to state 81
    enum-head                        go to state 82
    enum-key                         go to state 83
    enum-name                        go to state 84
    enum-specifier                   go to state 85
    explicit-instantiation           go to state 86
    explicit-specialization          go to state 87
    explicit-specifier               go to state 88
    export-declaration               go to state 89
    function-definition              go to state 90
    function-specifier               go to state 91
    id-expression                    go to state 93
    linkage-specification            go to state 94
    literal-operator-id              go to state 95
    module-import-declaration        go to state 97
    named-namespace-definition       go to state 98
    namespace-alias                  go to state 99
    namespace-alias-definition       go to state 100
    namespace-definition             go to state 101
    namespace-name                   go to state 102
    nested-name-specifier            go to state 103
    nested-namespace-definition      go to state 104
    nodeclspec-function-declaration  go to state 105
    noptr-declarator                 go to state 106
    opaque-enum-declaration          go to state 107
    operator-function-id             go to state 108
    placeholder-type-specifier       go to state 109
    ptr-declarator                   go to state 110
    ptr-operator                     go to state 111
    qualified-id                     go to state 112
    simple-declaration               go to state 113
    simple-template-id               go to state 114
    simple-type-specifier            go to state 115
    static_assert-declaration        go to state 116
    storage-class-specifier          go to state 117
    template-declaration             go to state 118
    template-head                    go to state 119
    template-id                      go to state 120
    template-name                    go to state 121
    type-constraint                  go to state 123
    type-name                        go to state 124
    type-specifier                   go to state 125
    typedef-name                     go to state 126
    typename-specifier               go to state 127
    unnamed-namespace-definition     go to state 128
    unqualified-id                   go to state 129
    using-declaration                go to state 130
    using-directive                  go to state 131
    using-enum-declaration           go to state 132


State 567

  1137 unnamed-namespace-definition: NAMESPACE OPEN_BRACE namespace-body • CLOSE_BRACE

    CLOSE_BRACE  shift, and go to state 1065


State 568

  646 named-namespace-definition: NAMESPACE attribute-specifier-seq IDENTIFIER • OPEN_BRACE namespace-body CLOSE_BRACE

    OPEN_BRACE  shift, and go to state 1066


State 569

  1139 unnamed-namespace-definition: NAMESPACE attribute-specifier-seq OPEN_BRACE • namespace-body CLOSE_BRACE

    USING          shift, and go to state 1
    IDENTIFIER     shift, and go to state 2
    SEMICOLON      shift, and go to state 3
    ALIGNAS        shift, and go to state 4
    OPEN_PAREN     shift, and go to state 5
    ELLIPSIS       shift, and go to state 6
    AND            shift, and go to state 7
    ASM            shift, and go to state 8
    SCOPE          shift, and go to state 9
    OPEN_SQUARE    shift, and go to state 10
    VIRTUAL        shift, and go to state 11
    CLASS          shift, and go to state 12
    STRUCT         shift, and go to state 13
    UNION          shift, and go to state 14
    TEMPLATE       shift, and go to state 15
    AND_AND        shift, and go to state 16
    OPERATOR       shift, and go to state 17
    CONST          shift, and go to state 18
    VOLATILE       shift, and go to state 19
    FRIEND         shift, and go to state 20
    TYPEDEF        shift, and go to state 21
    CONSTEXPR      shift, and go to state 22
    CONSTEVAL      shift, and go to state 23
    CONSTINIT      shift, and go to state 24
    INLINE         shift, and go to state 25
    DECLTYPE       shift, and go to state 26
    ENUM           shift, and go to state 27
    EXTERN         shift, and go to state 28
    EXPLICIT       shift, and go to state 29
    EXPORT         shift, and go to state 157
    MULT           shift, and go to state 31
    IMPORT         shift, and go to state 33
    NAMESPACE      shift, and go to state 34
    COMPL          shift, and go to state 35
    AUTO           shift, and go to state 36
    CHAR           shift, and go to state 37
    CHAR8_T        shift, and go to state 38
    CHAR16_T       shift, and go to state 39
    CHAR32_T       shift, and go to state 40
    WCHAR_T        shift, and go to state 41
    BOOL           shift, and go to state 42
    SHORT          shift, and go to state 43
    INT            shift, and go to state 44
    LONG           shift, and go to state 45
    SIGNED         shift, and go to state 46
    UNSIGNED       shift, and go to state 47
    FLOAT          shift, and go to state 48
    DOUBLE         shift, and go to state 49
    VOID           shift, and go to state 50
    STATIC_ASSERT  shift, and go to state 51
    STATIC         shift, and go to state 52
    THREAD_LOCAL   shift, and go to state 53
    MUTABLE        shift, and go to state 54
    TYPENAME       shift, and go to state 55

    alias-declaration                go to state 56
    alignment-specifier              go to state 57
    asm-declaration                  go to state 58
    attribute-declaration            go to state 59
    attribute-specifier              go to state 60
    attribute-specifier-seq          go to state 61
    block-declaration                go to state 62
    class-head                       go to state 63
    class-key                        go to state 64
    class-name                       go to state 65
    class-specifier                  go to state 66
    concept-name                     go to state 67
    conversion-function-id           go to state 68
    cv-qualifier                     go to state 69
    decl-specifier                   go to state 70
    decl-specifier-seq               go to state 71
    declaration                      go to state 72
    declaration-seq                  go to state 566
    declarator                       go to state 74
    declarator-id                    go to state 75
    decltype-specifier               go to state 76
    deduction-guide                  go to state 77
    defining-type-specifier          go to state 78
    elaborated-enum-specifier        go to state 79
    elaborated-type-specifier        go to state 80
    empty-declaration                go to state 81
    enum-head                        go to state 82
    enum-key                         go to state 83
    enum-name                        go to state 84
    enum-specifier                   go to state 85
    explicit-instantiation           go to state 86
    explicit-specialization          go to state 87
    explicit-specifier               go to state 88
    export-declaration               go to state 89
    function-definition              go to state 90
    function-specifier               go to state 91
    id-expression                    go to state 93
    linkage-specification            go to state 94
    literal-operator-id              go to state 95
    module-import-declaration        go to state 97
    named-namespace-definition       go to state 98
    namespace-alias                  go to state 99
    namespace-alias-definition       go to state 100
    namespace-body                   go to state 1067
    namespace-definition             go to state 101
    namespace-name                   go to state 102
    nested-name-specifier            go to state 103
    nested-namespace-definition      go to state 104
    nodeclspec-function-declaration  go to state 105
    noptr-declarator                 go to state 106
    opaque-enum-declaration          go to state 107
    operator-function-id             go to state 108
    placeholder-type-specifier       go to state 109
    ptr-declarator                   go to state 110
    ptr-operator                     go to state 111
    qualified-id                     go to state 112
    simple-declaration               go to state 113
    simple-template-id               go to state 114
    simple-type-specifier            go to state 115
    static_assert-declaration        go to state 116
    storage-class-specifier          go to state 117
    template-declaration             go to state 118
    template-head                    go to state 119
    template-id                      go to state 120
    template-name                    go to state 121
    type-constraint                  go to state 123
    type-name                        go to state 124
    type-specifier                   go to state 125
    typedef-name                     go to state 126
    typename-specifier               go to state 127
    unnamed-namespace-definition     go to state 128
    unqualified-id                   go to state 129
    using-declaration                go to state 130
    using-directive                  go to state 131
    using-enum-declaration           go to state 132


State 570

  274 enclosing-namespace-specifier: enclosing-namespace-specifier SCOPE • IDENTIFIER
  275                              | enclosing-namespace-specifier SCOPE • INLINE IDENTIFIER
  662 nested-namespace-definition: NAMESPACE enclosing-namespace-specifier SCOPE • IDENTIFIER OPEN_BRACE namespace-body CLOSE_BRACE
  663                            | NAMESPACE enclosing-namespace-specifier SCOPE • INLINE IDENTIFIER OPEN_BRACE namespace-body CLOSE_BRACE

    IDENTIFIER  shift, and go to state 1068
    INLINE      shift, and go to state 1069


State 571

  1024 static_assert-declaration: STATIC_ASSERT OPEN_PAREN constant-expression • CLOSE_PAREN SEMICOLON
  1025                          | STATIC_ASSERT OPEN_PAREN constant-expression • COMMA string-literal CLOSE_PAREN SEMICOLON

    CLOSE_PAREN  shift, and go to state 1070
    COMMA        shift, and go to state 1071


State 572

  659 nested-name-specifier: nested-name-specifier IDENTIFIER • SCOPE
  1052 template-name: IDENTIFIER •
  1112 typename-specifier: TYPENAME nested-name-specifier IDENTIFIER •

    SCOPE  shift, and go to state 722

    SCOPE     [reduce using rule 1112 (typename-specifier)]
    LESS      reduce using rule 1052 (template-name)
    LESS      [reduce using rule 1112 (typename-specifier)]
    $default  reduce using rule 1112 (typename-specifier)


State 573

  661 nested-name-specifier: nested-name-specifier TEMPLATE • simple-template-id SCOPE
  1114 typename-specifier: TYPENAME nested-name-specifier TEMPLATE • simple-template-id

    IDENTIFIER  shift, and go to state 310

    simple-template-id  go to state 1072
    template-name       go to state 142


State 574

  660 nested-name-specifier: nested-name-specifier simple-template-id • SCOPE
  1113 typename-specifier: TYPENAME nested-name-specifier simple-template-id •

    SCOPE  shift, and go to state 729

    SCOPE     [reduce using rule 1113 (typename-specifier)]
    $default  reduce using rule 1113 (typename-specifier)


State 575

  1171 using-directive: attribute-specifier-seq USING NAMESPACE • namespace-name SEMICOLON
  1173                | attribute-specifier-seq USING NAMESPACE • nested-name-specifier namespace-name SEMICOLON

    IDENTIFIER  shift, and go to state 253
    SCOPE       shift, and go to state 9
    DECLTYPE    shift, and go to state 134

    class-name             go to state 65
    decltype-specifier     go to state 138
    enum-name              go to state 84
    namespace-alias        go to state 99
    namespace-name         go to state 1073
    nested-name-specifier  go to state 1074
    simple-template-id     go to state 141
    template-name          go to state 142
    type-name              go to state 143
    typedef-name           go to state 126


State 576

   21 asm-declaration: attribute-specifier-seq ASM OPEN_PAREN • string-literal CLOSE_PAREN SEMICOLON

    UNICODE_8     shift, and go to state 184
    DOUBLE_QUOTE  shift, and go to state 199
    'u'           shift, and go to state 205
    'U'           shift, and go to state 206
    'L'           shift, and go to state 207
    'R'           shift, and go to state 208

    encoding-prefix  go to state 211
    string-literal   go to state 1075


State 577

  966 simple-declaration: attribute-specifier-seq decl-specifier-seq OPEN_SQUARE • identifier-list CLOSE_SQUARE initializer SEMICOLON

    IDENTIFIER  shift, and go to state 640

    identifier-list  go to state 1076


State 578

  397 function-definition: attribute-specifier-seq decl-specifier-seq declarator • function-body
  401                    | attribute-specifier-seq decl-specifier-seq declarator • virt-specifier-seq function-body
  405                    | attribute-specifier-seq decl-specifier-seq declarator • requires-clause function-body
  469 init-declarator: declarator •
  470                | declarator • initializer
  471                | declarator • requires-clause

    EQ          shift, and go to state 642
    OPEN_PAREN  shift, and go to state 643
    COLON       shift, and go to state 288
    OPEN_BRACE  shift, and go to state 644
    FINAL       shift, and go to state 290
    TRY         shift, and go to state 291
    REQUIRES    shift, and go to state 292
    OVERRIDE    shift, and go to state 293

    $default  reduce using rule 469 (init-declarator)

    brace-or-equal-initializer  go to state 645
    braced-init-list            go to state 646
    compound-statement          go to state 294
    ctor-initializer            go to state 295
    function-body               go to state 1077
    function-try-block          go to state 297
    initializer                 go to state 648
    requires-clause             go to state 1078
    virt-specifier              go to state 299
    virt-specifier-seq          go to state 1079


State 579

  473 init-declarator-list: init-declarator-list • COMMA init-declarator
  965 simple-declaration: attribute-specifier-seq decl-specifier-seq init-declarator-list • SEMICOLON

    SEMICOLON  shift, and go to state 1080
    COMMA      shift, and go to state 652


State 580

  968 simple-declaration: attribute-specifier-seq decl-specifier-seq ref-qualifier • OPEN_SQUARE identifier-list CLOSE_SQUARE initializer SEMICOLON

    OPEN_SQUARE  shift, and go to state 1081


State 581

  690 nodeclspec-function-declaration: attribute-specifier-seq declarator SEMICOLON •

    $default  reduce using rule 690 (nodeclspec-function-declaration)


State 582

  395 function-definition: attribute-specifier-seq declarator function-body •

    $default  reduce using rule 395 (function-definition)


State 583

  403 function-definition: attribute-specifier-seq declarator requires-clause • function-body

    EQ          shift, and go to state 286
    COLON       shift, and go to state 288
    OPEN_BRACE  shift, and go to state 289
    TRY         shift, and go to state 291

    compound-statement  go to state 294
    ctor-initializer    go to state 295
    function-body       go to state 1082
    function-try-block  go to state 297


State 584

  399 function-definition: attribute-specifier-seq declarator virt-specifier-seq • function-body
  1179 virt-specifier-seq: virt-specifier-seq • virt-specifier

    EQ          shift, and go to state 286
    COLON       shift, and go to state 288
    OPEN_BRACE  shift, and go to state 289
    FINAL       shift, and go to state 290
    TRY         shift, and go to state 291
    OVERRIDE    shift, and go to state 293

    compound-statement  go to state 294
    ctor-initializer    go to state 295
    function-body       go to state 1083
    function-try-block  go to state 297
    virt-specifier      go to state 703


State 585

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  282 enum-head: enum-key attribute-specifier-seq •
  284          | enum-key attribute-specifier-seq • enum-head-name
  286          | enum-key attribute-specifier-seq • enum-base
  288          | enum-key attribute-specifier-seq • enum-head-name enum-base

    IDENTIFIER   shift, and go to state 304
    ALIGNAS      shift, and go to state 4
    SCOPE        shift, and go to state 9
    OPEN_SQUARE  shift, and go to state 10
    COLON        shift, and go to state 305
    DECLTYPE     shift, and go to state 134

    $default  reduce using rule 282 (enum-head)

    alignment-specifier    go to state 57
    attribute-specifier    go to state 260
    class-name             go to state 65
    decltype-specifier     go to state 138
    enum-base              go to state 710
    enum-head-name         go to state 1084
    enum-name              go to state 84
    namespace-alias        go to state 99
    namespace-name         go to state 102
    nested-name-specifier  go to state 309
    simple-template-id     go to state 141
    template-name          go to state 142
    type-name              go to state 143
    typedef-name           go to state 126


State 586

  283 enum-head: enum-key enum-head-name •
  287          | enum-key enum-head-name • enum-base

    COLON  shift, and go to state 305

    $default  reduce using rule 283 (enum-head)

    enum-base  go to state 1085


State 587

    7 access-specifier: PRIVATE •

    $default  reduce using rule 7 (access-specifier)


State 588

    8 access-specifier: PROTECTED •

    $default  reduce using rule 8 (access-specifier)


State 589

    9 access-specifier: PUBLIC •

    $default  reduce using rule 9 (access-specifier)


State 590

   13 alias-declaration: USING • IDENTIFIER EQ defining-type-id SEMICOLON
   14                  | USING • IDENTIFIER attribute-specifier-seq EQ defining-type-id SEMICOLON
  1164 using-declaration: USING • using-declarator-list SEMICOLON
  1175 using-enum-declaration: USING • elaborated-enum-specifier SEMICOLON

    IDENTIFIER  shift, and go to state 133
    SCOPE       shift, and go to state 9
    DECLTYPE    shift, and go to state 134
    ENUM        shift, and go to state 135
    TYPENAME    shift, and go to state 137

    class-name                 go to state 65
    decltype-specifier         go to state 138
    elaborated-enum-specifier  go to state 139
    enum-name                  go to state 84
    namespace-alias            go to state 99
    namespace-name             go to state 102
    nested-name-specifier      go to state 140
    simple-template-id         go to state 141
    template-name              go to state 142
    type-name                  go to state 143
    typedef-name               go to state 126
    using-declarator           go to state 144
    using-declarator-list      go to state 145


State 591

  145 class-name: IDENTIFIER •
  163 concept-name: IDENTIFIER •
  294 enum-name: IDENTIFIER •
  605 member-declarator: IDENTIFIER • COLON constant-expression
  607                  | IDENTIFIER • attribute-specifier-seq COLON constant-expression
  609                  | IDENTIFIER • COLON constant-expression brace-or-equal-initializer
  611                  | IDENTIFIER • attribute-specifier-seq COLON constant-expression brace-or-equal-initializer
  647 namespace-alias: IDENTIFIER •
  653 namespace-name: IDENTIFIER •
  1052 template-name: IDENTIFIER •
  1110 typedef-name: IDENTIFIER •
  1140 unqualified-id: IDENTIFIER •

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10
    COLON        shift, and go to state 1086

    IDENTIFIER    reduce using rule 145 (class-name)
    IDENTIFIER    [reduce using rule 294 (enum-name)]
    IDENTIFIER    [reduce using rule 1052 (template-name)]
    IDENTIFIER    [reduce using rule 1110 (typedef-name)]
    EQ            reduce using rule 1140 (unqualified-id)
    SEMICOLON     reduce using rule 145 (class-name)
    SEMICOLON     [reduce using rule 294 (enum-name)]
    SEMICOLON     [reduce using rule 1052 (template-name)]
    SEMICOLON     [reduce using rule 1110 (typedef-name)]
    SEMICOLON     [reduce using rule 1140 (unqualified-id)]
    ALIGNAS       [reduce using rule 145 (class-name)]
    ALIGNAS       [reduce using rule 294 (enum-name)]
    ALIGNAS       [reduce using rule 1052 (template-name)]
    ALIGNAS       [reduce using rule 1110 (typedef-name)]
    ALIGNAS       [reduce using rule 1140 (unqualified-id)]
    OPEN_PAREN    reduce using rule 145 (class-name)
    OPEN_PAREN    [reduce using rule 294 (enum-name)]
    OPEN_PAREN    [reduce using rule 1052 (template-name)]
    OPEN_PAREN    [reduce using rule 1110 (typedef-name)]
    OPEN_PAREN    [reduce using rule 1140 (unqualified-id)]
    ELLIPSIS      reduce using rule 145 (class-name)
    ELLIPSIS      [reduce using rule 294 (enum-name)]
    ELLIPSIS      [reduce using rule 1052 (template-name)]
    ELLIPSIS      [reduce using rule 1110 (typedef-name)]
    AND           reduce using rule 145 (class-name)
    AND           [reduce using rule 294 (enum-name)]
    AND           [reduce using rule 1052 (template-name)]
    AND           [reduce using rule 1110 (typedef-name)]
    COMMA         reduce using rule 1140 (unqualified-id)
    SCOPE         reduce using rule 145 (class-name)
    SCOPE         [reduce using rule 294 (enum-name)]
    SCOPE         [reduce using rule 647 (namespace-alias)]
    SCOPE         [reduce using rule 653 (namespace-name)]
    SCOPE         [reduce using rule 1052 (template-name)]
    SCOPE         [reduce using rule 1110 (typedef-name)]
    OPEN_SQUARE   [reduce using rule 145 (class-name)]
    OPEN_SQUARE   [reduce using rule 294 (enum-name)]
    OPEN_SQUARE   [reduce using rule 1052 (template-name)]
    OPEN_SQUARE   [reduce using rule 1110 (typedef-name)]
    OPEN_SQUARE   [reduce using rule 1140 (unqualified-id)]
    COLON         [reduce using rule 145 (class-name)]
    COLON         [reduce using rule 294 (enum-name)]
    COLON         [reduce using rule 1052 (template-name)]
    COLON         [reduce using rule 1110 (typedef-name)]
    COLON         [reduce using rule 1140 (unqualified-id)]
    OPEN_BRACE    reduce using rule 1140 (unqualified-id)
    VIRTUAL       reduce using rule 145 (class-name)
    VIRTUAL       [reduce using rule 294 (enum-name)]
    VIRTUAL       [reduce using rule 1052 (template-name)]
    VIRTUAL       [reduce using rule 1110 (typedef-name)]
    CLASS         reduce using rule 145 (class-name)
    CLASS         [reduce using rule 294 (enum-name)]
    CLASS         [reduce using rule 1052 (template-name)]
    CLASS         [reduce using rule 1110 (typedef-name)]
    STRUCT        reduce using rule 145 (class-name)
    STRUCT        [reduce using rule 294 (enum-name)]
    STRUCT        [reduce using rule 1052 (template-name)]
    STRUCT        [reduce using rule 1110 (typedef-name)]
    UNION         reduce using rule 145 (class-name)
    UNION         [reduce using rule 294 (enum-name)]
    UNION         [reduce using rule 1052 (template-name)]
    UNION         [reduce using rule 1110 (typedef-name)]
    FINAL         reduce using rule 1140 (unqualified-id)
    AND_AND       reduce using rule 145 (class-name)
    AND_AND       [reduce using rule 294 (enum-name)]
    AND_AND       [reduce using rule 1052 (template-name)]
    AND_AND       [reduce using rule 1110 (typedef-name)]
    OPERATOR      reduce using rule 145 (class-name)
    OPERATOR      [reduce using rule 294 (enum-name)]
    OPERATOR      [reduce using rule 1052 (template-name)]
    OPERATOR      [reduce using rule 1110 (typedef-name)]
    CONST         reduce using rule 145 (class-name)
    CONST         [reduce using rule 294 (enum-name)]
    CONST         [reduce using rule 1052 (template-name)]
    CONST         [reduce using rule 1110 (typedef-name)]
    VOLATILE      reduce using rule 145 (class-name)
    VOLATILE      [reduce using rule 294 (enum-name)]
    VOLATILE      [reduce using rule 1052 (template-name)]
    VOLATILE      [reduce using rule 1110 (typedef-name)]
    FRIEND        reduce using rule 145 (class-name)
    FRIEND        [reduce using rule 294 (enum-name)]
    FRIEND        [reduce using rule 1052 (template-name)]
    FRIEND        [reduce using rule 1110 (typedef-name)]
    TYPEDEF       reduce using rule 145 (class-name)
    TYPEDEF       [reduce using rule 294 (enum-name)]
    TYPEDEF       [reduce using rule 1052 (template-name)]
    TYPEDEF       [reduce using rule 1110 (typedef-name)]
    CONSTEXPR     reduce using rule 145 (class-name)
    CONSTEXPR     [reduce using rule 294 (enum-name)]
    CONSTEXPR     [reduce using rule 1052 (template-name)]
    CONSTEXPR     [reduce using rule 1110 (typedef-name)]
    CONSTEVAL     reduce using rule 145 (class-name)
    CONSTEVAL     [reduce using rule 294 (enum-name)]
    CONSTEVAL     [reduce using rule 1052 (template-name)]
    CONSTEVAL     [reduce using rule 1110 (typedef-name)]
    CONSTINIT     reduce using rule 145 (class-name)
    CONSTINIT     [reduce using rule 294 (enum-name)]
    CONSTINIT     [reduce using rule 1052 (template-name)]
    CONSTINIT     [reduce using rule 1110 (typedef-name)]
    INLINE        reduce using rule 145 (class-name)
    INLINE        [reduce using rule 294 (enum-name)]
    INLINE        [reduce using rule 1052 (template-name)]
    INLINE        [reduce using rule 1110 (typedef-name)]
    DECLTYPE      reduce using rule 145 (class-name)
    DECLTYPE      [reduce using rule 163 (concept-name)]
    DECLTYPE      [reduce using rule 294 (enum-name)]
    DECLTYPE      [reduce using rule 1052 (template-name)]
    DECLTYPE      [reduce using rule 1110 (typedef-name)]
    ENUM          reduce using rule 145 (class-name)
    ENUM          [reduce using rule 294 (enum-name)]
    ENUM          [reduce using rule 1052 (template-name)]
    ENUM          [reduce using rule 1110 (typedef-name)]
    EXTERN        reduce using rule 145 (class-name)
    EXTERN        [reduce using rule 294 (enum-name)]
    EXTERN        [reduce using rule 1052 (template-name)]
    EXTERN        [reduce using rule 1110 (typedef-name)]
    LESS          reduce using rule 163 (concept-name)
    LESS          [reduce using rule 1052 (template-name)]
    EXPLICIT      reduce using rule 145 (class-name)
    EXPLICIT      [reduce using rule 294 (enum-name)]
    EXPLICIT      [reduce using rule 1052 (template-name)]
    EXPLICIT      [reduce using rule 1110 (typedef-name)]
    MULT          reduce using rule 145 (class-name)
    MULT          [reduce using rule 294 (enum-name)]
    MULT          [reduce using rule 1052 (template-name)]
    MULT          [reduce using rule 1110 (typedef-name)]
    TRY           reduce using rule 1140 (unqualified-id)
    REQUIRES      reduce using rule 1140 (unqualified-id)
    COMPL         reduce using rule 145 (class-name)
    COMPL         [reduce using rule 294 (enum-name)]
    COMPL         [reduce using rule 1052 (template-name)]
    COMPL         [reduce using rule 1110 (typedef-name)]
    AUTO          reduce using rule 145 (class-name)
    AUTO          [reduce using rule 163 (concept-name)]
    AUTO          [reduce using rule 294 (enum-name)]
    AUTO          [reduce using rule 1052 (template-name)]
    AUTO          [reduce using rule 1110 (typedef-name)]
    CHAR          reduce using rule 145 (class-name)
    CHAR          [reduce using rule 294 (enum-name)]
    CHAR          [reduce using rule 1052 (template-name)]
    CHAR          [reduce using rule 1110 (typedef-name)]
    CHAR8_T       reduce using rule 145 (class-name)
    CHAR8_T       [reduce using rule 294 (enum-name)]
    CHAR8_T       [reduce using rule 1052 (template-name)]
    CHAR8_T       [reduce using rule 1110 (typedef-name)]
    CHAR16_T      reduce using rule 145 (class-name)
    CHAR16_T      [reduce using rule 294 (enum-name)]
    CHAR16_T      [reduce using rule 1052 (template-name)]
    CHAR16_T      [reduce using rule 1110 (typedef-name)]
    CHAR32_T      reduce using rule 145 (class-name)
    CHAR32_T      [reduce using rule 294 (enum-name)]
    CHAR32_T      [reduce using rule 1052 (template-name)]
    CHAR32_T      [reduce using rule 1110 (typedef-name)]
    WCHAR_T       reduce using rule 145 (class-name)
    WCHAR_T       [reduce using rule 294 (enum-name)]
    WCHAR_T       [reduce using rule 1052 (template-name)]
    WCHAR_T       [reduce using rule 1110 (typedef-name)]
    BOOL          reduce using rule 145 (class-name)
    BOOL          [reduce using rule 294 (enum-name)]
    BOOL          [reduce using rule 1052 (template-name)]
    BOOL          [reduce using rule 1110 (typedef-name)]
    SHORT         reduce using rule 145 (class-name)
    SHORT         [reduce using rule 294 (enum-name)]
    SHORT         [reduce using rule 1052 (template-name)]
    SHORT         [reduce using rule 1110 (typedef-name)]
    INT           reduce using rule 145 (class-name)
    INT           [reduce using rule 294 (enum-name)]
    INT           [reduce using rule 1052 (template-name)]
    INT           [reduce using rule 1110 (typedef-name)]
    LONG          reduce using rule 145 (class-name)
    LONG          [reduce using rule 294 (enum-name)]
    LONG          [reduce using rule 1052 (template-name)]
    LONG          [reduce using rule 1110 (typedef-name)]
    SIGNED        reduce using rule 145 (class-name)
    SIGNED        [reduce using rule 294 (enum-name)]
    SIGNED        [reduce using rule 1052 (template-name)]
    SIGNED        [reduce using rule 1110 (typedef-name)]
    UNSIGNED      reduce using rule 145 (class-name)
    UNSIGNED      [reduce using rule 294 (enum-name)]
    UNSIGNED      [reduce using rule 1052 (template-name)]
    UNSIGNED      [reduce using rule 1110 (typedef-name)]
    FLOAT         reduce using rule 145 (class-name)
    FLOAT         [reduce using rule 294 (enum-name)]
    FLOAT         [reduce using rule 1052 (template-name)]
    FLOAT         [reduce using rule 1110 (typedef-name)]
    DOUBLE        reduce using rule 145 (class-name)
    DOUBLE        [reduce using rule 294 (enum-name)]
    DOUBLE        [reduce using rule 1052 (template-name)]
    DOUBLE        [reduce using rule 1110 (typedef-name)]
    VOID          reduce using rule 145 (class-name)
    VOID          [reduce using rule 294 (enum-name)]
    VOID          [reduce using rule 1052 (template-name)]
    VOID          [reduce using rule 1110 (typedef-name)]
    STATIC        reduce using rule 145 (class-name)
    STATIC        [reduce using rule 294 (enum-name)]
    STATIC        [reduce using rule 1052 (template-name)]
    STATIC        [reduce using rule 1110 (typedef-name)]
    THREAD_LOCAL  reduce using rule 145 (class-name)
    THREAD_LOCAL  [reduce using rule 294 (enum-name)]
    THREAD_LOCAL  [reduce using rule 1052 (template-name)]
    THREAD_LOCAL  [reduce using rule 1110 (typedef-name)]
    MUTABLE       reduce using rule 145 (class-name)
    MUTABLE       [reduce using rule 294 (enum-name)]
    MUTABLE       [reduce using rule 1052 (template-name)]
    MUTABLE       [reduce using rule 1110 (typedef-name)]
    TYPENAME      reduce using rule 145 (class-name)
    TYPENAME      [reduce using rule 294 (enum-name)]
    TYPENAME      [reduce using rule 1052 (template-name)]
    TYPENAME      [reduce using rule 1110 (typedef-name)]
    OVERRIDE      reduce using rule 1140 (unqualified-id)
    $default      reduce using rule 145 (class-name)

    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 1087


State 592

  272 empty-declaration: SEMICOLON •
  581 member-declaration: SEMICOLON •

    PRIVATE        reduce using rule 272 (empty-declaration)
    PRIVATE        [reduce using rule 581 (member-declaration)]
    PROTECTED      reduce using rule 272 (empty-declaration)
    PROTECTED      [reduce using rule 581 (member-declaration)]
    PUBLIC         reduce using rule 272 (empty-declaration)
    PUBLIC         [reduce using rule 581 (member-declaration)]
    USING          reduce using rule 272 (empty-declaration)
    USING          [reduce using rule 581 (member-declaration)]
    IDENTIFIER     reduce using rule 272 (empty-declaration)
    IDENTIFIER     [reduce using rule 581 (member-declaration)]
    SEMICOLON      reduce using rule 272 (empty-declaration)
    SEMICOLON      [reduce using rule 581 (member-declaration)]
    ALIGNAS        reduce using rule 272 (empty-declaration)
    ALIGNAS        [reduce using rule 581 (member-declaration)]
    OPEN_PAREN     reduce using rule 272 (empty-declaration)
    OPEN_PAREN     [reduce using rule 581 (member-declaration)]
    ELLIPSIS       reduce using rule 272 (empty-declaration)
    ELLIPSIS       [reduce using rule 581 (member-declaration)]
    AND            reduce using rule 272 (empty-declaration)
    AND            [reduce using rule 581 (member-declaration)]
    SCOPE          reduce using rule 272 (empty-declaration)
    SCOPE          [reduce using rule 581 (member-declaration)]
    OPEN_SQUARE    reduce using rule 272 (empty-declaration)
    OPEN_SQUARE    [reduce using rule 581 (member-declaration)]
    COLON          reduce using rule 272 (empty-declaration)
    COLON          [reduce using rule 581 (member-declaration)]
    CLOSE_BRACE    reduce using rule 272 (empty-declaration)
    CLOSE_BRACE    [reduce using rule 581 (member-declaration)]
    VIRTUAL        reduce using rule 272 (empty-declaration)
    VIRTUAL        [reduce using rule 581 (member-declaration)]
    CLASS          reduce using rule 272 (empty-declaration)
    CLASS          [reduce using rule 581 (member-declaration)]
    STRUCT         reduce using rule 272 (empty-declaration)
    STRUCT         [reduce using rule 581 (member-declaration)]
    UNION          reduce using rule 272 (empty-declaration)
    UNION          [reduce using rule 581 (member-declaration)]
    TEMPLATE       reduce using rule 272 (empty-declaration)
    TEMPLATE       [reduce using rule 581 (member-declaration)]
    AND_AND        reduce using rule 272 (empty-declaration)
    AND_AND        [reduce using rule 581 (member-declaration)]
    OPERATOR       reduce using rule 272 (empty-declaration)
    OPERATOR       [reduce using rule 581 (member-declaration)]
    CONST          reduce using rule 272 (empty-declaration)
    CONST          [reduce using rule 581 (member-declaration)]
    VOLATILE       reduce using rule 272 (empty-declaration)
    VOLATILE       [reduce using rule 581 (member-declaration)]
    FRIEND         reduce using rule 272 (empty-declaration)
    FRIEND         [reduce using rule 581 (member-declaration)]
    TYPEDEF        reduce using rule 272 (empty-declaration)
    TYPEDEF        [reduce using rule 581 (member-declaration)]
    CONSTEXPR      reduce using rule 272 (empty-declaration)
    CONSTEXPR      [reduce using rule 581 (member-declaration)]
    CONSTEVAL      reduce using rule 272 (empty-declaration)
    CONSTEVAL      [reduce using rule 581 (member-declaration)]
    CONSTINIT      reduce using rule 272 (empty-declaration)
    CONSTINIT      [reduce using rule 581 (member-declaration)]
    INLINE         reduce using rule 272 (empty-declaration)
    INLINE         [reduce using rule 581 (member-declaration)]
    DECLTYPE       reduce using rule 272 (empty-declaration)
    DECLTYPE       [reduce using rule 581 (member-declaration)]
    ENUM           reduce using rule 272 (empty-declaration)
    ENUM           [reduce using rule 581 (member-declaration)]
    EXTERN         reduce using rule 272 (empty-declaration)
    EXTERN         [reduce using rule 581 (member-declaration)]
    EXPLICIT       reduce using rule 272 (empty-declaration)
    EXPLICIT       [reduce using rule 581 (member-declaration)]
    MULT           reduce using rule 272 (empty-declaration)
    MULT           [reduce using rule 581 (member-declaration)]
    COMPL          reduce using rule 272 (empty-declaration)
    COMPL          [reduce using rule 581 (member-declaration)]
    AUTO           reduce using rule 272 (empty-declaration)
    AUTO           [reduce using rule 581 (member-declaration)]
    CHAR           reduce using rule 272 (empty-declaration)
    CHAR           [reduce using rule 581 (member-declaration)]
    CHAR8_T        reduce using rule 272 (empty-declaration)
    CHAR8_T        [reduce using rule 581 (member-declaration)]
    CHAR16_T       reduce using rule 272 (empty-declaration)
    CHAR16_T       [reduce using rule 581 (member-declaration)]
    CHAR32_T       reduce using rule 272 (empty-declaration)
    CHAR32_T       [reduce using rule 581 (member-declaration)]
    WCHAR_T        reduce using rule 272 (empty-declaration)
    WCHAR_T        [reduce using rule 581 (member-declaration)]
    BOOL           reduce using rule 272 (empty-declaration)
    BOOL           [reduce using rule 581 (member-declaration)]
    SHORT          reduce using rule 272 (empty-declaration)
    SHORT          [reduce using rule 581 (member-declaration)]
    INT            reduce using rule 272 (empty-declaration)
    INT            [reduce using rule 581 (member-declaration)]
    LONG           reduce using rule 272 (empty-declaration)
    LONG           [reduce using rule 581 (member-declaration)]
    SIGNED         reduce using rule 272 (empty-declaration)
    SIGNED         [reduce using rule 581 (member-declaration)]
    UNSIGNED       reduce using rule 272 (empty-declaration)
    UNSIGNED       [reduce using rule 581 (member-declaration)]
    FLOAT          reduce using rule 272 (empty-declaration)
    FLOAT          [reduce using rule 581 (member-declaration)]
    DOUBLE         reduce using rule 272 (empty-declaration)
    DOUBLE         [reduce using rule 581 (member-declaration)]
    VOID           reduce using rule 272 (empty-declaration)
    VOID           [reduce using rule 581 (member-declaration)]
    STATIC_ASSERT  reduce using rule 272 (empty-declaration)
    STATIC_ASSERT  [reduce using rule 581 (member-declaration)]
    STATIC         reduce using rule 272 (empty-declaration)
    STATIC         [reduce using rule 581 (member-declaration)]
    THREAD_LOCAL   reduce using rule 272 (empty-declaration)
    THREAD_LOCAL   [reduce using rule 581 (member-declaration)]
    MUTABLE        reduce using rule 272 (empty-declaration)
    MUTABLE        [reduce using rule 581 (member-declaration)]
    TYPENAME       reduce using rule 272 (empty-declaration)
    TYPENAME       [reduce using rule 581 (member-declaration)]
    $default       reduce using rule 272 (empty-declaration)


State 593

  606 member-declarator: COLON • constant-expression
  610                  | COLON • constant-expression brace-or-equal-initializer

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 407
    constant-expression                  go to state 1088
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 430
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 594

  151 class-specifier: class-head OPEN_BRACE CLOSE_BRACE •

    $default  reduce using rule 151 (class-specifier)


State 595

  321 explicit-specialization: TEMPLATE • LESS GREATER declaration
  1045 template-head: TEMPLATE • LESS template-parameter-list GREATER
  1046              | TEMPLATE • LESS template-parameter-list GREATER requires-clause

    LESS  shift, and go to state 156


State 596

  617 member-specification: access-specifier • COLON
  618                     | access-specifier • COLON member-specification

    COLON  shift, and go to state 1089


State 597

  595 member-declaration: alias-declaration •

    $default  reduce using rule 595 (member-declaration)


State 598

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  395 function-definition: attribute-specifier-seq • declarator function-body
  397                    | attribute-specifier-seq • decl-specifier-seq declarator function-body
  399                    | attribute-specifier-seq • declarator virt-specifier-seq function-body
  401                    | attribute-specifier-seq • decl-specifier-seq declarator virt-specifier-seq function-body
  403                    | attribute-specifier-seq • declarator requires-clause function-body
  405                    | attribute-specifier-seq • decl-specifier-seq declarator requires-clause function-body
  580 member-declaration: attribute-specifier-seq • SEMICOLON
  582                   | attribute-specifier-seq • decl-specifier-seq SEMICOLON
  584                   | attribute-specifier-seq • member-declarator-list SEMICOLON
  586                   | attribute-specifier-seq • decl-specifier-seq member-declarator-list SEMICOLON
  608 member-declarator: attribute-specifier-seq • COLON constant-expression
  612                  | attribute-specifier-seq • COLON constant-expression brace-or-equal-initializer

    IDENTIFIER    shift, and go to state 591
    SEMICOLON     shift, and go to state 1090
    ALIGNAS       shift, and go to state 4
    OPEN_PAREN    shift, and go to state 5
    ELLIPSIS      shift, and go to state 6
    AND           shift, and go to state 7
    SCOPE         shift, and go to state 9
    OPEN_SQUARE   shift, and go to state 10
    COLON         shift, and go to state 1091
    VIRTUAL       shift, and go to state 11
    CLASS         shift, and go to state 12
    STRUCT        shift, and go to state 13
    UNION         shift, and go to state 14
    AND_AND       shift, and go to state 16
    OPERATOR      shift, and go to state 17
    CONST         shift, and go to state 18
    VOLATILE      shift, and go to state 19
    FRIEND        shift, and go to state 20
    TYPEDEF       shift, and go to state 21
    CONSTEXPR     shift, and go to state 22
    CONSTEVAL     shift, and go to state 23
    CONSTINIT     shift, and go to state 24
    INLINE        shift, and go to state 258
    DECLTYPE      shift, and go to state 26
    ENUM          shift, and go to state 27
    EXTERN        shift, and go to state 259
    EXPLICIT      shift, and go to state 29
    MULT          shift, and go to state 31
    COMPL         shift, and go to state 35
    AUTO          shift, and go to state 36
    CHAR          shift, and go to state 37
    CHAR8_T       shift, and go to state 38
    CHAR16_T      shift, and go to state 39
    CHAR32_T      shift, and go to state 40
    WCHAR_T       shift, and go to state 41
    BOOL          shift, and go to state 42
    SHORT         shift, and go to state 43
    INT           shift, and go to state 44
    LONG          shift, and go to state 45
    SIGNED        shift, and go to state 46
    UNSIGNED      shift, and go to state 47
    FLOAT         shift, and go to state 48
    DOUBLE        shift, and go to state 49
    VOID          shift, and go to state 50
    STATIC        shift, and go to state 52
    THREAD_LOCAL  shift, and go to state 53
    MUTABLE       shift, and go to state 54
    TYPENAME      shift, and go to state 55

    alignment-specifier         go to state 57
    attribute-specifier         go to state 1092
    attribute-specifier-seq     go to state 1093
    class-head                  go to state 63
    class-key                   go to state 64
    class-name                  go to state 65
    class-specifier             go to state 66
    concept-name                go to state 67
    conversion-function-id      go to state 68
    cv-qualifier                go to state 69
    decl-specifier              go to state 70
    decl-specifier-seq          go to state 1094
    declarator                  go to state 1095
    declarator-id               go to state 75
    decltype-specifier          go to state 76
    defining-type-specifier     go to state 78
    elaborated-enum-specifier   go to state 79
    elaborated-type-specifier   go to state 80
    enum-head                   go to state 82
    enum-key                    go to state 263
    enum-name                   go to state 84
    enum-specifier              go to state 85
    explicit-specifier          go to state 264
    function-specifier          go to state 91
    id-expression               go to state 93
    literal-operator-id         go to state 95
    member-declarator           go to state 606
    member-declarator-list      go to state 1096
    namespace-alias             go to state 99
    namespace-name              go to state 102
    nested-name-specifier       go to state 103
    noptr-declarator            go to state 106
    operator-function-id        go to state 108
    placeholder-type-specifier  go to state 109
    ptr-declarator              go to state 110
    ptr-operator                go to state 111
    qualified-id                go to state 112
    simple-template-id          go to state 114
    simple-type-specifier       go to state 115
    storage-class-specifier     go to state 117
    template-id                 go to state 120
    template-name               go to state 215
    type-constraint             go to state 123
    type-name                   go to state 124
    type-specifier              go to state 125
    typedef-name                go to state 126
    typename-specifier          go to state 127
    unqualified-id              go to state 129


State 599

  398 function-definition: decl-specifier-seq • declarator function-body
  402                    | decl-specifier-seq • declarator virt-specifier-seq function-body
  406                    | decl-specifier-seq • declarator requires-clause function-body
  583 member-declaration: decl-specifier-seq • SEMICOLON
  587                   | decl-specifier-seq • member-declarator-list SEMICOLON

    IDENTIFIER   shift, and go to state 1097
    SEMICOLON    shift, and go to state 1098
    ALIGNAS      shift, and go to state 4
    OPEN_PAREN   shift, and go to state 5
    ELLIPSIS     shift, and go to state 6
    AND          shift, and go to state 7
    SCOPE        shift, and go to state 9
    OPEN_SQUARE  shift, and go to state 10
    COLON        shift, and go to state 593
    AND_AND      shift, and go to state 16
    OPERATOR     shift, and go to state 17
    DECLTYPE     shift, and go to state 134
    MULT         shift, and go to state 31
    COMPL        shift, and go to state 35

    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 1093
    class-name               go to state 65
    conversion-function-id   go to state 68
    declarator               go to state 1099
    declarator-id            go to state 75
    decltype-specifier       go to state 138
    enum-name                go to state 84
    id-expression            go to state 93
    literal-operator-id      go to state 95
    member-declarator        go to state 606
    member-declarator-list   go to state 1100
    namespace-alias          go to state 99
    namespace-name           go to state 102
    nested-name-specifier    go to state 148
    noptr-declarator         go to state 106
    operator-function-id     go to state 108
    ptr-declarator           go to state 110
    ptr-operator             go to state 111
    qualified-id             go to state 112
    simple-template-id       go to state 114
    template-id              go to state 120
    template-name            go to state 142
    type-name                go to state 143
    typedef-name             go to state 126
    unqualified-id           go to state 129


State 600

  396 function-definition: declarator • function-body
  400                    | declarator • virt-specifier-seq function-body
  404                    | declarator • requires-clause function-body
  598 member-declarator: declarator •
  599                  | declarator • virt-specifier-seq
  600                  | declarator • pure-specifier
  601                  | declarator • virt-specifier-seq pure-specifier
  602                  | declarator • requires-clause
  603                  | declarator •
  604                  | declarator • brace-or-equal-initializer

    EQ          shift, and go to state 1101
    COLON       shift, and go to state 288
    OPEN_BRACE  shift, and go to state 644
    FINAL       shift, and go to state 290
    TRY         shift, and go to state 291
    REQUIRES    shift, and go to state 292
    OVERRIDE    shift, and go to state 293

    SEMICOLON  reduce using rule 598 (member-declarator)
    SEMICOLON  [reduce using rule 603 (member-declarator)]
    COMMA      reduce using rule 598 (member-declarator)
    COMMA      [reduce using rule 603 (member-declarator)]
    $default   reduce using rule 598 (member-declarator)

    brace-or-equal-initializer  go to state 1102
    braced-init-list            go to state 646
    compound-statement          go to state 294
    ctor-initializer            go to state 295
    function-body               go to state 296
    function-try-block          go to state 297
    pure-specifier              go to state 1103
    requires-clause             go to state 1104
    virt-specifier              go to state 299
    virt-specifier-seq          go to state 1105


State 601

  594 member-declaration: deduction-guide •

    $default  reduce using rule 594 (member-declaration)


State 602

  597 member-declaration: empty-declaration •

    $default  reduce using rule 597 (member-declaration)


State 603

  593 member-declaration: explicit-specialization •

    $default  reduce using rule 593 (member-declaration)


State 604

  588 member-declaration: function-definition •

    $default  reduce using rule 588 (member-declaration)


State 605

  615 member-specification: member-declaration •
  616                     | member-declaration • member-specification

    PRIVATE        shift, and go to state 587
    PROTECTED      shift, and go to state 588
    PUBLIC         shift, and go to state 589
    USING          shift, and go to state 590
    IDENTIFIER     shift, and go to state 591
    SEMICOLON      shift, and go to state 592
    ALIGNAS        shift, and go to state 4
    OPEN_PAREN     shift, and go to state 5
    ELLIPSIS       shift, and go to state 6
    AND            shift, and go to state 7
    SCOPE          shift, and go to state 9
    OPEN_SQUARE    shift, and go to state 10
    COLON          shift, and go to state 593
    VIRTUAL        shift, and go to state 11
    CLASS          shift, and go to state 12
    STRUCT         shift, and go to state 13
    UNION          shift, and go to state 14
    TEMPLATE       shift, and go to state 595
    AND_AND        shift, and go to state 16
    OPERATOR       shift, and go to state 17
    CONST          shift, and go to state 18
    VOLATILE       shift, and go to state 19
    FRIEND         shift, and go to state 20
    TYPEDEF        shift, and go to state 21
    CONSTEXPR      shift, and go to state 22
    CONSTEVAL      shift, and go to state 23
    CONSTINIT      shift, and go to state 24
    INLINE         shift, and go to state 258
    DECLTYPE       shift, and go to state 26
    ENUM           shift, and go to state 27
    EXTERN         shift, and go to state 259
    EXPLICIT       shift, and go to state 29
    MULT           shift, and go to state 31
    COMPL          shift, and go to state 35
    AUTO           shift, and go to state 36
    CHAR           shift, and go to state 37
    CHAR8_T        shift, and go to state 38
    CHAR16_T       shift, and go to state 39
    CHAR32_T       shift, and go to state 40
    WCHAR_T        shift, and go to state 41
    BOOL           shift, and go to state 42
    SHORT          shift, and go to state 43
    INT            shift, and go to state 44
    LONG           shift, and go to state 45
    SIGNED         shift, and go to state 46
    UNSIGNED       shift, and go to state 47
    FLOAT          shift, and go to state 48
    DOUBLE         shift, and go to state 49
    VOID           shift, and go to state 50
    STATIC_ASSERT  shift, and go to state 51
    STATIC         shift, and go to state 52
    THREAD_LOCAL   shift, and go to state 53
    MUTABLE        shift, and go to state 54
    TYPENAME       shift, and go to state 55

    $default  reduce using rule 615 (member-specification)

    access-specifier            go to state 596
    alias-declaration           go to state 597
    alignment-specifier         go to state 57
    attribute-specifier         go to state 60
    attribute-specifier-seq     go to state 598
    class-head                  go to state 63
    class-key                   go to state 64
    class-name                  go to state 65
    class-specifier             go to state 66
    concept-name                go to state 67
    conversion-function-id      go to state 68
    cv-qualifier                go to state 69
    decl-specifier              go to state 70
    decl-specifier-seq          go to state 599
    declarator                  go to state 600
    declarator-id               go to state 75
    decltype-specifier          go to state 76
    deduction-guide             go to state 601
    defining-type-specifier     go to state 78
    elaborated-enum-specifier   go to state 79
    elaborated-type-specifier   go to state 80
    empty-declaration           go to state 602
    enum-head                   go to state 82
    enum-key                    go to state 83
    enum-name                   go to state 84
    enum-specifier              go to state 85
    explicit-specialization     go to state 603
    explicit-specifier          go to state 88
    function-definition         go to state 604
    function-specifier          go to state 91
    id-expression               go to state 93
    literal-operator-id         go to state 95
    member-declaration          go to state 605
    member-declarator           go to state 606
    member-declarator-list      go to state 607
    member-specification        go to state 1106
    namespace-alias             go to state 99
    namespace-name              go to state 102
    nested-name-specifier       go to state 103
    noptr-declarator            go to state 106
    opaque-enum-declaration     go to state 609
    operator-function-id        go to state 108
    placeholder-type-specifier  go to state 109
    ptr-declarator              go to state 110
    ptr-operator                go to state 111
    qualified-id                go to state 112
    simple-template-id          go to state 114
    simple-type-specifier       go to state 115
    static_assert-declaration   go to state 610
    storage-class-specifier     go to state 117
    template-declaration        go to state 611
    template-head               go to state 119
    template-id                 go to state 120
    template-name               go to state 121
    type-constraint             go to state 123
    type-name                   go to state 124
    type-specifier              go to state 125
    typedef-name                go to state 126
    typename-specifier          go to state 127
    unqualified-id              go to state 129
    using-declaration           go to state 612
    using-enum-declaration      go to state 613


State 606

  613 member-declarator-list: member-declarator •

    $default  reduce using rule 613 (member-declarator-list)


State 607

  585 member-declaration: member-declarator-list • SEMICOLON
  614 member-declarator-list: member-declarator-list • COMMA member-declarator

    SEMICOLON  shift, and go to state 1107
    COMMA      shift, and go to state 1108


State 608

  152 class-specifier: class-head OPEN_BRACE member-specification • CLOSE_BRACE

    CLOSE_BRACE  shift, and go to state 1109


State 609

  596 member-declaration: opaque-enum-declaration •

    $default  reduce using rule 596 (member-declaration)


State 610

  591 member-declaration: static_assert-declaration •

    $default  reduce using rule 591 (member-declaration)


State 611

  592 member-declaration: template-declaration •

    $default  reduce using rule 592 (member-declaration)


State 612

  589 member-declaration: using-declaration •

    $default  reduce using rule 589 (member-declaration)


State 613

  590 member-declaration: using-enum-declaration •

    $default  reduce using rule 590 (member-declaration)


State 614

   72 base-specifier: VIRTUAL • class-or-decltype
   74               | VIRTUAL • access-specifier class-or-decltype

    PRIVATE     shift, and go to state 587
    PROTECTED   shift, and go to state 588
    PUBLIC      shift, and go to state 589
    IDENTIFIER  shift, and go to state 253
    SCOPE       shift, and go to state 9
    DECLTYPE    shift, and go to state 134

    access-specifier       go to state 1110
    class-name             go to state 65
    class-or-decltype      go to state 1111
    decltype-specifier     go to state 620
    enum-name              go to state 84
    namespace-alias        go to state 99
    namespace-name         go to state 102
    nested-name-specifier  go to state 621
    simple-template-id     go to state 141
    template-name          go to state 142
    type-name              go to state 622
    typedef-name           go to state 126


State 615

   76 base-specifier: access-specifier • class-or-decltype
   78               | access-specifier • VIRTUAL class-or-decltype

    IDENTIFIER  shift, and go to state 253
    SCOPE       shift, and go to state 9
    VIRTUAL     shift, and go to state 1112
    DECLTYPE    shift, and go to state 134

    class-name             go to state 65
    class-or-decltype      go to state 1113
    decltype-specifier     go to state 620
    enum-name              go to state 84
    namespace-alias        go to state 99
    namespace-name         go to state 102
    nested-name-specifier  go to state 621
    simple-template-id     go to state 141
    template-name          go to state 142
    type-name              go to state 622
    typedef-name           go to state 126


State 616

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
   69 base-specifier: attribute-specifier-seq • class-or-decltype
   71               | attribute-specifier-seq • VIRTUAL class-or-decltype
   73               | attribute-specifier-seq • VIRTUAL access-specifier class-or-decltype
   75               | attribute-specifier-seq • access-specifier class-or-decltype
   77               | attribute-specifier-seq • access-specifier VIRTUAL class-or-decltype

    PRIVATE      shift, and go to state 587
    PROTECTED    shift, and go to state 588
    PUBLIC       shift, and go to state 589
    IDENTIFIER   shift, and go to state 253
    ALIGNAS      shift, and go to state 4
    SCOPE        shift, and go to state 9
    OPEN_SQUARE  shift, and go to state 10
    VIRTUAL      shift, and go to state 1114
    DECLTYPE     shift, and go to state 134

    access-specifier       go to state 1115
    alignment-specifier    go to state 57
    attribute-specifier    go to state 260
    class-name             go to state 65
    class-or-decltype      go to state 1116
    decltype-specifier     go to state 620
    enum-name              go to state 84
    namespace-alias        go to state 99
    namespace-name         go to state 102
    nested-name-specifier  go to state 621
    simple-template-id     go to state 141
    template-name          go to state 142
    type-name              go to state 622
    typedef-name           go to state 126


State 617

   79 base-specifier-list: base-specifier •
   80                    | base-specifier • ELLIPSIS

    ELLIPSIS  shift, and go to state 1117

    $default  reduce using rule 79 (base-specifier-list)


State 618

   68 base-clause: COLON base-specifier-list •
   81 base-specifier-list: base-specifier-list • COMMA base-specifier
   82                    | base-specifier-list • COMMA base-specifier ELLIPSIS

    COMMA  shift, and go to state 1118

    $default  reduce using rule 68 (base-clause)


State 619

   70 base-specifier: class-or-decltype •

    $default  reduce using rule 70 (base-specifier)


State 620

  150 class-or-decltype: decltype-specifier •
  658 nested-name-specifier: decltype-specifier • SCOPE

    SCOPE  shift, and go to state 302

    $default  reduce using rule 150 (class-or-decltype)


State 621

  147 class-or-decltype: nested-name-specifier • type-name
  149                  | nested-name-specifier • TEMPLATE simple-template-id
  659 nested-name-specifier: nested-name-specifier • IDENTIFIER SCOPE
  660                      | nested-name-specifier • simple-template-id SCOPE
  661                      | nested-name-specifier • TEMPLATE simple-template-id SCOPE

    IDENTIFIER  shift, and go to state 1119
    TEMPLATE    shift, and go to state 1120

    class-name          go to state 65
    enum-name           go to state 84
    simple-template-id  go to state 510
    template-name       go to state 142
    type-name           go to state 1121
    typedef-name        go to state 126


State 622

  148 class-or-decltype: type-name •
  656 nested-name-specifier: type-name • SCOPE

    SCOPE  shift, and go to state 341

    $default  reduce using rule 148 (class-or-decltype)


State 623

  145 class-name: IDENTIFIER •
  265 elaborated-type-specifier: class-key attribute-specifier-seq IDENTIFIER •
  294 enum-name: IDENTIFIER •
  647 namespace-alias: IDENTIFIER •
  653 namespace-name: IDENTIFIER •
  1052 template-name: IDENTIFIER •
  1110 typedef-name: IDENTIFIER •

    SCOPE       reduce using rule 145 (class-name)
    SCOPE       [reduce using rule 265 (elaborated-type-specifier)]
    SCOPE       [reduce using rule 294 (enum-name)]
    SCOPE       [reduce using rule 647 (namespace-alias)]
    SCOPE       [reduce using rule 653 (namespace-name)]
    SCOPE       [reduce using rule 1110 (typedef-name)]
    COLON       reduce using rule 145 (class-name)
    COLON       [reduce using rule 265 (elaborated-type-specifier)]
    OPEN_BRACE  reduce using rule 145 (class-name)
    OPEN_BRACE  [reduce using rule 265 (elaborated-type-specifier)]
    FINAL       reduce using rule 145 (class-name)
    FINAL       [reduce using rule 265 (elaborated-type-specifier)]
    LESS        reduce using rule 265 (elaborated-type-specifier)
    LESS        [reduce using rule 1052 (template-name)]
    $default    reduce using rule 265 (elaborated-type-specifier)


State 624

  139 class-head: class-key attribute-specifier-seq base-clause •

    $default  reduce using rule 139 (class-head)


State 625

  129 class-head: class-key attribute-specifier-seq class-head-name •
  131           | class-key attribute-specifier-seq class-head-name • class-virt-specifier
  133           | class-key attribute-specifier-seq class-head-name • base-clause
  135           | class-key attribute-specifier-seq class-head-name • class-virt-specifier base-clause

    COLON  shift, and go to state 267
    FINAL  shift, and go to state 627

    $default  reduce using rule 129 (class-head)

    base-clause           go to state 1122
    class-virt-specifier  go to state 1123


State 626

  140 class-head-name: nested-name-specifier • class-name
  267 elaborated-type-specifier: class-key attribute-specifier-seq nested-name-specifier • IDENTIFIER
  659 nested-name-specifier: nested-name-specifier • IDENTIFIER SCOPE
  660                      | nested-name-specifier • simple-template-id SCOPE
  661                      | nested-name-specifier • TEMPLATE simple-template-id SCOPE

    IDENTIFIER  shift, and go to state 1124
    TEMPLATE    shift, and go to state 350

    class-name          go to state 632
    simple-template-id  go to state 1125
    template-name       go to state 142


State 627

  153 class-virt-specifier: FINAL •

    $default  reduce using rule 153 (class-virt-specifier)


State 628

  132 class-head: class-key class-head-name base-clause •

    $default  reduce using rule 132 (class-head)


State 629

  130 class-head: class-key class-head-name class-virt-specifier •
  134           | class-key class-head-name class-virt-specifier • base-clause

    COLON  shift, and go to state 267

    $default  reduce using rule 130 (class-head)

    base-clause  go to state 1126


State 630

  145 class-name: IDENTIFIER •
  266 elaborated-type-specifier: class-key nested-name-specifier IDENTIFIER •
  659 nested-name-specifier: nested-name-specifier IDENTIFIER • SCOPE
  1052 template-name: IDENTIFIER •

    SCOPE  shift, and go to state 722

    SCOPE       [reduce using rule 266 (elaborated-type-specifier)]
    COLON       reduce using rule 145 (class-name)
    COLON       [reduce using rule 266 (elaborated-type-specifier)]
    OPEN_BRACE  reduce using rule 145 (class-name)
    OPEN_BRACE  [reduce using rule 266 (elaborated-type-specifier)]
    FINAL       reduce using rule 145 (class-name)
    LESS        reduce using rule 1052 (template-name)
    $default    reduce using rule 266 (elaborated-type-specifier)


State 631

  270 elaborated-type-specifier: class-key nested-name-specifier TEMPLATE • simple-template-id
  661 nested-name-specifier: nested-name-specifier TEMPLATE • simple-template-id SCOPE

    IDENTIFIER  shift, and go to state 310

    simple-template-id  go to state 1127
    template-name       go to state 142


State 632

  140 class-head-name: nested-name-specifier class-name •

    $default  reduce using rule 140 (class-head-name)


State 633

  146 class-name: simple-template-id •
  269 elaborated-type-specifier: class-key nested-name-specifier simple-template-id •
  660 nested-name-specifier: nested-name-specifier simple-template-id • SCOPE

    SCOPE  shift, and go to state 729

    SCOPE       [reduce using rule 269 (elaborated-type-specifier)]
    COLON       reduce using rule 146 (class-name)
    COLON       [reduce using rule 269 (elaborated-type-specifier)]
    OPEN_BRACE  reduce using rule 146 (class-name)
    OPEN_BRACE  [reduce using rule 269 (elaborated-type-specifier)]
    FINAL       reduce using rule 146 (class-name)
    $default    reduce using rule 269 (elaborated-type-specifier)


State 634

  1073 type-constraint: concept-name LESS GREATER •

    $default  reduce using rule 1073 (type-constraint)


State 635

  1036 template-argument: constant-expression •

    $default  reduce using rule 1036 (template-argument)


State 636

  882 primary-expression: id-expression •
  1038 template-argument: id-expression •

    ELLIPSIS  reduce using rule 882 (primary-expression)
    ELLIPSIS  [reduce using rule 1038 (template-argument)]
    COMMA     reduce using rule 882 (primary-expression)
    COMMA     [reduce using rule 1038 (template-argument)]
    GREATER   reduce using rule 882 (primary-expression)
    GREATER   [reduce using rule 1038 (template-argument)]
    $default  reduce using rule 882 (primary-expression)


State 637

  1039 template-argument-list: template-argument •
  1040                       | template-argument • ELLIPSIS

    ELLIPSIS  shift, and go to state 1128

    $default  reduce using rule 1039 (template-argument-list)


State 638

  1041 template-argument-list: template-argument-list • COMMA template-argument
  1042                       | template-argument-list • COMMA template-argument ELLIPSIS
  1075 type-constraint: concept-name LESS template-argument-list • GREATER

    COMMA    shift, and go to state 1129
    GREATER  shift, and go to state 1130


State 639

  1037 template-argument: type-id •

    $default  reduce using rule 1037 (template-argument)


State 640

  461 identifier-list: IDENTIFIER •

    $default  reduce using rule 461 (identifier-list)


State 641

  462 identifier-list: identifier-list • COMMA IDENTIFIER
  967 simple-declaration: decl-specifier-seq OPEN_SQUARE identifier-list • CLOSE_SQUARE initializer SEMICOLON

    COMMA         shift, and go to state 1131
    CLOSE_SQUARE  shift, and go to state 1132


State 642

  106 brace-or-equal-initializer: EQ • initializer-clause
  393 function-body: EQ • DEFAULT SEMICOLON
  394              | EQ • DELETE SEMICOLON

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 935
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 1133
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DEFAULT           shift, and go to state 655
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 1134
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    braced-init-list                     go to state 1135
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    initializer-clause                   go to state 1136
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 643

  478 initializer: OPEN_PAREN • expression-list CLOSE_PAREN

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 935
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 1134
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    braced-init-list                     go to state 1135
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    expression-list                      go to state 1137
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    initializer-clause                   go to state 1138
    initializer-list                     go to state 1139
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 644

  108 braced-init-list: OPEN_BRACE • initializer-list CLOSE_BRACE
  109                 | OPEN_BRACE • initializer-list COMMA CLOSE_BRACE
  110                 | OPEN_BRACE • designated-initializer-list CLOSE_BRACE
  111                 | OPEN_BRACE • designated-initializer-list COMMA CLOSE_BRACE
  112                 | OPEN_BRACE • CLOSE_BRACE
  160 compound-statement: OPEN_BRACE • CLOSE_BRACE
  161                   | OPEN_BRACE • statement-seq CLOSE_BRACE

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    USING             shift, and go to state 1
    IDENTIFIER        shift, and go to state 661
    SEMICOLON         shift, and go to state 662
    ALIGNAS           shift, and go to state 4
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    ASM               shift, and go to state 8
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 663
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 644
    CLOSE_BRACE       shift, and go to state 1140
    VIRTUAL           shift, and go to state 11
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CO_RETURN         shift, and go to state 665
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    FRIEND            shift, and go to state 20
    TYPEDEF           shift, and go to state 21
    CONSTEXPR         shift, and go to state 22
    CONSTEVAL         shift, and go to state 23
    CONSTINIT         shift, and go to state 24
    INLINE            shift, and go to state 258
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 1141
    ENUM              shift, and go to state 27
    UNICODE_8         shift, and go to state 184
    EXTERN            shift, and go to state 259
    EXPLICIT          shift, and go to state 29
    MULT              shift, and go to state 371
    DEFAULT           shift, and go to state 666
    TRY               shift, and go to state 667
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    WHILE             shift, and go to state 668
    DO                shift, and go to state 669
    FOR               shift, and go to state 670
    BREAK             shift, and go to state 671
    CONTINUE          shift, and go to state 672
    RETURN            shift, and go to state 673
    GOTO              shift, and go to state 674
    CASE              shift, and go to state 675
    NAMESPACE         shift, and go to state 676
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    IF                shift, and go to state 677
    SWITCH            shift, and go to state 678
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    STATIC_ASSERT     shift, and go to state 51
    STATIC            shift, and go to state 52
    THREAD_LOCAL      shift, and go to state 53
    MUTABLE           shift, and go to state 54
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    alias-declaration                    go to state 56
    alignment-specifier                  go to state 57
    and-expression                       go to state 400
    asm-declaration                      go to state 58
    assignment-expression                go to state 1142
    attribute-specifier                  go to state 60
    attribute-specifier-seq              go to state 679
    await-expression                     go to state 401
    binary-literal                       go to state 402
    block-declaration                    go to state 680
    boolean-literal                      go to state 403
    braced-init-list                     go to state 1135
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-head                           go to state 63
    class-key                            go to state 64
    class-name                           go to state 65
    class-specifier                      go to state 66
    compare-expression                   go to state 406
    compound-statement                   go to state 681
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    coroutine-return-statement           go to state 682
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decl-specifier                       go to state 70
    decl-specifier-seq                   go to state 683
    declaration-statement                go to state 684
    decltype-specifier                   go to state 76
    defining-type-specifier              go to state 78
    delete-expression                    go to state 411
    designated-initializer-clause        go to state 1143
    designated-initializer-list          go to state 1144
    designator                           go to state 1145
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-head                            go to state 82
    enum-key                             go to state 83
    enum-name                            go to state 84
    enum-specifier                       go to state 85
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    explicit-specifier                   go to state 264
    expression                           go to state 685
    expression-statement                 go to state 686
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    function-specifier                   go to state 91
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    initializer-clause                   go to state 1138
    initializer-list                     go to state 1146
    integer-literal                      go to state 425
    iteration-statement                  go to state 687
    jump-statement                       go to state 688
    labeled-statement                    go to state 689
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-alias-definition           go to state 100
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    opaque-enum-declaration              go to state 107
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    selection-statement                  go to state 690
    shift-expression                     go to state 443
    simple-declaration                   go to state 113
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    statement                            go to state 691
    statement-seq                        go to state 692
    static_assert-declaration            go to state 116
    storage-class-specifier              go to state 117
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    try-block                            go to state 693
    type-constraint                      go to state 123
    type-name                            go to state 124
    type-specifier                       go to state 125
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    using-declaration                    go to state 130
    using-directive                      go to state 131
    using-enum-declaration               go to state 132
    yield-expression                     go to state 532


State 645

  477 initializer: brace-or-equal-initializer •

    $default  reduce using rule 477 (initializer)


State 646

  107 brace-or-equal-initializer: braced-init-list •

    $default  reduce using rule 107 (brace-or-equal-initializer)


State 647

  398 function-definition: decl-specifier-seq declarator function-body •

    $default  reduce using rule 398 (function-definition)


State 648

  470 init-declarator: declarator initializer •

    $default  reduce using rule 470 (init-declarator)


State 649

  406 function-definition: decl-specifier-seq declarator requires-clause • function-body
  471 init-declarator: declarator requires-clause •

    EQ          shift, and go to state 286
    COLON       shift, and go to state 288
    OPEN_BRACE  shift, and go to state 289
    TRY         shift, and go to state 291

    $default  reduce using rule 471 (init-declarator)

    compound-statement  go to state 294
    ctor-initializer    go to state 295
    function-body       go to state 1147
    function-try-block  go to state 297


State 650

  402 function-definition: decl-specifier-seq declarator virt-specifier-seq • function-body
  1179 virt-specifier-seq: virt-specifier-seq • virt-specifier

    EQ          shift, and go to state 286
    COLON       shift, and go to state 288
    OPEN_BRACE  shift, and go to state 289
    FINAL       shift, and go to state 290
    TRY         shift, and go to state 291
    OVERRIDE    shift, and go to state 293

    compound-statement  go to state 294
    ctor-initializer    go to state 295
    function-body       go to state 1148
    function-try-block  go to state 297
    virt-specifier      go to state 703


State 651

  964 simple-declaration: decl-specifier-seq init-declarator-list SEMICOLON •

    $default  reduce using rule 964 (simple-declaration)


State 652

  473 init-declarator-list: init-declarator-list COMMA • init-declarator

    IDENTIFIER  shift, and go to state 147
    OPEN_PAREN  shift, and go to state 5
    ELLIPSIS    shift, and go to state 6
    AND         shift, and go to state 7
    SCOPE       shift, and go to state 9
    AND_AND     shift, and go to state 16
    OPERATOR    shift, and go to state 17
    DECLTYPE    shift, and go to state 134
    MULT        shift, and go to state 31
    COMPL       shift, and go to state 35

    class-name              go to state 65
    conversion-function-id  go to state 68
    declarator              go to state 1149
    declarator-id           go to state 75
    decltype-specifier      go to state 138
    enum-name               go to state 84
    id-expression           go to state 93
    init-declarator         go to state 1150
    literal-operator-id     go to state 95
    namespace-alias         go to state 99
    namespace-name          go to state 102
    nested-name-specifier   go to state 148
    noptr-declarator        go to state 106
    operator-function-id    go to state 108
    ptr-declarator          go to state 110
    ptr-operator            go to state 111
    qualified-id            go to state 112
    simple-template-id      go to state 114
    template-id             go to state 120
    template-name           go to state 142
    type-name               go to state 143
    typedef-name            go to state 126
    unqualified-id          go to state 129


State 653

  969 simple-declaration: decl-specifier-seq ref-qualifier OPEN_SQUARE • identifier-list CLOSE_SQUARE initializer SEMICOLON

    IDENTIFIER  shift, and go to state 640

    identifier-list  go to state 1151


State 654

  394 function-body: EQ DELETE • SEMICOLON

    SEMICOLON  shift, and go to state 1152


State 655

  393 function-body: EQ DEFAULT • SEMICOLON

    SEMICOLON  shift, and go to state 1153


State 656

  145 class-name: IDENTIFIER •
  294 enum-name: IDENTIFIER •
  575 mem-initializer-id: IDENTIFIER •
  647 namespace-alias: IDENTIFIER •
  653 namespace-name: IDENTIFIER •
  1052 template-name: IDENTIFIER •
  1110 typedef-name: IDENTIFIER •

    OPEN_PAREN  reduce using rule 145 (class-name)
    OPEN_PAREN  [reduce using rule 294 (enum-name)]
    OPEN_PAREN  [reduce using rule 575 (mem-initializer-id)]
    OPEN_PAREN  [reduce using rule 1110 (typedef-name)]
    SCOPE       reduce using rule 145 (class-name)
    SCOPE       [reduce using rule 294 (enum-name)]
    SCOPE       [reduce using rule 647 (namespace-alias)]
    SCOPE       [reduce using rule 653 (namespace-name)]
    SCOPE       [reduce using rule 1110 (typedef-name)]
    OPEN_BRACE  reduce using rule 145 (class-name)
    OPEN_BRACE  [reduce using rule 294 (enum-name)]
    OPEN_BRACE  [reduce using rule 575 (mem-initializer-id)]
    OPEN_BRACE  [reduce using rule 1110 (typedef-name)]
    LESS        reduce using rule 1052 (template-name)
    $default    reduce using rule 145 (class-name)


State 657

  574 mem-initializer-id: class-or-decltype •

    $default  reduce using rule 574 (mem-initializer-id)


State 658

  576 mem-initializer-list: mem-initializer •
  577                     | mem-initializer • ELLIPSIS

    ELLIPSIS  shift, and go to state 1154

    $default  reduce using rule 576 (mem-initializer-list)


State 659

  571 mem-initializer: mem-initializer-id • OPEN_PAREN CLOSE_PAREN
  572                | mem-initializer-id • OPEN_PAREN expression-list CLOSE_PAREN
  573                | mem-initializer-id • braced-init-list

    OPEN_PAREN  shift, and go to state 1155
    OPEN_BRACE  shift, and go to state 935

    braced-init-list  go to state 1156


State 660

  184 ctor-initializer: COLON mem-initializer-list •
  578 mem-initializer-list: mem-initializer-list • COMMA mem-initializer
  579                     | mem-initializer-list • COMMA mem-initializer ELLIPSIS

    COMMA  shift, and go to state 1157

    $default  reduce using rule 184 (ctor-initializer)


State 661

  145 class-name: IDENTIFIER •
  163 concept-name: IDENTIFIER •
  294 enum-name: IDENTIFIER •
  520 labeled-statement: IDENTIFIER • COLON statement
  647 namespace-alias: IDENTIFIER •
  653 namespace-name: IDENTIFIER •
  1052 template-name: IDENTIFIER •
  1110 typedef-name: IDENTIFIER •
  1140 unqualified-id: IDENTIFIER •

    COLON  shift, and go to state 1158

    PLUS          reduce using rule 1140 (unqualified-id)
    MINUS         reduce using rule 1140 (unqualified-id)
    IDENTIFIER    reduce using rule 145 (class-name)
    IDENTIFIER    [reduce using rule 294 (enum-name)]
    IDENTIFIER    [reduce using rule 1052 (template-name)]
    IDENTIFIER    [reduce using rule 1110 (typedef-name)]
    EQ            reduce using rule 1140 (unqualified-id)
    SEMICOLON     reduce using rule 145 (class-name)
    SEMICOLON     [reduce using rule 294 (enum-name)]
    SEMICOLON     [reduce using rule 1052 (template-name)]
    SEMICOLON     [reduce using rule 1110 (typedef-name)]
    SEMICOLON     [reduce using rule 1140 (unqualified-id)]
    ALIGNAS       reduce using rule 145 (class-name)
    ALIGNAS       [reduce using rule 294 (enum-name)]
    ALIGNAS       [reduce using rule 1052 (template-name)]
    ALIGNAS       [reduce using rule 1110 (typedef-name)]
    OPEN_PAREN    reduce using rule 145 (class-name)
    OPEN_PAREN    [reduce using rule 294 (enum-name)]
    OPEN_PAREN    [reduce using rule 1052 (template-name)]
    OPEN_PAREN    [reduce using rule 1110 (typedef-name)]
    OPEN_PAREN    [reduce using rule 1140 (unqualified-id)]
    ELLIPSIS      reduce using rule 145 (class-name)
    ELLIPSIS      [reduce using rule 294 (enum-name)]
    ELLIPSIS      [reduce using rule 1052 (template-name)]
    ELLIPSIS      [reduce using rule 1110 (typedef-name)]
    ELLIPSIS      [reduce using rule 1140 (unqualified-id)]
    AND           reduce using rule 145 (class-name)
    AND           [reduce using rule 294 (enum-name)]
    AND           [reduce using rule 1052 (template-name)]
    AND           [reduce using rule 1110 (typedef-name)]
    AND           [reduce using rule 1140 (unqualified-id)]
    MULT_EQ       reduce using rule 1140 (unqualified-id)
    DIV_EQ        reduce using rule 1140 (unqualified-id)
    MOD_EQ        reduce using rule 1140 (unqualified-id)
    PLUS_EQ       reduce using rule 1140 (unqualified-id)
    MINUS_EQ      reduce using rule 1140 (unqualified-id)
    RSHIFT_EQ     reduce using rule 1140 (unqualified-id)
    LSHIFT_EQ     reduce using rule 1140 (unqualified-id)
    AND_EQ        reduce using rule 1140 (unqualified-id)
    XOR_EQ        reduce using rule 1140 (unqualified-id)
    OR_EQ         reduce using rule 1140 (unqualified-id)
    COMMA         reduce using rule 1140 (unqualified-id)
    SCOPE         reduce using rule 145 (class-name)
    SCOPE         [reduce using rule 294 (enum-name)]
    SCOPE         [reduce using rule 647 (namespace-alias)]
    SCOPE         [reduce using rule 653 (namespace-name)]
    SCOPE         [reduce using rule 1052 (template-name)]
    SCOPE         [reduce using rule 1110 (typedef-name)]
    OPEN_SQUARE   reduce using rule 145 (class-name)
    OPEN_SQUARE   [reduce using rule 294 (enum-name)]
    OPEN_SQUARE   [reduce using rule 1052 (template-name)]
    OPEN_SQUARE   [reduce using rule 1110 (typedef-name)]
    OPEN_SQUARE   [reduce using rule 1140 (unqualified-id)]
    OPEN_BRACE    reduce using rule 145 (class-name)
    OPEN_BRACE    [reduce using rule 294 (enum-name)]
    OPEN_BRACE    [reduce using rule 1052 (template-name)]
    OPEN_BRACE    [reduce using rule 1110 (typedef-name)]
    CLOSE_BRACE   reduce using rule 1140 (unqualified-id)
    VIRTUAL       reduce using rule 145 (class-name)
    VIRTUAL       [reduce using rule 294 (enum-name)]
    VIRTUAL       [reduce using rule 1052 (template-name)]
    VIRTUAL       [reduce using rule 1110 (typedef-name)]
    CLASS         reduce using rule 145 (class-name)
    CLASS         [reduce using rule 294 (enum-name)]
    CLASS         [reduce using rule 1052 (template-name)]
    CLASS         [reduce using rule 1110 (typedef-name)]
    STRUCT        reduce using rule 145 (class-name)
    STRUCT        [reduce using rule 294 (enum-name)]
    STRUCT        [reduce using rule 1052 (template-name)]
    STRUCT        [reduce using rule 1110 (typedef-name)]
    UNION         reduce using rule 145 (class-name)
    UNION         [reduce using rule 294 (enum-name)]
    UNION         [reduce using rule 1052 (template-name)]
    UNION         [reduce using rule 1110 (typedef-name)]
    SPACESHIP     reduce using rule 1140 (unqualified-id)
    QUERY         reduce using rule 1140 (unqualified-id)
    AND_AND       reduce using rule 145 (class-name)
    AND_AND       [reduce using rule 294 (enum-name)]
    AND_AND       [reduce using rule 1052 (template-name)]
    AND_AND       [reduce using rule 1110 (typedef-name)]
    AND_AND       [reduce using rule 1140 (unqualified-id)]
    OR_OR         reduce using rule 1140 (unqualified-id)
    OPERATOR      reduce using rule 145 (class-name)
    OPERATOR      [reduce using rule 294 (enum-name)]
    OPERATOR      [reduce using rule 1052 (template-name)]
    OPERATOR      [reduce using rule 1110 (typedef-name)]
    CONST         reduce using rule 145 (class-name)
    CONST         [reduce using rule 294 (enum-name)]
    CONST         [reduce using rule 1052 (template-name)]
    CONST         [reduce using rule 1110 (typedef-name)]
    VOLATILE      reduce using rule 145 (class-name)
    VOLATILE      [reduce using rule 294 (enum-name)]
    VOLATILE      [reduce using rule 1052 (template-name)]
    VOLATILE      [reduce using rule 1110 (typedef-name)]
    FRIEND        reduce using rule 145 (class-name)
    FRIEND        [reduce using rule 294 (enum-name)]
    FRIEND        [reduce using rule 1052 (template-name)]
    FRIEND        [reduce using rule 1110 (typedef-name)]
    TYPEDEF       reduce using rule 145 (class-name)
    TYPEDEF       [reduce using rule 294 (enum-name)]
    TYPEDEF       [reduce using rule 1052 (template-name)]
    TYPEDEF       [reduce using rule 1110 (typedef-name)]
    CONSTEXPR     reduce using rule 145 (class-name)
    CONSTEXPR     [reduce using rule 294 (enum-name)]
    CONSTEXPR     [reduce using rule 1052 (template-name)]
    CONSTEXPR     [reduce using rule 1110 (typedef-name)]
    CONSTEVAL     reduce using rule 145 (class-name)
    CONSTEVAL     [reduce using rule 294 (enum-name)]
    CONSTEVAL     [reduce using rule 1052 (template-name)]
    CONSTEVAL     [reduce using rule 1110 (typedef-name)]
    CONSTINIT     reduce using rule 145 (class-name)
    CONSTINIT     [reduce using rule 294 (enum-name)]
    CONSTINIT     [reduce using rule 1052 (template-name)]
    CONSTINIT     [reduce using rule 1110 (typedef-name)]
    INLINE        reduce using rule 145 (class-name)
    INLINE        [reduce using rule 294 (enum-name)]
    INLINE        [reduce using rule 1052 (template-name)]
    INLINE        [reduce using rule 1110 (typedef-name)]
    DECLTYPE      reduce using rule 145 (class-name)
    DECLTYPE      [reduce using rule 163 (concept-name)]
    DECLTYPE      [reduce using rule 294 (enum-name)]
    DECLTYPE      [reduce using rule 1052 (template-name)]
    DECLTYPE      [reduce using rule 1110 (typedef-name)]
    DEREF         reduce using rule 1140 (unqualified-id)
    DOT           reduce using rule 1140 (unqualified-id)
    ENUM          reduce using rule 145 (class-name)
    ENUM          [reduce using rule 294 (enum-name)]
    ENUM          [reduce using rule 1052 (template-name)]
    ENUM          [reduce using rule 1110 (typedef-name)]
    EQ_EQ         reduce using rule 1140 (unqualified-id)
    NOT_EQ        reduce using rule 1140 (unqualified-id)
    XOR           reduce using rule 1140 (unqualified-id)
    EXTERN        reduce using rule 145 (class-name)
    EXTERN        [reduce using rule 294 (enum-name)]
    EXTERN        [reduce using rule 1052 (template-name)]
    EXTERN        [reduce using rule 1110 (typedef-name)]
    LESS          reduce using rule 163 (concept-name)
    LESS          [reduce using rule 1052 (template-name)]
    LESS          [reduce using rule 1140 (unqualified-id)]
    GREATER       reduce using rule 1140 (unqualified-id)
    EXPLICIT      reduce using rule 145 (class-name)
    EXPLICIT      [reduce using rule 294 (enum-name)]
    EXPLICIT      [reduce using rule 1052 (template-name)]
    EXPLICIT      [reduce using rule 1110 (typedef-name)]
    MULT          reduce using rule 145 (class-name)
    MULT          [reduce using rule 294 (enum-name)]
    MULT          [reduce using rule 1052 (template-name)]
    MULT          [reduce using rule 1110 (typedef-name)]
    MULT          [reduce using rule 1140 (unqualified-id)]
    DIV           reduce using rule 1140 (unqualified-id)
    MOD           reduce using rule 1140 (unqualified-id)
    OR            reduce using rule 1140 (unqualified-id)
    LSHIFT        reduce using rule 1140 (unqualified-id)
    RSHIFT        reduce using rule 1140 (unqualified-id)
    LESS_EQ       reduce using rule 1140 (unqualified-id)
    GREATER_EQ    reduce using rule 1140 (unqualified-id)
    DOT_STAR      reduce using rule 1140 (unqualified-id)
    DEREF_STAR    reduce using rule 1140 (unqualified-id)
    COMPL         reduce using rule 145 (class-name)
    COMPL         [reduce using rule 294 (enum-name)]
    COMPL         [reduce using rule 1052 (template-name)]
    COMPL         [reduce using rule 1110 (typedef-name)]
    PLUS_PLUS     reduce using rule 1140 (unqualified-id)
    MINUS_MINUS   reduce using rule 1140 (unqualified-id)
    AUTO          reduce using rule 145 (class-name)
    AUTO          [reduce using rule 163 (concept-name)]
    AUTO          [reduce using rule 294 (enum-name)]
    AUTO          [reduce using rule 1052 (template-name)]
    AUTO          [reduce using rule 1110 (typedef-name)]
    CHAR          reduce using rule 145 (class-name)
    CHAR          [reduce using rule 294 (enum-name)]
    CHAR          [reduce using rule 1052 (template-name)]
    CHAR          [reduce using rule 1110 (typedef-name)]
    CHAR8_T       reduce using rule 145 (class-name)
    CHAR8_T       [reduce using rule 294 (enum-name)]
    CHAR8_T       [reduce using rule 1052 (template-name)]
    CHAR8_T       [reduce using rule 1110 (typedef-name)]
    CHAR16_T      reduce using rule 145 (class-name)
    CHAR16_T      [reduce using rule 294 (enum-name)]
    CHAR16_T      [reduce using rule 1052 (template-name)]
    CHAR16_T      [reduce using rule 1110 (typedef-name)]
    CHAR32_T      reduce using rule 145 (class-name)
    CHAR32_T      [reduce using rule 294 (enum-name)]
    CHAR32_T      [reduce using rule 1052 (template-name)]
    CHAR32_T      [reduce using rule 1110 (typedef-name)]
    WCHAR_T       reduce using rule 145 (class-name)
    WCHAR_T       [reduce using rule 294 (enum-name)]
    WCHAR_T       [reduce using rule 1052 (template-name)]
    WCHAR_T       [reduce using rule 1110 (typedef-name)]
    BOOL          reduce using rule 145 (class-name)
    BOOL          [reduce using rule 294 (enum-name)]
    BOOL          [reduce using rule 1052 (template-name)]
    BOOL          [reduce using rule 1110 (typedef-name)]
    SHORT         reduce using rule 145 (class-name)
    SHORT         [reduce using rule 294 (enum-name)]
    SHORT         [reduce using rule 1052 (template-name)]
    SHORT         [reduce using rule 1110 (typedef-name)]
    INT           reduce using rule 145 (class-name)
    INT           [reduce using rule 294 (enum-name)]
    INT           [reduce using rule 1052 (template-name)]
    INT           [reduce using rule 1110 (typedef-name)]
    LONG          reduce using rule 145 (class-name)
    LONG          [reduce using rule 294 (enum-name)]
    LONG          [reduce using rule 1052 (template-name)]
    LONG          [reduce using rule 1110 (typedef-name)]
    SIGNED        reduce using rule 145 (class-name)
    SIGNED        [reduce using rule 294 (enum-name)]
    SIGNED        [reduce using rule 1052 (template-name)]
    SIGNED        [reduce using rule 1110 (typedef-name)]
    UNSIGNED      reduce using rule 145 (class-name)
    UNSIGNED      [reduce using rule 294 (enum-name)]
    UNSIGNED      [reduce using rule 1052 (template-name)]
    UNSIGNED      [reduce using rule 1110 (typedef-name)]
    FLOAT         reduce using rule 145 (class-name)
    FLOAT         [reduce using rule 294 (enum-name)]
    FLOAT         [reduce using rule 1052 (template-name)]
    FLOAT         [reduce using rule 1110 (typedef-name)]
    DOUBLE        reduce using rule 145 (class-name)
    DOUBLE        [reduce using rule 294 (enum-name)]
    DOUBLE        [reduce using rule 1052 (template-name)]
    DOUBLE        [reduce using rule 1110 (typedef-name)]
    VOID          reduce using rule 145 (class-name)
    VOID          [reduce using rule 294 (enum-name)]
    VOID          [reduce using rule 1052 (template-name)]
    VOID          [reduce using rule 1110 (typedef-name)]
    STATIC        reduce using rule 145 (class-name)
    STATIC        [reduce using rule 294 (enum-name)]
    STATIC        [reduce using rule 1052 (template-name)]
    STATIC        [reduce using rule 1110 (typedef-name)]
    THREAD_LOCAL  reduce using rule 145 (class-name)
    THREAD_LOCAL  [reduce using rule 294 (enum-name)]
    THREAD_LOCAL  [reduce using rule 1052 (template-name)]
    THREAD_LOCAL  [reduce using rule 1110 (typedef-name)]
    MUTABLE       reduce using rule 145 (class-name)
    MUTABLE       [reduce using rule 294 (enum-name)]
    MUTABLE       [reduce using rule 1052 (template-name)]
    MUTABLE       [reduce using rule 1110 (typedef-name)]
    TYPENAME      reduce using rule 145 (class-name)
    TYPENAME      [reduce using rule 294 (enum-name)]
    TYPENAME      [reduce using rule 1052 (template-name)]
    TYPENAME      [reduce using rule 1110 (typedef-name)]
    $default      reduce using rule 145 (class-name)


State 662

  338 expression-statement: SEMICOLON •

    $default  reduce using rule 338 (expression-statement)


State 663

   50 attribute-specifier: OPEN_SQUARE • OPEN_SQUARE attribute-list CLOSE_SQUARE CLOSE_SQUARE
   51                    | OPEN_SQUARE • OPEN_SQUARE attribute-using-prefix attribute-list CLOSE_SQUARE CLOSE_SQUARE
  534 lambda-introducer: OPEN_SQUARE • CLOSE_SQUARE
  535                  | OPEN_SQUARE • lambda-capture CLOSE_SQUARE

    IDENTIFIER    shift, and go to state 762
    EQ            shift, and go to state 763
    ELLIPSIS      shift, and go to state 764
    AND           shift, and go to state 765
    OPEN_SQUARE   shift, and go to state 155
    CLOSE_SQUARE  shift, and go to state 766
    MULT          shift, and go to state 767
    THIS          shift, and go to state 768

    capture          go to state 769
    capture-default  go to state 770
    capture-list     go to state 771
    init-capture     go to state 772
    lambda-capture   go to state 773
    simple-capture   go to state 774


State 664

  160 compound-statement: OPEN_BRACE CLOSE_BRACE •

    $default  reduce using rule 160 (compound-statement)


State 665

  182 coroutine-return-statement: CO_RETURN • SEMICOLON
  183                           | CO_RETURN • expr-or-braced-init-list SEMICOLON

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    SEMICOLON         shift, and go to state 1159
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 935
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 525
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    braced-init-list                     go to state 1160
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    expr-or-braced-init-list             go to state 1161
    expression                           go to state 1162
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 666

  524 labeled-statement: DEFAULT • COLON statement

    COLON  shift, and go to state 1163


State 667

  1069 try-block: TRY • compound-statement handler-seq

    OPEN_BRACE  shift, and go to state 289

    compound-statement  go to state 1164


State 668

  505 iteration-statement: WHILE • OPEN_PAREN condition CLOSE_PAREN statement

    OPEN_PAREN  shift, and go to state 1165


State 669

  506 iteration-statement: DO • statement WHILE OPEN_PAREN expression CLOSE_PAREN SEMICOLON

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    USING             shift, and go to state 1
    IDENTIFIER        shift, and go to state 661
    SEMICOLON         shift, and go to state 662
    ALIGNAS           shift, and go to state 4
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    ASM               shift, and go to state 8
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 663
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 289
    VIRTUAL           shift, and go to state 11
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CO_RETURN         shift, and go to state 665
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    FRIEND            shift, and go to state 20
    TYPEDEF           shift, and go to state 21
    CONSTEXPR         shift, and go to state 22
    CONSTEVAL         shift, and go to state 23
    CONSTINIT         shift, and go to state 24
    INLINE            shift, and go to state 258
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 27
    UNICODE_8         shift, and go to state 184
    EXTERN            shift, and go to state 259
    EXPLICIT          shift, and go to state 29
    MULT              shift, and go to state 371
    DEFAULT           shift, and go to state 666
    TRY               shift, and go to state 667
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    WHILE             shift, and go to state 668
    DO                shift, and go to state 669
    FOR               shift, and go to state 670
    BREAK             shift, and go to state 671
    CONTINUE          shift, and go to state 672
    RETURN            shift, and go to state 673
    GOTO              shift, and go to state 674
    CASE              shift, and go to state 675
    NAMESPACE         shift, and go to state 676
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    IF                shift, and go to state 677
    SWITCH            shift, and go to state 678
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    STATIC_ASSERT     shift, and go to state 51
    STATIC            shift, and go to state 52
    THREAD_LOCAL      shift, and go to state 53
    MUTABLE           shift, and go to state 54
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    alias-declaration                    go to state 56
    alignment-specifier                  go to state 57
    and-expression                       go to state 400
    asm-declaration                      go to state 58
    assignment-expression                go to state 525
    attribute-specifier                  go to state 60
    attribute-specifier-seq              go to state 679
    await-expression                     go to state 401
    binary-literal                       go to state 402
    block-declaration                    go to state 680
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-head                           go to state 63
    class-key                            go to state 64
    class-name                           go to state 65
    class-specifier                      go to state 66
    compare-expression                   go to state 406
    compound-statement                   go to state 681
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    coroutine-return-statement           go to state 682
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decl-specifier                       go to state 70
    decl-specifier-seq                   go to state 683
    declaration-statement                go to state 684
    decltype-specifier                   go to state 76
    defining-type-specifier              go to state 78
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-head                            go to state 82
    enum-key                             go to state 83
    enum-name                            go to state 84
    enum-specifier                       go to state 85
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    explicit-specifier                   go to state 264
    expression                           go to state 685
    expression-statement                 go to state 686
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    function-specifier                   go to state 91
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    iteration-statement                  go to state 687
    jump-statement                       go to state 688
    labeled-statement                    go to state 689
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-alias-definition           go to state 100
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    opaque-enum-declaration              go to state 107
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    selection-statement                  go to state 690
    shift-expression                     go to state 443
    simple-declaration                   go to state 113
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    statement                            go to state 1166
    static_assert-declaration            go to state 116
    storage-class-specifier              go to state 117
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    try-block                            go to state 693
    type-constraint                      go to state 123
    type-name                            go to state 124
    type-specifier                       go to state 125
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    using-declaration                    go to state 130
    using-directive                      go to state 131
    using-enum-declaration               go to state 132
    yield-expression                     go to state 532


State 670

  507 iteration-statement: FOR • OPEN_PAREN init-statement SEMICOLON CLOSE_PAREN statement
  508                    | FOR • OPEN_PAREN init-statement condition SEMICOLON CLOSE_PAREN statement
  509                    | FOR • OPEN_PAREN init-statement SEMICOLON expression CLOSE_PAREN statement
  510                    | FOR • OPEN_PAREN init-statement condition SEMICOLON expression CLOSE_PAREN statement
  511                    | FOR • OPEN_PAREN for-range-declaration COLON for-range-initializer CLOSE_PAREN statement
  512                    | FOR • OPEN_PAREN init-statement for-range-declaration COLON for-range-initializer CLOSE_PAREN statement

    OPEN_PAREN  shift, and go to state 1167


State 671

  513 jump-statement: BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 1168


State 672

  514 jump-statement: CONTINUE • SEMICOLON

    SEMICOLON  shift, and go to state 1169


State 673

  515 jump-statement: RETURN • SEMICOLON
  516               | RETURN • expr-or-braced-init-list SEMICOLON

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    SEMICOLON         shift, and go to state 1170
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 935
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 525
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    braced-init-list                     go to state 1160
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    expr-or-braced-init-list             go to state 1171
    expression                           go to state 1162
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 674

  518 jump-statement: GOTO • IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 1172


State 675

  522 labeled-statement: CASE • constant-expression COLON statement

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 407
    constant-expression                  go to state 1173
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 430
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 676

  648 namespace-alias-definition: NAMESPACE • IDENTIFIER EQ qualified-namespace-specifier SEMICOLON

    IDENTIFIER  shift, and go to state 1174


State 677

  938 selection-statement: IF • OPEN_PAREN condition CLOSE_PAREN statement
  939                    | IF • CONSTEXPR OPEN_PAREN condition CLOSE_PAREN statement
  940                    | IF • OPEN_PAREN init-statement condition CLOSE_PAREN statement
  941                    | IF • CONSTEXPR OPEN_PAREN init-statement condition CLOSE_PAREN statement
  942                    | IF • OPEN_PAREN condition CLOSE_PAREN statement ELSE statement
  943                    | IF • CONSTEXPR OPEN_PAREN condition CLOSE_PAREN statement ELSE statement
  944                    | IF • OPEN_PAREN init-statement condition CLOSE_PAREN statement ELSE statement
  945                    | IF • CONSTEXPR OPEN_PAREN init-statement condition CLOSE_PAREN statement ELSE statement
  946                    | IF • CONSTEVAL compound-statement
  947                    | IF • NOT CONSTEVAL compound-statement
  948                    | IF • CONSTEVAL compound-statement ELSE statement
  949                    | IF • NOT CONSTEVAL compound-statement ELSE statement

    OPEN_PAREN  shift, and go to state 1175
    CONSTEXPR   shift, and go to state 1176
    CONSTEVAL   shift, and go to state 1177
    NOT         shift, and go to state 1178


State 678

  950 selection-statement: SWITCH • OPEN_PAREN condition CLOSE_PAREN statement
  951                    | SWITCH • OPEN_PAREN init-statement condition CLOSE_PAREN statement

    OPEN_PAREN  shift, and go to state 1179


State 679

   21 asm-declaration: attribute-specifier-seq • ASM OPEN_PAREN string-literal CLOSE_PAREN SEMICOLON
   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  519 labeled-statement: attribute-specifier-seq • IDENTIFIER COLON statement
  521                  | attribute-specifier-seq • CASE constant-expression COLON statement
  523                  | attribute-specifier-seq • DEFAULT COLON statement
  965 simple-declaration: attribute-specifier-seq • decl-specifier-seq init-declarator-list SEMICOLON
  966                   | attribute-specifier-seq • decl-specifier-seq OPEN_SQUARE identifier-list CLOSE_SQUARE initializer SEMICOLON
  968                   | attribute-specifier-seq • decl-specifier-seq ref-qualifier OPEN_SQUARE identifier-list CLOSE_SQUARE initializer SEMICOLON
  1009 statement: attribute-specifier-seq • expression-statement
  1011          | attribute-specifier-seq • compound-statement
  1013          | attribute-specifier-seq • selection-statement
  1015          | attribute-specifier-seq • iteration-statement
  1017          | attribute-specifier-seq • jump-statement
  1020          | attribute-specifier-seq • try-block
  1171 using-directive: attribute-specifier-seq • USING NAMESPACE namespace-name SEMICOLON
  1173                | attribute-specifier-seq • USING NAMESPACE nested-name-specifier namespace-name SEMICOLON

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    USING             shift, and go to state 255
    IDENTIFIER        shift, and go to state 1180
    SEMICOLON         shift, and go to state 662
    ALIGNAS           shift, and go to state 4
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    ASM               shift, and go to state 257
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 663
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 289
    VIRTUAL           shift, and go to state 11
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CO_RETURN         shift, and go to state 665
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    FRIEND            shift, and go to state 20
    TYPEDEF           shift, and go to state 21
    CONSTEXPR         shift, and go to state 22
    CONSTEVAL         shift, and go to state 23
    CONSTINIT         shift, and go to state 24
    INLINE            shift, and go to state 258
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 27
    UNICODE_8         shift, and go to state 184
    EXTERN            shift, and go to state 259
    EXPLICIT          shift, and go to state 29
    MULT              shift, and go to state 371
    DEFAULT           shift, and go to state 1181
    TRY               shift, and go to state 667
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    WHILE             shift, and go to state 668
    DO                shift, and go to state 669
    FOR               shift, and go to state 670
    BREAK             shift, and go to state 671
    CONTINUE          shift, and go to state 672
    RETURN            shift, and go to state 673
    GOTO              shift, and go to state 674
    CASE              shift, and go to state 1182
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    IF                shift, and go to state 677
    SWITCH            shift, and go to state 678
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    STATIC            shift, and go to state 52
    THREAD_LOCAL      shift, and go to state 53
    MUTABLE           shift, and go to state 54
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    alignment-specifier                  go to state 57
    and-expression                       go to state 400
    assignment-expression                go to state 525
    attribute-specifier                  go to state 260
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-head                           go to state 63
    class-key                            go to state 64
    class-name                           go to state 65
    class-specifier                      go to state 66
    compare-expression                   go to state 406
    compound-statement                   go to state 1183
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    coroutine-return-statement           go to state 682
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decl-specifier                       go to state 70
    decl-specifier-seq                   go to state 1184
    decltype-specifier                   go to state 76
    defining-type-specifier              go to state 78
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-head                            go to state 82
    enum-key                             go to state 263
    enum-name                            go to state 84
    enum-specifier                       go to state 85
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    explicit-specifier                   go to state 264
    expression                           go to state 685
    expression-statement                 go to state 1185
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    function-specifier                   go to state 91
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    iteration-statement                  go to state 1186
    jump-statement                       go to state 1187
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    selection-statement                  go to state 1188
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    storage-class-specifier              go to state 117
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    try-block                            go to state 1189
    type-constraint                      go to state 123
    type-name                            go to state 124
    type-specifier                       go to state 125
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 680

  225 declaration-statement: block-declaration •

    $default  reduce using rule 225 (declaration-statement)


State 681

  1012 statement: compound-statement •

    $default  reduce using rule 1012 (statement)


State 682

  517 jump-statement: coroutine-return-statement •

    $default  reduce using rule 517 (jump-statement)


State 683

  963 simple-declaration: decl-specifier-seq • SEMICOLON
  964                   | decl-specifier-seq • init-declarator-list SEMICOLON
  967                   | decl-specifier-seq • OPEN_SQUARE identifier-list CLOSE_SQUARE initializer SEMICOLON
  969                   | decl-specifier-seq • ref-qualifier OPEN_SQUARE identifier-list CLOSE_SQUARE initializer SEMICOLON

    IDENTIFIER   shift, and go to state 147
    SEMICOLON    shift, and go to state 277
    OPEN_PAREN   shift, and go to state 5
    ELLIPSIS     shift, and go to state 6
    AND          shift, and go to state 278
    SCOPE        shift, and go to state 9
    OPEN_SQUARE  shift, and go to state 279
    AND_AND      shift, and go to state 280
    OPERATOR     shift, and go to state 17
    DECLTYPE     shift, and go to state 134
    MULT         shift, and go to state 31
    COMPL        shift, and go to state 35

    class-name              go to state 65
    conversion-function-id  go to state 68
    declarator              go to state 1149
    declarator-id           go to state 75
    decltype-specifier      go to state 138
    enum-name               go to state 84
    id-expression           go to state 93
    init-declarator         go to state 282
    init-declarator-list    go to state 283
    literal-operator-id     go to state 95
    namespace-alias         go to state 99
    namespace-name          go to state 102
    nested-name-specifier   go to state 148
    noptr-declarator        go to state 106
    operator-function-id    go to state 108
    ptr-declarator          go to state 110
    ptr-operator            go to state 111
    qualified-id            go to state 112
    ref-qualifier           go to state 284
    simple-template-id      go to state 114
    template-id             go to state 120
    template-name           go to state 142
    type-name               go to state 143
    typedef-name            go to state 126
    unqualified-id          go to state 129


State 684

  1019 statement: declaration-statement •

    $default  reduce using rule 1019 (statement)


State 685

  335 expression: expression • COMMA assignment-expression
  337 expression-statement: expression • SEMICOLON

    SEMICOLON  shift, and go to state 1190
    COMMA      shift, and go to state 1029


State 686

  1010 statement: expression-statement •

    $default  reduce using rule 1010 (statement)


State 687

  1016 statement: iteration-statement •

    $default  reduce using rule 1016 (statement)


State 688

  1018 statement: jump-statement •

    $default  reduce using rule 1018 (statement)


State 689

  1008 statement: labeled-statement •

    $default  reduce using rule 1008 (statement)


State 690

  1014 statement: selection-statement •

    $default  reduce using rule 1014 (statement)


State 691

  1022 statement-seq: statement •

    $default  reduce using rule 1022 (statement-seq)


State 692

  161 compound-statement: OPEN_BRACE statement-seq • CLOSE_BRACE
  1023 statement-seq: statement-seq • statement

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    USING             shift, and go to state 1
    IDENTIFIER        shift, and go to state 661
    SEMICOLON         shift, and go to state 662
    ALIGNAS           shift, and go to state 4
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    ASM               shift, and go to state 8
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 663
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 289
    CLOSE_BRACE       shift, and go to state 1191
    VIRTUAL           shift, and go to state 11
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CO_RETURN         shift, and go to state 665
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    FRIEND            shift, and go to state 20
    TYPEDEF           shift, and go to state 21
    CONSTEXPR         shift, and go to state 22
    CONSTEVAL         shift, and go to state 23
    CONSTINIT         shift, and go to state 24
    INLINE            shift, and go to state 258
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 27
    UNICODE_8         shift, and go to state 184
    EXTERN            shift, and go to state 259
    EXPLICIT          shift, and go to state 29
    MULT              shift, and go to state 371
    DEFAULT           shift, and go to state 666
    TRY               shift, and go to state 667
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    WHILE             shift, and go to state 668
    DO                shift, and go to state 669
    FOR               shift, and go to state 670
    BREAK             shift, and go to state 671
    CONTINUE          shift, and go to state 672
    RETURN            shift, and go to state 673
    GOTO              shift, and go to state 674
    CASE              shift, and go to state 675
    NAMESPACE         shift, and go to state 676
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    IF                shift, and go to state 677
    SWITCH            shift, and go to state 678
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    STATIC_ASSERT     shift, and go to state 51
    STATIC            shift, and go to state 52
    THREAD_LOCAL      shift, and go to state 53
    MUTABLE           shift, and go to state 54
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    alias-declaration                    go to state 56
    alignment-specifier                  go to state 57
    and-expression                       go to state 400
    asm-declaration                      go to state 58
    assignment-expression                go to state 525
    attribute-specifier                  go to state 60
    attribute-specifier-seq              go to state 679
    await-expression                     go to state 401
    binary-literal                       go to state 402
    block-declaration                    go to state 680
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-head                           go to state 63
    class-key                            go to state 64
    class-name                           go to state 65
    class-specifier                      go to state 66
    compare-expression                   go to state 406
    compound-statement                   go to state 681
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    coroutine-return-statement           go to state 682
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decl-specifier                       go to state 70
    decl-specifier-seq                   go to state 683
    declaration-statement                go to state 684
    decltype-specifier                   go to state 76
    defining-type-specifier              go to state 78
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-head                            go to state 82
    enum-key                             go to state 83
    enum-name                            go to state 84
    enum-specifier                       go to state 85
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    explicit-specifier                   go to state 264
    expression                           go to state 685
    expression-statement                 go to state 686
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    function-specifier                   go to state 91
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    iteration-statement                  go to state 687
    jump-statement                       go to state 688
    labeled-statement                    go to state 689
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-alias-definition           go to state 100
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    opaque-enum-declaration              go to state 107
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    selection-statement                  go to state 690
    shift-expression                     go to state 443
    simple-declaration                   go to state 113
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    statement                            go to state 1192
    static_assert-declaration            go to state 116
    storage-class-specifier              go to state 117
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    try-block                            go to state 693
    type-constraint                      go to state 123
    type-name                            go to state 124
    type-specifier                       go to state 125
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    using-declaration                    go to state 130
    using-directive                      go to state 131
    using-enum-declaration               go to state 132
    yield-expression                     go to state 532


State 693

  1021 statement: try-block •

    $default  reduce using rule 1021 (statement)


State 694

  409 function-try-block: TRY compound-statement • handler-seq

    CATCH  shift, and go to state 1193

    handler      go to state 1194
    handler-seq  go to state 1195


State 695

  410 function-try-block: TRY ctor-initializer • compound-statement handler-seq

    OPEN_BRACE  shift, and go to state 289

    compound-statement  go to state 1196


State 696

  345 fold-expression: OPEN_PAREN • cast-expression fold-operator ELLIPSIS CLOSE_PAREN
  346                | OPEN_PAREN • ELLIPSIS fold-operator cast-expression CLOSE_PAREN
  347                | OPEN_PAREN • cast-expression fold-operator ELLIPSIS fold-operator cast-expression CLOSE_PAREN
  881 primary-expression: OPEN_PAREN • expression CLOSE_PAREN

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    ELLIPSIS          shift, and go to state 756
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 525
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 757
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    expression                           go to state 758
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 697

  174 constraint-logical-and-expression: constraint-logical-and-expression • AND_AND primary-expression
  175 constraint-logical-or-expression: constraint-logical-and-expression •

    AND_AND  shift, and go to state 1197

    AND_AND   [reduce using rule 175 (constraint-logical-or-expression)]
    $default  reduce using rule 175 (constraint-logical-or-expression)


State 698

  176 constraint-logical-or-expression: constraint-logical-or-expression • OR_OR constraint-logical-and-expression
  929 requires-clause: REQUIRES constraint-logical-or-expression •

    OR_OR  shift, and go to state 1198

    $default  reduce using rule 929 (requires-clause)


State 699

  173 constraint-logical-and-expression: primary-expression •

    $default  reduce using rule 173 (constraint-logical-and-expression)


State 700

  390 function-body: ctor-initializer compound-statement •

    $default  reduce using rule 390 (function-body)


State 701

  404 function-definition: declarator requires-clause function-body •

    $default  reduce using rule 404 (function-definition)


State 702

  400 function-definition: declarator virt-specifier-seq function-body •

    $default  reduce using rule 400 (function-definition)


State 703

  1179 virt-specifier-seq: virt-specifier-seq virt-specifier •

    $default  reduce using rule 1179 (virt-specifier-seq)


State 704

  298 enumerator: IDENTIFIER •
  299           | IDENTIFIER • attribute-specifier-seq

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    $default  reduce using rule 298 (enumerator)

    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 1199


State 705

  295 enum-specifier: enum-head OPEN_BRACE CLOSE_BRACE •

    $default  reduce using rule 295 (enum-specifier)


State 706

  300 enumerator-definition: enumerator •
  301                      | enumerator • EQ constant-expression

    EQ  shift, and go to state 1200

    $default  reduce using rule 300 (enumerator-definition)


State 707

  302 enumerator-list: enumerator-definition •

    $default  reduce using rule 302 (enumerator-list)


State 708

  296 enum-specifier: enum-head OPEN_BRACE enumerator-list • CLOSE_BRACE
  297               | enum-head OPEN_BRACE enumerator-list • COMMA CLOSE_BRACE
  303 enumerator-list: enumerator-list • COMMA enumerator-definition

    COMMA        shift, and go to state 1201
    CLOSE_BRACE  shift, and go to state 1202


State 709

  280 enum-base: COLON type-specifier-seq •

    $default  reduce using rule 280 (enum-base)


State 710

  286 enum-head: enum-key attribute-specifier-seq enum-base •

    $default  reduce using rule 286 (enum-head)


State 711

  284 enum-head: enum-key attribute-specifier-seq enum-head-name •
  288          | enum-key attribute-specifier-seq enum-head-name • enum-base
  752 opaque-enum-declaration: enum-key attribute-specifier-seq enum-head-name • SEMICOLON
  754                        | enum-key attribute-specifier-seq enum-head-name • enum-base SEMICOLON

    SEMICOLON  shift, and go to state 1203
    COLON      shift, and go to state 305

    $default  reduce using rule 284 (enum-head)

    enum-base  go to state 1204


State 712

  751 opaque-enum-declaration: enum-key enum-head-name SEMICOLON •

    $default  reduce using rule 751 (opaque-enum-declaration)


State 713

  287 enum-head: enum-key enum-head-name enum-base •
  753 opaque-enum-declaration: enum-key enum-head-name enum-base • SEMICOLON

    SEMICOLON  shift, and go to state 1205

    $default  reduce using rule 287 (enum-head)


State 714

  289 enum-head-name: nested-name-specifier IDENTIFIER •
  659 nested-name-specifier: nested-name-specifier IDENTIFIER • SCOPE
  1052 template-name: IDENTIFIER •

    SCOPE  shift, and go to state 722

    LESS      reduce using rule 1052 (template-name)
    $default  reduce using rule 289 (enum-head-name)


State 715

  231 deduction-guide: explicit-specifier template-name OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN DEREF simple-template-id SEMICOLON

    IDENTIFIER    shift, and go to state 162
    ALIGNAS       shift, and go to state 4
    ELLIPSIS      shift, and go to state 730
    SCOPE         shift, and go to state 9
    OPEN_SQUARE   shift, and go to state 10
    VIRTUAL       shift, and go to state 11
    CLASS         shift, and go to state 12
    STRUCT        shift, and go to state 13
    UNION         shift, and go to state 14
    CONST         shift, and go to state 18
    VOLATILE      shift, and go to state 19
    FRIEND        shift, and go to state 20
    TYPEDEF       shift, and go to state 21
    CONSTEXPR     shift, and go to state 22
    CONSTEVAL     shift, and go to state 23
    CONSTINIT     shift, and go to state 24
    INLINE        shift, and go to state 258
    DECLTYPE      shift, and go to state 26
    ENUM          shift, and go to state 27
    EXTERN        shift, and go to state 259
    EXPLICIT      shift, and go to state 29
    THIS          shift, and go to state 471
    AUTO          shift, and go to state 36
    CHAR          shift, and go to state 37
    CHAR8_T       shift, and go to state 38
    CHAR16_T      shift, and go to state 39
    CHAR32_T      shift, and go to state 40
    WCHAR_T       shift, and go to state 41
    BOOL          shift, and go to state 42
    SHORT         shift, and go to state 43
    INT           shift, and go to state 44
    LONG          shift, and go to state 45
    SIGNED        shift, and go to state 46
    UNSIGNED      shift, and go to state 47
    FLOAT         shift, and go to state 48
    DOUBLE        shift, and go to state 49
    VOID          shift, and go to state 50
    STATIC        shift, and go to state 52
    THREAD_LOCAL  shift, and go to state 53
    MUTABLE       shift, and go to state 54
    TYPENAME      shift, and go to state 55

    alignment-specifier           go to state 57
    attribute-specifier           go to state 60
    attribute-specifier-seq       go to state 473
    class-head                    go to state 63
    class-key                     go to state 64
    class-name                    go to state 65
    class-specifier               go to state 66
    concept-name                  go to state 67
    cv-qualifier                  go to state 69
    decl-specifier                go to state 70
    decl-specifier-seq            go to state 474
    decltype-specifier            go to state 76
    defining-type-specifier       go to state 78
    elaborated-enum-specifier     go to state 79
    elaborated-type-specifier     go to state 80
    enum-head                     go to state 82
    enum-key                      go to state 263
    enum-name                     go to state 84
    enum-specifier                go to state 85
    explicit-specifier            go to state 264
    function-specifier            go to state 91
    namespace-alias               go to state 99
    namespace-name                go to state 102
    nested-name-specifier         go to state 212
    parameter-declaration         go to state 731
    parameter-declaration-clause  go to state 1206
    parameter-declaration-list    go to state 733
    placeholder-type-specifier    go to state 109
    simple-template-id            go to state 141
    simple-type-specifier         go to state 115
    storage-class-specifier       go to state 117
    template-name                 go to state 215
    type-constraint               go to state 123
    type-name                     go to state 124
    type-specifier                go to state 125
    typedef-name                  go to state 126
    typename-specifier            go to state 127


State 716

  224 declaration-seq: declaration-seq • declaration
  1063 translation-unit: global-module-fragment module-declaration declaration-seq •
  1067                 | global-module-fragment module-declaration declaration-seq • private-module-fragment

    USING          shift, and go to state 1
    IDENTIFIER     shift, and go to state 2
    SEMICOLON      shift, and go to state 3
    ALIGNAS        shift, and go to state 4
    OPEN_PAREN     shift, and go to state 5
    ELLIPSIS       shift, and go to state 6
    AND            shift, and go to state 7
    ASM            shift, and go to state 8
    SCOPE          shift, and go to state 9
    OPEN_SQUARE    shift, and go to state 10
    VIRTUAL        shift, and go to state 11
    CLASS          shift, and go to state 12
    STRUCT         shift, and go to state 13
    UNION          shift, and go to state 14
    TEMPLATE       shift, and go to state 15
    AND_AND        shift, and go to state 16
    OPERATOR       shift, and go to state 17
    CONST          shift, and go to state 18
    VOLATILE       shift, and go to state 19
    FRIEND         shift, and go to state 20
    TYPEDEF        shift, and go to state 21
    CONSTEXPR      shift, and go to state 22
    CONSTEVAL      shift, and go to state 23
    CONSTINIT      shift, and go to state 24
    INLINE         shift, and go to state 25
    DECLTYPE       shift, and go to state 26
    ENUM           shift, and go to state 27
    EXTERN         shift, and go to state 28
    EXPLICIT       shift, and go to state 29
    EXPORT         shift, and go to state 157
    MULT           shift, and go to state 31
    MODULE         shift, and go to state 316
    IMPORT         shift, and go to state 33
    NAMESPACE      shift, and go to state 34
    COMPL          shift, and go to state 35
    AUTO           shift, and go to state 36
    CHAR           shift, and go to state 37
    CHAR8_T        shift, and go to state 38
    CHAR16_T       shift, and go to state 39
    CHAR32_T       shift, and go to state 40
    WCHAR_T        shift, and go to state 41
    BOOL           shift, and go to state 42
    SHORT          shift, and go to state 43
    INT            shift, and go to state 44
    LONG           shift, and go to state 45
    SIGNED         shift, and go to state 46
    UNSIGNED       shift, and go to state 47
    FLOAT          shift, and go to state 48
    DOUBLE         shift, and go to state 49
    VOID           shift, and go to state 50
    STATIC_ASSERT  shift, and go to state 51
    STATIC         shift, and go to state 52
    THREAD_LOCAL   shift, and go to state 53
    MUTABLE        shift, and go to state 54
    TYPENAME       shift, and go to state 55

    $default  reduce using rule 1063 (translation-unit)

    alias-declaration                go to state 56
    alignment-specifier              go to state 57
    asm-declaration                  go to state 58
    attribute-declaration            go to state 59
    attribute-specifier              go to state 60
    attribute-specifier-seq          go to state 61
    block-declaration                go to state 62
    class-head                       go to state 63
    class-key                        go to state 64
    class-name                       go to state 65
    class-specifier                  go to state 66
    concept-name                     go to state 67
    conversion-function-id           go to state 68
    cv-qualifier                     go to state 69
    decl-specifier                   go to state 70
    decl-specifier-seq               go to state 71
    declaration                      go to state 285
    declarator                       go to state 74
    declarator-id                    go to state 75
    decltype-specifier               go to state 76
    deduction-guide                  go to state 77
    defining-type-specifier          go to state 78
    elaborated-enum-specifier        go to state 79
    elaborated-type-specifier        go to state 80
    empty-declaration                go to state 81
    enum-head                        go to state 82
    enum-key                         go to state 83
    enum-name                        go to state 84
    enum-specifier                   go to state 85
    explicit-instantiation           go to state 86
    explicit-specialization          go to state 87
    explicit-specifier               go to state 88
    export-declaration               go to state 89
    function-definition              go to state 90
    function-specifier               go to state 91
    id-expression                    go to state 93
    linkage-specification            go to state 94
    literal-operator-id              go to state 95
    module-import-declaration        go to state 97
    named-namespace-definition       go to state 98
    namespace-alias                  go to state 99
    namespace-alias-definition       go to state 100
    namespace-definition             go to state 101
    namespace-name                   go to state 102
    nested-name-specifier            go to state 103
    nested-namespace-definition      go to state 104
    nodeclspec-function-declaration  go to state 105
    noptr-declarator                 go to state 106
    opaque-enum-declaration          go to state 107
    operator-function-id             go to state 108
    placeholder-type-specifier       go to state 109
    private-module-fragment          go to state 1207
    ptr-declarator                   go to state 110
    ptr-operator                     go to state 111
    qualified-id                     go to state 112
    simple-declaration               go to state 113
    simple-template-id               go to state 114
    simple-type-specifier            go to state 115
    static_assert-declaration        go to state 116
    storage-class-specifier          go to state 117
    template-declaration             go to state 118
    template-head                    go to state 119
    template-id                      go to state 120
    template-name                    go to state 121
    type-constraint                  go to state 123
    type-name                        go to state 124
    type-specifier                   go to state 125
    typedef-name                     go to state 126
    typename-specifier               go to state 127
    unnamed-namespace-definition     go to state 128
    unqualified-id                   go to state 129
    using-declaration                go to state 130
    using-directive                  go to state 131
    using-enum-declaration           go to state 132


State 717

  1065 translation-unit: global-module-fragment module-declaration private-module-fragment •

    $default  reduce using rule 1065 (translation-unit)


State 718

  1050 template-id: literal-operator-id LESS GREATER •

    $default  reduce using rule 1050 (template-id)


State 719

  1041 template-argument-list: template-argument-list • COMMA template-argument
  1042                       | template-argument-list • COMMA template-argument ELLIPSIS
  1051 template-id: literal-operator-id LESS template-argument-list • GREATER

    COMMA    shift, and go to state 1129
    GREATER  shift, and go to state 1208


State 720

  886 private-module-fragment: MODULE COLON • PRIVATE SEMICOLON
  887                        | MODULE COLON • PRIVATE SEMICOLON declaration-seq

    PRIVATE  shift, and go to state 1209


State 721

  1068 translation-unit: module-declaration declaration-seq private-module-fragment •

    $default  reduce using rule 1068 (translation-unit)


State 722

  659 nested-name-specifier: nested-name-specifier IDENTIFIER SCOPE •

    $default  reduce using rule 659 (nested-name-specifier)


State 723

  1052 template-name: IDENTIFIER •
  1140 unqualified-id: IDENTIFIER •

    LESS      reduce using rule 1052 (template-name)
    LESS      [reduce using rule 1140 (unqualified-id)]
    $default  reduce using rule 1140 (unqualified-id)


State 724

  661 nested-name-specifier: nested-name-specifier TEMPLATE simple-template-id • SCOPE
  987 simple-type-specifier: nested-name-specifier TEMPLATE simple-template-id •
  1047 template-id: simple-template-id •

    SCOPE  shift, and go to state 1210

    PLUS          reduce using rule 1047 (template-id)
    MINUS         reduce using rule 1047 (template-id)
    EQ            reduce using rule 987 (simple-type-specifier)
    EQ            [reduce using rule 1047 (template-id)]
    SEMICOLON     reduce using rule 987 (simple-type-specifier)
    SEMICOLON     [reduce using rule 1047 (template-id)]
    ALIGNAS       reduce using rule 987 (simple-type-specifier)
    ALIGNAS       [reduce using rule 1047 (template-id)]
    OPEN_PAREN    reduce using rule 987 (simple-type-specifier)
    OPEN_PAREN    [reduce using rule 1047 (template-id)]
    CLOSE_PAREN   reduce using rule 987 (simple-type-specifier)
    CLOSE_PAREN   [reduce using rule 1047 (template-id)]
    ELLIPSIS      reduce using rule 987 (simple-type-specifier)
    ELLIPSIS      [reduce using rule 1047 (template-id)]
    AND           reduce using rule 987 (simple-type-specifier)
    AND           [reduce using rule 1047 (template-id)]
    MULT_EQ       reduce using rule 1047 (template-id)
    DIV_EQ        reduce using rule 1047 (template-id)
    MOD_EQ        reduce using rule 1047 (template-id)
    PLUS_EQ       reduce using rule 1047 (template-id)
    MINUS_EQ      reduce using rule 1047 (template-id)
    RSHIFT_EQ     reduce using rule 1047 (template-id)
    LSHIFT_EQ     reduce using rule 1047 (template-id)
    AND_EQ        reduce using rule 1047 (template-id)
    XOR_EQ        reduce using rule 1047 (template-id)
    OR_EQ         reduce using rule 1047 (template-id)
    COMMA         reduce using rule 987 (simple-type-specifier)
    COMMA         [reduce using rule 1047 (template-id)]
    SCOPE         [reduce using rule 987 (simple-type-specifier)]
    OPEN_SQUARE   reduce using rule 987 (simple-type-specifier)
    OPEN_SQUARE   [reduce using rule 1047 (template-id)]
    CLOSE_SQUARE  reduce using rule 1047 (template-id)
    COLON         reduce using rule 987 (simple-type-specifier)
    COLON         [reduce using rule 1047 (template-id)]
    OPEN_BRACE    reduce using rule 987 (simple-type-specifier)
    OPEN_BRACE    [reduce using rule 1047 (template-id)]
    CLOSE_BRACE   reduce using rule 1047 (template-id)
    FINAL         reduce using rule 1047 (template-id)
    SPACESHIP     reduce using rule 1047 (template-id)
    QUERY         reduce using rule 1047 (template-id)
    AND_AND       reduce using rule 987 (simple-type-specifier)
    AND_AND       [reduce using rule 1047 (template-id)]
    OR_OR         reduce using rule 1047 (template-id)
    DEREF         reduce using rule 1047 (template-id)
    DOT           reduce using rule 1047 (template-id)
    EQ_EQ         reduce using rule 1047 (template-id)
    NOT_EQ        reduce using rule 1047 (template-id)
    XOR           reduce using rule 1047 (template-id)
    LESS          reduce using rule 1047 (template-id)
    GREATER       reduce using rule 987 (simple-type-specifier)
    GREATER       [reduce using rule 1047 (template-id)]
    MULT          reduce using rule 987 (simple-type-specifier)
    MULT          [reduce using rule 1047 (template-id)]
    DIV           reduce using rule 1047 (template-id)
    MOD           reduce using rule 1047 (template-id)
    OR            reduce using rule 1047 (template-id)
    LSHIFT        reduce using rule 1047 (template-id)
    RSHIFT        reduce using rule 1047 (template-id)
    LESS_EQ       reduce using rule 1047 (template-id)
    GREATER_EQ    reduce using rule 1047 (template-id)
    DOT_STAR      reduce using rule 1047 (template-id)
    DEREF_STAR    reduce using rule 1047 (template-id)
    TRY           reduce using rule 1047 (template-id)
    REQUIRES      reduce using rule 1047 (template-id)
    PLUS_PLUS     reduce using rule 1047 (template-id)
    MINUS_MINUS   reduce using rule 1047 (template-id)
    OVERRIDE      reduce using rule 1047 (template-id)
    $default      reduce using rule 987 (simple-type-specifier)


State 725

  910 qualified-id: nested-name-specifier TEMPLATE unqualified-id •

    $default  reduce using rule 910 (qualified-id)


State 726

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  902 ptr-operator: nested-name-specifier MULT attribute-specifier-seq •
  904             | nested-name-specifier MULT attribute-specifier-seq • cv-qualifier-seq

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10
    CONST        shift, and go to state 18
    VOLATILE     shift, and go to state 19

    ALIGNAS      [reduce using rule 902 (ptr-operator)]
    OPEN_SQUARE  [reduce using rule 902 (ptr-operator)]
    CONST        [reduce using rule 902 (ptr-operator)]
    VOLATILE     [reduce using rule 902 (ptr-operator)]
    $default     reduce using rule 902 (ptr-operator)

    alignment-specifier  go to state 57
    attribute-specifier  go to state 260
    cv-qualifier         go to state 233
    cv-qualifier-seq     go to state 1211


State 727

  903 ptr-operator: nested-name-specifier MULT cv-qualifier-seq •

    $default  reduce using rule 903 (ptr-operator)


State 728

  1072 type-constraint: nested-name-specifier concept-name LESS • GREATER
  1074                | nested-name-specifier concept-name LESS • template-argument-list GREATER

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 135
    UNICODE_8         shift, and go to state 184
    GREATER           shift, and go to state 1212
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-key                            go to state 209
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 407
    constant-expression                  go to state 635
    conversion-function-id               go to state 68
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 636
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 430
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    string-literal                       go to state 445
    template-argument                    go to state 637
    template-argument-list               go to state 1213
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-id                              go to state 639
    type-name                            go to state 124
    type-specifier                       go to state 216
    type-specifier-seq                   go to state 447
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 729

  660 nested-name-specifier: nested-name-specifier simple-template-id SCOPE •

    $default  reduce using rule 660 (nested-name-specifier)


State 730

  828 parameter-declaration-clause: ELLIPSIS •

    $default  reduce using rule 828 (parameter-declaration-clause)


State 731

  830 parameter-declaration-list: parameter-declaration •

    $default  reduce using rule 830 (parameter-declaration-list)


State 732

  832 parameters-and-qualifiers: OPEN_PAREN parameter-declaration-clause • CLOSE_PAREN
  833                          | OPEN_PAREN parameter-declaration-clause • CLOSE_PAREN cv-qualifier-seq
  834                          | OPEN_PAREN parameter-declaration-clause • CLOSE_PAREN ref-qualifier
  835                          | OPEN_PAREN parameter-declaration-clause • CLOSE_PAREN cv-qualifier-seq ref-qualifier
  836                          | OPEN_PAREN parameter-declaration-clause • CLOSE_PAREN noexcept-specifier
  837                          | OPEN_PAREN parameter-declaration-clause • CLOSE_PAREN cv-qualifier-seq noexcept-specifier
  838                          | OPEN_PAREN parameter-declaration-clause • CLOSE_PAREN ref-qualifier noexcept-specifier
  839                          | OPEN_PAREN parameter-declaration-clause • CLOSE_PAREN cv-qualifier-seq ref-qualifier noexcept-specifier
  840                          | OPEN_PAREN parameter-declaration-clause • CLOSE_PAREN attribute-specifier-seq
  841                          | OPEN_PAREN parameter-declaration-clause • CLOSE_PAREN cv-qualifier-seq attribute-specifier-seq
  842                          | OPEN_PAREN parameter-declaration-clause • CLOSE_PAREN ref-qualifier attribute-specifier-seq
  843                          | OPEN_PAREN parameter-declaration-clause • CLOSE_PAREN cv-qualifier-seq ref-qualifier attribute-specifier-seq
  844                          | OPEN_PAREN parameter-declaration-clause • CLOSE_PAREN noexcept-specifier attribute-specifier-seq
  845                          | OPEN_PAREN parameter-declaration-clause • CLOSE_PAREN cv-qualifier-seq noexcept-specifier attribute-specifier-seq
  846                          | OPEN_PAREN parameter-declaration-clause • CLOSE_PAREN ref-qualifier noexcept-specifier attribute-specifier-seq
  847                          | OPEN_PAREN parameter-declaration-clause • CLOSE_PAREN cv-qualifier-seq ref-qualifier noexcept-specifier attribute-specifier-seq

    CLOSE_PAREN  shift, and go to state 1214


State 733

  826 parameter-declaration-clause: parameter-declaration-list •
  827                             | parameter-declaration-list • ELLIPSIS
  829                             | parameter-declaration-list • COMMA ELLIPSIS
  831 parameter-declaration-list: parameter-declaration-list • COMMA parameter-declaration

    ELLIPSIS  shift, and go to state 1215
    COMMA     shift, and go to state 1216

    $default  reduce using rule 826 (parameter-declaration-clause)


State 734

  724 noptr-declarator: noptr-declarator OPEN_SQUARE CLOSE_SQUARE •
  726                 | noptr-declarator OPEN_SQUARE CLOSE_SQUARE • attribute-specifier-seq

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    OPEN_SQUARE  [reduce using rule 724 (noptr-declarator)]
    $default     reduce using rule 724 (noptr-declarator)

    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 1217


State 735

  725 noptr-declarator: noptr-declarator OPEN_SQUARE constant-expression • CLOSE_SQUARE
  727                 | noptr-declarator OPEN_SQUARE constant-expression • CLOSE_SQUARE attribute-specifier-seq

    CLOSE_SQUARE  shift, and go to state 1218


State 736

  1059 trailing-return-type: DEREF • type-id

    IDENTIFIER  shift, and go to state 162
    SCOPE       shift, and go to state 9
    CLASS       shift, and go to state 12
    STRUCT      shift, and go to state 13
    UNION       shift, and go to state 14
    CONST       shift, and go to state 18
    VOLATILE    shift, and go to state 19
    DECLTYPE    shift, and go to state 26
    ENUM        shift, and go to state 135
    AUTO        shift, and go to state 36
    CHAR        shift, and go to state 37
    CHAR8_T     shift, and go to state 38
    CHAR16_T    shift, and go to state 39
    CHAR32_T    shift, and go to state 40
    WCHAR_T     shift, and go to state 41
    BOOL        shift, and go to state 42
    SHORT       shift, and go to state 43
    INT         shift, and go to state 44
    LONG        shift, and go to state 45
    SIGNED      shift, and go to state 46
    UNSIGNED    shift, and go to state 47
    FLOAT       shift, and go to state 48
    DOUBLE      shift, and go to state 49
    VOID        shift, and go to state 50
    TYPENAME    shift, and go to state 55

    class-key                   go to state 209
    class-name                  go to state 65
    concept-name                go to state 67
    cv-qualifier                go to state 69
    decltype-specifier          go to state 76
    elaborated-enum-specifier   go to state 79
    elaborated-type-specifier   go to state 80
    enum-name                   go to state 84
    namespace-alias             go to state 99
    namespace-name              go to state 102
    nested-name-specifier       go to state 212
    placeholder-type-specifier  go to state 109
    simple-template-id          go to state 141
    simple-type-specifier       go to state 115
    template-name               go to state 215
    type-constraint             go to state 123
    type-id                     go to state 1219
    type-name                   go to state 124
    type-specifier              go to state 216
    type-specifier-seq          go to state 447
    typedef-name                go to state 126
    typename-specifier          go to state 127


State 737

  227 declarator: noptr-declarator parameters-and-qualifiers trailing-return-type •

    $default  reduce using rule 227 (declarator)


State 738

  1048 template-id: operator-function-id LESS GREATER •

    $default  reduce using rule 1048 (template-id)


State 739

  1041 template-argument-list: template-argument-list • COMMA template-argument
  1042                       | template-argument-list • COMMA template-argument ELLIPSIS
  1049 template-id: operator-function-id LESS template-argument-list • GREATER

    COMMA    shift, and go to state 1129
    GREATER  shift, and go to state 1220


State 740

  163 concept-name: IDENTIFIER •

    $default  reduce using rule 163 (concept-name)


State 741

  162 concept-definition: CONCEPT concept-name • EQ constraint-expression SEMICOLON

    EQ  shift, and go to state 1221


State 742

  232 deduction-guide: template-name OPEN_PAREN parameter-declaration-clause • CLOSE_PAREN DEREF simple-template-id SEMICOLON

    CLOSE_PAREN  shift, and go to state 1222


State 743

  983 simple-template-id: template-name LESS GREATER •

    $default  reduce using rule 983 (simple-template-id)


State 744

  984 simple-template-id: template-name LESS template-argument-list • GREATER
  1041 template-argument-list: template-argument-list • COMMA template-argument
  1042                       | template-argument-list • COMMA template-argument ELLIPSIS

    COMMA    shift, and go to state 1129
    GREATER  shift, and go to state 1223


State 745

  850 placeholder-type-specifier: type-constraint DECLTYPE OPEN_PAREN • AUTO CLOSE_PAREN

    AUTO  shift, and go to state 1224


State 746

   13 alias-declaration: USING IDENTIFIER EQ defining-type-id • SEMICOLON

    SEMICOLON  shift, and go to state 1225


State 747

  238 defining-type-specifier-seq: defining-type-specifier •
  239                            | defining-type-specifier • attribute-specifier-seq
  240                            | defining-type-specifier • defining-type-specifier-seq

    IDENTIFIER   shift, and go to state 162
    ALIGNAS      shift, and go to state 4
    SCOPE        shift, and go to state 9
    OPEN_SQUARE  shift, and go to state 10
    CLASS        shift, and go to state 12
    STRUCT       shift, and go to state 13
    UNION        shift, and go to state 14
    CONST        shift, and go to state 18
    VOLATILE     shift, and go to state 19
    DECLTYPE     shift, and go to state 26
    ENUM         shift, and go to state 27
    AUTO         shift, and go to state 36
    CHAR         shift, and go to state 37
    CHAR8_T      shift, and go to state 38
    CHAR16_T     shift, and go to state 39
    CHAR32_T     shift, and go to state 40
    WCHAR_T      shift, and go to state 41
    BOOL         shift, and go to state 42
    SHORT        shift, and go to state 43
    INT          shift, and go to state 44
    LONG         shift, and go to state 45
    SIGNED       shift, and go to state 46
    UNSIGNED     shift, and go to state 47
    FLOAT        shift, and go to state 48
    DOUBLE       shift, and go to state 49
    VOID         shift, and go to state 50
    TYPENAME     shift, and go to state 55

    IDENTIFIER   [reduce using rule 238 (defining-type-specifier-seq)]
    SCOPE        [reduce using rule 238 (defining-type-specifier-seq)]
    OPEN_SQUARE  [reduce using rule 238 (defining-type-specifier-seq)]
    DECLTYPE     [reduce using rule 238 (defining-type-specifier-seq)]
    $default     reduce using rule 238 (defining-type-specifier-seq)

    alignment-specifier          go to state 57
    attribute-specifier          go to state 60
    attribute-specifier-seq      go to state 1226
    class-head                   go to state 63
    class-key                    go to state 64
    class-name                   go to state 65
    class-specifier              go to state 66
    concept-name                 go to state 67
    cv-qualifier                 go to state 69
    decltype-specifier           go to state 76
    defining-type-specifier      go to state 747
    defining-type-specifier-seq  go to state 1227
    elaborated-enum-specifier    go to state 79
    elaborated-type-specifier    go to state 80
    enum-head                    go to state 82
    enum-key                     go to state 263
    enum-name                    go to state 84
    enum-specifier               go to state 85
    namespace-alias              go to state 99
    namespace-name               go to state 102
    nested-name-specifier        go to state 212
    placeholder-type-specifier   go to state 109
    simple-template-id           go to state 141
    simple-type-specifier        go to state 115
    template-name                go to state 215
    type-constraint              go to state 123
    type-name                    go to state 124
    type-specifier               go to state 125
    typedef-name                 go to state 126
    typename-specifier           go to state 127


State 748

  233 defining-type-id: defining-type-specifier-seq •
  234                 | defining-type-specifier-seq • abstract-declarator

    IDENTIFIER   shift, and go to state 253
    OPEN_PAREN   shift, and go to state 939
    ELLIPSIS     shift, and go to state 940
    AND          shift, and go to state 7
    SCOPE        shift, and go to state 9
    OPEN_SQUARE  shift, and go to state 941
    AND_AND      shift, and go to state 16
    DECLTYPE     shift, and go to state 134
    MULT         shift, and go to state 31

    $default  reduce using rule 233 (defining-type-id)

    abstract-declarator             go to state 1228
    abstract-pack-declarator        go to state 943
    class-name                      go to state 65
    decltype-specifier              go to state 138
    enum-name                       go to state 84
    namespace-alias                 go to state 99
    namespace-name                  go to state 102
    nested-name-specifier           go to state 517
    noptr-abstract-declarator       go to state 944
    noptr-abstract-pack-declarator  go to state 945
    parameters-and-qualifiers       go to state 946
    ptr-abstract-declarator         go to state 947
    ptr-operator                    go to state 948
    simple-template-id              go to state 141
    template-name                   go to state 142
    type-name                       go to state 143
    typedef-name                    go to state 126


State 749

   14 alias-declaration: USING IDENTIFIER attribute-specifier-seq EQ • defining-type-id SEMICOLON

    IDENTIFIER  shift, and go to state 162
    SCOPE       shift, and go to state 9
    CLASS       shift, and go to state 12
    STRUCT      shift, and go to state 13
    UNION       shift, and go to state 14
    CONST       shift, and go to state 18
    VOLATILE    shift, and go to state 19
    DECLTYPE    shift, and go to state 26
    ENUM        shift, and go to state 27
    AUTO        shift, and go to state 36
    CHAR        shift, and go to state 37
    CHAR8_T     shift, and go to state 38
    CHAR16_T    shift, and go to state 39
    CHAR32_T    shift, and go to state 40
    WCHAR_T     shift, and go to state 41
    BOOL        shift, and go to state 42
    SHORT       shift, and go to state 43
    INT         shift, and go to state 44
    LONG        shift, and go to state 45
    SIGNED      shift, and go to state 46
    UNSIGNED    shift, and go to state 47
    FLOAT       shift, and go to state 48
    DOUBLE      shift, and go to state 49
    VOID        shift, and go to state 50
    TYPENAME    shift, and go to state 55

    class-head                   go to state 63
    class-key                    go to state 64
    class-name                   go to state 65
    class-specifier              go to state 66
    concept-name                 go to state 67
    cv-qualifier                 go to state 69
    decltype-specifier           go to state 76
    defining-type-id             go to state 1229
    defining-type-specifier      go to state 747
    defining-type-specifier-seq  go to state 748
    elaborated-enum-specifier    go to state 79
    elaborated-type-specifier    go to state 80
    enum-head                    go to state 82
    enum-key                     go to state 263
    enum-name                    go to state 84
    enum-specifier               go to state 85
    namespace-alias              go to state 99
    namespace-name               go to state 102
    nested-name-specifier        go to state 212
    placeholder-type-specifier   go to state 109
    simple-template-id           go to state 141
    simple-type-specifier        go to state 115
    template-name                go to state 215
    type-constraint              go to state 123
    type-name                    go to state 124
    type-specifier               go to state 125
    typedef-name                 go to state 126
    typename-specifier           go to state 127


State 750

  1172 using-directive: USING NAMESPACE namespace-name SEMICOLON •

    $default  reduce using rule 1172 (using-directive)


State 751

  647 namespace-alias: IDENTIFIER •
  653 namespace-name: IDENTIFIER •
  659 nested-name-specifier: nested-name-specifier IDENTIFIER • SCOPE
  1052 template-name: IDENTIFIER •

    SCOPE  shift, and go to state 722

    SEMICOLON  reduce using rule 647 (namespace-alias)
    SEMICOLON  [reduce using rule 653 (namespace-name)]
    LESS       reduce using rule 1052 (template-name)
    $default   reduce using rule 647 (namespace-alias)


State 752

  1174 using-directive: USING NAMESPACE nested-name-specifier namespace-name • SEMICOLON

    SEMICOLON  shift, and go to state 1230


State 753

  1165 using-declarator: TYPENAME nested-name-specifier unqualified-id •

    $default  reduce using rule 1165 (using-declarator)


State 754

  661 nested-name-specifier: nested-name-specifier TEMPLATE simple-template-id • SCOPE

    SCOPE  shift, and go to state 1210


State 755

  1169 using-declarator-list: using-declarator-list COMMA using-declarator •
  1170                      | using-declarator-list COMMA using-declarator • ELLIPSIS

    ELLIPSIS  shift, and go to state 1231

    $default  reduce using rule 1169 (using-declarator-list)


State 756

  346 fold-expression: OPEN_PAREN ELLIPSIS • fold-operator cast-expression CLOSE_PAREN

    PLUS        shift, and go to state 1232
    MINUS       shift, and go to state 1233
    EQ          shift, and go to state 1234
    AND         shift, and go to state 1235
    MULT_EQ     shift, and go to state 1236
    DIV_EQ      shift, and go to state 1237
    MOD_EQ      shift, and go to state 1238
    PLUS_EQ     shift, and go to state 1239
    MINUS_EQ    shift, and go to state 1240
    RSHIFT_EQ   shift, and go to state 1241
    LSHIFT_EQ   shift, and go to state 1242
    AND_EQ      shift, and go to state 1243
    XOR_EQ      shift, and go to state 1244
    OR_EQ       shift, and go to state 1245
    COMMA       shift, and go to state 1246
    AND_AND     shift, and go to state 1247
    OR_OR       shift, and go to state 1248
    EQ_EQ       shift, and go to state 1249
    NOT_EQ      shift, and go to state 1250
    XOR         shift, and go to state 1251
    LESS        shift, and go to state 1252
    GREATER     shift, and go to state 1253
    MULT        shift, and go to state 1254
    DIV         shift, and go to state 1255
    MOD         shift, and go to state 1256
    OR          shift, and go to state 1257
    LSHIFT      shift, and go to state 1258
    RSHIFT      shift, and go to state 1259
    LESS_EQ     shift, and go to state 1260
    GREATER_EQ  shift, and go to state 1261
    DOT_STAR    shift, and go to state 1262
    DEREF_STAR  shift, and go to state 1263

    fold-operator  go to state 1264


State 757

  345 fold-expression: OPEN_PAREN cast-expression • fold-operator ELLIPSIS CLOSE_PAREN
  347                | OPEN_PAREN cast-expression • fold-operator ELLIPSIS fold-operator cast-expression CLOSE_PAREN
  852 pm-expression: cast-expression •

    PLUS        shift, and go to state 1232
    MINUS       shift, and go to state 1233
    EQ          shift, and go to state 1234
    AND         shift, and go to state 1235
    MULT_EQ     shift, and go to state 1236
    DIV_EQ      shift, and go to state 1237
    MOD_EQ      shift, and go to state 1238
    PLUS_EQ     shift, and go to state 1239
    MINUS_EQ    shift, and go to state 1240
    RSHIFT_EQ   shift, and go to state 1241
    LSHIFT_EQ   shift, and go to state 1242
    AND_EQ      shift, and go to state 1243
    XOR_EQ      shift, and go to state 1244
    OR_EQ       shift, and go to state 1245
    COMMA       shift, and go to state 1246
    AND_AND     shift, and go to state 1247
    OR_OR       shift, and go to state 1248
    EQ_EQ       shift, and go to state 1249
    NOT_EQ      shift, and go to state 1250
    XOR         shift, and go to state 1251
    LESS        shift, and go to state 1252
    GREATER     shift, and go to state 1253
    MULT        shift, and go to state 1254
    DIV         shift, and go to state 1255
    MOD         shift, and go to state 1256
    OR          shift, and go to state 1257
    LSHIFT      shift, and go to state 1258
    RSHIFT      shift, and go to state 1259
    LESS_EQ     shift, and go to state 1260
    GREATER_EQ  shift, and go to state 1261
    DOT_STAR    shift, and go to state 1262
    DEREF_STAR  shift, and go to state 1263

    PLUS        [reduce using rule 852 (pm-expression)]
    MINUS       [reduce using rule 852 (pm-expression)]
    EQ          [reduce using rule 852 (pm-expression)]
    AND         [reduce using rule 852 (pm-expression)]
    MULT_EQ     [reduce using rule 852 (pm-expression)]
    DIV_EQ      [reduce using rule 852 (pm-expression)]
    MOD_EQ      [reduce using rule 852 (pm-expression)]
    PLUS_EQ     [reduce using rule 852 (pm-expression)]
    MINUS_EQ    [reduce using rule 852 (pm-expression)]
    RSHIFT_EQ   [reduce using rule 852 (pm-expression)]
    LSHIFT_EQ   [reduce using rule 852 (pm-expression)]
    AND_EQ      [reduce using rule 852 (pm-expression)]
    XOR_EQ      [reduce using rule 852 (pm-expression)]
    OR_EQ       [reduce using rule 852 (pm-expression)]
    COMMA       [reduce using rule 852 (pm-expression)]
    AND_AND     [reduce using rule 852 (pm-expression)]
    OR_OR       [reduce using rule 852 (pm-expression)]
    EQ_EQ       [reduce using rule 852 (pm-expression)]
    NOT_EQ      [reduce using rule 852 (pm-expression)]
    XOR         [reduce using rule 852 (pm-expression)]
    LESS        [reduce using rule 852 (pm-expression)]
    GREATER     [reduce using rule 852 (pm-expression)]
    MULT        [reduce using rule 852 (pm-expression)]
    DIV         [reduce using rule 852 (pm-expression)]
    MOD         [reduce using rule 852 (pm-expression)]
    OR          [reduce using rule 852 (pm-expression)]
    LSHIFT      [reduce using rule 852 (pm-expression)]
    RSHIFT      [reduce using rule 852 (pm-expression)]
    LESS_EQ     [reduce using rule 852 (pm-expression)]
    GREATER_EQ  [reduce using rule 852 (pm-expression)]
    DOT_STAR    [reduce using rule 852 (pm-expression)]
    DEREF_STAR  [reduce using rule 852 (pm-expression)]
    $default    reduce using rule 852 (pm-expression)

    fold-operator  go to state 1265


State 758

  335 expression: expression • COMMA assignment-expression
  881 primary-expression: OPEN_PAREN expression • CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 1266
    COMMA        shift, and go to state 1029


State 759

  125 cast-expression: OPEN_PAREN type-id • CLOSE_PAREN cast-expression

    CLOSE_PAREN  shift, and go to state 1267


State 760

  241 delete-expression: SCOPE DELETE • cast-expression
  243                  | SCOPE DELETE • OPEN_SQUARE CLOSE_SQUARE cast-expression

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 1268
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 1269
    character-literal                    go to state 405
    class-name                           go to state 65
    concept-name                         go to state 67
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    requires-expression                  go to state 442
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 761

  668 new-expression: SCOPE NEW • new-type-id
  670               | SCOPE NEW • new-placement new-type-id
  672               | SCOPE NEW • new-type-id new-initializer
  674               | SCOPE NEW • new-placement new-type-id new-initializer
  676               | SCOPE NEW • OPEN_PAREN type-id CLOSE_PAREN
  678               | SCOPE NEW • new-placement OPEN_PAREN type-id CLOSE_PAREN
  680               | SCOPE NEW • OPEN_PAREN type-id CLOSE_PAREN new-initializer
  682               | SCOPE NEW • new-placement OPEN_PAREN type-id CLOSE_PAREN new-initializer

    IDENTIFIER  shift, and go to state 162
    OPEN_PAREN  shift, and go to state 1270
    SCOPE       shift, and go to state 9
    CLASS       shift, and go to state 12
    STRUCT      shift, and go to state 13
    UNION       shift, and go to state 14
    CONST       shift, and go to state 18
    VOLATILE    shift, and go to state 19
    DECLTYPE    shift, and go to state 26
    ENUM        shift, and go to state 135
    AUTO        shift, and go to state 36
    CHAR        shift, and go to state 37
    CHAR8_T     shift, and go to state 38
    CHAR16_T    shift, and go to state 39
    CHAR32_T    shift, and go to state 40
    WCHAR_T     shift, and go to state 41
    BOOL        shift, and go to state 42
    SHORT       shift, and go to state 43
    INT         shift, and go to state 44
    LONG        shift, and go to state 45
    SIGNED      shift, and go to state 46
    UNSIGNED    shift, and go to state 47
    FLOAT       shift, and go to state 48
    DOUBLE      shift, and go to state 49
    VOID        shift, and go to state 50
    TYPENAME    shift, and go to state 55

    class-key                   go to state 209
    class-name                  go to state 65
    concept-name                go to state 67
    cv-qualifier                go to state 69
    decltype-specifier          go to state 76
    elaborated-enum-specifier   go to state 79
    elaborated-type-specifier   go to state 80
    enum-name                   go to state 84
    namespace-alias             go to state 99
    namespace-name              go to state 102
    nested-name-specifier       go to state 212
    new-placement               go to state 1271
    new-type-id                 go to state 1272
    placeholder-type-specifier  go to state 109
    simple-template-id          go to state 141
    simple-type-specifier       go to state 115
    template-name               go to state 215
    type-constraint             go to state 123
    type-name                   go to state 124
    type-specifier              go to state 216
    type-specifier-seq          go to state 807
    typedef-name                go to state 126
    typename-specifier          go to state 127


State 762

  466 init-capture: IDENTIFIER • initializer
  957 simple-capture: IDENTIFIER •
  958               | IDENTIFIER • ELLIPSIS

    EQ          shift, and go to state 1273
    OPEN_PAREN  shift, and go to state 643
    ELLIPSIS    shift, and go to state 1274
    OPEN_BRACE  shift, and go to state 935

    $default  reduce using rule 957 (simple-capture)

    brace-or-equal-initializer  go to state 645
    braced-init-list            go to state 646
    initializer                 go to state 1275


State 763

  121 capture-default: EQ •

    $default  reduce using rule 121 (capture-default)


State 764

  465 init-capture: ELLIPSIS • IDENTIFIER initializer

    IDENTIFIER  shift, and go to state 1276


State 765

  120 capture-default: AND •
  467 init-capture: AND • IDENTIFIER initializer
  468             | AND • ELLIPSIS IDENTIFIER initializer
  959 simple-capture: AND • IDENTIFIER
  960               | AND • IDENTIFIER ELLIPSIS

    IDENTIFIER  shift, and go to state 1277
    ELLIPSIS    shift, and go to state 1278

    $default  reduce using rule 120 (capture-default)


State 766

  534 lambda-introducer: OPEN_SQUARE CLOSE_SQUARE •

    $default  reduce using rule 534 (lambda-introducer)


State 767

  962 simple-capture: MULT • THIS

    THIS  shift, and go to state 1279


State 768

  961 simple-capture: THIS •

    $default  reduce using rule 961 (simple-capture)


State 769

  122 capture-list: capture •

    $default  reduce using rule 122 (capture-list)


State 770

  525 lambda-capture: capture-default •
  527               | capture-default • COMMA capture-list

    COMMA  shift, and go to state 1280

    $default  reduce using rule 525 (lambda-capture)


State 771

  123 capture-list: capture-list • COMMA capture
  526 lambda-capture: capture-list •

    COMMA  shift, and go to state 1281

    $default  reduce using rule 526 (lambda-capture)


State 772

  119 capture: init-capture •

    $default  reduce using rule 119 (capture)


State 773

  535 lambda-introducer: OPEN_SQUARE lambda-capture • CLOSE_SQUARE

    CLOSE_SQUARE  shift, and go to state 1282


State 774

  118 capture: simple-capture •

    $default  reduce using rule 118 (capture)


State 775

   58 await-expression: CO_AWAIT cast-expression •

    $default  reduce using rule 58 (await-expression)


State 776

   85 binary-digit: '0' •

    $default  reduce using rule 85 (binary-digit)


State 777

   86 binary-digit: '1' •

    $default  reduce using rule 86 (binary-digit)


State 778

   91 binary-literal: ZERO_LB binary-digit •

    $default  reduce using rule 91 (binary-literal)


State 779

   92 binary-literal: ZERO_HB binary-digit •

    $default  reduce using rule 92 (binary-literal)


State 780

   83 basic-c-char: BASIC_C_CHAR •

    $default  reduce using rule 83 (basic-c-char)


State 781

  113 c-char: basic-c-char •

    $default  reduce using rule 113 (c-char)


State 782

  116 c-char-sequence: c-char •

    $default  reduce using rule 116 (c-char-sequence)


State 783

  117 c-char-sequence: c-char-sequence • c-char
  127 character-literal: SINGLE_QUOTE c-char-sequence • SINGLE_QUOTE

    BASIC_C_CHAR  shift, and go to state 780
    SINGLE_QUOTE  shift, and go to state 1283
    ESCAPE        shift, and go to state 486
    ESCAPE_LX     shift, and go to state 488
    ESCAPE_LU     shift, and go to state 489
    ESCAPE_HU     shift, and go to state 490

    basic-c-char                 go to state 781
    c-char                       go to state 1284
    conditional-escape-sequence  go to state 492
    escape-sequence              go to state 784
    hexadecimal-escape-sequence  go to state 494
    numeric-escape-sequence      go to state 495
    octal-escape-sequence        go to state 496
    simple-escape-sequence       go to state 499
    universal-character-name     go to state 785


State 784

  114 c-char: escape-sequence •

    $default  reduce using rule 114 (c-char)


State 785

  115 c-char: universal-character-name •

    $default  reduce using rule 115 (c-char)


State 786

  692 noexcept-expression: NOEXCEPT OPEN_PAREN • expression CLOSE_PAREN

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 525
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    expression                           go to state 1285
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 787

  244 delete-expression: DELETE OPEN_SQUARE • CLOSE_SQUARE cast-expression
  534 lambda-introducer: OPEN_SQUARE • CLOSE_SQUARE
  535                  | OPEN_SQUARE • lambda-capture CLOSE_SQUARE

    IDENTIFIER    shift, and go to state 762
    EQ            shift, and go to state 763
    ELLIPSIS      shift, and go to state 764
    AND           shift, and go to state 765
    CLOSE_SQUARE  shift, and go to state 1286
    MULT          shift, and go to state 767
    THIS          shift, and go to state 768

    capture          go to state 769
    capture-default  go to state 770
    capture-list     go to state 771
    init-capture     go to state 772
    lambda-capture   go to state 773
    simple-capture   go to state 774


State 788

  242 delete-expression: DELETE cast-expression •

    $default  reduce using rule 242 (delete-expression)


State 789

  249 digit: '0' •

    $default  reduce using rule 249 (digit)


State 790

  250 digit: '1' •

    $default  reduce using rule 250 (digit)


State 791

  251 digit: '2' •

    $default  reduce using rule 251 (digit)


State 792

  252 digit: '3' •

    $default  reduce using rule 252 (digit)


State 793

  253 digit: '4' •

    $default  reduce using rule 253 (digit)


State 794

  254 digit: '5' •

    $default  reduce using rule 254 (digit)


State 795

  255 digit: '6' •

    $default  reduce using rule 255 (digit)


State 796

  256 digit: '7' •

    $default  reduce using rule 256 (digit)


State 797

  257 digit: '8' •

    $default  reduce using rule 257 (digit)


State 798

  258 digit: '9' •

    $default  reduce using rule 258 (digit)


State 799

  260 digit-sequence: digit-sequence • digit
  261               | digit-sequence • SINGLE_QUOTE digit
  388 fractional-constant: DOT digit-sequence •

    SINGLE_QUOTE  shift, and go to state 847
    '0'           shift, and go to state 789
    '1'           shift, and go to state 790
    '2'           shift, and go to state 791
    '3'           shift, and go to state 792
    '4'           shift, and go to state 793
    '5'           shift, and go to state 794
    '6'           shift, and go to state 795
    '7'           shift, and go to state 796
    '8'           shift, and go to state 797
    '9'           shift, and go to state 798

    $default  reduce using rule 388 (fractional-constant)

    digit  go to state 851


State 800

  926 requirement-parameter-list: OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN

    IDENTIFIER    shift, and go to state 162
    ALIGNAS       shift, and go to state 4
    ELLIPSIS      shift, and go to state 730
    SCOPE         shift, and go to state 9
    OPEN_SQUARE   shift, and go to state 10
    VIRTUAL       shift, and go to state 11
    CLASS         shift, and go to state 12
    STRUCT        shift, and go to state 13
    UNION         shift, and go to state 14
    CONST         shift, and go to state 18
    VOLATILE      shift, and go to state 19
    FRIEND        shift, and go to state 20
    TYPEDEF       shift, and go to state 21
    CONSTEXPR     shift, and go to state 22
    CONSTEVAL     shift, and go to state 23
    CONSTINIT     shift, and go to state 24
    INLINE        shift, and go to state 258
    DECLTYPE      shift, and go to state 26
    ENUM          shift, and go to state 27
    EXTERN        shift, and go to state 259
    EXPLICIT      shift, and go to state 29
    THIS          shift, and go to state 471
    AUTO          shift, and go to state 36
    CHAR          shift, and go to state 37
    CHAR8_T       shift, and go to state 38
    CHAR16_T      shift, and go to state 39
    CHAR32_T      shift, and go to state 40
    WCHAR_T       shift, and go to state 41
    BOOL          shift, and go to state 42
    SHORT         shift, and go to state 43
    INT           shift, and go to state 44
    LONG          shift, and go to state 45
    SIGNED        shift, and go to state 46
    UNSIGNED      shift, and go to state 47
    FLOAT         shift, and go to state 48
    DOUBLE        shift, and go to state 49
    VOID          shift, and go to state 50
    STATIC        shift, and go to state 52
    THREAD_LOCAL  shift, and go to state 53
    MUTABLE       shift, and go to state 54
    TYPENAME      shift, and go to state 55

    alignment-specifier           go to state 57
    attribute-specifier           go to state 60
    attribute-specifier-seq       go to state 473
    class-head                    go to state 63
    class-key                     go to state 64
    class-name                    go to state 65
    class-specifier               go to state 66
    concept-name                  go to state 67
    cv-qualifier                  go to state 69
    decl-specifier                go to state 70
    decl-specifier-seq            go to state 474
    decltype-specifier            go to state 76
    defining-type-specifier       go to state 78
    elaborated-enum-specifier     go to state 79
    elaborated-type-specifier     go to state 80
    enum-head                     go to state 82
    enum-key                      go to state 263
    enum-name                     go to state 84
    enum-specifier                go to state 85
    explicit-specifier            go to state 264
    function-specifier            go to state 91
    namespace-alias               go to state 99
    namespace-name                go to state 102
    nested-name-specifier         go to state 212
    parameter-declaration         go to state 731
    parameter-declaration-clause  go to state 1287
    parameter-declaration-list    go to state 733
    placeholder-type-specifier    go to state 109
    simple-template-id            go to state 141
    simple-type-specifier         go to state 115
    storage-class-specifier       go to state 117
    template-name                 go to state 215
    type-constraint               go to state 123
    type-name                     go to state 124
    type-specifier                go to state 125
    typedef-name                  go to state 126
    typename-specifier            go to state 127


State 801

  925 requirement-body: OPEN_BRACE • requirement-seq CLOSE_BRACE

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 1288
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 1289
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 1290
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 525
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    compound-requirement                 go to state 1291
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    expression                           go to state 1292
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    nested-requirement                   go to state 1293
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requirement                          go to state 1294
    requirement-seq                      go to state 1295
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-requirement                   go to state 1296
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    type-requirement                     go to state 1297
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 802

  930 requires-expression: REQUIRES requirement-body •

    $default  reduce using rule 930 (requires-expression)


State 803

  931 requires-expression: REQUIRES requirement-parameter-list • requirement-body

    OPEN_BRACE  shift, and go to state 801

    requirement-body  go to state 1298


State 804

  677 new-expression: NEW OPEN_PAREN • type-id CLOSE_PAREN
  681               | NEW OPEN_PAREN • type-id CLOSE_PAREN new-initializer
  687 new-placement: OPEN_PAREN • expression-list CLOSE_PAREN

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 935
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 135
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 1134
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    braced-init-list                     go to state 1135
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-key                            go to state 209
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    expression-list                      go to state 1299
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    initializer-clause                   go to state 1138
    initializer-list                     go to state 1139
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-id                              go to state 1300
    type-name                            go to state 124
    type-specifier                       go to state 216
    type-specifier-seq                   go to state 447
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 805

  671 new-expression: NEW new-placement • new-type-id
  675               | NEW new-placement • new-type-id new-initializer
  679               | NEW new-placement • OPEN_PAREN type-id CLOSE_PAREN
  683               | NEW new-placement • OPEN_PAREN type-id CLOSE_PAREN new-initializer

    IDENTIFIER  shift, and go to state 162
    OPEN_PAREN  shift, and go to state 1301
    SCOPE       shift, and go to state 9
    CLASS       shift, and go to state 12
    STRUCT      shift, and go to state 13
    UNION       shift, and go to state 14
    CONST       shift, and go to state 18
    VOLATILE    shift, and go to state 19
    DECLTYPE    shift, and go to state 26
    ENUM        shift, and go to state 135
    AUTO        shift, and go to state 36
    CHAR        shift, and go to state 37
    CHAR8_T     shift, and go to state 38
    CHAR16_T    shift, and go to state 39
    CHAR32_T    shift, and go to state 40
    WCHAR_T     shift, and go to state 41
    BOOL        shift, and go to state 42
    SHORT       shift, and go to state 43
    INT         shift, and go to state 44
    LONG        shift, and go to state 45
    SIGNED      shift, and go to state 46
    UNSIGNED    shift, and go to state 47
    FLOAT       shift, and go to state 48
    DOUBLE      shift, and go to state 49
    VOID        shift, and go to state 50
    TYPENAME    shift, and go to state 55

    class-key                   go to state 209
    class-name                  go to state 65
    concept-name                go to state 67
    cv-qualifier                go to state 69
    decltype-specifier          go to state 76
    elaborated-enum-specifier   go to state 79
    elaborated-type-specifier   go to state 80
    enum-name                   go to state 84
    namespace-alias             go to state 99
    namespace-name              go to state 102
    nested-name-specifier       go to state 212
    new-type-id                 go to state 1302
    placeholder-type-specifier  go to state 109
    simple-template-id          go to state 141
    simple-type-specifier       go to state 115
    template-name               go to state 215
    type-constraint             go to state 123
    type-name                   go to state 124
    type-specifier              go to state 216
    type-specifier-seq          go to state 807
    typedef-name                go to state 126
    typename-specifier          go to state 127


State 806

  669 new-expression: NEW new-type-id •
  673               | NEW new-type-id • new-initializer

    OPEN_PAREN  shift, and go to state 1303
    OPEN_BRACE  shift, and go to state 935

    OPEN_BRACE  [reduce using rule 669 (new-expression)]
    $default    reduce using rule 669 (new-expression)

    braced-init-list  go to state 1304
    new-initializer   go to state 1305


State 807

  688 new-type-id: type-specifier-seq •
  689            | type-specifier-seq • new-declarator

    IDENTIFIER   shift, and go to state 253
    AND          shift, and go to state 7
    SCOPE        shift, and go to state 9
    OPEN_SQUARE  shift, and go to state 1306
    AND_AND      shift, and go to state 16
    DECLTYPE     shift, and go to state 134
    MULT         shift, and go to state 31

    AND       [reduce using rule 688 (new-type-id)]
    AND_AND   [reduce using rule 688 (new-type-id)]
    MULT      [reduce using rule 688 (new-type-id)]
    $default  reduce using rule 688 (new-type-id)

    class-name             go to state 65
    decltype-specifier     go to state 138
    enum-name              go to state 84
    namespace-alias        go to state 99
    namespace-name         go to state 102
    nested-name-specifier  go to state 517
    new-declarator         go to state 1307
    noptr-new-declarator   go to state 1308
    ptr-operator           go to state 1309
    simple-template-id     go to state 141
    template-name          go to state 142
    type-name              go to state 143
    typedef-name           go to state 126


State 808

  1118 unary-expression: PLUS_PLUS cast-expression •

    $default  reduce using rule 1118 (unary-expression)


State 809

  1119 unary-expression: MINUS_MINUS cast-expression •

    $default  reduce using rule 1119 (unary-expression)


State 810

  873 postfix-expression: DYNAMIC_CAST LESS • type-id GREATER OPEN_PAREN expression CLOSE_PAREN

    IDENTIFIER  shift, and go to state 162
    SCOPE       shift, and go to state 9
    CLASS       shift, and go to state 12
    STRUCT      shift, and go to state 13
    UNION       shift, and go to state 14
    CONST       shift, and go to state 18
    VOLATILE    shift, and go to state 19
    DECLTYPE    shift, and go to state 26
    ENUM        shift, and go to state 135
    AUTO        shift, and go to state 36
    CHAR        shift, and go to state 37
    CHAR8_T     shift, and go to state 38
    CHAR16_T    shift, and go to state 39
    CHAR32_T    shift, and go to state 40
    WCHAR_T     shift, and go to state 41
    BOOL        shift, and go to state 42
    SHORT       shift, and go to state 43
    INT         shift, and go to state 44
    LONG        shift, and go to state 45
    SIGNED      shift, and go to state 46
    UNSIGNED    shift, and go to state 47
    FLOAT       shift, and go to state 48
    DOUBLE      shift, and go to state 49
    VOID        shift, and go to state 50
    TYPENAME    shift, and go to state 55

    class-key                   go to state 209
    class-name                  go to state 65
    concept-name                go to state 67
    cv-qualifier                go to state 69
    decltype-specifier          go to state 76
    elaborated-enum-specifier   go to state 79
    elaborated-type-specifier   go to state 80
    enum-name                   go to state 84
    namespace-alias             go to state 99
    namespace-name              go to state 102
    nested-name-specifier       go to state 212
    placeholder-type-specifier  go to state 109
    simple-template-id          go to state 141
    simple-type-specifier       go to state 115
    template-name               go to state 215
    type-constraint             go to state 123
    type-id                     go to state 1310
    type-name                   go to state 124
    type-specifier              go to state 216
    type-specifier-seq          go to state 447
    typedef-name                go to state 126
    typename-specifier          go to state 127


State 811

  874 postfix-expression: STATIC_CAST LESS • type-id GREATER OPEN_PAREN expression CLOSE_PAREN

    IDENTIFIER  shift, and go to state 162
    SCOPE       shift, and go to state 9
    CLASS       shift, and go to state 12
    STRUCT      shift, and go to state 13
    UNION       shift, and go to state 14
    CONST       shift, and go to state 18
    VOLATILE    shift, and go to state 19
    DECLTYPE    shift, and go to state 26
    ENUM        shift, and go to state 135
    AUTO        shift, and go to state 36
    CHAR        shift, and go to state 37
    CHAR8_T     shift, and go to state 38
    CHAR16_T    shift, and go to state 39
    CHAR32_T    shift, and go to state 40
    WCHAR_T     shift, and go to state 41
    BOOL        shift, and go to state 42
    SHORT       shift, and go to state 43
    INT         shift, and go to state 44
    LONG        shift, and go to state 45
    SIGNED      shift, and go to state 46
    UNSIGNED    shift, and go to state 47
    FLOAT       shift, and go to state 48
    DOUBLE      shift, and go to state 49
    VOID        shift, and go to state 50
    TYPENAME    shift, and go to state 55

    class-key                   go to state 209
    class-name                  go to state 65
    concept-name                go to state 67
    cv-qualifier                go to state 69
    decltype-specifier          go to state 76
    elaborated-enum-specifier   go to state 79
    elaborated-type-specifier   go to state 80
    enum-name                   go to state 84
    namespace-alias             go to state 99
    namespace-name              go to state 102
    nested-name-specifier       go to state 212
    placeholder-type-specifier  go to state 109
    simple-template-id          go to state 141
    simple-type-specifier       go to state 115
    template-name               go to state 215
    type-constraint             go to state 123
    type-id                     go to state 1311
    type-name                   go to state 124
    type-specifier              go to state 216
    type-specifier-seq          go to state 447
    typedef-name                go to state 126
    typename-specifier          go to state 127


State 812

  875 postfix-expression: REINTERPRET_CAST LESS • type-id GREATER OPEN_PAREN expression CLOSE_PAREN

    IDENTIFIER  shift, and go to state 162
    SCOPE       shift, and go to state 9
    CLASS       shift, and go to state 12
    STRUCT      shift, and go to state 13
    UNION       shift, and go to state 14
    CONST       shift, and go to state 18
    VOLATILE    shift, and go to state 19
    DECLTYPE    shift, and go to state 26
    ENUM        shift, and go to state 135
    AUTO        shift, and go to state 36
    CHAR        shift, and go to state 37
    CHAR8_T     shift, and go to state 38
    CHAR16_T    shift, and go to state 39
    CHAR32_T    shift, and go to state 40
    WCHAR_T     shift, and go to state 41
    BOOL        shift, and go to state 42
    SHORT       shift, and go to state 43
    INT         shift, and go to state 44
    LONG        shift, and go to state 45
    SIGNED      shift, and go to state 46
    UNSIGNED    shift, and go to state 47
    FLOAT       shift, and go to state 48
    DOUBLE      shift, and go to state 49
    VOID        shift, and go to state 50
    TYPENAME    shift, and go to state 55

    class-key                   go to state 209
    class-name                  go to state 65
    concept-name                go to state 67
    cv-qualifier                go to state 69
    decltype-specifier          go to state 76
    elaborated-enum-specifier   go to state 79
    elaborated-type-specifier   go to state 80
    enum-name                   go to state 84
    namespace-alias             go to state 99
    namespace-name              go to state 102
    nested-name-specifier       go to state 212
    placeholder-type-specifier  go to state 109
    simple-template-id          go to state 141
    simple-type-specifier       go to state 115
    template-name               go to state 215
    type-constraint             go to state 123
    type-id                     go to state 1312
    type-name                   go to state 124
    type-specifier              go to state 216
    type-specifier-seq          go to state 447
    typedef-name                go to state 126
    typename-specifier          go to state 127


State 813

  876 postfix-expression: CONST_CAST LESS • type-id GREATER OPEN_PAREN expression CLOSE_PAREN

    IDENTIFIER  shift, and go to state 162
    SCOPE       shift, and go to state 9
    CLASS       shift, and go to state 12
    STRUCT      shift, and go to state 13
    UNION       shift, and go to state 14
    CONST       shift, and go to state 18
    VOLATILE    shift, and go to state 19
    DECLTYPE    shift, and go to state 26
    ENUM        shift, and go to state 135
    AUTO        shift, and go to state 36
    CHAR        shift, and go to state 37
    CHAR8_T     shift, and go to state 38
    CHAR16_T    shift, and go to state 39
    CHAR32_T    shift, and go to state 40
    WCHAR_T     shift, and go to state 41
    BOOL        shift, and go to state 42
    SHORT       shift, and go to state 43
    INT         shift, and go to state 44
    LONG        shift, and go to state 45
    SIGNED      shift, and go to state 46
    UNSIGNED    shift, and go to state 47
    FLOAT       shift, and go to state 48
    DOUBLE      shift, and go to state 49
    VOID        shift, and go to state 50
    TYPENAME    shift, and go to state 55

    class-key                   go to state 209
    class-name                  go to state 65
    concept-name                go to state 67
    cv-qualifier                go to state 69
    decltype-specifier          go to state 76
    elaborated-enum-specifier   go to state 79
    elaborated-type-specifier   go to state 80
    enum-name                   go to state 84
    namespace-alias             go to state 99
    namespace-name              go to state 102
    nested-name-specifier       go to state 212
    placeholder-type-specifier  go to state 109
    simple-template-id          go to state 141
    simple-type-specifier       go to state 115
    template-name               go to state 215
    type-constraint             go to state 123
    type-id                     go to state 1313
    type-name                   go to state 124
    type-specifier              go to state 216
    type-specifier-seq          go to state 447
    typedef-name                go to state 126
    typename-specifier          go to state 127


State 814

  877 postfix-expression: TYPEID OPEN_PAREN • expression CLOSE_PAREN
  878                   | TYPEID OPEN_PAREN • type-id CLOSE_PAREN

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 135
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 525
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-key                            go to state 209
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    expression                           go to state 1314
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-id                              go to state 1315
    type-name                            go to state 124
    type-specifier                       go to state 216
    type-specifier-seq                   go to state 447
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 815

  345 fold-expression: OPEN_PAREN • cast-expression fold-operator ELLIPSIS CLOSE_PAREN
  346                | OPEN_PAREN • ELLIPSIS fold-operator cast-expression CLOSE_PAREN
  347                | OPEN_PAREN • cast-expression fold-operator ELLIPSIS fold-operator cast-expression CLOSE_PAREN
  881 primary-expression: OPEN_PAREN • expression CLOSE_PAREN
  1122 unary-expression: SIZEOF OPEN_PAREN • type-id CLOSE_PAREN

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    ELLIPSIS          shift, and go to state 756
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 135
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 525
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 757
    character-literal                    go to state 405
    class-key                            go to state 209
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    expression                           go to state 758
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-id                              go to state 1316
    type-name                            go to state 124
    type-specifier                       go to state 216
    type-specifier-seq                   go to state 447
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 816

  1123 unary-expression: SIZEOF ELLIPSIS • OPEN_PAREN IDENTIFIER CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 1317


State 817

  1121 unary-expression: SIZEOF unary-expression •

    $default  reduce using rule 1121 (unary-expression)


State 818

  1124 unary-expression: ALIGNOF OPEN_PAREN • type-id CLOSE_PAREN

    IDENTIFIER  shift, and go to state 162
    SCOPE       shift, and go to state 9
    CLASS       shift, and go to state 12
    STRUCT      shift, and go to state 13
    UNION       shift, and go to state 14
    CONST       shift, and go to state 18
    VOLATILE    shift, and go to state 19
    DECLTYPE    shift, and go to state 26
    ENUM        shift, and go to state 135
    AUTO        shift, and go to state 36
    CHAR        shift, and go to state 37
    CHAR8_T     shift, and go to state 38
    CHAR16_T    shift, and go to state 39
    CHAR32_T    shift, and go to state 40
    WCHAR_T     shift, and go to state 41
    BOOL        shift, and go to state 42
    SHORT       shift, and go to state 43
    INT         shift, and go to state 44
    LONG        shift, and go to state 45
    SIGNED      shift, and go to state 46
    UNSIGNED    shift, and go to state 47
    FLOAT       shift, and go to state 48
    DOUBLE      shift, and go to state 49
    VOID        shift, and go to state 50
    TYPENAME    shift, and go to state 55

    class-key                   go to state 209
    class-name                  go to state 65
    concept-name                go to state 67
    cv-qualifier                go to state 69
    decltype-specifier          go to state 76
    elaborated-enum-specifier   go to state 79
    elaborated-type-specifier   go to state 80
    enum-name                   go to state 84
    namespace-alias             go to state 99
    namespace-name              go to state 102
    nested-name-specifier       go to state 212
    placeholder-type-specifier  go to state 109
    simple-template-id          go to state 141
    simple-type-specifier       go to state 115
    template-name               go to state 215
    type-constraint             go to state 123
    type-id                     go to state 1318
    type-name                   go to state 124
    type-specifier              go to state 216
    type-specifier-seq          go to state 447
    typedef-name                go to state 126
    typename-specifier          go to state 127


State 819

   11 additive-expression: additive-expression PLUS • multiplicative-expression

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    concept-name                         go to state 67
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    multiplicative-expression            go to state 1319
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    requires-expression                  go to state 442
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 820

   12 additive-expression: additive-expression MINUS • multiplicative-expression

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    concept-name                         go to state 67
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    multiplicative-expression            go to state 1320
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    requires-expression                  go to state 442
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 821

   20 and-expression: and-expression AND • equality-expression

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 1321
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 822

  1115 ud-suffix: IDENTIFIER •

    $default  reduce using rule 1115 (ud-suffix)


State 823

   94 binary-literal: binary-literal SINGLE_QUOTE • binary-digit

    '0'  shift, and go to state 776
    '1'  shift, and go to state 777

    binary-digit  go to state 1322


State 824

  567 long-long-suffix: LONG_LONG_L •

    $default  reduce using rule 567 (long-long-suffix)


State 825

  568 long-long-suffix: LONG_LONG_H •

    $default  reduce using rule 568 (long-long-suffix)


State 826

  1147 unsigned-suffix: 'u' •

    $default  reduce using rule 1147 (unsigned-suffix)


State 827

  1148 unsigned-suffix: 'U' •

    $default  reduce using rule 1148 (unsigned-suffix)


State 828

  570 long-suffix: 'L' •

    $default  reduce using rule 570 (long-suffix)


State 829

  569 long-suffix: 'l' •

    $default  reduce using rule 569 (long-suffix)


State 830

  1006 size-suffix: 'z' •

    $default  reduce using rule 1006 (size-suffix)


State 831

  1007 size-suffix: 'Z' •

    $default  reduce using rule 1007 (size-suffix)


State 832

   93 binary-literal: binary-literal binary-digit •

    $default  reduce using rule 93 (binary-literal)


State 833

  486 integer-literal: binary-literal integer-suffix •

    $default  reduce using rule 486 (integer-literal)


State 834

  501 integer-suffix: long-long-suffix •
  502               | long-long-suffix • unsigned-suffix

    'u'  shift, and go to state 826
    'U'  shift, and go to state 827

    $default  reduce using rule 501 (integer-suffix)

    unsigned-suffix  go to state 1323


State 835

  499 integer-suffix: long-suffix •
  500               | long-suffix • unsigned-suffix

    'u'  shift, and go to state 826
    'U'  shift, and go to state 827

    $default  reduce using rule 499 (integer-suffix)

    unsigned-suffix  go to state 1324


State 836

  503 integer-suffix: size-suffix •
  504               | size-suffix • unsigned-suffix

    'u'  shift, and go to state 826
    'U'  shift, and go to state 827

    $default  reduce using rule 503 (integer-suffix)

    unsigned-suffix  go to state 1325


State 837

  1158 user-defined-integer-literal: binary-literal ud-suffix •

    $default  reduce using rule 1158 (user-defined-integer-literal)


State 838

  493 integer-suffix: unsigned-suffix •
  494               | unsigned-suffix • long-suffix
  495               | unsigned-suffix •
  496               | unsigned-suffix • long-long-suffix
  497               | unsigned-suffix •
  498               | unsigned-suffix • size-suffix

    LONG_LONG_L  shift, and go to state 824
    LONG_LONG_H  shift, and go to state 825
    'L'          shift, and go to state 828
    'l'          shift, and go to state 829
    'z'          shift, and go to state 830
    'Z'          shift, and go to state 831

    PLUS           reduce using rule 493 (integer-suffix)
    PLUS           [reduce using rule 495 (integer-suffix)]
    PLUS           [reduce using rule 497 (integer-suffix)]
    MINUS          reduce using rule 493 (integer-suffix)
    MINUS          [reduce using rule 495 (integer-suffix)]
    MINUS          [reduce using rule 497 (integer-suffix)]
    USING          reduce using rule 493 (integer-suffix)
    USING          [reduce using rule 495 (integer-suffix)]
    USING          [reduce using rule 497 (integer-suffix)]
    IDENTIFIER     reduce using rule 493 (integer-suffix)
    IDENTIFIER     [reduce using rule 495 (integer-suffix)]
    IDENTIFIER     [reduce using rule 497 (integer-suffix)]
    EQ             reduce using rule 493 (integer-suffix)
    EQ             [reduce using rule 495 (integer-suffix)]
    EQ             [reduce using rule 497 (integer-suffix)]
    SEMICOLON      reduce using rule 493 (integer-suffix)
    SEMICOLON      [reduce using rule 495 (integer-suffix)]
    SEMICOLON      [reduce using rule 497 (integer-suffix)]
    ALIGNAS        reduce using rule 493 (integer-suffix)
    ALIGNAS        [reduce using rule 495 (integer-suffix)]
    ALIGNAS        [reduce using rule 497 (integer-suffix)]
    OPEN_PAREN     reduce using rule 493 (integer-suffix)
    OPEN_PAREN     [reduce using rule 495 (integer-suffix)]
    OPEN_PAREN     [reduce using rule 497 (integer-suffix)]
    CLOSE_PAREN    reduce using rule 493 (integer-suffix)
    CLOSE_PAREN    [reduce using rule 495 (integer-suffix)]
    CLOSE_PAREN    [reduce using rule 497 (integer-suffix)]
    ELLIPSIS       reduce using rule 493 (integer-suffix)
    ELLIPSIS       [reduce using rule 495 (integer-suffix)]
    ELLIPSIS       [reduce using rule 497 (integer-suffix)]
    AND            reduce using rule 493 (integer-suffix)
    AND            [reduce using rule 495 (integer-suffix)]
    AND            [reduce using rule 497 (integer-suffix)]
    ASM            reduce using rule 493 (integer-suffix)
    ASM            [reduce using rule 495 (integer-suffix)]
    ASM            [reduce using rule 497 (integer-suffix)]
    MULT_EQ        reduce using rule 493 (integer-suffix)
    MULT_EQ        [reduce using rule 495 (integer-suffix)]
    MULT_EQ        [reduce using rule 497 (integer-suffix)]
    DIV_EQ         reduce using rule 493 (integer-suffix)
    DIV_EQ         [reduce using rule 495 (integer-suffix)]
    DIV_EQ         [reduce using rule 497 (integer-suffix)]
    MOD_EQ         reduce using rule 493 (integer-suffix)
    MOD_EQ         [reduce using rule 495 (integer-suffix)]
    MOD_EQ         [reduce using rule 497 (integer-suffix)]
    PLUS_EQ        reduce using rule 493 (integer-suffix)
    PLUS_EQ        [reduce using rule 495 (integer-suffix)]
    PLUS_EQ        [reduce using rule 497 (integer-suffix)]
    MINUS_EQ       reduce using rule 493 (integer-suffix)
    MINUS_EQ       [reduce using rule 495 (integer-suffix)]
    MINUS_EQ       [reduce using rule 497 (integer-suffix)]
    RSHIFT_EQ      reduce using rule 493 (integer-suffix)
    RSHIFT_EQ      [reduce using rule 495 (integer-suffix)]
    RSHIFT_EQ      [reduce using rule 497 (integer-suffix)]
    LSHIFT_EQ      reduce using rule 493 (integer-suffix)
    LSHIFT_EQ      [reduce using rule 495 (integer-suffix)]
    LSHIFT_EQ      [reduce using rule 497 (integer-suffix)]
    AND_EQ         reduce using rule 493 (integer-suffix)
    AND_EQ         [reduce using rule 495 (integer-suffix)]
    AND_EQ         [reduce using rule 497 (integer-suffix)]
    XOR_EQ         reduce using rule 493 (integer-suffix)
    XOR_EQ         [reduce using rule 495 (integer-suffix)]
    XOR_EQ         [reduce using rule 497 (integer-suffix)]
    OR_EQ          reduce using rule 493 (integer-suffix)
    OR_EQ          [reduce using rule 495 (integer-suffix)]
    OR_EQ          [reduce using rule 497 (integer-suffix)]
    COMMA          reduce using rule 493 (integer-suffix)
    COMMA          [reduce using rule 495 (integer-suffix)]
    COMMA          [reduce using rule 497 (integer-suffix)]
    SCOPE          reduce using rule 493 (integer-suffix)
    SCOPE          [reduce using rule 495 (integer-suffix)]
    SCOPE          [reduce using rule 497 (integer-suffix)]
    OPEN_SQUARE    reduce using rule 493 (integer-suffix)
    OPEN_SQUARE    [reduce using rule 495 (integer-suffix)]
    OPEN_SQUARE    [reduce using rule 497 (integer-suffix)]
    CLOSE_SQUARE   reduce using rule 493 (integer-suffix)
    CLOSE_SQUARE   [reduce using rule 495 (integer-suffix)]
    CLOSE_SQUARE   [reduce using rule 497 (integer-suffix)]
    COLON          reduce using rule 493 (integer-suffix)
    COLON          [reduce using rule 495 (integer-suffix)]
    COLON          [reduce using rule 497 (integer-suffix)]
    OPEN_BRACE     reduce using rule 493 (integer-suffix)
    OPEN_BRACE     [reduce using rule 495 (integer-suffix)]
    OPEN_BRACE     [reduce using rule 497 (integer-suffix)]
    CLOSE_BRACE    reduce using rule 493 (integer-suffix)
    CLOSE_BRACE    [reduce using rule 495 (integer-suffix)]
    CLOSE_BRACE    [reduce using rule 497 (integer-suffix)]
    VIRTUAL        reduce using rule 493 (integer-suffix)
    VIRTUAL        [reduce using rule 495 (integer-suffix)]
    VIRTUAL        [reduce using rule 497 (integer-suffix)]
    CLASS          reduce using rule 493 (integer-suffix)
    CLASS          [reduce using rule 495 (integer-suffix)]
    CLASS          [reduce using rule 497 (integer-suffix)]
    STRUCT         reduce using rule 493 (integer-suffix)
    STRUCT         [reduce using rule 495 (integer-suffix)]
    STRUCT         [reduce using rule 497 (integer-suffix)]
    UNION          reduce using rule 493 (integer-suffix)
    UNION          [reduce using rule 495 (integer-suffix)]
    UNION          [reduce using rule 497 (integer-suffix)]
    TEMPLATE       reduce using rule 493 (integer-suffix)
    TEMPLATE       [reduce using rule 495 (integer-suffix)]
    TEMPLATE       [reduce using rule 497 (integer-suffix)]
    SPACESHIP      reduce using rule 493 (integer-suffix)
    SPACESHIP      [reduce using rule 495 (integer-suffix)]
    SPACESHIP      [reduce using rule 497 (integer-suffix)]
    NOEXCEPT       reduce using rule 493 (integer-suffix)
    NOEXCEPT       [reduce using rule 495 (integer-suffix)]
    NOEXCEPT       [reduce using rule 497 (integer-suffix)]
    CONCEPT        reduce using rule 493 (integer-suffix)
    CONCEPT        [reduce using rule 495 (integer-suffix)]
    CONCEPT        [reduce using rule 497 (integer-suffix)]
    QUERY          reduce using rule 493 (integer-suffix)
    QUERY          [reduce using rule 495 (integer-suffix)]
    QUERY          [reduce using rule 497 (integer-suffix)]
    AND_AND        reduce using rule 493 (integer-suffix)
    AND_AND        [reduce using rule 495 (integer-suffix)]
    AND_AND        [reduce using rule 497 (integer-suffix)]
    OR_OR          reduce using rule 493 (integer-suffix)
    OR_OR          [reduce using rule 495 (integer-suffix)]
    OR_OR          [reduce using rule 497 (integer-suffix)]
    OPERATOR       reduce using rule 493 (integer-suffix)
    OPERATOR       [reduce using rule 495 (integer-suffix)]
    OPERATOR       [reduce using rule 497 (integer-suffix)]
    CONST          reduce using rule 493 (integer-suffix)
    CONST          [reduce using rule 495 (integer-suffix)]
    CONST          [reduce using rule 497 (integer-suffix)]
    VOLATILE       reduce using rule 493 (integer-suffix)
    VOLATILE       [reduce using rule 495 (integer-suffix)]
    VOLATILE       [reduce using rule 497 (integer-suffix)]
    FRIEND         reduce using rule 493 (integer-suffix)
    FRIEND         [reduce using rule 495 (integer-suffix)]
    FRIEND         [reduce using rule 497 (integer-suffix)]
    TYPEDEF        reduce using rule 493 (integer-suffix)
    TYPEDEF        [reduce using rule 495 (integer-suffix)]
    TYPEDEF        [reduce using rule 497 (integer-suffix)]
    CONSTEXPR      reduce using rule 493 (integer-suffix)
    CONSTEXPR      [reduce using rule 495 (integer-suffix)]
    CONSTEXPR      [reduce using rule 497 (integer-suffix)]
    CONSTEVAL      reduce using rule 493 (integer-suffix)
    CONSTEVAL      [reduce using rule 495 (integer-suffix)]
    CONSTEVAL      [reduce using rule 497 (integer-suffix)]
    CONSTINIT      reduce using rule 493 (integer-suffix)
    CONSTINIT      [reduce using rule 495 (integer-suffix)]
    CONSTINIT      [reduce using rule 497 (integer-suffix)]
    INLINE         reduce using rule 493 (integer-suffix)
    INLINE         [reduce using rule 495 (integer-suffix)]
    INLINE         [reduce using rule 497 (integer-suffix)]
    DECLTYPE       reduce using rule 493 (integer-suffix)
    DECLTYPE       [reduce using rule 495 (integer-suffix)]
    DECLTYPE       [reduce using rule 497 (integer-suffix)]
    DEREF          reduce using rule 493 (integer-suffix)
    DEREF          [reduce using rule 495 (integer-suffix)]
    DEREF          [reduce using rule 497 (integer-suffix)]
    DOT            reduce using rule 493 (integer-suffix)
    DOT            [reduce using rule 495 (integer-suffix)]
    DOT            [reduce using rule 497 (integer-suffix)]
    ENUM           reduce using rule 493 (integer-suffix)
    ENUM           [reduce using rule 495 (integer-suffix)]
    ENUM           [reduce using rule 497 (integer-suffix)]
    EQ_EQ          reduce using rule 493 (integer-suffix)
    EQ_EQ          [reduce using rule 495 (integer-suffix)]
    EQ_EQ          [reduce using rule 497 (integer-suffix)]
    NOT_EQ         reduce using rule 493 (integer-suffix)
    NOT_EQ         [reduce using rule 495 (integer-suffix)]
    NOT_EQ         [reduce using rule 497 (integer-suffix)]
    XOR            reduce using rule 493 (integer-suffix)
    XOR            [reduce using rule 495 (integer-suffix)]
    XOR            [reduce using rule 497 (integer-suffix)]
    EXTERN         reduce using rule 493 (integer-suffix)
    EXTERN         [reduce using rule 495 (integer-suffix)]
    EXTERN         [reduce using rule 497 (integer-suffix)]
    LESS           reduce using rule 493 (integer-suffix)
    LESS           [reduce using rule 495 (integer-suffix)]
    LESS           [reduce using rule 497 (integer-suffix)]
    GREATER        reduce using rule 493 (integer-suffix)
    GREATER        [reduce using rule 495 (integer-suffix)]
    GREATER        [reduce using rule 497 (integer-suffix)]
    EXPLICIT       reduce using rule 493 (integer-suffix)
    EXPLICIT       [reduce using rule 495 (integer-suffix)]
    EXPLICIT       [reduce using rule 497 (integer-suffix)]
    EXPORT         reduce using rule 493 (integer-suffix)
    EXPORT         [reduce using rule 495 (integer-suffix)]
    EXPORT         [reduce using rule 497 (integer-suffix)]
    MULT           reduce using rule 493 (integer-suffix)
    MULT           [reduce using rule 495 (integer-suffix)]
    MULT           [reduce using rule 497 (integer-suffix)]
    DIV            reduce using rule 493 (integer-suffix)
    DIV            [reduce using rule 495 (integer-suffix)]
    DIV            [reduce using rule 497 (integer-suffix)]
    MOD            reduce using rule 493 (integer-suffix)
    MOD            [reduce using rule 495 (integer-suffix)]
    MOD            [reduce using rule 497 (integer-suffix)]
    OR             reduce using rule 493 (integer-suffix)
    OR             [reduce using rule 495 (integer-suffix)]
    OR             [reduce using rule 497 (integer-suffix)]
    LSHIFT         reduce using rule 493 (integer-suffix)
    LSHIFT         [reduce using rule 495 (integer-suffix)]
    LSHIFT         [reduce using rule 497 (integer-suffix)]
    RSHIFT         reduce using rule 493 (integer-suffix)
    RSHIFT         [reduce using rule 495 (integer-suffix)]
    RSHIFT         [reduce using rule 497 (integer-suffix)]
    LESS_EQ        reduce using rule 493 (integer-suffix)
    LESS_EQ        [reduce using rule 495 (integer-suffix)]
    LESS_EQ        [reduce using rule 497 (integer-suffix)]
    GREATER_EQ     reduce using rule 493 (integer-suffix)
    GREATER_EQ     [reduce using rule 495 (integer-suffix)]
    GREATER_EQ     [reduce using rule 497 (integer-suffix)]
    DOT_STAR       reduce using rule 493 (integer-suffix)
    DOT_STAR       [reduce using rule 495 (integer-suffix)]
    DOT_STAR       [reduce using rule 497 (integer-suffix)]
    DEREF_STAR     reduce using rule 493 (integer-suffix)
    DEREF_STAR     [reduce using rule 495 (integer-suffix)]
    DEREF_STAR     [reduce using rule 497 (integer-suffix)]
    TRY            reduce using rule 493 (integer-suffix)
    TRY            [reduce using rule 495 (integer-suffix)]
    TRY            [reduce using rule 497 (integer-suffix)]
    IMPORT         reduce using rule 493 (integer-suffix)
    IMPORT         [reduce using rule 495 (integer-suffix)]
    IMPORT         [reduce using rule 497 (integer-suffix)]
    NAMESPACE      reduce using rule 493 (integer-suffix)
    NAMESPACE      [reduce using rule 495 (integer-suffix)]
    NAMESPACE      [reduce using rule 497 (integer-suffix)]
    COMPL          reduce using rule 493 (integer-suffix)
    COMPL          [reduce using rule 495 (integer-suffix)]
    COMPL          [reduce using rule 497 (integer-suffix)]
    PLUS_PLUS      reduce using rule 493 (integer-suffix)
    PLUS_PLUS      [reduce using rule 495 (integer-suffix)]
    PLUS_PLUS      [reduce using rule 497 (integer-suffix)]
    MINUS_MINUS    reduce using rule 493 (integer-suffix)
    MINUS_MINUS    [reduce using rule 495 (integer-suffix)]
    MINUS_MINUS    [reduce using rule 497 (integer-suffix)]
    AUTO           reduce using rule 493 (integer-suffix)
    AUTO           [reduce using rule 495 (integer-suffix)]
    AUTO           [reduce using rule 497 (integer-suffix)]
    CHAR           reduce using rule 493 (integer-suffix)
    CHAR           [reduce using rule 495 (integer-suffix)]
    CHAR           [reduce using rule 497 (integer-suffix)]
    CHAR8_T        reduce using rule 493 (integer-suffix)
    CHAR8_T        [reduce using rule 495 (integer-suffix)]
    CHAR8_T        [reduce using rule 497 (integer-suffix)]
    CHAR16_T       reduce using rule 493 (integer-suffix)
    CHAR16_T       [reduce using rule 495 (integer-suffix)]
    CHAR16_T       [reduce using rule 497 (integer-suffix)]
    CHAR32_T       reduce using rule 493 (integer-suffix)
    CHAR32_T       [reduce using rule 495 (integer-suffix)]
    CHAR32_T       [reduce using rule 497 (integer-suffix)]
    WCHAR_T        reduce using rule 493 (integer-suffix)
    WCHAR_T        [reduce using rule 495 (integer-suffix)]
    WCHAR_T        [reduce using rule 497 (integer-suffix)]
    BOOL           reduce using rule 493 (integer-suffix)
    BOOL           [reduce using rule 495 (integer-suffix)]
    BOOL           [reduce using rule 497 (integer-suffix)]
    SHORT          reduce using rule 493 (integer-suffix)
    SHORT          [reduce using rule 495 (integer-suffix)]
    SHORT          [reduce using rule 497 (integer-suffix)]
    INT            reduce using rule 493 (integer-suffix)
    INT            [reduce using rule 495 (integer-suffix)]
    INT            [reduce using rule 497 (integer-suffix)]
    LONG           reduce using rule 493 (integer-suffix)
    LONG           [reduce using rule 495 (integer-suffix)]
    LONG           [reduce using rule 497 (integer-suffix)]
    SIGNED         reduce using rule 493 (integer-suffix)
    SIGNED         [reduce using rule 495 (integer-suffix)]
    SIGNED         [reduce using rule 497 (integer-suffix)]
    UNSIGNED       reduce using rule 493 (integer-suffix)
    UNSIGNED       [reduce using rule 495 (integer-suffix)]
    UNSIGNED       [reduce using rule 497 (integer-suffix)]
    FLOAT          reduce using rule 493 (integer-suffix)
    FLOAT          [reduce using rule 495 (integer-suffix)]
    FLOAT          [reduce using rule 497 (integer-suffix)]
    DOUBLE         reduce using rule 493 (integer-suffix)
    DOUBLE         [reduce using rule 495 (integer-suffix)]
    DOUBLE         [reduce using rule 497 (integer-suffix)]
    VOID           reduce using rule 493 (integer-suffix)
    VOID           [reduce using rule 495 (integer-suffix)]
    VOID           [reduce using rule 497 (integer-suffix)]
    STATIC_ASSERT  reduce using rule 493 (integer-suffix)
    STATIC_ASSERT  [reduce using rule 495 (integer-suffix)]
    STATIC_ASSERT  [reduce using rule 497 (integer-suffix)]
    STATIC         reduce using rule 493 (integer-suffix)
    STATIC         [reduce using rule 495 (integer-suffix)]
    STATIC         [reduce using rule 497 (integer-suffix)]
    THREAD_LOCAL   reduce using rule 493 (integer-suffix)
    THREAD_LOCAL   [reduce using rule 495 (integer-suffix)]
    THREAD_LOCAL   [reduce using rule 497 (integer-suffix)]
    MUTABLE        reduce using rule 493 (integer-suffix)
    MUTABLE        [reduce using rule 495 (integer-suffix)]
    MUTABLE        [reduce using rule 497 (integer-suffix)]
    TYPENAME       reduce using rule 493 (integer-suffix)
    TYPENAME       [reduce using rule 495 (integer-suffix)]
    TYPENAME       [reduce using rule 497 (integer-suffix)]
    $default       reduce using rule 493 (integer-suffix)

    long-long-suffix  go to state 1326
    long-suffix       go to state 1327
    size-suffix       go to state 1328


State 839

  1149 user-defined-character-literal: character-literal ud-suffix •

    $default  reduce using rule 1149 (user-defined-character-literal)


State 840

  155 compare-expression: compare-expression SPACESHIP • shift-expression

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    concept-name                         go to state 67
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    requires-expression                  go to state 442
    shift-expression                     go to state 1329
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 841

   17 alignment-specifier: ALIGNAS OPEN_PAREN constant-expression CLOSE_PAREN •

    $default  reduce using rule 17 (alignment-specifier)


State 842

   18 alignment-specifier: ALIGNAS OPEN_PAREN constant-expression ELLIPSIS • CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 1330


State 843

  197 decimal-literal: decimal-literal SINGLE_QUOTE • digit

    '0'  shift, and go to state 789
    '1'  shift, and go to state 790
    '2'  shift, and go to state 791
    '3'  shift, and go to state 792
    '4'  shift, and go to state 793
    '5'  shift, and go to state 794
    '6'  shift, and go to state 795
    '7'  shift, and go to state 796
    '8'  shift, and go to state 797
    '9'  shift, and go to state 798

    digit  go to state 1331


State 844

  196 decimal-literal: decimal-literal digit •

    $default  reduce using rule 196 (decimal-literal)


State 845

  490 integer-literal: decimal-literal integer-suffix •

    $default  reduce using rule 490 (integer-literal)


State 846

  1155 user-defined-integer-literal: decimal-literal ud-suffix •

    $default  reduce using rule 1155 (user-defined-integer-literal)


State 847

  261 digit-sequence: digit-sequence SINGLE_QUOTE • digit

    '0'  shift, and go to state 789
    '1'  shift, and go to state 790
    '2'  shift, and go to state 791
    '3'  shift, and go to state 792
    '4'  shift, and go to state 793
    '5'  shift, and go to state 794
    '6'  shift, and go to state 795
    '7'  shift, and go to state 796
    '8'  shift, and go to state 797
    '9'  shift, and go to state 798

    digit  go to state 1332


State 848

  387 fractional-constant: digit-sequence DOT • digit-sequence
  389                    | digit-sequence DOT •

    '0'  shift, and go to state 789
    '1'  shift, and go to state 790
    '2'  shift, and go to state 791
    '3'  shift, and go to state 792
    '4'  shift, and go to state 793
    '5'  shift, and go to state 794
    '6'  shift, and go to state 795
    '7'  shift, and go to state 796
    '8'  shift, and go to state 797
    '9'  shift, and go to state 798

    $default  reduce using rule 389 (fractional-constant)

    digit           go to state 412
    digit-sequence  go to state 1333


State 849

  324 exponent-part: 'e' • digit-sequence
  325              | 'e' • sign digit-sequence

    PLUS   shift, and go to state 1334
    MINUS  shift, and go to state 1335
    '0'    shift, and go to state 789
    '1'    shift, and go to state 790
    '2'    shift, and go to state 791
    '3'    shift, and go to state 792
    '4'    shift, and go to state 793
    '5'    shift, and go to state 794
    '6'    shift, and go to state 795
    '7'    shift, and go to state 796
    '8'    shift, and go to state 797
    '9'    shift, and go to state 798

    digit           go to state 412
    digit-sequence  go to state 1336
    sign            go to state 1337


State 850

  326 exponent-part: 'E' • digit-sequence
  327              | 'E' • sign digit-sequence

    PLUS   shift, and go to state 1334
    MINUS  shift, and go to state 1335
    '0'    shift, and go to state 789
    '1'    shift, and go to state 790
    '2'    shift, and go to state 791
    '3'    shift, and go to state 792
    '4'    shift, and go to state 793
    '5'    shift, and go to state 794
    '6'    shift, and go to state 795
    '7'    shift, and go to state 796
    '8'    shift, and go to state 797
    '9'    shift, and go to state 798

    digit           go to state 412
    digit-sequence  go to state 1338
    sign            go to state 1339


State 851

  260 digit-sequence: digit-sequence digit •

    $default  reduce using rule 260 (digit-sequence)


State 852

  193 decimal-floating-point-literal: digit-sequence exponent-part •
  194                               | digit-sequence exponent-part • floating-point-suffix
  1152 user-defined-floating-point-literal: digit-sequence exponent-part • ud-suffix

    IDENTIFIER  shift, and go to state 822
    'L'         shift, and go to state 857
    'f'         shift, and go to state 858
    'l'         shift, and go to state 859
    'F'         shift, and go to state 860

    IDENTIFIER  [reduce using rule 193 (decimal-floating-point-literal)]
    $default    reduce using rule 193 (decimal-floating-point-literal)

    floating-point-suffix  go to state 1340
    ud-suffix              go to state 1341


State 853

  126 character-literal: encoding-prefix SINGLE_QUOTE • c-char-sequence SINGLE_QUOTE

    BASIC_C_CHAR  shift, and go to state 780
    ESCAPE        shift, and go to state 486
    ESCAPE_LX     shift, and go to state 488
    ESCAPE_LU     shift, and go to state 489
    ESCAPE_HU     shift, and go to state 490

    basic-c-char                 go to state 781
    c-char                       go to state 782
    c-char-sequence              go to state 1342
    conditional-escape-sequence  go to state 492
    escape-sequence              go to state 784
    hexadecimal-escape-sequence  go to state 494
    numeric-escape-sequence      go to state 495
    octal-escape-sequence        go to state 496
    simple-escape-sequence       go to state 499
    universal-character-name     go to state 785


State 854

  305 equality-expression: equality-expression EQ_EQ • relational-expression

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 1343
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 855

  306 equality-expression: equality-expression NOT_EQ • relational-expression

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 1344
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 856

  318 exclusive-or-expression: exclusive-or-expression XOR • and-expression

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 1345
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 857

  344 floating-point-suffix: 'L' •

    $default  reduce using rule 344 (floating-point-suffix)


State 858

  341 floating-point-suffix: 'f' •

    $default  reduce using rule 341 (floating-point-suffix)


State 859

  342 floating-point-suffix: 'l' •

    $default  reduce using rule 342 (floating-point-suffix)


State 860

  343 floating-point-suffix: 'F' •

    $default  reduce using rule 343 (floating-point-suffix)


State 861

  190 decimal-floating-point-literal: fractional-constant exponent-part •
  192                               | fractional-constant exponent-part • floating-point-suffix
  1151 user-defined-floating-point-literal: fractional-constant exponent-part • ud-suffix

    IDENTIFIER  shift, and go to state 822
    'L'         shift, and go to state 857
    'f'         shift, and go to state 858
    'l'         shift, and go to state 859
    'F'         shift, and go to state 860

    IDENTIFIER  [reduce using rule 190 (decimal-floating-point-literal)]
    $default    reduce using rule 190 (decimal-floating-point-literal)

    floating-point-suffix  go to state 1346
    ud-suffix              go to state 1347


State 862

  191 decimal-floating-point-literal: fractional-constant floating-point-suffix •

    $default  reduce using rule 191 (decimal-floating-point-literal)


State 863

  1150 user-defined-floating-point-literal: fractional-constant ud-suffix •

    $default  reduce using rule 1150 (user-defined-floating-point-literal)


State 864

  492 integer-literal: hexadecimal-literal integer-suffix •

    $default  reduce using rule 492 (integer-literal)


State 865

  1157 user-defined-integer-literal: hexadecimal-literal ud-suffix •

    $default  reduce using rule 1157 (user-defined-integer-literal)


State 866

  454 hexadecimal-fractional-constant: DOT • hexadecimal-digit-sequence

    '0'  shift, and go to state 867
    '1'  shift, and go to state 868
    '2'  shift, and go to state 869
    '3'  shift, and go to state 870
    '4'  shift, and go to state 871
    '5'  shift, and go to state 872
    '6'  shift, and go to state 873
    '7'  shift, and go to state 874
    '8'  shift, and go to state 875
    '9'  shift, and go to state 876
    'e'  shift, and go to state 877
    'E'  shift, and go to state 878
    'f'  shift, and go to state 879
    'F'  shift, and go to state 880
    'a'  shift, and go to state 881
    'b'  shift, and go to state 882
    'c'  shift, and go to state 883
    'd'  shift, and go to state 884
    'A'  shift, and go to state 885
    'B'  shift, and go to state 886
    'C'  shift, and go to state 887
    'D'  shift, and go to state 888

    hexadecimal-digit           go to state 889
    hexadecimal-digit-sequence  go to state 1348


State 867

  422 hexadecimal-digit: '0' •

    $default  reduce using rule 422 (hexadecimal-digit)


State 868

  423 hexadecimal-digit: '1' •

    $default  reduce using rule 423 (hexadecimal-digit)


State 869

  424 hexadecimal-digit: '2' •

    $default  reduce using rule 424 (hexadecimal-digit)


State 870

  425 hexadecimal-digit: '3' •

    $default  reduce using rule 425 (hexadecimal-digit)


State 871

  426 hexadecimal-digit: '4' •

    $default  reduce using rule 426 (hexadecimal-digit)


State 872

  427 hexadecimal-digit: '5' •

    $default  reduce using rule 427 (hexadecimal-digit)


State 873

  428 hexadecimal-digit: '6' •

    $default  reduce using rule 428 (hexadecimal-digit)


State 874

  429 hexadecimal-digit: '7' •

    $default  reduce using rule 429 (hexadecimal-digit)


State 875

  430 hexadecimal-digit: '8' •

    $default  reduce using rule 430 (hexadecimal-digit)


State 876

  431 hexadecimal-digit: '9' •

    $default  reduce using rule 431 (hexadecimal-digit)


State 877

  436 hexadecimal-digit: 'e' •

    $default  reduce using rule 436 (hexadecimal-digit)


State 878

  442 hexadecimal-digit: 'E' •

    $default  reduce using rule 442 (hexadecimal-digit)


State 879

  437 hexadecimal-digit: 'f' •

    $default  reduce using rule 437 (hexadecimal-digit)


State 880

  443 hexadecimal-digit: 'F' •

    $default  reduce using rule 443 (hexadecimal-digit)


State 881

  432 hexadecimal-digit: 'a' •

    $default  reduce using rule 432 (hexadecimal-digit)


State 882

  433 hexadecimal-digit: 'b' •

    $default  reduce using rule 433 (hexadecimal-digit)


State 883

  434 hexadecimal-digit: 'c' •

    $default  reduce using rule 434 (hexadecimal-digit)


State 884

  435 hexadecimal-digit: 'd' •

    $default  reduce using rule 435 (hexadecimal-digit)


State 885

  438 hexadecimal-digit: 'A' •

    $default  reduce using rule 438 (hexadecimal-digit)


State 886

  439 hexadecimal-digit: 'B' •

    $default  reduce using rule 439 (hexadecimal-digit)


State 887

  440 hexadecimal-digit: 'C' •

    $default  reduce using rule 440 (hexadecimal-digit)


State 888

  441 hexadecimal-digit: 'D' •

    $default  reduce using rule 441 (hexadecimal-digit)


State 889

  444 hexadecimal-digit-sequence: hexadecimal-digit •

    $default  reduce using rule 444 (hexadecimal-digit-sequence)


State 890

  445 hexadecimal-digit-sequence: hexadecimal-digit-sequence • hexadecimal-digit
  446                           | hexadecimal-digit-sequence • SINGLE_QUOTE hexadecimal-digit
  451 hexadecimal-floating-point-literal: hexadecimal-prefix hexadecimal-digit-sequence • binary-exponent-part
  452                                   | hexadecimal-prefix hexadecimal-digit-sequence • binary-exponent-part floating-point-suffix
  453 hexadecimal-fractional-constant: hexadecimal-digit-sequence • DOT hexadecimal-digit-sequence
  455                                | hexadecimal-digit-sequence • DOT
  456 hexadecimal-literal: hexadecimal-prefix hexadecimal-digit-sequence •
  1154 user-defined-floating-point-literal: hexadecimal-prefix hexadecimal-digit-sequence • binary-exponent-part ud-suffix

    SINGLE_QUOTE  shift, and go to state 1349
    DOT           shift, and go to state 1350
    '0'           shift, and go to state 867
    '1'           shift, and go to state 868
    'p'           shift, and go to state 1351
    'P'           shift, and go to state 1352
    '2'           shift, and go to state 869
    '3'           shift, and go to state 870
    '4'           shift, and go to state 871
    '5'           shift, and go to state 872
    '6'           shift, and go to state 873
    '7'           shift, and go to state 874
    '8'           shift, and go to state 875
    '9'           shift, and go to state 876
    'e'           shift, and go to state 877
    'E'           shift, and go to state 878
    'f'           shift, and go to state 879
    'F'           shift, and go to state 880
    'a'           shift, and go to state 881
    'b'           shift, and go to state 882
    'c'           shift, and go to state 883
    'd'           shift, and go to state 884
    'A'           shift, and go to state 885
    'B'           shift, and go to state 886
    'C'           shift, and go to state 887
    'D'           shift, and go to state 888

    DOT       [reduce using rule 456 (hexadecimal-literal)]
    $default  reduce using rule 456 (hexadecimal-literal)

    binary-exponent-part  go to state 1353
    hexadecimal-digit     go to state 1354


State 891

  449 hexadecimal-floating-point-literal: hexadecimal-prefix hexadecimal-fractional-constant • binary-exponent-part
  450                                   | hexadecimal-prefix hexadecimal-fractional-constant • binary-exponent-part floating-point-suffix
  1153 user-defined-floating-point-literal: hexadecimal-prefix hexadecimal-fractional-constant • binary-exponent-part ud-suffix

    'p'  shift, and go to state 1351
    'P'  shift, and go to state 1352

    binary-exponent-part  go to state 1355


State 892

  464 inclusive-or-expression: inclusive-or-expression OR • exclusive-or-expression

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 1356
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 893

  529 lambda-declarator: OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN lambda-specifiers
  530                  | OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN lambda-specifiers requires-clause

    IDENTIFIER    shift, and go to state 162
    ALIGNAS       shift, and go to state 4
    ELLIPSIS      shift, and go to state 730
    SCOPE         shift, and go to state 9
    OPEN_SQUARE   shift, and go to state 10
    VIRTUAL       shift, and go to state 11
    CLASS         shift, and go to state 12
    STRUCT        shift, and go to state 13
    UNION         shift, and go to state 14
    CONST         shift, and go to state 18
    VOLATILE      shift, and go to state 19
    FRIEND        shift, and go to state 20
    TYPEDEF       shift, and go to state 21
    CONSTEXPR     shift, and go to state 22
    CONSTEVAL     shift, and go to state 23
    CONSTINIT     shift, and go to state 24
    INLINE        shift, and go to state 258
    DECLTYPE      shift, and go to state 26
    ENUM          shift, and go to state 27
    EXTERN        shift, and go to state 259
    EXPLICIT      shift, and go to state 29
    THIS          shift, and go to state 471
    AUTO          shift, and go to state 36
    CHAR          shift, and go to state 37
    CHAR8_T       shift, and go to state 38
    CHAR16_T      shift, and go to state 39
    CHAR32_T      shift, and go to state 40
    WCHAR_T       shift, and go to state 41
    BOOL          shift, and go to state 42
    SHORT         shift, and go to state 43
    INT           shift, and go to state 44
    LONG          shift, and go to state 45
    SIGNED        shift, and go to state 46
    UNSIGNED      shift, and go to state 47
    FLOAT         shift, and go to state 48
    DOUBLE        shift, and go to state 49
    VOID          shift, and go to state 50
    STATIC        shift, and go to state 52
    THREAD_LOCAL  shift, and go to state 53
    MUTABLE       shift, and go to state 54
    TYPENAME      shift, and go to state 55

    alignment-specifier           go to state 57
    attribute-specifier           go to state 60
    attribute-specifier-seq       go to state 473
    class-head                    go to state 63
    class-key                     go to state 64
    class-name                    go to state 65
    class-specifier               go to state 66
    concept-name                  go to state 67
    cv-qualifier                  go to state 69
    decl-specifier                go to state 70
    decl-specifier-seq            go to state 474
    decltype-specifier            go to state 76
    defining-type-specifier       go to state 78
    elaborated-enum-specifier     go to state 79
    elaborated-type-specifier     go to state 80
    enum-head                     go to state 82
    enum-key                      go to state 263
    enum-name                     go to state 84
    enum-specifier                go to state 85
    explicit-specifier            go to state 264
    function-specifier            go to state 91
    namespace-alias               go to state 99
    namespace-name                go to state 102
    nested-name-specifier         go to state 212
    parameter-declaration         go to state 731
    parameter-declaration-clause  go to state 1357
    parameter-declaration-list    go to state 733
    placeholder-type-specifier    go to state 109
    simple-template-id            go to state 141
    simple-type-specifier         go to state 115
    storage-class-specifier       go to state 117
    template-name                 go to state 215
    type-constraint               go to state 123
    type-name                     go to state 124
    type-specifier                go to state 125
    typedef-name                  go to state 126
    typename-specifier            go to state 127


State 894

  693 noexcept-specifier: NOEXCEPT • OPEN_PAREN constant-expression CLOSE_PAREN
  694                   | NOEXCEPT •

    OPEN_PAREN  shift, and go to state 1358

    OPEN_PAREN  [reduce using rule 694 (noexcept-specifier)]
    $default    reduce using rule 694 (noexcept-specifier)


State 895

  532 lambda-expression: lambda-introducer LESS • template-parameter-list GREATER lambda-declarator compound-statement
  533                  | lambda-introducer LESS • template-parameter-list GREATER requires-clause lambda-declarator compound-statement

    IDENTIFIER    shift, and go to state 162
    ALIGNAS       shift, and go to state 4
    SCOPE         shift, and go to state 9
    OPEN_SQUARE   shift, and go to state 10
    VIRTUAL       shift, and go to state 11
    CLASS         shift, and go to state 468
    STRUCT        shift, and go to state 13
    UNION         shift, and go to state 14
    TEMPLATE      shift, and go to state 469
    CONST         shift, and go to state 18
    VOLATILE      shift, and go to state 19
    FRIEND        shift, and go to state 20
    TYPEDEF       shift, and go to state 21
    CONSTEXPR     shift, and go to state 22
    CONSTEVAL     shift, and go to state 23
    CONSTINIT     shift, and go to state 24
    INLINE        shift, and go to state 258
    DECLTYPE      shift, and go to state 26
    ENUM          shift, and go to state 27
    EXTERN        shift, and go to state 259
    EXPLICIT      shift, and go to state 29
    THIS          shift, and go to state 471
    AUTO          shift, and go to state 36
    CHAR          shift, and go to state 37
    CHAR8_T       shift, and go to state 38
    CHAR16_T      shift, and go to state 39
    CHAR32_T      shift, and go to state 40
    WCHAR_T       shift, and go to state 41
    BOOL          shift, and go to state 42
    SHORT         shift, and go to state 43
    INT           shift, and go to state 44
    LONG          shift, and go to state 45
    SIGNED        shift, and go to state 46
    UNSIGNED      shift, and go to state 47
    FLOAT         shift, and go to state 48
    DOUBLE        shift, and go to state 49
    VOID          shift, and go to state 50
    STATIC        shift, and go to state 52
    THREAD_LOCAL  shift, and go to state 53
    MUTABLE       shift, and go to state 54
    TYPENAME      shift, and go to state 472

    alignment-specifier         go to state 57
    attribute-specifier         go to state 60
    attribute-specifier-seq     go to state 473
    class-head                  go to state 63
    class-key                   go to state 64
    class-name                  go to state 65
    class-specifier             go to state 66
    concept-name                go to state 67
    cv-qualifier                go to state 69
    decl-specifier              go to state 70
    decl-specifier-seq          go to state 474
    decltype-specifier          go to state 76
    defining-type-specifier     go to state 78
    elaborated-enum-specifier   go to state 79
    elaborated-type-specifier   go to state 80
    enum-head                   go to state 82
    enum-key                    go to state 263
    enum-name                   go to state 84
    enum-specifier              go to state 85
    explicit-specifier          go to state 264
    function-specifier          go to state 91
    namespace-alias             go to state 99
    namespace-name              go to state 102
    nested-name-specifier       go to state 212
    parameter-declaration       go to state 475
    placeholder-type-specifier  go to state 109
    simple-template-id          go to state 141
    simple-type-specifier       go to state 115
    storage-class-specifier     go to state 117
    template-head               go to state 476
    template-name               go to state 215
    template-parameter          go to state 477
    template-parameter-list     go to state 1359
    type-constraint             go to state 479
    type-name                   go to state 124
    type-parameter              go to state 480
    type-parameter-key          go to state 481
    type-specifier              go to state 125
    typedef-name                go to state 126
    typename-specifier          go to state 127


State 896

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  540 lambda-specifiers: attribute-specifier-seq •
  548                  | attribute-specifier-seq • trailing-return-type

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10
    DEREF        shift, and go to state 736

    $default  reduce using rule 540 (lambda-specifiers)

    alignment-specifier   go to state 57
    attribute-specifier   go to state 260
    trailing-return-type  go to state 1360


State 897

  536 lambda-specifiers: decl-specifier-seq •
  537                  | decl-specifier-seq • noexcept-specifier
  539                  | decl-specifier-seq • attribute-specifier-seq
  541                  | decl-specifier-seq • noexcept-specifier attribute-specifier-seq
  543                  | decl-specifier-seq • trailing-return-type
  545                  | decl-specifier-seq • noexcept-specifier trailing-return-type
  547                  | decl-specifier-seq • attribute-specifier-seq trailing-return-type
  549                  | decl-specifier-seq • noexcept-specifier attribute-specifier-seq trailing-return-type

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10
    NOEXCEPT     shift, and go to state 894
    DEREF        shift, and go to state 736

    $default  reduce using rule 536 (lambda-specifiers)

    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 1361
    noexcept-specifier       go to state 1362
    trailing-return-type     go to state 1363


State 898

  531 lambda-expression: lambda-introducer lambda-declarator • compound-statement

    OPEN_BRACE  shift, and go to state 289

    compound-statement  go to state 1364


State 899

  528 lambda-declarator: lambda-specifiers •

    $default  reduce using rule 528 (lambda-declarator)


State 900

  538 lambda-specifiers: noexcept-specifier •
  542                  | noexcept-specifier • attribute-specifier-seq
  546                  | noexcept-specifier • trailing-return-type
  550                  | noexcept-specifier • attribute-specifier-seq trailing-return-type

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10
    DEREF        shift, and go to state 736

    $default  reduce using rule 538 (lambda-specifiers)

    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 1365
    trailing-return-type     go to state 1366


State 901

  544 lambda-specifiers: trailing-return-type •

    $default  reduce using rule 544 (lambda-specifiers)


State 902

  564 logical-and-expression: logical-and-expression AND_AND • inclusive-or-expression

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 1367
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 903

  170 conditional-expression: logical-or-expression QUERY • expression COLON assignment-expression

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 525
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    expression                           go to state 1368
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 904

  566 logical-or-expression: logical-or-expression OR_OR • logical-and-expression

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 1369
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 905

  640 multiplicative-expression: multiplicative-expression MULT • pm-expression

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    concept-name                         go to state 67
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 1370
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    requires-expression                  go to state 442
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 906

  641 multiplicative-expression: multiplicative-expression DIV • pm-expression

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    concept-name                         go to state 67
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 1371
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    requires-expression                  go to state 442
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 907

  642 multiplicative-expression: multiplicative-expression MOD • pm-expression

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    concept-name                         go to state 67
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 1372
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    requires-expression                  go to state 442
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 908

  750 octal-literal: octal-literal SINGLE_QUOTE • octal-digit

    '0'  shift, and go to state 909
    '1'  shift, and go to state 910
    '2'  shift, and go to state 911
    '3'  shift, and go to state 912
    '4'  shift, and go to state 913
    '5'  shift, and go to state 914
    '6'  shift, and go to state 915
    '7'  shift, and go to state 916

    octal-digit  go to state 1373


State 909

  737 octal-digit: '0' •

    $default  reduce using rule 737 (octal-digit)


State 910

  738 octal-digit: '1' •

    $default  reduce using rule 738 (octal-digit)


State 911

  739 octal-digit: '2' •

    $default  reduce using rule 739 (octal-digit)


State 912

  740 octal-digit: '3' •

    $default  reduce using rule 740 (octal-digit)


State 913

  741 octal-digit: '4' •

    $default  reduce using rule 741 (octal-digit)


State 914

  742 octal-digit: '5' •

    $default  reduce using rule 742 (octal-digit)


State 915

  743 octal-digit: '6' •

    $default  reduce using rule 743 (octal-digit)


State 916

  744 octal-digit: '7' •

    $default  reduce using rule 744 (octal-digit)


State 917

  488 integer-literal: octal-literal integer-suffix •

    $default  reduce using rule 488 (integer-literal)


State 918

  749 octal-literal: octal-literal octal-digit •

    $default  reduce using rule 749 (octal-literal)


State 919

  1156 user-defined-integer-literal: octal-literal ud-suffix •

    $default  reduce using rule 1156 (user-defined-integer-literal)


State 920

  853 pm-expression: pm-expression DOT_STAR • cast-expression

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 1374
    character-literal                    go to state 405
    class-name                           go to state 65
    concept-name                         go to state 67
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    requires-expression                  go to state 442
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 921

  854 pm-expression: pm-expression DEREF_STAR • cast-expression

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 1375
    character-literal                    go to state 405
    class-name                           go to state 65
    concept-name                         go to state 67
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    requires-expression                  go to state 442
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 922

  859 postfix-expression: postfix-expression OPEN_PAREN • CLOSE_PAREN
  860                   | postfix-expression OPEN_PAREN • expression-list CLOSE_PAREN

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    CLOSE_PAREN       shift, and go to state 1376
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 935
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 1134
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    braced-init-list                     go to state 1135
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    expression-list                      go to state 1377
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    initializer-clause                   go to state 1138
    initializer-list                     go to state 1139
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 923

  857 postfix-expression: postfix-expression OPEN_SQUARE • CLOSE_SQUARE
  858                   | postfix-expression OPEN_SQUARE • expression-list CLOSE_SQUARE

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CLOSE_SQUARE      shift, and go to state 1378
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 935
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 1134
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    braced-init-list                     go to state 1135
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    expression-list                      go to state 1379
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    initializer-clause                   go to state 1138
    initializer-list                     go to state 1139
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 924

  869 postfix-expression: postfix-expression DEREF • id-expression
  870                   | postfix-expression DEREF • TEMPLATE id-expression

    IDENTIFIER  shift, and go to state 147
    SCOPE       shift, and go to state 9
    TEMPLATE    shift, and go to state 1380
    OPERATOR    shift, and go to state 17
    DECLTYPE    shift, and go to state 134
    COMPL       shift, and go to state 35

    class-name              go to state 65
    conversion-function-id  go to state 68
    decltype-specifier      go to state 138
    enum-name               go to state 84
    id-expression           go to state 1381
    literal-operator-id     go to state 95
    namespace-alias         go to state 99
    namespace-name          go to state 102
    nested-name-specifier   go to state 152
    operator-function-id    go to state 108
    qualified-id            go to state 112
    simple-template-id      go to state 114
    template-id             go to state 120
    template-name           go to state 142
    type-name               go to state 143
    typedef-name            go to state 126
    unqualified-id          go to state 129


State 925

  867 postfix-expression: postfix-expression DOT • id-expression
  868                   | postfix-expression DOT • TEMPLATE id-expression

    IDENTIFIER  shift, and go to state 147
    SCOPE       shift, and go to state 9
    TEMPLATE    shift, and go to state 1382
    OPERATOR    shift, and go to state 17
    DECLTYPE    shift, and go to state 134
    COMPL       shift, and go to state 35

    class-name              go to state 65
    conversion-function-id  go to state 68
    decltype-specifier      go to state 138
    enum-name               go to state 84
    id-expression           go to state 1383
    literal-operator-id     go to state 95
    namespace-alias         go to state 99
    namespace-name          go to state 102
    nested-name-specifier   go to state 152
    operator-function-id    go to state 108
    qualified-id            go to state 112
    simple-template-id      go to state 114
    template-id             go to state 120
    template-name           go to state 142
    type-name               go to state 143
    typedef-name            go to state 126
    unqualified-id          go to state 129


State 926

  871 postfix-expression: postfix-expression PLUS_PLUS •

    $default  reduce using rule 871 (postfix-expression)


State 927

  872 postfix-expression: postfix-expression MINUS_MINUS •

    $default  reduce using rule 872 (postfix-expression)


State 928

  917 relational-expression: relational-expression LESS • compare-expression

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 1384
    concept-name                         go to state 67
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 929

  918 relational-expression: relational-expression GREATER • compare-expression

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 1385
    concept-name                         go to state 67
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 930

  919 relational-expression: relational-expression LESS_EQ • compare-expression

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 1386
    concept-name                         go to state 67
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 931

  920 relational-expression: relational-expression GREATER_EQ • compare-expression

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 1387
    concept-name                         go to state 67
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 932

  953 shift-expression: shift-expression LSHIFT • additive-expression

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 1388
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    concept-name                         go to state 67
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    requires-expression                  go to state 442
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 933

  954 shift-expression: shift-expression RSHIFT • additive-expression

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 1389
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    concept-name                         go to state 67
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    requires-expression                  go to state 442
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 934

  861 postfix-expression: simple-type-specifier OPEN_PAREN • CLOSE_PAREN
  862                   | simple-type-specifier OPEN_PAREN • expression-list CLOSE_PAREN

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    CLOSE_PAREN       shift, and go to state 1390
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 935
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 1134
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    braced-init-list                     go to state 1135
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    expression-list                      go to state 1391
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    initializer-clause                   go to state 1138
    initializer-list                     go to state 1139
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 935

  108 braced-init-list: OPEN_BRACE • initializer-list CLOSE_BRACE
  109                 | OPEN_BRACE • initializer-list COMMA CLOSE_BRACE
  110                 | OPEN_BRACE • designated-initializer-list CLOSE_BRACE
  111                 | OPEN_BRACE • designated-initializer-list COMMA CLOSE_BRACE
  112                 | OPEN_BRACE • CLOSE_BRACE

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 935
    CLOSE_BRACE       shift, and go to state 1392
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 1141
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 1134
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    braced-init-list                     go to state 1135
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    designated-initializer-clause        go to state 1143
    designated-initializer-list          go to state 1144
    designator                           go to state 1145
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    initializer-clause                   go to state 1138
    initializer-list                     go to state 1146
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 936

  865 postfix-expression: simple-type-specifier braced-init-list •

    $default  reduce using rule 865 (postfix-expression)


State 937

   15 alignment-specifier: ALIGNAS OPEN_PAREN type-id CLOSE_PAREN •

    $default  reduce using rule 15 (alignment-specifier)


State 938

   16 alignment-specifier: ALIGNAS OPEN_PAREN type-id ELLIPSIS • CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 1393


State 939

  714 noptr-abstract-declarator: OPEN_PAREN • ptr-abstract-declarator CLOSE_PAREN
  832 parameters-and-qualifiers: OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN
  833                          | OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq
  834                          | OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN ref-qualifier
  835                          | OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq ref-qualifier
  836                          | OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN noexcept-specifier
  837                          | OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq noexcept-specifier
  838                          | OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN ref-qualifier noexcept-specifier
  839                          | OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq ref-qualifier noexcept-specifier
  840                          | OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN attribute-specifier-seq
  841                          | OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq attribute-specifier-seq
  842                          | OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN ref-qualifier attribute-specifier-seq
  843                          | OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq ref-qualifier attribute-specifier-seq
  844                          | OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN noexcept-specifier attribute-specifier-seq
  845                          | OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq noexcept-specifier attribute-specifier-seq
  846                          | OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN ref-qualifier noexcept-specifier attribute-specifier-seq
  847                          | OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq ref-qualifier noexcept-specifier attribute-specifier-seq

    IDENTIFIER    shift, and go to state 162
    ALIGNAS       shift, and go to state 4
    OPEN_PAREN    shift, and go to state 939
    ELLIPSIS      shift, and go to state 730
    AND           shift, and go to state 7
    SCOPE         shift, and go to state 9
    OPEN_SQUARE   shift, and go to state 1394
    VIRTUAL       shift, and go to state 11
    CLASS         shift, and go to state 12
    STRUCT        shift, and go to state 13
    UNION         shift, and go to state 14
    AND_AND       shift, and go to state 16
    CONST         shift, and go to state 18
    VOLATILE      shift, and go to state 19
    FRIEND        shift, and go to state 20
    TYPEDEF       shift, and go to state 21
    CONSTEXPR     shift, and go to state 22
    CONSTEVAL     shift, and go to state 23
    CONSTINIT     shift, and go to state 24
    INLINE        shift, and go to state 258
    DECLTYPE      shift, and go to state 26
    ENUM          shift, and go to state 27
    EXTERN        shift, and go to state 259
    EXPLICIT      shift, and go to state 29
    MULT          shift, and go to state 31
    THIS          shift, and go to state 471
    AUTO          shift, and go to state 36
    CHAR          shift, and go to state 37
    CHAR8_T       shift, and go to state 38
    CHAR16_T      shift, and go to state 39
    CHAR32_T      shift, and go to state 40
    WCHAR_T       shift, and go to state 41
    BOOL          shift, and go to state 42
    SHORT         shift, and go to state 43
    INT           shift, and go to state 44
    LONG          shift, and go to state 45
    SIGNED        shift, and go to state 46
    UNSIGNED      shift, and go to state 47
    FLOAT         shift, and go to state 48
    DOUBLE        shift, and go to state 49
    VOID          shift, and go to state 50
    STATIC        shift, and go to state 52
    THREAD_LOCAL  shift, and go to state 53
    MUTABLE       shift, and go to state 54
    TYPENAME      shift, and go to state 55

    alignment-specifier           go to state 57
    attribute-specifier           go to state 60
    attribute-specifier-seq       go to state 473
    class-head                    go to state 63
    class-key                     go to state 64
    class-name                    go to state 65
    class-specifier               go to state 66
    concept-name                  go to state 67
    cv-qualifier                  go to state 69
    decl-specifier                go to state 70
    decl-specifier-seq            go to state 474
    decltype-specifier            go to state 76
    defining-type-specifier       go to state 78
    elaborated-enum-specifier     go to state 79
    elaborated-type-specifier     go to state 80
    enum-head                     go to state 82
    enum-key                      go to state 263
    enum-name                     go to state 84
    enum-specifier                go to state 85
    explicit-specifier            go to state 264
    function-specifier            go to state 91
    namespace-alias               go to state 99
    namespace-name                go to state 102
    nested-name-specifier         go to state 1395
    noptr-abstract-declarator     go to state 1396
    parameter-declaration         go to state 731
    parameter-declaration-clause  go to state 732
    parameter-declaration-list    go to state 733
    parameters-and-qualifiers     go to state 1397
    placeholder-type-specifier    go to state 109
    ptr-abstract-declarator       go to state 1398
    ptr-operator                  go to state 1399
    simple-template-id            go to state 141
    simple-type-specifier         go to state 115
    storage-class-specifier       go to state 117
    template-name                 go to state 215
    type-constraint               go to state 123
    type-name                     go to state 124
    type-specifier                go to state 125
    typedef-name                  go to state 126
    typename-specifier            go to state 127


State 940

  720 noptr-abstract-pack-declarator: ELLIPSIS •

    $default  reduce using rule 720 (noptr-abstract-pack-declarator)


State 941

  707 noptr-abstract-declarator: OPEN_SQUARE • CLOSE_SQUARE
  709                          | OPEN_SQUARE • constant-expression CLOSE_SQUARE
  711                          | OPEN_SQUARE • CLOSE_SQUARE attribute-specifier-seq
  713                          | OPEN_SQUARE • constant-expression CLOSE_SQUARE attribute-specifier-seq

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CLOSE_SQUARE      shift, and go to state 1400
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 407
    constant-expression                  go to state 1401
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 430
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 942

  1077 type-id: type-specifier-seq abstract-declarator •

    $default  reduce using rule 1077 (type-id)


State 943

    4 abstract-declarator: abstract-pack-declarator •

    $default  reduce using rule 4 (abstract-declarator)


State 944

    2 abstract-declarator: noptr-abstract-declarator • parameters-and-qualifiers trailing-return-type
  704 noptr-abstract-declarator: noptr-abstract-declarator • parameters-and-qualifiers
  706                          | noptr-abstract-declarator • OPEN_SQUARE CLOSE_SQUARE
  708                          | noptr-abstract-declarator • OPEN_SQUARE constant-expression CLOSE_SQUARE
  710                          | noptr-abstract-declarator • OPEN_SQUARE CLOSE_SQUARE attribute-specifier-seq
  712                          | noptr-abstract-declarator • OPEN_SQUARE constant-expression CLOSE_SQUARE attribute-specifier-seq
  888 ptr-abstract-declarator: noptr-abstract-declarator •

    OPEN_PAREN   shift, and go to state 328
    OPEN_SQUARE  shift, and go to state 1402

    OPEN_PAREN  [reduce using rule 888 (ptr-abstract-declarator)]
    $default    reduce using rule 888 (ptr-abstract-declarator)

    parameters-and-qualifiers  go to state 1403


State 945

    5 abstract-pack-declarator: noptr-abstract-pack-declarator •
  715 noptr-abstract-pack-declarator: noptr-abstract-pack-declarator • parameters-and-qualifiers
  716                               | noptr-abstract-pack-declarator • OPEN_SQUARE CLOSE_SQUARE
  717                               | noptr-abstract-pack-declarator • OPEN_SQUARE constant-expression CLOSE_SQUARE
  718                               | noptr-abstract-pack-declarator • OPEN_SQUARE CLOSE_SQUARE attribute-specifier-seq
  719                               | noptr-abstract-pack-declarator • OPEN_SQUARE constant-expression CLOSE_SQUARE attribute-specifier-seq

    OPEN_PAREN   shift, and go to state 328
    OPEN_SQUARE  shift, and go to state 1404

    OPEN_PAREN  [reduce using rule 5 (abstract-pack-declarator)]
    $default    reduce using rule 5 (abstract-pack-declarator)

    parameters-and-qualifiers  go to state 1405


State 946

    3 abstract-declarator: parameters-and-qualifiers • trailing-return-type
  705 noptr-abstract-declarator: parameters-and-qualifiers •

    DEREF  shift, and go to state 736

    $default  reduce using rule 705 (noptr-abstract-declarator)

    trailing-return-type  go to state 1406


State 947

    1 abstract-declarator: ptr-abstract-declarator •

    $default  reduce using rule 1 (abstract-declarator)


State 948

    6 abstract-pack-declarator: ptr-operator • abstract-pack-declarator
  889 ptr-abstract-declarator: ptr-operator •
  890                        | ptr-operator • ptr-abstract-declarator

    IDENTIFIER   shift, and go to state 253
    OPEN_PAREN   shift, and go to state 939
    ELLIPSIS     shift, and go to state 940
    AND          shift, and go to state 7
    SCOPE        shift, and go to state 9
    OPEN_SQUARE  shift, and go to state 941
    AND_AND      shift, and go to state 16
    DECLTYPE     shift, and go to state 134
    MULT         shift, and go to state 31

    OPEN_PAREN  [reduce using rule 889 (ptr-abstract-declarator)]
    ELLIPSIS    [reduce using rule 889 (ptr-abstract-declarator)]
    $default    reduce using rule 889 (ptr-abstract-declarator)

    abstract-pack-declarator        go to state 1407
    class-name                      go to state 65
    decltype-specifier              go to state 138
    enum-name                       go to state 84
    namespace-alias                 go to state 99
    namespace-name                  go to state 102
    nested-name-specifier           go to state 517
    noptr-abstract-declarator       go to state 1396
    noptr-abstract-pack-declarator  go to state 945
    parameters-and-qualifiers       go to state 1397
    ptr-abstract-declarator         go to state 1408
    ptr-operator                    go to state 948
    simple-template-id              go to state 141
    template-name                   go to state 142
    type-name                       go to state 143
    typedef-name                    go to state 126


State 949

  863 postfix-expression: typename-specifier OPEN_PAREN • CLOSE_PAREN
  864                   | typename-specifier OPEN_PAREN • expression-list CLOSE_PAREN

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    CLOSE_PAREN       shift, and go to state 1409
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 935
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 1134
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    braced-init-list                     go to state 1135
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    expression-list                      go to state 1410
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    initializer-clause                   go to state 1138
    initializer-list                     go to state 1139
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 950

  866 postfix-expression: typename-specifier braced-init-list •

    $default  reduce using rule 866 (postfix-expression)


State 951

  1117 unary-expression: unary-operator cast-expression •

    $default  reduce using rule 1117 (unary-expression)


State 952

  661 nested-name-specifier: nested-name-specifier TEMPLATE simple-template-id • SCOPE
  1047 template-id: simple-template-id •

    SCOPE  shift, and go to state 1210

    SCOPE     [reduce using rule 1047 (template-id)]
    $default  reduce using rule 1047 (template-id)


State 953

   22 asm-declaration: ASM OPEN_PAREN string-literal CLOSE_PAREN • SEMICOLON

    SEMICOLON  shift, and go to state 1411


State 954

   48 attribute-namespace: IDENTIFIER •

    $default  reduce using rule 48 (attribute-namespace)


State 955

   57 attribute-using-prefix: USING attribute-namespace • COLON

    COLON  shift, and go to state 1412


State 956

   46 attribute-list: attribute ELLIPSIS •

    $default  reduce using rule 46 (attribute-list)


State 957

   44 attribute-list: attribute-list COMMA •
   45               | attribute-list COMMA • attribute
   47               | attribute-list COMMA • attribute ELLIPSIS

    IDENTIFIER  shift, and go to state 461

    $default  reduce using rule 44 (attribute-list)

    attribute               go to state 1413
    attribute-namespace     go to state 464
    attribute-scoped-token  go to state 465
    attribute-token         go to state 466


State 958

   50 attribute-specifier: OPEN_SQUARE OPEN_SQUARE attribute-list CLOSE_SQUARE • CLOSE_SQUARE

    CLOSE_SQUARE  shift, and go to state 1414


State 959

   49 attribute-scoped-token: attribute-namespace SCOPE • IDENTIFIER

    IDENTIFIER  shift, and go to state 1415


State 960

   40 attribute-argument-clause: OPEN_PAREN • CLOSE_PAREN
   41                          | OPEN_PAREN • balanced-token-seq CLOSE_PAREN

    OPEN_PAREN      shift, and go to state 1416
    CLOSE_PAREN     shift, and go to state 1417
    OPEN_SQUARE     shift, and go to state 1418
    OPEN_BRACE      shift, and go to state 1419
    BALANCED_TOKEN  shift, and go to state 1420

    balanced-token      go to state 1421
    balanced-token-seq  go to state 1422


State 961

   39 attribute: attribute-token attribute-argument-clause •

    $default  reduce using rule 39 (attribute)


State 962

   44 attribute-list: attribute-list • COMMA
   45               | attribute-list • COMMA attribute
   47               | attribute-list • COMMA attribute ELLIPSIS
   51 attribute-specifier: OPEN_SQUARE OPEN_SQUARE attribute-using-prefix attribute-list • CLOSE_SQUARE CLOSE_SQUARE

    COMMA         shift, and go to state 957
    CLOSE_SQUARE  shift, and go to state 1423


State 963

  1045 template-head: TEMPLATE LESS • template-parameter-list GREATER
  1046              | TEMPLATE LESS • template-parameter-list GREATER requires-clause

    IDENTIFIER    shift, and go to state 162
    ALIGNAS       shift, and go to state 4
    SCOPE         shift, and go to state 9
    OPEN_SQUARE   shift, and go to state 10
    VIRTUAL       shift, and go to state 11
    CLASS         shift, and go to state 468
    STRUCT        shift, and go to state 13
    UNION         shift, and go to state 14
    TEMPLATE      shift, and go to state 469
    CONST         shift, and go to state 18
    VOLATILE      shift, and go to state 19
    FRIEND        shift, and go to state 20
    TYPEDEF       shift, and go to state 21
    CONSTEXPR     shift, and go to state 22
    CONSTEVAL     shift, and go to state 23
    CONSTINIT     shift, and go to state 24
    INLINE        shift, and go to state 258
    DECLTYPE      shift, and go to state 26
    ENUM          shift, and go to state 27
    EXTERN        shift, and go to state 259
    EXPLICIT      shift, and go to state 29
    THIS          shift, and go to state 471
    AUTO          shift, and go to state 36
    CHAR          shift, and go to state 37
    CHAR8_T       shift, and go to state 38
    CHAR16_T      shift, and go to state 39
    CHAR32_T      shift, and go to state 40
    WCHAR_T       shift, and go to state 41
    BOOL          shift, and go to state 42
    SHORT         shift, and go to state 43
    INT           shift, and go to state 44
    LONG          shift, and go to state 45
    SIGNED        shift, and go to state 46
    UNSIGNED      shift, and go to state 47
    FLOAT         shift, and go to state 48
    DOUBLE        shift, and go to state 49
    VOID          shift, and go to state 50
    STATIC        shift, and go to state 52
    THREAD_LOCAL  shift, and go to state 53
    MUTABLE       shift, and go to state 54
    TYPENAME      shift, and go to state 472

    alignment-specifier         go to state 57
    attribute-specifier         go to state 60
    attribute-specifier-seq     go to state 473
    class-head                  go to state 63
    class-key                   go to state 64
    class-name                  go to state 65
    class-specifier             go to state 66
    concept-name                go to state 67
    cv-qualifier                go to state 69
    decl-specifier              go to state 70
    decl-specifier-seq          go to state 474
    decltype-specifier          go to state 76
    defining-type-specifier     go to state 78
    elaborated-enum-specifier   go to state 79
    elaborated-type-specifier   go to state 80
    enum-head                   go to state 82
    enum-key                    go to state 263
    enum-name                   go to state 84
    enum-specifier              go to state 85
    explicit-specifier          go to state 264
    function-specifier          go to state 91
    namespace-alias             go to state 99
    namespace-name              go to state 102
    nested-name-specifier       go to state 212
    parameter-declaration       go to state 475
    placeholder-type-specifier  go to state 109
    simple-template-id          go to state 141
    simple-type-specifier       go to state 115
    storage-class-specifier     go to state 117
    template-head               go to state 476
    template-name               go to state 215
    template-parameter          go to state 477
    template-parameter-list     go to state 478
    type-constraint             go to state 479
    type-name                   go to state 124
    type-parameter              go to state 480
    type-parameter-key          go to state 481
    type-specifier              go to state 125
    typedef-name                go to state 126
    typename-specifier          go to state 127


State 964

  321 explicit-specialization: TEMPLATE LESS GREATER declaration •

    $default  reduce using rule 321 (explicit-specialization)


State 965

  805 parameter-declaration: THIS decl-specifier-seq • declarator
  809                      | THIS decl-specifier-seq • declarator EQ initializer-clause
  813                      | THIS decl-specifier-seq •
  817                      | THIS decl-specifier-seq • abstract-declarator
  821                      | THIS decl-specifier-seq • EQ initializer-clause
  825                      | THIS decl-specifier-seq • abstract-declarator EQ initializer-clause

    IDENTIFIER   shift, and go to state 147
    EQ           shift, and go to state 1424
    OPEN_PAREN   shift, and go to state 969
    ELLIPSIS     shift, and go to state 970
    AND          shift, and go to state 7
    SCOPE        shift, and go to state 9
    OPEN_SQUARE  shift, and go to state 941
    AND_AND      shift, and go to state 16
    OPERATOR     shift, and go to state 17
    DECLTYPE     shift, and go to state 134
    MULT         shift, and go to state 31
    COMPL        shift, and go to state 35

    ELLIPSIS  [reduce using rule 813 (parameter-declaration)]
    $default  reduce using rule 813 (parameter-declaration)

    abstract-declarator             go to state 1425
    abstract-pack-declarator        go to state 943
    class-name                      go to state 65
    conversion-function-id          go to state 68
    declarator                      go to state 1426
    declarator-id                   go to state 75
    decltype-specifier              go to state 138
    enum-name                       go to state 84
    id-expression                   go to state 93
    literal-operator-id             go to state 95
    namespace-alias                 go to state 99
    namespace-name                  go to state 102
    nested-name-specifier           go to state 148
    noptr-abstract-declarator       go to state 944
    noptr-abstract-pack-declarator  go to state 945
    noptr-declarator                go to state 106
    operator-function-id            go to state 108
    parameters-and-qualifiers       go to state 946
    ptr-abstract-declarator         go to state 947
    ptr-declarator                  go to state 110
    ptr-operator                    go to state 973
    qualified-id                    go to state 112
    simple-template-id              go to state 114
    template-id                     go to state 120
    template-name                   go to state 142
    type-name                       go to state 143
    typedef-name                    go to state 126
    unqualified-id                  go to state 129


State 966

  804 parameter-declaration: attribute-specifier-seq THIS • decl-specifier-seq declarator
  808                      | attribute-specifier-seq THIS • decl-specifier-seq declarator EQ initializer-clause
  812                      | attribute-specifier-seq THIS • decl-specifier-seq
  816                      | attribute-specifier-seq THIS • decl-specifier-seq abstract-declarator
  820                      | attribute-specifier-seq THIS • decl-specifier-seq EQ initializer-clause
  824                      | attribute-specifier-seq THIS • decl-specifier-seq abstract-declarator EQ initializer-clause

    IDENTIFIER    shift, and go to state 162
    SCOPE         shift, and go to state 9
    VIRTUAL       shift, and go to state 11
    CLASS         shift, and go to state 12
    STRUCT        shift, and go to state 13
    UNION         shift, and go to state 14
    CONST         shift, and go to state 18
    VOLATILE      shift, and go to state 19
    FRIEND        shift, and go to state 20
    TYPEDEF       shift, and go to state 21
    CONSTEXPR     shift, and go to state 22
    CONSTEVAL     shift, and go to state 23
    CONSTINIT     shift, and go to state 24
    INLINE        shift, and go to state 258
    DECLTYPE      shift, and go to state 26
    ENUM          shift, and go to state 27
    EXTERN        shift, and go to state 259
    EXPLICIT      shift, and go to state 29
    AUTO          shift, and go to state 36
    CHAR          shift, and go to state 37
    CHAR8_T       shift, and go to state 38
    CHAR16_T      shift, and go to state 39
    CHAR32_T      shift, and go to state 40
    WCHAR_T       shift, and go to state 41
    BOOL          shift, and go to state 42
    SHORT         shift, and go to state 43
    INT           shift, and go to state 44
    LONG          shift, and go to state 45
    SIGNED        shift, and go to state 46
    UNSIGNED      shift, and go to state 47
    FLOAT         shift, and go to state 48
    DOUBLE        shift, and go to state 49
    VOID          shift, and go to state 50
    STATIC        shift, and go to state 52
    THREAD_LOCAL  shift, and go to state 53
    MUTABLE       shift, and go to state 54
    TYPENAME      shift, and go to state 55

    class-head                  go to state 63
    class-key                   go to state 64
    class-name                  go to state 65
    class-specifier             go to state 66
    concept-name                go to state 67
    cv-qualifier                go to state 69
    decl-specifier              go to state 70
    decl-specifier-seq          go to state 1427
    decltype-specifier          go to state 76
    defining-type-specifier     go to state 78
    elaborated-enum-specifier   go to state 79
    elaborated-type-specifier   go to state 80
    enum-head                   go to state 82
    enum-key                    go to state 263
    enum-name                   go to state 84
    enum-specifier              go to state 85
    explicit-specifier          go to state 264
    function-specifier          go to state 91
    namespace-alias             go to state 99
    namespace-name              go to state 102
    nested-name-specifier       go to state 212
    placeholder-type-specifier  go to state 109
    simple-template-id          go to state 141
    simple-type-specifier       go to state 115
    storage-class-specifier     go to state 117
    template-name               go to state 215
    type-constraint             go to state 123
    type-name                   go to state 124
    type-specifier              go to state 125
    typedef-name                go to state 126
    typename-specifier          go to state 127


State 967

  802 parameter-declaration: attribute-specifier-seq decl-specifier-seq • declarator
  806                      | attribute-specifier-seq decl-specifier-seq • declarator EQ initializer-clause
  810                      | attribute-specifier-seq decl-specifier-seq •
  814                      | attribute-specifier-seq decl-specifier-seq • abstract-declarator
  818                      | attribute-specifier-seq decl-specifier-seq • EQ initializer-clause
  822                      | attribute-specifier-seq decl-specifier-seq • abstract-declarator EQ initializer-clause

    IDENTIFIER   shift, and go to state 147
    EQ           shift, and go to state 1428
    OPEN_PAREN   shift, and go to state 969
    ELLIPSIS     shift, and go to state 970
    AND          shift, and go to state 7
    SCOPE        shift, and go to state 9
    OPEN_SQUARE  shift, and go to state 941
    AND_AND      shift, and go to state 16
    OPERATOR     shift, and go to state 17
    DECLTYPE     shift, and go to state 134
    MULT         shift, and go to state 31
    COMPL        shift, and go to state 35

    ELLIPSIS  [reduce using rule 810 (parameter-declaration)]
    $default  reduce using rule 810 (parameter-declaration)

    abstract-declarator             go to state 1429
    abstract-pack-declarator        go to state 943
    class-name                      go to state 65
    conversion-function-id          go to state 68
    declarator                      go to state 1430
    declarator-id                   go to state 75
    decltype-specifier              go to state 138
    enum-name                       go to state 84
    id-expression                   go to state 93
    literal-operator-id             go to state 95
    namespace-alias                 go to state 99
    namespace-name                  go to state 102
    nested-name-specifier           go to state 148
    noptr-abstract-declarator       go to state 944
    noptr-abstract-pack-declarator  go to state 945
    noptr-declarator                go to state 106
    operator-function-id            go to state 108
    parameters-and-qualifiers       go to state 946
    ptr-abstract-declarator         go to state 947
    ptr-declarator                  go to state 110
    ptr-operator                    go to state 973
    qualified-id                    go to state 112
    simple-template-id              go to state 114
    template-id                     go to state 120
    template-name                   go to state 142
    type-name                       go to state 143
    typedef-name                    go to state 126
    unqualified-id                  go to state 129


State 968

  819 parameter-declaration: decl-specifier-seq EQ • initializer-clause

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 935
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 1134
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    braced-init-list                     go to state 1135
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    initializer-clause                   go to state 1431
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 969

  714 noptr-abstract-declarator: OPEN_PAREN • ptr-abstract-declarator CLOSE_PAREN
  728 noptr-declarator: OPEN_PAREN • ptr-declarator CLOSE_PAREN
  832 parameters-and-qualifiers: OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN
  833                          | OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq
  834                          | OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN ref-qualifier
  835                          | OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq ref-qualifier
  836                          | OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN noexcept-specifier
  837                          | OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq noexcept-specifier
  838                          | OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN ref-qualifier noexcept-specifier
  839                          | OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq ref-qualifier noexcept-specifier
  840                          | OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN attribute-specifier-seq
  841                          | OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq attribute-specifier-seq
  842                          | OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN ref-qualifier attribute-specifier-seq
  843                          | OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq ref-qualifier attribute-specifier-seq
  844                          | OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN noexcept-specifier attribute-specifier-seq
  845                          | OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq noexcept-specifier attribute-specifier-seq
  846                          | OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN ref-qualifier noexcept-specifier attribute-specifier-seq
  847                          | OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq ref-qualifier noexcept-specifier attribute-specifier-seq

    IDENTIFIER    shift, and go to state 2
    ALIGNAS       shift, and go to state 4
    OPEN_PAREN    shift, and go to state 969
    ELLIPSIS      shift, and go to state 1432
    AND           shift, and go to state 7
    SCOPE         shift, and go to state 9
    OPEN_SQUARE   shift, and go to state 1394
    VIRTUAL       shift, and go to state 11
    CLASS         shift, and go to state 12
    STRUCT        shift, and go to state 13
    UNION         shift, and go to state 14
    AND_AND       shift, and go to state 16
    OPERATOR      shift, and go to state 17
    CONST         shift, and go to state 18
    VOLATILE      shift, and go to state 19
    FRIEND        shift, and go to state 20
    TYPEDEF       shift, and go to state 21
    CONSTEXPR     shift, and go to state 22
    CONSTEVAL     shift, and go to state 23
    CONSTINIT     shift, and go to state 24
    INLINE        shift, and go to state 258
    DECLTYPE      shift, and go to state 26
    ENUM          shift, and go to state 27
    EXTERN        shift, and go to state 259
    EXPLICIT      shift, and go to state 29
    MULT          shift, and go to state 31
    COMPL         shift, and go to state 35
    THIS          shift, and go to state 471
    AUTO          shift, and go to state 36
    CHAR          shift, and go to state 37
    CHAR8_T       shift, and go to state 38
    CHAR16_T      shift, and go to state 39
    CHAR32_T      shift, and go to state 40
    WCHAR_T       shift, and go to state 41
    BOOL          shift, and go to state 42
    SHORT         shift, and go to state 43
    INT           shift, and go to state 44
    LONG          shift, and go to state 45
    SIGNED        shift, and go to state 46
    UNSIGNED      shift, and go to state 47
    FLOAT         shift, and go to state 48
    DOUBLE        shift, and go to state 49
    VOID          shift, and go to state 50
    STATIC        shift, and go to state 52
    THREAD_LOCAL  shift, and go to state 53
    MUTABLE       shift, and go to state 54
    TYPENAME      shift, and go to state 55

    alignment-specifier           go to state 57
    attribute-specifier           go to state 60
    attribute-specifier-seq       go to state 473
    class-head                    go to state 63
    class-key                     go to state 64
    class-name                    go to state 65
    class-specifier               go to state 66
    concept-name                  go to state 67
    conversion-function-id        go to state 68
    cv-qualifier                  go to state 69
    decl-specifier                go to state 70
    decl-specifier-seq            go to state 474
    declarator-id                 go to state 75
    decltype-specifier            go to state 76
    defining-type-specifier       go to state 78
    elaborated-enum-specifier     go to state 79
    elaborated-type-specifier     go to state 80
    enum-head                     go to state 82
    enum-key                      go to state 263
    enum-name                     go to state 84
    enum-specifier                go to state 85
    explicit-specifier            go to state 264
    function-specifier            go to state 91
    id-expression                 go to state 93
    literal-operator-id           go to state 95
    namespace-alias               go to state 99
    namespace-name                go to state 102
    nested-name-specifier         go to state 103
    noptr-abstract-declarator     go to state 1396
    noptr-declarator              go to state 149
    operator-function-id          go to state 108
    parameter-declaration         go to state 731
    parameter-declaration-clause  go to state 732
    parameter-declaration-list    go to state 733
    parameters-and-qualifiers     go to state 1397
    placeholder-type-specifier    go to state 109
    ptr-abstract-declarator       go to state 1398
    ptr-declarator                go to state 150
    ptr-operator                  go to state 1433
    qualified-id                  go to state 112
    simple-template-id            go to state 114
    simple-type-specifier         go to state 115
    storage-class-specifier       go to state 117
    template-id                   go to state 120
    template-name                 go to state 215
    type-constraint               go to state 123
    type-name                     go to state 124
    type-specifier                go to state 125
    typedef-name                  go to state 126
    typename-specifier            go to state 127
    unqualified-id                go to state 129


State 970

  228 declarator-id: ELLIPSIS • id-expression
  720 noptr-abstract-pack-declarator: ELLIPSIS •

    IDENTIFIER  shift, and go to state 147
    SCOPE       shift, and go to state 9
    OPERATOR    shift, and go to state 17
    DECLTYPE    shift, and go to state 134
    COMPL       shift, and go to state 35

    $default  reduce using rule 720 (noptr-abstract-pack-declarator)

    class-name              go to state 65
    conversion-function-id  go to state 68
    decltype-specifier      go to state 138
    enum-name               go to state 84
    id-expression           go to state 151
    literal-operator-id     go to state 95
    namespace-alias         go to state 99
    namespace-name          go to state 102
    nested-name-specifier   go to state 152
    operator-function-id    go to state 108
    qualified-id            go to state 112
    simple-template-id      go to state 114
    template-id             go to state 120
    template-name           go to state 142
    type-name               go to state 143
    typedef-name            go to state 126
    unqualified-id          go to state 129


State 971

  815 parameter-declaration: decl-specifier-seq abstract-declarator •
  823                      | decl-specifier-seq abstract-declarator • EQ initializer-clause

    EQ  shift, and go to state 1434

    $default  reduce using rule 815 (parameter-declaration)


State 972

  803 parameter-declaration: decl-specifier-seq declarator •
  807                      | decl-specifier-seq declarator • EQ initializer-clause

    EQ  shift, and go to state 1435

    $default  reduce using rule 803 (parameter-declaration)


State 973

    6 abstract-pack-declarator: ptr-operator • abstract-pack-declarator
  889 ptr-abstract-declarator: ptr-operator •
  890                        | ptr-operator • ptr-abstract-declarator
  892 ptr-declarator: ptr-operator • ptr-declarator

    IDENTIFIER   shift, and go to state 147
    OPEN_PAREN   shift, and go to state 969
    ELLIPSIS     shift, and go to state 970
    AND          shift, and go to state 7
    SCOPE        shift, and go to state 9
    OPEN_SQUARE  shift, and go to state 941
    AND_AND      shift, and go to state 16
    OPERATOR     shift, and go to state 17
    DECLTYPE     shift, and go to state 134
    MULT         shift, and go to state 31
    COMPL        shift, and go to state 35

    ELLIPSIS  [reduce using rule 889 (ptr-abstract-declarator)]
    $default  reduce using rule 889 (ptr-abstract-declarator)

    abstract-pack-declarator        go to state 1407
    class-name                      go to state 65
    conversion-function-id          go to state 68
    declarator-id                   go to state 75
    decltype-specifier              go to state 138
    enum-name                       go to state 84
    id-expression                   go to state 93
    literal-operator-id             go to state 95
    namespace-alias                 go to state 99
    namespace-name                  go to state 102
    nested-name-specifier           go to state 148
    noptr-abstract-declarator       go to state 1396
    noptr-abstract-pack-declarator  go to state 945
    noptr-declarator                go to state 149
    operator-function-id            go to state 108
    parameters-and-qualifiers       go to state 1397
    ptr-abstract-declarator         go to state 1408
    ptr-declarator                  go to state 332
    ptr-operator                    go to state 973
    qualified-id                    go to state 112
    simple-template-id              go to state 114
    template-id                     go to state 120
    template-name                   go to state 142
    type-name                       go to state 143
    typedef-name                    go to state 126
    unqualified-id                  go to state 129


State 974

  1099 type-parameter-key: CLASS •

    $default  reduce using rule 1099 (type-parameter-key)


State 975

  1100 type-parameter-key: TYPENAME •

    $default  reduce using rule 1100 (type-parameter-key)


State 976

  1093 type-parameter: template-head type-parameter-key •
  1094               | template-head type-parameter-key • ELLIPSIS
  1095               | template-head type-parameter-key • IDENTIFIER
  1096               | template-head type-parameter-key • ELLIPSIS IDENTIFIER
  1097               | template-head type-parameter-key • EQ id-expression
  1098               | template-head type-parameter-key • IDENTIFIER EQ id-expression

    IDENTIFIER  shift, and go to state 1436
    EQ          shift, and go to state 1437
    ELLIPSIS    shift, and go to state 1438

    $default  reduce using rule 1093 (type-parameter)


State 977

  1056 template-parameter-list: template-parameter-list COMMA • template-parameter

    IDENTIFIER    shift, and go to state 162
    ALIGNAS       shift, and go to state 4
    SCOPE         shift, and go to state 9
    OPEN_SQUARE   shift, and go to state 10
    VIRTUAL       shift, and go to state 11
    CLASS         shift, and go to state 468
    STRUCT        shift, and go to state 13
    UNION         shift, and go to state 14
    TEMPLATE      shift, and go to state 469
    CONST         shift, and go to state 18
    VOLATILE      shift, and go to state 19
    FRIEND        shift, and go to state 20
    TYPEDEF       shift, and go to state 21
    CONSTEXPR     shift, and go to state 22
    CONSTEVAL     shift, and go to state 23
    CONSTINIT     shift, and go to state 24
    INLINE        shift, and go to state 258
    DECLTYPE      shift, and go to state 26
    ENUM          shift, and go to state 27
    EXTERN        shift, and go to state 259
    EXPLICIT      shift, and go to state 29
    THIS          shift, and go to state 471
    AUTO          shift, and go to state 36
    CHAR          shift, and go to state 37
    CHAR8_T       shift, and go to state 38
    CHAR16_T      shift, and go to state 39
    CHAR32_T      shift, and go to state 40
    WCHAR_T       shift, and go to state 41
    BOOL          shift, and go to state 42
    SHORT         shift, and go to state 43
    INT           shift, and go to state 44
    LONG          shift, and go to state 45
    SIGNED        shift, and go to state 46
    UNSIGNED      shift, and go to state 47
    FLOAT         shift, and go to state 48
    DOUBLE        shift, and go to state 49
    VOID          shift, and go to state 50
    STATIC        shift, and go to state 52
    THREAD_LOCAL  shift, and go to state 53
    MUTABLE       shift, and go to state 54
    TYPENAME      shift, and go to state 472

    alignment-specifier         go to state 57
    attribute-specifier         go to state 60
    attribute-specifier-seq     go to state 473
    class-head                  go to state 63
    class-key                   go to state 64
    class-name                  go to state 65
    class-specifier             go to state 66
    concept-name                go to state 67
    cv-qualifier                go to state 69
    decl-specifier              go to state 70
    decl-specifier-seq          go to state 474
    decltype-specifier          go to state 76
    defining-type-specifier     go to state 78
    elaborated-enum-specifier   go to state 79
    elaborated-type-specifier   go to state 80
    enum-head                   go to state 82
    enum-key                    go to state 263
    enum-name                   go to state 84
    enum-specifier              go to state 85
    explicit-specifier          go to state 264
    function-specifier          go to state 91
    namespace-alias             go to state 99
    namespace-name              go to state 102
    nested-name-specifier       go to state 212
    parameter-declaration       go to state 475
    placeholder-type-specifier  go to state 109
    simple-template-id          go to state 141
    simple-type-specifier       go to state 115
    storage-class-specifier     go to state 117
    template-head               go to state 476
    template-name               go to state 215
    template-parameter          go to state 1439
    type-constraint             go to state 479
    type-name                   go to state 124
    type-parameter              go to state 480
    type-parameter-key          go to state 481
    type-specifier              go to state 125
    typedef-name                go to state 126
    typename-specifier          go to state 127


State 978

  1045 template-head: TEMPLATE LESS template-parameter-list GREATER •
  1046              | TEMPLATE LESS template-parameter-list GREATER • requires-clause

    REQUIRES  shift, and go to state 292

    $default  reduce using rule 1045 (template-head)

    requires-clause  go to state 1440


State 979

  1089 type-parameter: type-constraint IDENTIFIER •
  1092               | type-constraint IDENTIFIER • EQ type-id

    EQ  shift, and go to state 1441

    $default  reduce using rule 1089 (type-parameter)


State 980

  1091 type-parameter: type-constraint EQ • type-id

    IDENTIFIER  shift, and go to state 162
    SCOPE       shift, and go to state 9
    CLASS       shift, and go to state 12
    STRUCT      shift, and go to state 13
    UNION       shift, and go to state 14
    CONST       shift, and go to state 18
    VOLATILE    shift, and go to state 19
    DECLTYPE    shift, and go to state 26
    ENUM        shift, and go to state 135
    AUTO        shift, and go to state 36
    CHAR        shift, and go to state 37
    CHAR8_T     shift, and go to state 38
    CHAR16_T    shift, and go to state 39
    CHAR32_T    shift, and go to state 40
    WCHAR_T     shift, and go to state 41
    BOOL        shift, and go to state 42
    SHORT       shift, and go to state 43
    INT         shift, and go to state 44
    LONG        shift, and go to state 45
    SIGNED      shift, and go to state 46
    UNSIGNED    shift, and go to state 47
    FLOAT       shift, and go to state 48
    DOUBLE      shift, and go to state 49
    VOID        shift, and go to state 50
    TYPENAME    shift, and go to state 55

    class-key                   go to state 209
    class-name                  go to state 65
    concept-name                go to state 67
    cv-qualifier                go to state 69
    decltype-specifier          go to state 76
    elaborated-enum-specifier   go to state 79
    elaborated-type-specifier   go to state 80
    enum-name                   go to state 84
    namespace-alias             go to state 99
    namespace-name              go to state 102
    nested-name-specifier       go to state 212
    placeholder-type-specifier  go to state 109
    simple-template-id          go to state 141
    simple-type-specifier       go to state 115
    template-name               go to state 215
    type-constraint             go to state 123
    type-id                     go to state 1442
    type-name                   go to state 124
    type-specifier              go to state 216
    type-specifier-seq          go to state 447
    typedef-name                go to state 126
    typename-specifier          go to state 127


State 981

  1088 type-parameter: type-constraint ELLIPSIS •
  1090               | type-constraint ELLIPSIS • IDENTIFIER

    IDENTIFIER  shift, and go to state 1443

    $default  reduce using rule 1088 (type-parameter)


State 982

  1083 type-parameter: type-parameter-key IDENTIFIER •
  1086               | type-parameter-key IDENTIFIER • EQ type-id

    EQ  shift, and go to state 1444

    $default  reduce using rule 1083 (type-parameter)


State 983

  1085 type-parameter: type-parameter-key EQ • type-id

    IDENTIFIER  shift, and go to state 162
    SCOPE       shift, and go to state 9
    CLASS       shift, and go to state 12
    STRUCT      shift, and go to state 13
    UNION       shift, and go to state 14
    CONST       shift, and go to state 18
    VOLATILE    shift, and go to state 19
    DECLTYPE    shift, and go to state 26
    ENUM        shift, and go to state 135
    AUTO        shift, and go to state 36
    CHAR        shift, and go to state 37
    CHAR8_T     shift, and go to state 38
    CHAR16_T    shift, and go to state 39
    CHAR32_T    shift, and go to state 40
    WCHAR_T     shift, and go to state 41
    BOOL        shift, and go to state 42
    SHORT       shift, and go to state 43
    INT         shift, and go to state 44
    LONG        shift, and go to state 45
    SIGNED      shift, and go to state 46
    UNSIGNED    shift, and go to state 47
    FLOAT       shift, and go to state 48
    DOUBLE      shift, and go to state 49
    VOID        shift, and go to state 50
    TYPENAME    shift, and go to state 55

    class-key                   go to state 209
    class-name                  go to state 65
    concept-name                go to state 67
    cv-qualifier                go to state 69
    decltype-specifier          go to state 76
    elaborated-enum-specifier   go to state 79
    elaborated-type-specifier   go to state 80
    enum-name                   go to state 84
    namespace-alias             go to state 99
    namespace-name              go to state 102
    nested-name-specifier       go to state 212
    placeholder-type-specifier  go to state 109
    simple-template-id          go to state 141
    simple-type-specifier       go to state 115
    template-name               go to state 215
    type-constraint             go to state 123
    type-id                     go to state 1445
    type-name                   go to state 124
    type-specifier              go to state 216
    type-specifier-seq          go to state 447
    typedef-name                go to state 126
    typename-specifier          go to state 127


State 984

  1082 type-parameter: type-parameter-key ELLIPSIS •
  1084               | type-parameter-key ELLIPSIS • IDENTIFIER

    IDENTIFIER  shift, and go to state 1446

    $default  reduce using rule 1082 (type-parameter)


State 985

  761 overloadable-operator: DELETE OPEN_SQUARE CLOSE_SQUARE •

    $default  reduce using rule 761 (overloadable-operator)


State 986

  971 simple-escape-sequence-char: SINGLE_QUOTE •

    $default  reduce using rule 971 (simple-escape-sequence-char)


State 987

  974 simple-escape-sequence-char: ESCAPE •

    $default  reduce using rule 974 (simple-escape-sequence-char)


State 988

  168 conditional-escape-sequence-char: CONDITIONAL_ESCAPE_SEQUENCE_CHAR •

    $default  reduce using rule 168 (conditional-escape-sequence-char)


State 989

  973 simple-escape-sequence-char: QUERY •

    $default  reduce using rule 973 (simple-escape-sequence-char)


State 990

  972 simple-escape-sequence-char: DOUBLE_QUOTE •

    $default  reduce using rule 972 (simple-escape-sequence-char)


State 991

  977 simple-escape-sequence-char: 'f' •

    $default  reduce using rule 977 (simple-escape-sequence-char)


State 992

  975 simple-escape-sequence-char: 'a' •

    $default  reduce using rule 975 (simple-escape-sequence-char)


State 993

  976 simple-escape-sequence-char: 'b' •

    $default  reduce using rule 976 (simple-escape-sequence-char)


State 994

  978 simple-escape-sequence-char: 'n' •

    $default  reduce using rule 978 (simple-escape-sequence-char)


State 995

  979 simple-escape-sequence-char: 'r' •

    $default  reduce using rule 979 (simple-escape-sequence-char)


State 996

  980 simple-escape-sequence-char: 't' •

    $default  reduce using rule 980 (simple-escape-sequence-char)


State 997

  981 simple-escape-sequence-char: 'v' •

    $default  reduce using rule 981 (simple-escape-sequence-char)


State 998

  167 conditional-escape-sequence: ESCAPE conditional-escape-sequence-char •

    $default  reduce using rule 167 (conditional-escape-sequence)


State 999

  745 octal-escape-sequence: ESCAPE octal-digit •
  746                      | ESCAPE octal-digit • octal-digit
  747                      | ESCAPE octal-digit • octal-digit octal-digit

    '0'  shift, and go to state 909
    '1'  shift, and go to state 910
    '2'  shift, and go to state 911
    '3'  shift, and go to state 912
    '4'  shift, and go to state 913
    '5'  shift, and go to state 914
    '6'  shift, and go to state 915
    '7'  shift, and go to state 916

    $default  reduce using rule 745 (octal-escape-sequence)

    octal-digit  go to state 1447


State 1000

  970 simple-escape-sequence: ESCAPE simple-escape-sequence-char •

    $default  reduce using rule 970 (simple-escape-sequence)


State 1001

  447 hexadecimal-escape-sequence: ESCAPE_LX hexadecimal-digit •

    $default  reduce using rule 447 (hexadecimal-escape-sequence)


State 1002

  1134 universal-character-name: ESCAPE_LU hex-quad •

    $default  reduce using rule 1134 (universal-character-name)


State 1003

  421 hex-quad: hexadecimal-digit • hexadecimal-digit hexadecimal-digit hexadecimal-digit

    '0'  shift, and go to state 867
    '1'  shift, and go to state 868
    '2'  shift, and go to state 869
    '3'  shift, and go to state 870
    '4'  shift, and go to state 871
    '5'  shift, and go to state 872
    '6'  shift, and go to state 873
    '7'  shift, and go to state 874
    '8'  shift, and go to state 875
    '9'  shift, and go to state 876
    'e'  shift, and go to state 877
    'E'  shift, and go to state 878
    'f'  shift, and go to state 879
    'F'  shift, and go to state 880
    'a'  shift, and go to state 881
    'b'  shift, and go to state 882
    'c'  shift, and go to state 883
    'd'  shift, and go to state 884
    'A'  shift, and go to state 885
    'B'  shift, and go to state 886
    'C'  shift, and go to state 887
    'D'  shift, and go to state 888

    hexadecimal-digit  go to state 1448


State 1004

  1135 universal-character-name: ESCAPE_HU hex-quad • hex-quad

    '0'  shift, and go to state 867
    '1'  shift, and go to state 868
    '2'  shift, and go to state 869
    '3'  shift, and go to state 870
    '4'  shift, and go to state 871
    '5'  shift, and go to state 872
    '6'  shift, and go to state 873
    '7'  shift, and go to state 874
    '8'  shift, and go to state 875
    '9'  shift, and go to state 876
    'e'  shift, and go to state 877
    'E'  shift, and go to state 878
    'f'  shift, and go to state 879
    'F'  shift, and go to state 880
    'a'  shift, and go to state 881
    'b'  shift, and go to state 882
    'c'  shift, and go to state 883
    'd'  shift, and go to state 884
    'A'  shift, and go to state 885
    'B'  shift, and go to state 886
    'C'  shift, and go to state 887
    'D'  shift, and go to state 888

    hex-quad           go to state 1449
    hexadecimal-digit  go to state 1003


State 1005

  448 hexadecimal-escape-sequence: hexadecimal-escape-sequence hexadecimal-digit •

    $default  reduce using rule 448 (hexadecimal-escape-sequence)


State 1006

  1033 string-literal: DOUBLE_QUOTE s-char-sequence DOUBLE_QUOTE •

    $default  reduce using rule 1033 (string-literal)


State 1007

  937 s-char-sequence: s-char-sequence s-char •

    $default  reduce using rule 937 (s-char-sequence)


State 1008

  760 overloadable-operator: NEW OPEN_SQUARE CLOSE_SQUARE •

    $default  reduce using rule 760 (overloadable-operator)


State 1009

  267 elaborated-type-specifier: class-key attribute-specifier-seq nested-name-specifier • IDENTIFIER
  659 nested-name-specifier: nested-name-specifier • IDENTIFIER SCOPE
  660                      | nested-name-specifier • simple-template-id SCOPE
  661                      | nested-name-specifier • TEMPLATE simple-template-id SCOPE

    IDENTIFIER  shift, and go to state 1450
    TEMPLATE    shift, and go to state 350

    simple-template-id  go to state 534
    template-name       go to state 142


State 1010

  266 elaborated-type-specifier: class-key nested-name-specifier IDENTIFIER •
  659 nested-name-specifier: nested-name-specifier IDENTIFIER • SCOPE
  1052 template-name: IDENTIFIER •

    SCOPE  shift, and go to state 722

    SCOPE     [reduce using rule 266 (elaborated-type-specifier)]
    LESS      reduce using rule 266 (elaborated-type-specifier)
    LESS      [reduce using rule 1052 (template-name)]
    $default  reduce using rule 266 (elaborated-type-specifier)


State 1011

  269 elaborated-type-specifier: class-key nested-name-specifier simple-template-id •
  660 nested-name-specifier: nested-name-specifier simple-template-id • SCOPE

    SCOPE  shift, and go to state 729

    SCOPE     [reduce using rule 269 (elaborated-type-specifier)]
    $default  reduce using rule 269 (elaborated-type-specifier)


State 1012

  1030 string-literal: encoding-prefix DOUBLE_QUOTE DOUBLE_QUOTE •

    $default  reduce using rule 1030 (string-literal)


State 1013

  937 s-char-sequence: s-char-sequence • s-char
  1032 string-literal: encoding-prefix DOUBLE_QUOTE s-char-sequence • DOUBLE_QUOTE

    BASIC_S_CHAR  shift, and go to state 485
    ESCAPE        shift, and go to state 486
    DOUBLE_QUOTE  shift, and go to state 1451
    ESCAPE_LX     shift, and go to state 488
    ESCAPE_LU     shift, and go to state 489
    ESCAPE_HU     shift, and go to state 490

    basic-s-char                 go to state 491
    conditional-escape-sequence  go to state 492
    escape-sequence              go to state 493
    hexadecimal-escape-sequence  go to state 494
    numeric-escape-sequence      go to state 495
    octal-escape-sequence        go to state 496
    s-char                       go to state 1007
    simple-escape-sequence       go to state 499
    universal-character-name     go to state 500


State 1014

  1034 string-literal: encoding-prefix 'R' raw-string •

    $default  reduce using rule 1034 (string-literal)


State 1015

  661 nested-name-specifier: nested-name-specifier TEMPLATE simple-template-id • SCOPE
  987 simple-type-specifier: nested-name-specifier TEMPLATE simple-template-id •

    SCOPE  shift, and go to state 1210

    SCOPE     [reduce using rule 987 (simple-type-specifier)]
    $default  reduce using rule 987 (simple-type-specifier)


State 1016

  756 operator-function-id: OPERATOR overloadable-operator LESS GREATER •

    $default  reduce using rule 756 (operator-function-id)


State 1017

  757 operator-function-id: OPERATOR overloadable-operator LESS template-argument-list • GREATER
  1041 template-argument-list: template-argument-list • COMMA template-argument
  1042                       | template-argument-list • COMMA template-argument ELLIPSIS

    COMMA    shift, and go to state 1129
    GREATER  shift, and go to state 1452


State 1018

  659 nested-name-specifier: nested-name-specifier IDENTIFIER • SCOPE
  1052 template-name: IDENTIFIER •

    SCOPE  shift, and go to state 722

    $default  reduce using rule 1052 (template-name)


State 1019

  178 conversion-declarator: ptr-operator conversion-declarator •

    $default  reduce using rule 178 (conversion-declarator)


State 1020

  643 named-namespace-definition: INLINE NAMESPACE IDENTIFIER OPEN_BRACE • namespace-body CLOSE_BRACE

    USING          shift, and go to state 1
    IDENTIFIER     shift, and go to state 2
    SEMICOLON      shift, and go to state 3
    ALIGNAS        shift, and go to state 4
    OPEN_PAREN     shift, and go to state 5
    ELLIPSIS       shift, and go to state 6
    AND            shift, and go to state 7
    ASM            shift, and go to state 8
    SCOPE          shift, and go to state 9
    OPEN_SQUARE    shift, and go to state 10
    VIRTUAL        shift, and go to state 11
    CLASS          shift, and go to state 12
    STRUCT         shift, and go to state 13
    UNION          shift, and go to state 14
    TEMPLATE       shift, and go to state 15
    AND_AND        shift, and go to state 16
    OPERATOR       shift, and go to state 17
    CONST          shift, and go to state 18
    VOLATILE       shift, and go to state 19
    FRIEND         shift, and go to state 20
    TYPEDEF        shift, and go to state 21
    CONSTEXPR      shift, and go to state 22
    CONSTEVAL      shift, and go to state 23
    CONSTINIT      shift, and go to state 24
    INLINE         shift, and go to state 25
    DECLTYPE       shift, and go to state 26
    ENUM           shift, and go to state 27
    EXTERN         shift, and go to state 28
    EXPLICIT       shift, and go to state 29
    EXPORT         shift, and go to state 157
    MULT           shift, and go to state 31
    IMPORT         shift, and go to state 33
    NAMESPACE      shift, and go to state 34
    COMPL          shift, and go to state 35
    AUTO           shift, and go to state 36
    CHAR           shift, and go to state 37
    CHAR8_T        shift, and go to state 38
    CHAR16_T       shift, and go to state 39
    CHAR32_T       shift, and go to state 40
    WCHAR_T        shift, and go to state 41
    BOOL           shift, and go to state 42
    SHORT          shift, and go to state 43
    INT            shift, and go to state 44
    LONG           shift, and go to state 45
    SIGNED         shift, and go to state 46
    UNSIGNED       shift, and go to state 47
    FLOAT          shift, and go to state 48
    DOUBLE         shift, and go to state 49
    VOID           shift, and go to state 50
    STATIC_ASSERT  shift, and go to state 51
    STATIC         shift, and go to state 52
    THREAD_LOCAL   shift, and go to state 53
    MUTABLE        shift, and go to state 54
    TYPENAME       shift, and go to state 55

    alias-declaration                go to state 56
    alignment-specifier              go to state 57
    asm-declaration                  go to state 58
    attribute-declaration            go to state 59
    attribute-specifier              go to state 60
    attribute-specifier-seq          go to state 61
    block-declaration                go to state 62
    class-head                       go to state 63
    class-key                        go to state 64
    class-name                       go to state 65
    class-specifier                  go to state 66
    concept-name                     go to state 67
    conversion-function-id           go to state 68
    cv-qualifier                     go to state 69
    decl-specifier                   go to state 70
    decl-specifier-seq               go to state 71
    declaration                      go to state 72
    declaration-seq                  go to state 566
    declarator                       go to state 74
    declarator-id                    go to state 75
    decltype-specifier               go to state 76
    deduction-guide                  go to state 77
    defining-type-specifier          go to state 78
    elaborated-enum-specifier        go to state 79
    elaborated-type-specifier        go to state 80
    empty-declaration                go to state 81
    enum-head                        go to state 82
    enum-key                         go to state 83
    enum-name                        go to state 84
    enum-specifier                   go to state 85
    explicit-instantiation           go to state 86
    explicit-specialization          go to state 87
    explicit-specifier               go to state 88
    export-declaration               go to state 89
    function-definition              go to state 90
    function-specifier               go to state 91
    id-expression                    go to state 93
    linkage-specification            go to state 94
    literal-operator-id              go to state 95
    module-import-declaration        go to state 97
    named-namespace-definition       go to state 98
    namespace-alias                  go to state 99
    namespace-alias-definition       go to state 100
    namespace-body                   go to state 1453
    namespace-definition             go to state 101
    namespace-name                   go to state 102
    nested-name-specifier            go to state 103
    nested-namespace-definition      go to state 104
    nodeclspec-function-declaration  go to state 105
    noptr-declarator                 go to state 106
    opaque-enum-declaration          go to state 107
    operator-function-id             go to state 108
    placeholder-type-specifier       go to state 109
    ptr-declarator                   go to state 110
    ptr-operator                     go to state 111
    qualified-id                     go to state 112
    simple-declaration               go to state 113
    simple-template-id               go to state 114
    simple-type-specifier            go to state 115
    static_assert-declaration        go to state 116
    storage-class-specifier          go to state 117
    template-declaration             go to state 118
    template-head                    go to state 119
    template-id                      go to state 120
    template-name                    go to state 121
    type-constraint                  go to state 123
    type-name                        go to state 124
    type-specifier                   go to state 125
    typedef-name                     go to state 126
    typename-specifier               go to state 127
    unnamed-namespace-definition     go to state 128
    unqualified-id                   go to state 129
    using-declaration                go to state 130
    using-directive                  go to state 131
    using-enum-declaration           go to state 132


State 1021

  1136 unnamed-namespace-definition: INLINE NAMESPACE OPEN_BRACE namespace-body • CLOSE_BRACE

    CLOSE_BRACE  shift, and go to state 1454


State 1022

  645 named-namespace-definition: INLINE NAMESPACE attribute-specifier-seq IDENTIFIER • OPEN_BRACE namespace-body CLOSE_BRACE

    OPEN_BRACE  shift, and go to state 1455


State 1023

  1138 unnamed-namespace-definition: INLINE NAMESPACE attribute-specifier-seq OPEN_BRACE • namespace-body CLOSE_BRACE

    USING          shift, and go to state 1
    IDENTIFIER     shift, and go to state 2
    SEMICOLON      shift, and go to state 3
    ALIGNAS        shift, and go to state 4
    OPEN_PAREN     shift, and go to state 5
    ELLIPSIS       shift, and go to state 6
    AND            shift, and go to state 7
    ASM            shift, and go to state 8
    SCOPE          shift, and go to state 9
    OPEN_SQUARE    shift, and go to state 10
    VIRTUAL        shift, and go to state 11
    CLASS          shift, and go to state 12
    STRUCT         shift, and go to state 13
    UNION          shift, and go to state 14
    TEMPLATE       shift, and go to state 15
    AND_AND        shift, and go to state 16
    OPERATOR       shift, and go to state 17
    CONST          shift, and go to state 18
    VOLATILE       shift, and go to state 19
    FRIEND         shift, and go to state 20
    TYPEDEF        shift, and go to state 21
    CONSTEXPR      shift, and go to state 22
    CONSTEVAL      shift, and go to state 23
    CONSTINIT      shift, and go to state 24
    INLINE         shift, and go to state 25
    DECLTYPE       shift, and go to state 26
    ENUM           shift, and go to state 27
    EXTERN         shift, and go to state 28
    EXPLICIT       shift, and go to state 29
    EXPORT         shift, and go to state 157
    MULT           shift, and go to state 31
    IMPORT         shift, and go to state 33
    NAMESPACE      shift, and go to state 34
    COMPL          shift, and go to state 35
    AUTO           shift, and go to state 36
    CHAR           shift, and go to state 37
    CHAR8_T        shift, and go to state 38
    CHAR16_T       shift, and go to state 39
    CHAR32_T       shift, and go to state 40
    WCHAR_T        shift, and go to state 41
    BOOL           shift, and go to state 42
    SHORT          shift, and go to state 43
    INT            shift, and go to state 44
    LONG           shift, and go to state 45
    SIGNED         shift, and go to state 46
    UNSIGNED       shift, and go to state 47
    FLOAT          shift, and go to state 48
    DOUBLE         shift, and go to state 49
    VOID           shift, and go to state 50
    STATIC_ASSERT  shift, and go to state 51
    STATIC         shift, and go to state 52
    THREAD_LOCAL   shift, and go to state 53
    MUTABLE        shift, and go to state 54
    TYPENAME       shift, and go to state 55

    alias-declaration                go to state 56
    alignment-specifier              go to state 57
    asm-declaration                  go to state 58
    attribute-declaration            go to state 59
    attribute-specifier              go to state 60
    attribute-specifier-seq          go to state 61
    block-declaration                go to state 62
    class-head                       go to state 63
    class-key                        go to state 64
    class-name                       go to state 65
    class-specifier                  go to state 66
    concept-name                     go to state 67
    conversion-function-id           go to state 68
    cv-qualifier                     go to state 69
    decl-specifier                   go to state 70
    decl-specifier-seq               go to state 71
    declaration                      go to state 72
    declaration-seq                  go to state 566
    declarator                       go to state 74
    declarator-id                    go to state 75
    decltype-specifier               go to state 76
    deduction-guide                  go to state 77
    defining-type-specifier          go to state 78
    elaborated-enum-specifier        go to state 79
    elaborated-type-specifier        go to state 80
    empty-declaration                go to state 81
    enum-head                        go to state 82
    enum-key                         go to state 83
    enum-name                        go to state 84
    enum-specifier                   go to state 85
    explicit-instantiation           go to state 86
    explicit-specialization          go to state 87
    explicit-specifier               go to state 88
    export-declaration               go to state 89
    function-definition              go to state 90
    function-specifier               go to state 91
    id-expression                    go to state 93
    linkage-specification            go to state 94
    literal-operator-id              go to state 95
    module-import-declaration        go to state 97
    named-namespace-definition       go to state 98
    namespace-alias                  go to state 99
    namespace-alias-definition       go to state 100
    namespace-body                   go to state 1456
    namespace-definition             go to state 101
    namespace-name                   go to state 102
    nested-name-specifier            go to state 103
    nested-namespace-definition      go to state 104
    nodeclspec-function-declaration  go to state 105
    noptr-declarator                 go to state 106
    opaque-enum-declaration          go to state 107
    operator-function-id             go to state 108
    placeholder-type-specifier       go to state 109
    ptr-declarator                   go to state 110
    ptr-operator                     go to state 111
    qualified-id                     go to state 112
    simple-declaration               go to state 113
    simple-template-id               go to state 114
    simple-type-specifier            go to state 115
    static_assert-declaration        go to state 116
    storage-class-specifier          go to state 117
    template-declaration             go to state 118
    template-head                    go to state 119
    template-id                      go to state 120
    template-name                    go to state 121
    type-constraint                  go to state 123
    type-name                        go to state 124
    type-specifier                   go to state 125
    typedef-name                     go to state 126
    typename-specifier               go to state 127
    unnamed-namespace-definition     go to state 128
    unqualified-id                   go to state 129
    using-declaration                go to state 130
    using-directive                  go to state 131
    using-enum-declaration           go to state 132


State 1024

  851 placeholder-type-specifier: DECLTYPE OPEN_PAREN AUTO CLOSE_PAREN •

    $default  reduce using rule 851 (placeholder-type-specifier)


State 1025

  1058 throw-expression: THROW assignment-expression •

    $default  reduce using rule 1058 (throw-expression)


State 1026

  1180 yield-expression: CO_YIELD assignment-expression •

    $default  reduce using rule 1180 (yield-expression)


State 1027

  1181 yield-expression: CO_YIELD braced-init-list •

    $default  reduce using rule 1181 (yield-expression)


State 1028

  230 decltype-specifier: DECLTYPE OPEN_PAREN expression CLOSE_PAREN •

    $default  reduce using rule 230 (decltype-specifier)


State 1029

  335 expression: expression COMMA • assignment-expression

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 1457
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 1030

   27 assignment-operator: EQ •

    $default  reduce using rule 27 (assignment-operator)


State 1031

   28 assignment-operator: MULT_EQ •

    $default  reduce using rule 28 (assignment-operator)


State 1032

   29 assignment-operator: DIV_EQ •

    $default  reduce using rule 29 (assignment-operator)


State 1033

   30 assignment-operator: MOD_EQ •

    $default  reduce using rule 30 (assignment-operator)


State 1034

   31 assignment-operator: PLUS_EQ •

    $default  reduce using rule 31 (assignment-operator)


State 1035

   32 assignment-operator: MINUS_EQ •

    $default  reduce using rule 32 (assignment-operator)


State 1036

   33 assignment-operator: RSHIFT_EQ •

    $default  reduce using rule 33 (assignment-operator)


State 1037

   34 assignment-operator: LSHIFT_EQ •

    $default  reduce using rule 34 (assignment-operator)


State 1038

   35 assignment-operator: AND_EQ •

    $default  reduce using rule 35 (assignment-operator)


State 1039

   36 assignment-operator: XOR_EQ •

    $default  reduce using rule 36 (assignment-operator)


State 1040

   37 assignment-operator: OR_EQ •

    $default  reduce using rule 37 (assignment-operator)


State 1041

   26 assignment-expression: logical-or-expression assignment-operator • initializer-clause

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 935
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 1134
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    braced-init-list                     go to state 1135
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    initializer-clause                   go to state 1458
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 1042

  551 linkage-specification: EXTERN string-literal OPEN_BRACE CLOSE_BRACE •

    $default  reduce using rule 551 (linkage-specification)


State 1043

  224 declaration-seq: declaration-seq • declaration
  552 linkage-specification: EXTERN string-literal OPEN_BRACE declaration-seq • CLOSE_BRACE

    USING          shift, and go to state 1
    IDENTIFIER     shift, and go to state 2
    SEMICOLON      shift, and go to state 3
    ALIGNAS        shift, and go to state 4
    OPEN_PAREN     shift, and go to state 5
    ELLIPSIS       shift, and go to state 6
    AND            shift, and go to state 7
    ASM            shift, and go to state 8
    SCOPE          shift, and go to state 9
    OPEN_SQUARE    shift, and go to state 10
    CLOSE_BRACE    shift, and go to state 1459
    VIRTUAL        shift, and go to state 11
    CLASS          shift, and go to state 12
    STRUCT         shift, and go to state 13
    UNION          shift, and go to state 14
    TEMPLATE       shift, and go to state 15
    AND_AND        shift, and go to state 16
    OPERATOR       shift, and go to state 17
    CONST          shift, and go to state 18
    VOLATILE       shift, and go to state 19
    FRIEND         shift, and go to state 20
    TYPEDEF        shift, and go to state 21
    CONSTEXPR      shift, and go to state 22
    CONSTEVAL      shift, and go to state 23
    CONSTINIT      shift, and go to state 24
    INLINE         shift, and go to state 25
    DECLTYPE       shift, and go to state 26
    ENUM           shift, and go to state 27
    EXTERN         shift, and go to state 28
    EXPLICIT       shift, and go to state 29
    EXPORT         shift, and go to state 157
    MULT           shift, and go to state 31
    IMPORT         shift, and go to state 33
    NAMESPACE      shift, and go to state 34
    COMPL          shift, and go to state 35
    AUTO           shift, and go to state 36
    CHAR           shift, and go to state 37
    CHAR8_T        shift, and go to state 38
    CHAR16_T       shift, and go to state 39
    CHAR32_T       shift, and go to state 40
    WCHAR_T        shift, and go to state 41
    BOOL           shift, and go to state 42
    SHORT          shift, and go to state 43
    INT            shift, and go to state 44
    LONG           shift, and go to state 45
    SIGNED         shift, and go to state 46
    UNSIGNED       shift, and go to state 47
    FLOAT          shift, and go to state 48
    DOUBLE         shift, and go to state 49
    VOID           shift, and go to state 50
    STATIC_ASSERT  shift, and go to state 51
    STATIC         shift, and go to state 52
    THREAD_LOCAL   shift, and go to state 53
    MUTABLE        shift, and go to state 54
    TYPENAME       shift, and go to state 55

    alias-declaration                go to state 56
    alignment-specifier              go to state 57
    asm-declaration                  go to state 58
    attribute-declaration            go to state 59
    attribute-specifier              go to state 60
    attribute-specifier-seq          go to state 61
    block-declaration                go to state 62
    class-head                       go to state 63
    class-key                        go to state 64
    class-name                       go to state 65
    class-specifier                  go to state 66
    concept-name                     go to state 67
    conversion-function-id           go to state 68
    cv-qualifier                     go to state 69
    decl-specifier                   go to state 70
    decl-specifier-seq               go to state 71
    declaration                      go to state 285
    declarator                       go to state 74
    declarator-id                    go to state 75
    decltype-specifier               go to state 76
    deduction-guide                  go to state 77
    defining-type-specifier          go to state 78
    elaborated-enum-specifier        go to state 79
    elaborated-type-specifier        go to state 80
    empty-declaration                go to state 81
    enum-head                        go to state 82
    enum-key                         go to state 83
    enum-name                        go to state 84
    enum-specifier                   go to state 85
    explicit-instantiation           go to state 86
    explicit-specialization          go to state 87
    explicit-specifier               go to state 88
    export-declaration               go to state 89
    function-definition              go to state 90
    function-specifier               go to state 91
    id-expression                    go to state 93
    linkage-specification            go to state 94
    literal-operator-id              go to state 95
    module-import-declaration        go to state 97
    named-namespace-definition       go to state 98
    namespace-alias                  go to state 99
    namespace-alias-definition       go to state 100
    namespace-definition             go to state 101
    namespace-name                   go to state 102
    nested-name-specifier            go to state 103
    nested-namespace-definition      go to state 104
    nodeclspec-function-declaration  go to state 105
    noptr-declarator                 go to state 106
    opaque-enum-declaration          go to state 107
    operator-function-id             go to state 108
    placeholder-type-specifier       go to state 109
    ptr-declarator                   go to state 110
    ptr-operator                     go to state 111
    qualified-id                     go to state 112
    simple-declaration               go to state 113
    simple-template-id               go to state 114
    simple-type-specifier            go to state 115
    static_assert-declaration        go to state 116
    storage-class-specifier          go to state 117
    template-declaration             go to state 118
    template-head                    go to state 119
    template-id                      go to state 120
    template-name                    go to state 121
    type-constraint                  go to state 123
    type-name                        go to state 124
    type-specifier                   go to state 125
    typedef-name                     go to state 126
    typename-specifier               go to state 127
    unnamed-namespace-definition     go to state 128
    unqualified-id                   go to state 129
    using-declaration                go to state 130
    using-directive                  go to state 131
    using-enum-declaration           go to state 132


State 1044

  322 explicit-specifier: EXPLICIT OPEN_PAREN constant-expression CLOSE_PAREN •

    $default  reduce using rule 322 (explicit-specifier)


State 1045

  330 export-declaration: EXPORT OPEN_BRACE declaration-seq CLOSE_BRACE •

    $default  reduce using rule 330 (export-declaration)


State 1046

  619 module-declaration: EXPORT MODULE module-name SEMICOLON •

    $default  reduce using rule 619 (module-declaration)


State 1047

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  623 module-declaration: EXPORT MODULE module-name attribute-specifier-seq • SEMICOLON

    SEMICOLON    shift, and go to state 1460
    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    alignment-specifier  go to state 57
    attribute-specifier  go to state 260


State 1048

  621 module-declaration: EXPORT MODULE module-name module-partition • SEMICOLON
  625                   | EXPORT MODULE module-name module-partition • attribute-specifier-seq SEMICOLON

    SEMICOLON    shift, and go to state 1461
    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 1462


State 1049

  624 module-declaration: MODULE module-name attribute-specifier-seq SEMICOLON •

    $default  reduce using rule 624 (module-declaration)


State 1050

  622 module-declaration: MODULE module-name module-partition SEMICOLON •

    $default  reduce using rule 622 (module-declaration)


State 1051

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  626 module-declaration: MODULE module-name module-partition attribute-specifier-seq • SEMICOLON

    SEMICOLON    shift, and go to state 1463
    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    alignment-specifier  go to state 57
    attribute-specifier  go to state 260


State 1052

  636 module-name-qualifier: module-name-qualifier IDENTIFIER DOT •

    $default  reduce using rule 636 (module-name-qualifier)


State 1053

  636 module-name-qualifier: module-name-qualifier IDENTIFIER • DOT
  638 module-partition: COLON module-name-qualifier IDENTIFIER •

    DOT  shift, and go to state 1052

    $default  reduce using rule 638 (module-partition)


State 1054

  419 header-name: LESS h-char-sequence GREATER •

    $default  reduce using rule 419 (header-name)


State 1055

  415 h-char-sequence: h-char-sequence h-char •

    $default  reduce using rule 415 (h-char-sequence)


State 1056

  420 header-name: DOUBLE_QUOTE q-char-sequence DOUBLE_QUOTE •

    $default  reduce using rule 420 (header-name)


State 1057

  908 q-char-sequence: q-char-sequence q-char •

    $default  reduce using rule 908 (q-char-sequence)


State 1058

  632 module-import-declaration: IMPORT header-name attribute-specifier-seq SEMICOLON •

    $default  reduce using rule 632 (module-import-declaration)


State 1059

  628 module-import-declaration: IMPORT module-name attribute-specifier-seq SEMICOLON •

    $default  reduce using rule 628 (module-import-declaration)


State 1060

  630 module-import-declaration: IMPORT module-partition attribute-specifier-seq SEMICOLON •

    $default  reduce using rule 630 (module-import-declaration)


State 1061

  657 nested-name-specifier: namespace-name • SCOPE
  912 qualified-namespace-specifier: namespace-name •

    SCOPE  shift, and go to state 319

    $default  reduce using rule 912 (qualified-namespace-specifier)


State 1062

  659 nested-name-specifier: nested-name-specifier • IDENTIFIER SCOPE
  660                      | nested-name-specifier • simple-template-id SCOPE
  661                      | nested-name-specifier • TEMPLATE simple-template-id SCOPE
  911 qualified-namespace-specifier: nested-name-specifier • namespace-name

    IDENTIFIER  shift, and go to state 751
    TEMPLATE    shift, and go to state 350

    namespace-alias     go to state 99
    namespace-name      go to state 1464
    simple-template-id  go to state 534
    template-name       go to state 142


State 1063

  648 namespace-alias-definition: NAMESPACE IDENTIFIER EQ qualified-namespace-specifier • SEMICOLON

    SEMICOLON  shift, and go to state 1465


State 1064

  644 named-namespace-definition: NAMESPACE IDENTIFIER OPEN_BRACE namespace-body • CLOSE_BRACE

    CLOSE_BRACE  shift, and go to state 1466


State 1065

  1137 unnamed-namespace-definition: NAMESPACE OPEN_BRACE namespace-body CLOSE_BRACE •

    $default  reduce using rule 1137 (unnamed-namespace-definition)


State 1066

  646 named-namespace-definition: NAMESPACE attribute-specifier-seq IDENTIFIER OPEN_BRACE • namespace-body CLOSE_BRACE

    USING          shift, and go to state 1
    IDENTIFIER     shift, and go to state 2
    SEMICOLON      shift, and go to state 3
    ALIGNAS        shift, and go to state 4
    OPEN_PAREN     shift, and go to state 5
    ELLIPSIS       shift, and go to state 6
    AND            shift, and go to state 7
    ASM            shift, and go to state 8
    SCOPE          shift, and go to state 9
    OPEN_SQUARE    shift, and go to state 10
    VIRTUAL        shift, and go to state 11
    CLASS          shift, and go to state 12
    STRUCT         shift, and go to state 13
    UNION          shift, and go to state 14
    TEMPLATE       shift, and go to state 15
    AND_AND        shift, and go to state 16
    OPERATOR       shift, and go to state 17
    CONST          shift, and go to state 18
    VOLATILE       shift, and go to state 19
    FRIEND         shift, and go to state 20
    TYPEDEF        shift, and go to state 21
    CONSTEXPR      shift, and go to state 22
    CONSTEVAL      shift, and go to state 23
    CONSTINIT      shift, and go to state 24
    INLINE         shift, and go to state 25
    DECLTYPE       shift, and go to state 26
    ENUM           shift, and go to state 27
    EXTERN         shift, and go to state 28
    EXPLICIT       shift, and go to state 29
    EXPORT         shift, and go to state 157
    MULT           shift, and go to state 31
    IMPORT         shift, and go to state 33
    NAMESPACE      shift, and go to state 34
    COMPL          shift, and go to state 35
    AUTO           shift, and go to state 36
    CHAR           shift, and go to state 37
    CHAR8_T        shift, and go to state 38
    CHAR16_T       shift, and go to state 39
    CHAR32_T       shift, and go to state 40
    WCHAR_T        shift, and go to state 41
    BOOL           shift, and go to state 42
    SHORT          shift, and go to state 43
    INT            shift, and go to state 44
    LONG           shift, and go to state 45
    SIGNED         shift, and go to state 46
    UNSIGNED       shift, and go to state 47
    FLOAT          shift, and go to state 48
    DOUBLE         shift, and go to state 49
    VOID           shift, and go to state 50
    STATIC_ASSERT  shift, and go to state 51
    STATIC         shift, and go to state 52
    THREAD_LOCAL   shift, and go to state 53
    MUTABLE        shift, and go to state 54
    TYPENAME       shift, and go to state 55

    alias-declaration                go to state 56
    alignment-specifier              go to state 57
    asm-declaration                  go to state 58
    attribute-declaration            go to state 59
    attribute-specifier              go to state 60
    attribute-specifier-seq          go to state 61
    block-declaration                go to state 62
    class-head                       go to state 63
    class-key                        go to state 64
    class-name                       go to state 65
    class-specifier                  go to state 66
    concept-name                     go to state 67
    conversion-function-id           go to state 68
    cv-qualifier                     go to state 69
    decl-specifier                   go to state 70
    decl-specifier-seq               go to state 71
    declaration                      go to state 72
    declaration-seq                  go to state 566
    declarator                       go to state 74
    declarator-id                    go to state 75
    decltype-specifier               go to state 76
    deduction-guide                  go to state 77
    defining-type-specifier          go to state 78
    elaborated-enum-specifier        go to state 79
    elaborated-type-specifier        go to state 80
    empty-declaration                go to state 81
    enum-head                        go to state 82
    enum-key                         go to state 83
    enum-name                        go to state 84
    enum-specifier                   go to state 85
    explicit-instantiation           go to state 86
    explicit-specialization          go to state 87
    explicit-specifier               go to state 88
    export-declaration               go to state 89
    function-definition              go to state 90
    function-specifier               go to state 91
    id-expression                    go to state 93
    linkage-specification            go to state 94
    literal-operator-id              go to state 95
    module-import-declaration        go to state 97
    named-namespace-definition       go to state 98
    namespace-alias                  go to state 99
    namespace-alias-definition       go to state 100
    namespace-body                   go to state 1467
    namespace-definition             go to state 101
    namespace-name                   go to state 102
    nested-name-specifier            go to state 103
    nested-namespace-definition      go to state 104
    nodeclspec-function-declaration  go to state 105
    noptr-declarator                 go to state 106
    opaque-enum-declaration          go to state 107
    operator-function-id             go to state 108
    placeholder-type-specifier       go to state 109
    ptr-declarator                   go to state 110
    ptr-operator                     go to state 111
    qualified-id                     go to state 112
    simple-declaration               go to state 113
    simple-template-id               go to state 114
    simple-type-specifier            go to state 115
    static_assert-declaration        go to state 116
    storage-class-specifier          go to state 117
    template-declaration             go to state 118
    template-head                    go to state 119
    template-id                      go to state 120
    template-name                    go to state 121
    type-constraint                  go to state 123
    type-name                        go to state 124
    type-specifier                   go to state 125
    typedef-name                     go to state 126
    typename-specifier               go to state 127
    unnamed-namespace-definition     go to state 128
    unqualified-id                   go to state 129
    using-declaration                go to state 130
    using-directive                  go to state 131
    using-enum-declaration           go to state 132


State 1067

  1139 unnamed-namespace-definition: NAMESPACE attribute-specifier-seq OPEN_BRACE namespace-body • CLOSE_BRACE

    CLOSE_BRACE  shift, and go to state 1468


State 1068

  274 enclosing-namespace-specifier: enclosing-namespace-specifier SCOPE IDENTIFIER •
  662 nested-namespace-definition: NAMESPACE enclosing-namespace-specifier SCOPE IDENTIFIER • OPEN_BRACE namespace-body CLOSE_BRACE

    OPEN_BRACE  shift, and go to state 1469

    $default  reduce using rule 274 (enclosing-namespace-specifier)


State 1069

  275 enclosing-namespace-specifier: enclosing-namespace-specifier SCOPE INLINE • IDENTIFIER
  663 nested-namespace-definition: NAMESPACE enclosing-namespace-specifier SCOPE INLINE • IDENTIFIER OPEN_BRACE namespace-body CLOSE_BRACE

    IDENTIFIER  shift, and go to state 1470


State 1070

  1024 static_assert-declaration: STATIC_ASSERT OPEN_PAREN constant-expression CLOSE_PAREN • SEMICOLON

    SEMICOLON  shift, and go to state 1471


State 1071

  1025 static_assert-declaration: STATIC_ASSERT OPEN_PAREN constant-expression COMMA • string-literal CLOSE_PAREN SEMICOLON

    UNICODE_8     shift, and go to state 184
    DOUBLE_QUOTE  shift, and go to state 199
    'u'           shift, and go to state 205
    'U'           shift, and go to state 206
    'L'           shift, and go to state 207
    'R'           shift, and go to state 208

    encoding-prefix  go to state 211
    string-literal   go to state 1472


State 1072

  661 nested-name-specifier: nested-name-specifier TEMPLATE simple-template-id • SCOPE
  1114 typename-specifier: TYPENAME nested-name-specifier TEMPLATE simple-template-id •

    SCOPE  shift, and go to state 1210

    SCOPE     [reduce using rule 1114 (typename-specifier)]
    $default  reduce using rule 1114 (typename-specifier)


State 1073

  657 nested-name-specifier: namespace-name • SCOPE
  1171 using-directive: attribute-specifier-seq USING NAMESPACE namespace-name • SEMICOLON

    SEMICOLON  shift, and go to state 1473
    SCOPE      shift, and go to state 319


State 1074

  659 nested-name-specifier: nested-name-specifier • IDENTIFIER SCOPE
  660                      | nested-name-specifier • simple-template-id SCOPE
  661                      | nested-name-specifier • TEMPLATE simple-template-id SCOPE
  1173 using-directive: attribute-specifier-seq USING NAMESPACE nested-name-specifier • namespace-name SEMICOLON

    IDENTIFIER  shift, and go to state 751
    TEMPLATE    shift, and go to state 350

    namespace-alias     go to state 99
    namespace-name      go to state 1474
    simple-template-id  go to state 534
    template-name       go to state 142


State 1075

   21 asm-declaration: attribute-specifier-seq ASM OPEN_PAREN string-literal • CLOSE_PAREN SEMICOLON

    CLOSE_PAREN  shift, and go to state 1475


State 1076

  462 identifier-list: identifier-list • COMMA IDENTIFIER
  966 simple-declaration: attribute-specifier-seq decl-specifier-seq OPEN_SQUARE identifier-list • CLOSE_SQUARE initializer SEMICOLON

    COMMA         shift, and go to state 1131
    CLOSE_SQUARE  shift, and go to state 1476


State 1077

  397 function-definition: attribute-specifier-seq decl-specifier-seq declarator function-body •

    $default  reduce using rule 397 (function-definition)


State 1078

  405 function-definition: attribute-specifier-seq decl-specifier-seq declarator requires-clause • function-body
  471 init-declarator: declarator requires-clause •

    EQ          shift, and go to state 286
    COLON       shift, and go to state 288
    OPEN_BRACE  shift, and go to state 289
    TRY         shift, and go to state 291

    $default  reduce using rule 471 (init-declarator)

    compound-statement  go to state 294
    ctor-initializer    go to state 295
    function-body       go to state 1477
    function-try-block  go to state 297


State 1079

  401 function-definition: attribute-specifier-seq decl-specifier-seq declarator virt-specifier-seq • function-body
  1179 virt-specifier-seq: virt-specifier-seq • virt-specifier

    EQ          shift, and go to state 286
    COLON       shift, and go to state 288
    OPEN_BRACE  shift, and go to state 289
    FINAL       shift, and go to state 290
    TRY         shift, and go to state 291
    OVERRIDE    shift, and go to state 293

    compound-statement  go to state 294
    ctor-initializer    go to state 295
    function-body       go to state 1478
    function-try-block  go to state 297
    virt-specifier      go to state 703


State 1080

  965 simple-declaration: attribute-specifier-seq decl-specifier-seq init-declarator-list SEMICOLON •

    $default  reduce using rule 965 (simple-declaration)


State 1081

  968 simple-declaration: attribute-specifier-seq decl-specifier-seq ref-qualifier OPEN_SQUARE • identifier-list CLOSE_SQUARE initializer SEMICOLON

    IDENTIFIER  shift, and go to state 640

    identifier-list  go to state 1479


State 1082

  403 function-definition: attribute-specifier-seq declarator requires-clause function-body •

    $default  reduce using rule 403 (function-definition)


State 1083

  399 function-definition: attribute-specifier-seq declarator virt-specifier-seq function-body •

    $default  reduce using rule 399 (function-definition)


State 1084

  284 enum-head: enum-key attribute-specifier-seq enum-head-name •
  288          | enum-key attribute-specifier-seq enum-head-name • enum-base

    COLON  shift, and go to state 305

    $default  reduce using rule 284 (enum-head)

    enum-base  go to state 1480


State 1085

  287 enum-head: enum-key enum-head-name enum-base •

    $default  reduce using rule 287 (enum-head)


State 1086

  605 member-declarator: IDENTIFIER COLON • constant-expression
  609                  | IDENTIFIER COLON • constant-expression brace-or-equal-initializer

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 407
    constant-expression                  go to state 1481
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 430
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 1087

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  607 member-declarator: IDENTIFIER attribute-specifier-seq • COLON constant-expression
  611                  | IDENTIFIER attribute-specifier-seq • COLON constant-expression brace-or-equal-initializer

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10
    COLON        shift, and go to state 1482

    alignment-specifier  go to state 57
    attribute-specifier  go to state 260


State 1088

  606 member-declarator: COLON constant-expression •
  610                  | COLON constant-expression • brace-or-equal-initializer

    EQ          shift, and go to state 1273
    OPEN_BRACE  shift, and go to state 935

    $default  reduce using rule 606 (member-declarator)

    brace-or-equal-initializer  go to state 1483
    braced-init-list            go to state 646


State 1089

  617 member-specification: access-specifier COLON •
  618                     | access-specifier COLON • member-specification

    PRIVATE        shift, and go to state 587
    PROTECTED      shift, and go to state 588
    PUBLIC         shift, and go to state 589
    USING          shift, and go to state 590
    IDENTIFIER     shift, and go to state 591
    SEMICOLON      shift, and go to state 592
    ALIGNAS        shift, and go to state 4
    OPEN_PAREN     shift, and go to state 5
    ELLIPSIS       shift, and go to state 6
    AND            shift, and go to state 7
    SCOPE          shift, and go to state 9
    OPEN_SQUARE    shift, and go to state 10
    COLON          shift, and go to state 593
    VIRTUAL        shift, and go to state 11
    CLASS          shift, and go to state 12
    STRUCT         shift, and go to state 13
    UNION          shift, and go to state 14
    TEMPLATE       shift, and go to state 595
    AND_AND        shift, and go to state 16
    OPERATOR       shift, and go to state 17
    CONST          shift, and go to state 18
    VOLATILE       shift, and go to state 19
    FRIEND         shift, and go to state 20
    TYPEDEF        shift, and go to state 21
    CONSTEXPR      shift, and go to state 22
    CONSTEVAL      shift, and go to state 23
    CONSTINIT      shift, and go to state 24
    INLINE         shift, and go to state 258
    DECLTYPE       shift, and go to state 26
    ENUM           shift, and go to state 27
    EXTERN         shift, and go to state 259
    EXPLICIT       shift, and go to state 29
    MULT           shift, and go to state 31
    COMPL          shift, and go to state 35
    AUTO           shift, and go to state 36
    CHAR           shift, and go to state 37
    CHAR8_T        shift, and go to state 38
    CHAR16_T       shift, and go to state 39
    CHAR32_T       shift, and go to state 40
    WCHAR_T        shift, and go to state 41
    BOOL           shift, and go to state 42
    SHORT          shift, and go to state 43
    INT            shift, and go to state 44
    LONG           shift, and go to state 45
    SIGNED         shift, and go to state 46
    UNSIGNED       shift, and go to state 47
    FLOAT          shift, and go to state 48
    DOUBLE         shift, and go to state 49
    VOID           shift, and go to state 50
    STATIC_ASSERT  shift, and go to state 51
    STATIC         shift, and go to state 52
    THREAD_LOCAL   shift, and go to state 53
    MUTABLE        shift, and go to state 54
    TYPENAME       shift, and go to state 55

    $default  reduce using rule 617 (member-specification)

    access-specifier            go to state 596
    alias-declaration           go to state 597
    alignment-specifier         go to state 57
    attribute-specifier         go to state 60
    attribute-specifier-seq     go to state 598
    class-head                  go to state 63
    class-key                   go to state 64
    class-name                  go to state 65
    class-specifier             go to state 66
    concept-name                go to state 67
    conversion-function-id      go to state 68
    cv-qualifier                go to state 69
    decl-specifier              go to state 70
    decl-specifier-seq          go to state 599
    declarator                  go to state 600
    declarator-id               go to state 75
    decltype-specifier          go to state 76
    deduction-guide             go to state 601
    defining-type-specifier     go to state 78
    elaborated-enum-specifier   go to state 79
    elaborated-type-specifier   go to state 80
    empty-declaration           go to state 602
    enum-head                   go to state 82
    enum-key                    go to state 83
    enum-name                   go to state 84
    enum-specifier              go to state 85
    explicit-specialization     go to state 603
    explicit-specifier          go to state 88
    function-definition         go to state 604
    function-specifier          go to state 91
    id-expression               go to state 93
    literal-operator-id         go to state 95
    member-declaration          go to state 605
    member-declarator           go to state 606
    member-declarator-list      go to state 607
    member-specification        go to state 1484
    namespace-alias             go to state 99
    namespace-name              go to state 102
    nested-name-specifier       go to state 103
    noptr-declarator            go to state 106
    opaque-enum-declaration     go to state 609
    operator-function-id        go to state 108
    placeholder-type-specifier  go to state 109
    ptr-declarator              go to state 110
    ptr-operator                go to state 111
    qualified-id                go to state 112
    simple-template-id          go to state 114
    simple-type-specifier       go to state 115
    static_assert-declaration   go to state 610
    storage-class-specifier     go to state 117
    template-declaration        go to state 611
    template-head               go to state 119
    template-id                 go to state 120
    template-name               go to state 121
    type-constraint             go to state 123
    type-name                   go to state 124
    type-specifier              go to state 125
    typedef-name                go to state 126
    typename-specifier          go to state 127
    unqualified-id              go to state 129
    using-declaration           go to state 612
    using-enum-declaration      go to state 613


State 1090

  580 member-declaration: attribute-specifier-seq SEMICOLON •

    $default  reduce using rule 580 (member-declaration)


State 1091

  606 member-declarator: COLON • constant-expression
  608                  | attribute-specifier-seq COLON • constant-expression
  610                  | COLON • constant-expression brace-or-equal-initializer
  612                  | attribute-specifier-seq COLON • constant-expression brace-or-equal-initializer

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 407
    constant-expression                  go to state 1485
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 430
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 1092

   53 attribute-specifier-seq: attribute-specifier-seq attribute-specifier •
   54                        | attribute-specifier •

    ALIGNAS      reduce using rule 53 (attribute-specifier-seq)
    ALIGNAS      [reduce using rule 54 (attribute-specifier-seq)]
    OPEN_SQUARE  reduce using rule 53 (attribute-specifier-seq)
    OPEN_SQUARE  [reduce using rule 54 (attribute-specifier-seq)]
    COLON        reduce using rule 53 (attribute-specifier-seq)
    COLON        [reduce using rule 54 (attribute-specifier-seq)]
    $default     reduce using rule 53 (attribute-specifier-seq)


State 1093

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  608 member-declarator: attribute-specifier-seq • COLON constant-expression
  612                  | attribute-specifier-seq • COLON constant-expression brace-or-equal-initializer

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10
    COLON        shift, and go to state 1486

    alignment-specifier  go to state 57
    attribute-specifier  go to state 260


State 1094

  397 function-definition: attribute-specifier-seq decl-specifier-seq • declarator function-body
  401                    | attribute-specifier-seq decl-specifier-seq • declarator virt-specifier-seq function-body
  405                    | attribute-specifier-seq decl-specifier-seq • declarator requires-clause function-body
  582 member-declaration: attribute-specifier-seq decl-specifier-seq • SEMICOLON
  586                   | attribute-specifier-seq decl-specifier-seq • member-declarator-list SEMICOLON

    IDENTIFIER   shift, and go to state 1097
    SEMICOLON    shift, and go to state 1487
    ALIGNAS      shift, and go to state 4
    OPEN_PAREN   shift, and go to state 5
    ELLIPSIS     shift, and go to state 6
    AND          shift, and go to state 7
    SCOPE        shift, and go to state 9
    OPEN_SQUARE  shift, and go to state 10
    COLON        shift, and go to state 593
    AND_AND      shift, and go to state 16
    OPERATOR     shift, and go to state 17
    DECLTYPE     shift, and go to state 134
    MULT         shift, and go to state 31
    COMPL        shift, and go to state 35

    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 1093
    class-name               go to state 65
    conversion-function-id   go to state 68
    declarator               go to state 1488
    declarator-id            go to state 75
    decltype-specifier       go to state 138
    enum-name                go to state 84
    id-expression            go to state 93
    literal-operator-id      go to state 95
    member-declarator        go to state 606
    member-declarator-list   go to state 1489
    namespace-alias          go to state 99
    namespace-name           go to state 102
    nested-name-specifier    go to state 148
    noptr-declarator         go to state 106
    operator-function-id     go to state 108
    ptr-declarator           go to state 110
    ptr-operator             go to state 111
    qualified-id             go to state 112
    simple-template-id       go to state 114
    template-id              go to state 120
    template-name            go to state 142
    type-name                go to state 143
    typedef-name             go to state 126
    unqualified-id           go to state 129


State 1095

  395 function-definition: attribute-specifier-seq declarator • function-body
  399                    | attribute-specifier-seq declarator • virt-specifier-seq function-body
  403                    | attribute-specifier-seq declarator • requires-clause function-body
  598 member-declarator: declarator •
  599                  | declarator • virt-specifier-seq
  600                  | declarator • pure-specifier
  601                  | declarator • virt-specifier-seq pure-specifier
  602                  | declarator • requires-clause
  603                  | declarator •
  604                  | declarator • brace-or-equal-initializer

    EQ          shift, and go to state 1101
    COLON       shift, and go to state 288
    OPEN_BRACE  shift, and go to state 644
    FINAL       shift, and go to state 290
    TRY         shift, and go to state 291
    REQUIRES    shift, and go to state 292
    OVERRIDE    shift, and go to state 293

    SEMICOLON  reduce using rule 598 (member-declarator)
    SEMICOLON  [reduce using rule 603 (member-declarator)]
    COMMA      reduce using rule 598 (member-declarator)
    COMMA      [reduce using rule 603 (member-declarator)]
    $default   reduce using rule 598 (member-declarator)

    brace-or-equal-initializer  go to state 1102
    braced-init-list            go to state 646
    compound-statement          go to state 294
    ctor-initializer            go to state 295
    function-body               go to state 582
    function-try-block          go to state 297
    pure-specifier              go to state 1103
    requires-clause             go to state 1490
    virt-specifier              go to state 299
    virt-specifier-seq          go to state 1491


State 1096

  584 member-declaration: attribute-specifier-seq member-declarator-list • SEMICOLON
  614 member-declarator-list: member-declarator-list • COMMA member-declarator

    SEMICOLON  shift, and go to state 1492
    COMMA      shift, and go to state 1108


State 1097

  145 class-name: IDENTIFIER •
  294 enum-name: IDENTIFIER •
  605 member-declarator: IDENTIFIER • COLON constant-expression
  607                  | IDENTIFIER • attribute-specifier-seq COLON constant-expression
  609                  | IDENTIFIER • COLON constant-expression brace-or-equal-initializer
  611                  | IDENTIFIER • attribute-specifier-seq COLON constant-expression brace-or-equal-initializer
  647 namespace-alias: IDENTIFIER •
  653 namespace-name: IDENTIFIER •
  1052 template-name: IDENTIFIER •
  1110 typedef-name: IDENTIFIER •
  1140 unqualified-id: IDENTIFIER •

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10
    COLON        shift, and go to state 1086

    ALIGNAS      [reduce using rule 1140 (unqualified-id)]
    SCOPE        reduce using rule 145 (class-name)
    SCOPE        [reduce using rule 294 (enum-name)]
    SCOPE        [reduce using rule 647 (namespace-alias)]
    SCOPE        [reduce using rule 653 (namespace-name)]
    SCOPE        [reduce using rule 1110 (typedef-name)]
    OPEN_SQUARE  [reduce using rule 1140 (unqualified-id)]
    COLON        [reduce using rule 1140 (unqualified-id)]
    LESS         reduce using rule 1052 (template-name)
    $default     reduce using rule 1140 (unqualified-id)

    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 1087


State 1098

  583 member-declaration: decl-specifier-seq SEMICOLON •

    $default  reduce using rule 583 (member-declaration)


State 1099

  398 function-definition: decl-specifier-seq declarator • function-body
  402                    | decl-specifier-seq declarator • virt-specifier-seq function-body
  406                    | decl-specifier-seq declarator • requires-clause function-body
  598 member-declarator: declarator •
  599                  | declarator • virt-specifier-seq
  600                  | declarator • pure-specifier
  601                  | declarator • virt-specifier-seq pure-specifier
  602                  | declarator • requires-clause
  603                  | declarator •
  604                  | declarator • brace-or-equal-initializer

    EQ          shift, and go to state 1101
    COLON       shift, and go to state 288
    OPEN_BRACE  shift, and go to state 644
    FINAL       shift, and go to state 290
    TRY         shift, and go to state 291
    REQUIRES    shift, and go to state 292
    OVERRIDE    shift, and go to state 293

    SEMICOLON  reduce using rule 598 (member-declarator)
    SEMICOLON  [reduce using rule 603 (member-declarator)]
    COMMA      reduce using rule 598 (member-declarator)
    COMMA      [reduce using rule 603 (member-declarator)]
    $default   reduce using rule 598 (member-declarator)

    brace-or-equal-initializer  go to state 1102
    braced-init-list            go to state 646
    compound-statement          go to state 294
    ctor-initializer            go to state 295
    function-body               go to state 647
    function-try-block          go to state 297
    pure-specifier              go to state 1103
    requires-clause             go to state 1493
    virt-specifier              go to state 299
    virt-specifier-seq          go to state 1494


State 1100

  587 member-declaration: decl-specifier-seq member-declarator-list • SEMICOLON
  614 member-declarator-list: member-declarator-list • COMMA member-declarator

    SEMICOLON  shift, and go to state 1495
    COMMA      shift, and go to state 1108


State 1101

  106 brace-or-equal-initializer: EQ • initializer-clause
  393 function-body: EQ • DEFAULT SEMICOLON
  394              | EQ • DELETE SEMICOLON
  905 pure-specifier: EQ • '0'

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 935
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 1133
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DEFAULT           shift, and go to state 655
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 1496
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 1134
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    braced-init-list                     go to state 1135
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    initializer-clause                   go to state 1136
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 1102

  604 member-declarator: declarator brace-or-equal-initializer •

    $default  reduce using rule 604 (member-declarator)


State 1103

  600 member-declarator: declarator pure-specifier •

    $default  reduce using rule 600 (member-declarator)


State 1104

  404 function-definition: declarator requires-clause • function-body
  602 member-declarator: declarator requires-clause •

    EQ          shift, and go to state 286
    COLON       shift, and go to state 288
    OPEN_BRACE  shift, and go to state 289
    TRY         shift, and go to state 291

    $default  reduce using rule 602 (member-declarator)

    compound-statement  go to state 294
    ctor-initializer    go to state 295
    function-body       go to state 701
    function-try-block  go to state 297


State 1105

  400 function-definition: declarator virt-specifier-seq • function-body
  599 member-declarator: declarator virt-specifier-seq •
  601                  | declarator virt-specifier-seq • pure-specifier
  1179 virt-specifier-seq: virt-specifier-seq • virt-specifier

    EQ          shift, and go to state 1497
    COLON       shift, and go to state 288
    OPEN_BRACE  shift, and go to state 289
    FINAL       shift, and go to state 290
    TRY         shift, and go to state 291
    OVERRIDE    shift, and go to state 293

    $default  reduce using rule 599 (member-declarator)

    compound-statement  go to state 294
    ctor-initializer    go to state 295
    function-body       go to state 702
    function-try-block  go to state 297
    pure-specifier      go to state 1498
    virt-specifier      go to state 703


State 1106

  616 member-specification: member-declaration member-specification •

    $default  reduce using rule 616 (member-specification)


State 1107

  585 member-declaration: member-declarator-list SEMICOLON •

    $default  reduce using rule 585 (member-declaration)


State 1108

  614 member-declarator-list: member-declarator-list COMMA • member-declarator

    IDENTIFIER   shift, and go to state 1097
    ALIGNAS      shift, and go to state 4
    OPEN_PAREN   shift, and go to state 5
    ELLIPSIS     shift, and go to state 6
    AND          shift, and go to state 7
    SCOPE        shift, and go to state 9
    OPEN_SQUARE  shift, and go to state 10
    COLON        shift, and go to state 593
    AND_AND      shift, and go to state 16
    OPERATOR     shift, and go to state 17
    DECLTYPE     shift, and go to state 134
    MULT         shift, and go to state 31
    COMPL        shift, and go to state 35

    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 1093
    class-name               go to state 65
    conversion-function-id   go to state 68
    declarator               go to state 1499
    declarator-id            go to state 75
    decltype-specifier       go to state 138
    enum-name                go to state 84
    id-expression            go to state 93
    literal-operator-id      go to state 95
    member-declarator        go to state 1500
    namespace-alias          go to state 99
    namespace-name           go to state 102
    nested-name-specifier    go to state 148
    noptr-declarator         go to state 106
    operator-function-id     go to state 108
    ptr-declarator           go to state 110
    ptr-operator             go to state 111
    qualified-id             go to state 112
    simple-template-id       go to state 114
    template-id              go to state 120
    template-name            go to state 142
    type-name                go to state 143
    typedef-name             go to state 126
    unqualified-id           go to state 129


State 1109

  152 class-specifier: class-head OPEN_BRACE member-specification CLOSE_BRACE •

    $default  reduce using rule 152 (class-specifier)


State 1110

   74 base-specifier: VIRTUAL access-specifier • class-or-decltype

    IDENTIFIER  shift, and go to state 253
    SCOPE       shift, and go to state 9
    DECLTYPE    shift, and go to state 134

    class-name             go to state 65
    class-or-decltype      go to state 1501
    decltype-specifier     go to state 620
    enum-name              go to state 84
    namespace-alias        go to state 99
    namespace-name         go to state 102
    nested-name-specifier  go to state 621
    simple-template-id     go to state 141
    template-name          go to state 142
    type-name              go to state 622
    typedef-name           go to state 126


State 1111

   72 base-specifier: VIRTUAL class-or-decltype •

    $default  reduce using rule 72 (base-specifier)


State 1112

   78 base-specifier: access-specifier VIRTUAL • class-or-decltype

    IDENTIFIER  shift, and go to state 253
    SCOPE       shift, and go to state 9
    DECLTYPE    shift, and go to state 134

    class-name             go to state 65
    class-or-decltype      go to state 1502
    decltype-specifier     go to state 620
    enum-name              go to state 84
    namespace-alias        go to state 99
    namespace-name         go to state 102
    nested-name-specifier  go to state 621
    simple-template-id     go to state 141
    template-name          go to state 142
    type-name              go to state 622
    typedef-name           go to state 126


State 1113

   76 base-specifier: access-specifier class-or-decltype •

    $default  reduce using rule 76 (base-specifier)


State 1114

   71 base-specifier: attribute-specifier-seq VIRTUAL • class-or-decltype
   73               | attribute-specifier-seq VIRTUAL • access-specifier class-or-decltype

    PRIVATE     shift, and go to state 587
    PROTECTED   shift, and go to state 588
    PUBLIC      shift, and go to state 589
    IDENTIFIER  shift, and go to state 253
    SCOPE       shift, and go to state 9
    DECLTYPE    shift, and go to state 134

    access-specifier       go to state 1503
    class-name             go to state 65
    class-or-decltype      go to state 1504
    decltype-specifier     go to state 620
    enum-name              go to state 84
    namespace-alias        go to state 99
    namespace-name         go to state 102
    nested-name-specifier  go to state 621
    simple-template-id     go to state 141
    template-name          go to state 142
    type-name              go to state 622
    typedef-name           go to state 126


State 1115

   75 base-specifier: attribute-specifier-seq access-specifier • class-or-decltype
   77               | attribute-specifier-seq access-specifier • VIRTUAL class-or-decltype

    IDENTIFIER  shift, and go to state 253
    SCOPE       shift, and go to state 9
    VIRTUAL     shift, and go to state 1505
    DECLTYPE    shift, and go to state 134

    class-name             go to state 65
    class-or-decltype      go to state 1506
    decltype-specifier     go to state 620
    enum-name              go to state 84
    namespace-alias        go to state 99
    namespace-name         go to state 102
    nested-name-specifier  go to state 621
    simple-template-id     go to state 141
    template-name          go to state 142
    type-name              go to state 622
    typedef-name           go to state 126


State 1116

   69 base-specifier: attribute-specifier-seq class-or-decltype •

    $default  reduce using rule 69 (base-specifier)


State 1117

   80 base-specifier-list: base-specifier ELLIPSIS •

    $default  reduce using rule 80 (base-specifier-list)


State 1118

   81 base-specifier-list: base-specifier-list COMMA • base-specifier
   82                    | base-specifier-list COMMA • base-specifier ELLIPSIS

    PRIVATE      shift, and go to state 587
    PROTECTED    shift, and go to state 588
    PUBLIC       shift, and go to state 589
    IDENTIFIER   shift, and go to state 253
    ALIGNAS      shift, and go to state 4
    SCOPE        shift, and go to state 9
    OPEN_SQUARE  shift, and go to state 10
    VIRTUAL      shift, and go to state 614
    DECLTYPE     shift, and go to state 134

    access-specifier         go to state 615
    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 616
    base-specifier           go to state 1507
    class-name               go to state 65
    class-or-decltype        go to state 619
    decltype-specifier       go to state 620
    enum-name                go to state 84
    namespace-alias          go to state 99
    namespace-name           go to state 102
    nested-name-specifier    go to state 621
    simple-template-id       go to state 141
    template-name            go to state 142
    type-name                go to state 622
    typedef-name             go to state 126


State 1119

  145 class-name: IDENTIFIER •
  294 enum-name: IDENTIFIER •
  659 nested-name-specifier: nested-name-specifier IDENTIFIER • SCOPE
  1052 template-name: IDENTIFIER •
  1110 typedef-name: IDENTIFIER •

    SCOPE  shift, and go to state 722

    OPEN_PAREN  reduce using rule 145 (class-name)
    OPEN_PAREN  [reduce using rule 294 (enum-name)]
    OPEN_PAREN  [reduce using rule 1110 (typedef-name)]
    ELLIPSIS    reduce using rule 145 (class-name)
    ELLIPSIS    [reduce using rule 294 (enum-name)]
    ELLIPSIS    [reduce using rule 1110 (typedef-name)]
    COMMA       reduce using rule 145 (class-name)
    COMMA       [reduce using rule 294 (enum-name)]
    COMMA       [reduce using rule 1110 (typedef-name)]
    OPEN_BRACE  reduce using rule 145 (class-name)
    OPEN_BRACE  [reduce using rule 294 (enum-name)]
    OPEN_BRACE  [reduce using rule 1110 (typedef-name)]
    LESS        reduce using rule 1052 (template-name)
    $default    reduce using rule 145 (class-name)


State 1120

  149 class-or-decltype: nested-name-specifier TEMPLATE • simple-template-id
  661 nested-name-specifier: nested-name-specifier TEMPLATE • simple-template-id SCOPE

    IDENTIFIER  shift, and go to state 310

    simple-template-id  go to state 1508
    template-name       go to state 142


State 1121

  147 class-or-decltype: nested-name-specifier type-name •

    $default  reduce using rule 147 (class-or-decltype)


State 1122

  133 class-head: class-key attribute-specifier-seq class-head-name base-clause •

    $default  reduce using rule 133 (class-head)


State 1123

  131 class-head: class-key attribute-specifier-seq class-head-name class-virt-specifier •
  135           | class-key attribute-specifier-seq class-head-name class-virt-specifier • base-clause

    COLON  shift, and go to state 267

    $default  reduce using rule 131 (class-head)

    base-clause  go to state 1509


State 1124

  145 class-name: IDENTIFIER •
  267 elaborated-type-specifier: class-key attribute-specifier-seq nested-name-specifier IDENTIFIER •
  659 nested-name-specifier: nested-name-specifier IDENTIFIER • SCOPE
  1052 template-name: IDENTIFIER •

    SCOPE  shift, and go to state 722

    SCOPE       [reduce using rule 267 (elaborated-type-specifier)]
    COLON       reduce using rule 145 (class-name)
    COLON       [reduce using rule 267 (elaborated-type-specifier)]
    OPEN_BRACE  reduce using rule 145 (class-name)
    OPEN_BRACE  [reduce using rule 267 (elaborated-type-specifier)]
    FINAL       reduce using rule 145 (class-name)
    LESS        reduce using rule 1052 (template-name)
    $default    reduce using rule 267 (elaborated-type-specifier)


State 1125

  146 class-name: simple-template-id •
  660 nested-name-specifier: nested-name-specifier simple-template-id • SCOPE

    SCOPE  shift, and go to state 729

    $default  reduce using rule 146 (class-name)


State 1126

  134 class-head: class-key class-head-name class-virt-specifier base-clause •

    $default  reduce using rule 134 (class-head)


State 1127

  270 elaborated-type-specifier: class-key nested-name-specifier TEMPLATE simple-template-id •
  661 nested-name-specifier: nested-name-specifier TEMPLATE simple-template-id • SCOPE

    SCOPE  shift, and go to state 1210

    SCOPE     [reduce using rule 270 (elaborated-type-specifier)]
    $default  reduce using rule 270 (elaborated-type-specifier)


State 1128

  1040 template-argument-list: template-argument ELLIPSIS •

    $default  reduce using rule 1040 (template-argument-list)


State 1129

  1041 template-argument-list: template-argument-list COMMA • template-argument
  1042                       | template-argument-list COMMA • template-argument ELLIPSIS

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 135
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-key                            go to state 209
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 407
    constant-expression                  go to state 635
    conversion-function-id               go to state 68
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 636
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 430
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    string-literal                       go to state 445
    template-argument                    go to state 1510
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-id                              go to state 639
    type-name                            go to state 124
    type-specifier                       go to state 216
    type-specifier-seq                   go to state 447
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 1130

  1075 type-constraint: concept-name LESS template-argument-list GREATER •

    $default  reduce using rule 1075 (type-constraint)


State 1131

  462 identifier-list: identifier-list COMMA • IDENTIFIER

    IDENTIFIER  shift, and go to state 1511


State 1132

  967 simple-declaration: decl-specifier-seq OPEN_SQUARE identifier-list CLOSE_SQUARE • initializer SEMICOLON

    EQ          shift, and go to state 1273
    OPEN_PAREN  shift, and go to state 643
    OPEN_BRACE  shift, and go to state 935

    brace-or-equal-initializer  go to state 645
    braced-init-list            go to state 646
    initializer                 go to state 1512


State 1133

  242 delete-expression: DELETE • cast-expression
  244                  | DELETE • OPEN_SQUARE CLOSE_SQUARE cast-expression
  394 function-body: EQ DELETE • SEMICOLON

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    SEMICOLON         shift, and go to state 1152
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 787
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 788
    character-literal                    go to state 405
    class-name                           go to state 65
    concept-name                         go to state 67
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    requires-expression                  go to state 442
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 1134

  479 initializer-clause: assignment-expression •

    $default  reduce using rule 479 (initializer-clause)


State 1135

  480 initializer-clause: braced-init-list •

    $default  reduce using rule 480 (initializer-clause)


State 1136

  106 brace-or-equal-initializer: EQ initializer-clause •

    $default  reduce using rule 106 (brace-or-equal-initializer)


State 1137

  478 initializer: OPEN_PAREN expression-list • CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 1513


State 1138

  481 initializer-list: initializer-clause •
  482                 | initializer-clause • ELLIPSIS

    ELLIPSIS  shift, and go to state 1514

    $default  reduce using rule 481 (initializer-list)


State 1139

  336 expression-list: initializer-list •
  483 initializer-list: initializer-list • COMMA initializer-clause
  484                 | initializer-list • COMMA initializer-clause ELLIPSIS

    COMMA  shift, and go to state 1515

    $default  reduce using rule 336 (expression-list)


State 1140

  112 braced-init-list: OPEN_BRACE CLOSE_BRACE •
  160 compound-statement: OPEN_BRACE CLOSE_BRACE •

    SEMICOLON    reduce using rule 112 (braced-init-list)
    SEMICOLON    [reduce using rule 160 (compound-statement)]
    ELLIPSIS     reduce using rule 112 (braced-init-list)
    ELLIPSIS     [reduce using rule 160 (compound-statement)]
    COMMA        reduce using rule 112 (braced-init-list)
    CLOSE_BRACE  reduce using rule 112 (braced-init-list)
    CLOSE_BRACE  [reduce using rule 160 (compound-statement)]
    $default     reduce using rule 160 (compound-statement)


State 1141

  248 designator: DOT • IDENTIFIER
  388 fractional-constant: DOT • digit-sequence

    IDENTIFIER  shift, and go to state 1516
    '0'         shift, and go to state 789
    '1'         shift, and go to state 790
    '2'         shift, and go to state 791
    '3'         shift, and go to state 792
    '4'         shift, and go to state 793
    '5'         shift, and go to state 794
    '6'         shift, and go to state 795
    '7'         shift, and go to state 796
    '8'         shift, and go to state 797
    '9'         shift, and go to state 798

    digit           go to state 412
    digit-sequence  go to state 799


State 1142

  334 expression: assignment-expression •
  479 initializer-clause: assignment-expression •

    ELLIPSIS     reduce using rule 479 (initializer-clause)
    COMMA        reduce using rule 334 (expression)
    COMMA        [reduce using rule 479 (initializer-clause)]
    CLOSE_BRACE  reduce using rule 479 (initializer-clause)
    $default     reduce using rule 334 (expression)


State 1143

  246 designated-initializer-list: designated-initializer-clause •

    $default  reduce using rule 246 (designated-initializer-list)


State 1144

  110 braced-init-list: OPEN_BRACE designated-initializer-list • CLOSE_BRACE
  111                 | OPEN_BRACE designated-initializer-list • COMMA CLOSE_BRACE
  247 designated-initializer-list: designated-initializer-list • COMMA designated-initializer-clause

    COMMA        shift, and go to state 1517
    CLOSE_BRACE  shift, and go to state 1518


State 1145

  245 designated-initializer-clause: designator • brace-or-equal-initializer

    EQ          shift, and go to state 1273
    OPEN_BRACE  shift, and go to state 935

    brace-or-equal-initializer  go to state 1519
    braced-init-list            go to state 646


State 1146

  108 braced-init-list: OPEN_BRACE initializer-list • CLOSE_BRACE
  109                 | OPEN_BRACE initializer-list • COMMA CLOSE_BRACE
  483 initializer-list: initializer-list • COMMA initializer-clause
  484                 | initializer-list • COMMA initializer-clause ELLIPSIS

    COMMA        shift, and go to state 1520
    CLOSE_BRACE  shift, and go to state 1521


State 1147

  406 function-definition: decl-specifier-seq declarator requires-clause function-body •

    $default  reduce using rule 406 (function-definition)


State 1148

  402 function-definition: decl-specifier-seq declarator virt-specifier-seq function-body •

    $default  reduce using rule 402 (function-definition)


State 1149

  469 init-declarator: declarator •
  470                | declarator • initializer
  471                | declarator • requires-clause

    EQ          shift, and go to state 1273
    OPEN_PAREN  shift, and go to state 643
    OPEN_BRACE  shift, and go to state 935
    REQUIRES    shift, and go to state 292

    $default  reduce using rule 469 (init-declarator)

    brace-or-equal-initializer  go to state 645
    braced-init-list            go to state 646
    initializer                 go to state 648
    requires-clause             go to state 1522


State 1150

  473 init-declarator-list: init-declarator-list COMMA init-declarator •

    $default  reduce using rule 473 (init-declarator-list)


State 1151

  462 identifier-list: identifier-list • COMMA IDENTIFIER
  969 simple-declaration: decl-specifier-seq ref-qualifier OPEN_SQUARE identifier-list • CLOSE_SQUARE initializer SEMICOLON

    COMMA         shift, and go to state 1131
    CLOSE_SQUARE  shift, and go to state 1523


State 1152

  394 function-body: EQ DELETE SEMICOLON •

    $default  reduce using rule 394 (function-body)


State 1153

  393 function-body: EQ DEFAULT SEMICOLON •

    $default  reduce using rule 393 (function-body)


State 1154

  577 mem-initializer-list: mem-initializer ELLIPSIS •

    $default  reduce using rule 577 (mem-initializer-list)


State 1155

  571 mem-initializer: mem-initializer-id OPEN_PAREN • CLOSE_PAREN
  572                | mem-initializer-id OPEN_PAREN • expression-list CLOSE_PAREN

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    CLOSE_PAREN       shift, and go to state 1524
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 935
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 1134
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    braced-init-list                     go to state 1135
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    expression-list                      go to state 1525
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    initializer-clause                   go to state 1138
    initializer-list                     go to state 1139
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 1156

  573 mem-initializer: mem-initializer-id braced-init-list •

    $default  reduce using rule 573 (mem-initializer)


State 1157

  578 mem-initializer-list: mem-initializer-list COMMA • mem-initializer
  579                     | mem-initializer-list COMMA • mem-initializer ELLIPSIS

    IDENTIFIER  shift, and go to state 656
    SCOPE       shift, and go to state 9
    DECLTYPE    shift, and go to state 134

    class-name             go to state 65
    class-or-decltype      go to state 657
    decltype-specifier     go to state 620
    enum-name              go to state 84
    mem-initializer        go to state 1526
    mem-initializer-id     go to state 659
    namespace-alias        go to state 99
    namespace-name         go to state 102
    nested-name-specifier  go to state 621
    simple-template-id     go to state 141
    template-name          go to state 142
    type-name              go to state 622
    typedef-name           go to state 126


State 1158

  520 labeled-statement: IDENTIFIER COLON • statement

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    USING             shift, and go to state 1
    IDENTIFIER        shift, and go to state 661
    SEMICOLON         shift, and go to state 662
    ALIGNAS           shift, and go to state 4
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    ASM               shift, and go to state 8
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 663
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 289
    VIRTUAL           shift, and go to state 11
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CO_RETURN         shift, and go to state 665
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    FRIEND            shift, and go to state 20
    TYPEDEF           shift, and go to state 21
    CONSTEXPR         shift, and go to state 22
    CONSTEVAL         shift, and go to state 23
    CONSTINIT         shift, and go to state 24
    INLINE            shift, and go to state 258
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 27
    UNICODE_8         shift, and go to state 184
    EXTERN            shift, and go to state 259
    EXPLICIT          shift, and go to state 29
    MULT              shift, and go to state 371
    DEFAULT           shift, and go to state 666
    TRY               shift, and go to state 667
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    WHILE             shift, and go to state 668
    DO                shift, and go to state 669
    FOR               shift, and go to state 670
    BREAK             shift, and go to state 671
    CONTINUE          shift, and go to state 672
    RETURN            shift, and go to state 673
    GOTO              shift, and go to state 674
    CASE              shift, and go to state 675
    NAMESPACE         shift, and go to state 676
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    IF                shift, and go to state 677
    SWITCH            shift, and go to state 678
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    STATIC_ASSERT     shift, and go to state 51
    STATIC            shift, and go to state 52
    THREAD_LOCAL      shift, and go to state 53
    MUTABLE           shift, and go to state 54
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    alias-declaration                    go to state 56
    alignment-specifier                  go to state 57
    and-expression                       go to state 400
    asm-declaration                      go to state 58
    assignment-expression                go to state 525
    attribute-specifier                  go to state 60
    attribute-specifier-seq              go to state 679
    await-expression                     go to state 401
    binary-literal                       go to state 402
    block-declaration                    go to state 680
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-head                           go to state 63
    class-key                            go to state 64
    class-name                           go to state 65
    class-specifier                      go to state 66
    compare-expression                   go to state 406
    compound-statement                   go to state 681
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    coroutine-return-statement           go to state 682
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decl-specifier                       go to state 70
    decl-specifier-seq                   go to state 683
    declaration-statement                go to state 684
    decltype-specifier                   go to state 76
    defining-type-specifier              go to state 78
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-head                            go to state 82
    enum-key                             go to state 83
    enum-name                            go to state 84
    enum-specifier                       go to state 85
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    explicit-specifier                   go to state 264
    expression                           go to state 685
    expression-statement                 go to state 686
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    function-specifier                   go to state 91
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    iteration-statement                  go to state 687
    jump-statement                       go to state 688
    labeled-statement                    go to state 689
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-alias-definition           go to state 100
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    opaque-enum-declaration              go to state 107
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    selection-statement                  go to state 690
    shift-expression                     go to state 443
    simple-declaration                   go to state 113
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    statement                            go to state 1527
    static_assert-declaration            go to state 116
    storage-class-specifier              go to state 117
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    try-block                            go to state 693
    type-constraint                      go to state 123
    type-name                            go to state 124
    type-specifier                       go to state 125
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    using-declaration                    go to state 130
    using-directive                      go to state 131
    using-enum-declaration               go to state 132
    yield-expression                     go to state 532


State 1159

  182 coroutine-return-statement: CO_RETURN SEMICOLON •

    $default  reduce using rule 182 (coroutine-return-statement)


State 1160

  333 expr-or-braced-init-list: braced-init-list •

    $default  reduce using rule 333 (expr-or-braced-init-list)


State 1161

  183 coroutine-return-statement: CO_RETURN expr-or-braced-init-list • SEMICOLON

    SEMICOLON  shift, and go to state 1528


State 1162

  332 expr-or-braced-init-list: expression •
  335 expression: expression • COMMA assignment-expression

    COMMA  shift, and go to state 1029

    $default  reduce using rule 332 (expr-or-braced-init-list)


State 1163

  524 labeled-statement: DEFAULT COLON • statement

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    USING             shift, and go to state 1
    IDENTIFIER        shift, and go to state 661
    SEMICOLON         shift, and go to state 662
    ALIGNAS           shift, and go to state 4
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    ASM               shift, and go to state 8
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 663
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 289
    VIRTUAL           shift, and go to state 11
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CO_RETURN         shift, and go to state 665
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    FRIEND            shift, and go to state 20
    TYPEDEF           shift, and go to state 21
    CONSTEXPR         shift, and go to state 22
    CONSTEVAL         shift, and go to state 23
    CONSTINIT         shift, and go to state 24
    INLINE            shift, and go to state 258
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 27
    UNICODE_8         shift, and go to state 184
    EXTERN            shift, and go to state 259
    EXPLICIT          shift, and go to state 29
    MULT              shift, and go to state 371
    DEFAULT           shift, and go to state 666
    TRY               shift, and go to state 667
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    WHILE             shift, and go to state 668
    DO                shift, and go to state 669
    FOR               shift, and go to state 670
    BREAK             shift, and go to state 671
    CONTINUE          shift, and go to state 672
    RETURN            shift, and go to state 673
    GOTO              shift, and go to state 674
    CASE              shift, and go to state 675
    NAMESPACE         shift, and go to state 676
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    IF                shift, and go to state 677
    SWITCH            shift, and go to state 678
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    STATIC_ASSERT     shift, and go to state 51
    STATIC            shift, and go to state 52
    THREAD_LOCAL      shift, and go to state 53
    MUTABLE           shift, and go to state 54
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    alias-declaration                    go to state 56
    alignment-specifier                  go to state 57
    and-expression                       go to state 400
    asm-declaration                      go to state 58
    assignment-expression                go to state 525
    attribute-specifier                  go to state 60
    attribute-specifier-seq              go to state 679
    await-expression                     go to state 401
    binary-literal                       go to state 402
    block-declaration                    go to state 680
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-head                           go to state 63
    class-key                            go to state 64
    class-name                           go to state 65
    class-specifier                      go to state 66
    compare-expression                   go to state 406
    compound-statement                   go to state 681
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    coroutine-return-statement           go to state 682
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decl-specifier                       go to state 70
    decl-specifier-seq                   go to state 683
    declaration-statement                go to state 684
    decltype-specifier                   go to state 76
    defining-type-specifier              go to state 78
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-head                            go to state 82
    enum-key                             go to state 83
    enum-name                            go to state 84
    enum-specifier                       go to state 85
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    explicit-specifier                   go to state 264
    expression                           go to state 685
    expression-statement                 go to state 686
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    function-specifier                   go to state 91
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    iteration-statement                  go to state 687
    jump-statement                       go to state 688
    labeled-statement                    go to state 689
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-alias-definition           go to state 100
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    opaque-enum-declaration              go to state 107
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    selection-statement                  go to state 690
    shift-expression                     go to state 443
    simple-declaration                   go to state 113
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    statement                            go to state 1529
    static_assert-declaration            go to state 116
    storage-class-specifier              go to state 117
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    try-block                            go to state 693
    type-constraint                      go to state 123
    type-name                            go to state 124
    type-specifier                       go to state 125
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    using-declaration                    go to state 130
    using-directive                      go to state 131
    using-enum-declaration               go to state 132
    yield-expression                     go to state 532


State 1164

  1069 try-block: TRY compound-statement • handler-seq

    CATCH  shift, and go to state 1193

    handler      go to state 1194
    handler-seq  go to state 1530


State 1165

  505 iteration-statement: WHILE OPEN_PAREN • condition CLOSE_PAREN statement

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    ALIGNAS           shift, and go to state 4
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 663
    CO_AWAIT          shift, and go to state 362
    VIRTUAL           shift, and go to state 11
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    FRIEND            shift, and go to state 20
    TYPEDEF           shift, and go to state 21
    CONSTEXPR         shift, and go to state 22
    CONSTEVAL         shift, and go to state 23
    CONSTINIT         shift, and go to state 24
    INLINE            shift, and go to state 258
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 27
    UNICODE_8         shift, and go to state 184
    EXTERN            shift, and go to state 259
    EXPLICIT          shift, and go to state 29
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    STATIC            shift, and go to state 52
    THREAD_LOCAL      shift, and go to state 53
    MUTABLE           shift, and go to state 54
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    alignment-specifier                  go to state 57
    and-expression                       go to state 400
    assignment-expression                go to state 525
    attribute-specifier                  go to state 60
    attribute-specifier-seq              go to state 1531
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-head                           go to state 63
    class-key                            go to state 64
    class-name                           go to state 65
    class-specifier                      go to state 66
    compare-expression                   go to state 406
    concept-name                         go to state 67
    condition                            go to state 1532
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decl-specifier                       go to state 70
    decl-specifier-seq                   go to state 1533
    decltype-specifier                   go to state 76
    defining-type-specifier              go to state 78
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-head                            go to state 82
    enum-key                             go to state 263
    enum-name                            go to state 84
    enum-specifier                       go to state 85
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    explicit-specifier                   go to state 264
    expression                           go to state 1534
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    function-specifier                   go to state 91
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    storage-class-specifier              go to state 117
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    type-specifier                       go to state 125
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 1166

  506 iteration-statement: DO statement • WHILE OPEN_PAREN expression CLOSE_PAREN SEMICOLON

    WHILE  shift, and go to state 1535


State 1167

  507 iteration-statement: FOR OPEN_PAREN • init-statement SEMICOLON CLOSE_PAREN statement
  508                    | FOR OPEN_PAREN • init-statement condition SEMICOLON CLOSE_PAREN statement
  509                    | FOR OPEN_PAREN • init-statement SEMICOLON expression CLOSE_PAREN statement
  510                    | FOR OPEN_PAREN • init-statement condition SEMICOLON expression CLOSE_PAREN statement
  511                    | FOR OPEN_PAREN • for-range-declaration COLON for-range-initializer CLOSE_PAREN statement
  512                    | FOR OPEN_PAREN • init-statement for-range-declaration COLON for-range-initializer CLOSE_PAREN statement

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    USING             shift, and go to state 1536
    IDENTIFIER        shift, and go to state 2
    SEMICOLON         shift, and go to state 662
    ALIGNAS           shift, and go to state 4
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 663
    CO_AWAIT          shift, and go to state 362
    VIRTUAL           shift, and go to state 11
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    FRIEND            shift, and go to state 20
    TYPEDEF           shift, and go to state 21
    CONSTEXPR         shift, and go to state 22
    CONSTEVAL         shift, and go to state 23
    CONSTINIT         shift, and go to state 24
    INLINE            shift, and go to state 258
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 27
    UNICODE_8         shift, and go to state 184
    EXTERN            shift, and go to state 259
    EXPLICIT          shift, and go to state 29
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    STATIC            shift, and go to state 52
    THREAD_LOCAL      shift, and go to state 53
    MUTABLE           shift, and go to state 54
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    alias-declaration                    go to state 1537
    alignment-specifier                  go to state 57
    and-expression                       go to state 400
    assignment-expression                go to state 525
    attribute-specifier                  go to state 60
    attribute-specifier-seq              go to state 1538
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-head                           go to state 63
    class-key                            go to state 64
    class-name                           go to state 65
    class-specifier                      go to state 66
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decl-specifier                       go to state 70
    decl-specifier-seq                   go to state 1539
    decltype-specifier                   go to state 76
    defining-type-specifier              go to state 78
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-head                            go to state 82
    enum-key                             go to state 263
    enum-name                            go to state 84
    enum-specifier                       go to state 85
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    explicit-specifier                   go to state 264
    expression                           go to state 685
    expression-statement                 go to state 1540
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    for-range-declaration                go to state 1541
    fractional-constant                  go to state 419
    function-specifier                   go to state 91
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    init-statement                       go to state 1542
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-declaration                   go to state 1543
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    storage-class-specifier              go to state 117
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    type-specifier                       go to state 125
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 1168

  513 jump-statement: BREAK SEMICOLON •

    $default  reduce using rule 513 (jump-statement)


State 1169

  514 jump-statement: CONTINUE SEMICOLON •

    $default  reduce using rule 514 (jump-statement)


State 1170

  515 jump-statement: RETURN SEMICOLON •

    $default  reduce using rule 515 (jump-statement)


State 1171

  516 jump-statement: RETURN expr-or-braced-init-list • SEMICOLON

    SEMICOLON  shift, and go to state 1544


State 1172

  518 jump-statement: GOTO IDENTIFIER • SEMICOLON

    SEMICOLON  shift, and go to state 1545


State 1173

  522 labeled-statement: CASE constant-expression • COLON statement

    COLON  shift, and go to state 1546


State 1174

  648 namespace-alias-definition: NAMESPACE IDENTIFIER • EQ qualified-namespace-specifier SEMICOLON

    EQ  shift, and go to state 564


State 1175

  938 selection-statement: IF OPEN_PAREN • condition CLOSE_PAREN statement
  940                    | IF OPEN_PAREN • init-statement condition CLOSE_PAREN statement
  942                    | IF OPEN_PAREN • condition CLOSE_PAREN statement ELSE statement
  944                    | IF OPEN_PAREN • init-statement condition CLOSE_PAREN statement ELSE statement

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    USING             shift, and go to state 1536
    IDENTIFIER        shift, and go to state 2
    SEMICOLON         shift, and go to state 662
    ALIGNAS           shift, and go to state 4
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 663
    CO_AWAIT          shift, and go to state 362
    VIRTUAL           shift, and go to state 11
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    FRIEND            shift, and go to state 20
    TYPEDEF           shift, and go to state 21
    CONSTEXPR         shift, and go to state 22
    CONSTEVAL         shift, and go to state 23
    CONSTINIT         shift, and go to state 24
    INLINE            shift, and go to state 258
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 27
    UNICODE_8         shift, and go to state 184
    EXTERN            shift, and go to state 259
    EXPLICIT          shift, and go to state 29
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    STATIC            shift, and go to state 52
    THREAD_LOCAL      shift, and go to state 53
    MUTABLE           shift, and go to state 54
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    alias-declaration                    go to state 1537
    alignment-specifier                  go to state 57
    and-expression                       go to state 400
    assignment-expression                go to state 525
    attribute-specifier                  go to state 60
    attribute-specifier-seq              go to state 1547
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-head                           go to state 63
    class-key                            go to state 64
    class-name                           go to state 65
    class-specifier                      go to state 66
    compare-expression                   go to state 406
    concept-name                         go to state 67
    condition                            go to state 1548
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decl-specifier                       go to state 70
    decl-specifier-seq                   go to state 1549
    decltype-specifier                   go to state 76
    defining-type-specifier              go to state 78
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-head                            go to state 82
    enum-key                             go to state 263
    enum-name                            go to state 84
    enum-specifier                       go to state 85
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    explicit-specifier                   go to state 264
    expression                           go to state 1550
    expression-statement                 go to state 1540
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    function-specifier                   go to state 91
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    init-statement                       go to state 1551
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-declaration                   go to state 1543
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    storage-class-specifier              go to state 117
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    type-specifier                       go to state 125
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 1176

  939 selection-statement: IF CONSTEXPR • OPEN_PAREN condition CLOSE_PAREN statement
  941                    | IF CONSTEXPR • OPEN_PAREN init-statement condition CLOSE_PAREN statement
  943                    | IF CONSTEXPR • OPEN_PAREN condition CLOSE_PAREN statement ELSE statement
  945                    | IF CONSTEXPR • OPEN_PAREN init-statement condition CLOSE_PAREN statement ELSE statement

    OPEN_PAREN  shift, and go to state 1552


State 1177

  946 selection-statement: IF CONSTEVAL • compound-statement
  948                    | IF CONSTEVAL • compound-statement ELSE statement

    OPEN_BRACE  shift, and go to state 289

    compound-statement  go to state 1553


State 1178

  947 selection-statement: IF NOT • CONSTEVAL compound-statement
  949                    | IF NOT • CONSTEVAL compound-statement ELSE statement

    CONSTEVAL  shift, and go to state 1554


State 1179

  950 selection-statement: SWITCH OPEN_PAREN • condition CLOSE_PAREN statement
  951                    | SWITCH OPEN_PAREN • init-statement condition CLOSE_PAREN statement

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    USING             shift, and go to state 1536
    IDENTIFIER        shift, and go to state 2
    SEMICOLON         shift, and go to state 662
    ALIGNAS           shift, and go to state 4
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 663
    CO_AWAIT          shift, and go to state 362
    VIRTUAL           shift, and go to state 11
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    FRIEND            shift, and go to state 20
    TYPEDEF           shift, and go to state 21
    CONSTEXPR         shift, and go to state 22
    CONSTEVAL         shift, and go to state 23
    CONSTINIT         shift, and go to state 24
    INLINE            shift, and go to state 258
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 27
    UNICODE_8         shift, and go to state 184
    EXTERN            shift, and go to state 259
    EXPLICIT          shift, and go to state 29
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    STATIC            shift, and go to state 52
    THREAD_LOCAL      shift, and go to state 53
    MUTABLE           shift, and go to state 54
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    alias-declaration                    go to state 1537
    alignment-specifier                  go to state 57
    and-expression                       go to state 400
    assignment-expression                go to state 525
    attribute-specifier                  go to state 60
    attribute-specifier-seq              go to state 1547
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-head                           go to state 63
    class-key                            go to state 64
    class-name                           go to state 65
    class-specifier                      go to state 66
    compare-expression                   go to state 406
    concept-name                         go to state 67
    condition                            go to state 1555
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decl-specifier                       go to state 70
    decl-specifier-seq                   go to state 1549
    decltype-specifier                   go to state 76
    defining-type-specifier              go to state 78
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-head                            go to state 82
    enum-key                             go to state 263
    enum-name                            go to state 84
    enum-specifier                       go to state 85
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    explicit-specifier                   go to state 264
    expression                           go to state 1550
    expression-statement                 go to state 1540
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    function-specifier                   go to state 91
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    init-statement                       go to state 1556
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-declaration                   go to state 1543
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    storage-class-specifier              go to state 117
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    type-specifier                       go to state 125
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 1180

  145 class-name: IDENTIFIER •
  163 concept-name: IDENTIFIER •
  294 enum-name: IDENTIFIER •
  519 labeled-statement: attribute-specifier-seq IDENTIFIER • COLON statement
  647 namespace-alias: IDENTIFIER •
  653 namespace-name: IDENTIFIER •
  1052 template-name: IDENTIFIER •
  1110 typedef-name: IDENTIFIER •
  1140 unqualified-id: IDENTIFIER •

    COLON  shift, and go to state 1557

    PLUS          reduce using rule 1140 (unqualified-id)
    MINUS         reduce using rule 1140 (unqualified-id)
    IDENTIFIER    reduce using rule 145 (class-name)
    IDENTIFIER    [reduce using rule 294 (enum-name)]
    IDENTIFIER    [reduce using rule 1052 (template-name)]
    IDENTIFIER    [reduce using rule 1110 (typedef-name)]
    EQ            reduce using rule 1140 (unqualified-id)
    SEMICOLON     reduce using rule 1140 (unqualified-id)
    ALIGNAS       reduce using rule 145 (class-name)
    ALIGNAS       [reduce using rule 294 (enum-name)]
    ALIGNAS       [reduce using rule 1052 (template-name)]
    ALIGNAS       [reduce using rule 1110 (typedef-name)]
    OPEN_PAREN    reduce using rule 145 (class-name)
    OPEN_PAREN    [reduce using rule 294 (enum-name)]
    OPEN_PAREN    [reduce using rule 1052 (template-name)]
    OPEN_PAREN    [reduce using rule 1110 (typedef-name)]
    OPEN_PAREN    [reduce using rule 1140 (unqualified-id)]
    ELLIPSIS      reduce using rule 145 (class-name)
    ELLIPSIS      [reduce using rule 294 (enum-name)]
    ELLIPSIS      [reduce using rule 1052 (template-name)]
    ELLIPSIS      [reduce using rule 1110 (typedef-name)]
    AND           reduce using rule 145 (class-name)
    AND           [reduce using rule 294 (enum-name)]
    AND           [reduce using rule 1052 (template-name)]
    AND           [reduce using rule 1110 (typedef-name)]
    AND           [reduce using rule 1140 (unqualified-id)]
    MULT_EQ       reduce using rule 1140 (unqualified-id)
    DIV_EQ        reduce using rule 1140 (unqualified-id)
    MOD_EQ        reduce using rule 1140 (unqualified-id)
    PLUS_EQ       reduce using rule 1140 (unqualified-id)
    MINUS_EQ      reduce using rule 1140 (unqualified-id)
    RSHIFT_EQ     reduce using rule 1140 (unqualified-id)
    LSHIFT_EQ     reduce using rule 1140 (unqualified-id)
    AND_EQ        reduce using rule 1140 (unqualified-id)
    XOR_EQ        reduce using rule 1140 (unqualified-id)
    OR_EQ         reduce using rule 1140 (unqualified-id)
    COMMA         reduce using rule 1140 (unqualified-id)
    SCOPE         reduce using rule 145 (class-name)
    SCOPE         [reduce using rule 294 (enum-name)]
    SCOPE         [reduce using rule 647 (namespace-alias)]
    SCOPE         [reduce using rule 653 (namespace-name)]
    SCOPE         [reduce using rule 1052 (template-name)]
    SCOPE         [reduce using rule 1110 (typedef-name)]
    OPEN_SQUARE   reduce using rule 145 (class-name)
    OPEN_SQUARE   [reduce using rule 294 (enum-name)]
    OPEN_SQUARE   [reduce using rule 1052 (template-name)]
    OPEN_SQUARE   [reduce using rule 1110 (typedef-name)]
    OPEN_SQUARE   [reduce using rule 1140 (unqualified-id)]
    OPEN_BRACE    reduce using rule 145 (class-name)
    OPEN_BRACE    [reduce using rule 294 (enum-name)]
    OPEN_BRACE    [reduce using rule 1052 (template-name)]
    OPEN_BRACE    [reduce using rule 1110 (typedef-name)]
    VIRTUAL       reduce using rule 145 (class-name)
    VIRTUAL       [reduce using rule 294 (enum-name)]
    VIRTUAL       [reduce using rule 1052 (template-name)]
    VIRTUAL       [reduce using rule 1110 (typedef-name)]
    CLASS         reduce using rule 145 (class-name)
    CLASS         [reduce using rule 294 (enum-name)]
    CLASS         [reduce using rule 1052 (template-name)]
    CLASS         [reduce using rule 1110 (typedef-name)]
    STRUCT        reduce using rule 145 (class-name)
    STRUCT        [reduce using rule 294 (enum-name)]
    STRUCT        [reduce using rule 1052 (template-name)]
    STRUCT        [reduce using rule 1110 (typedef-name)]
    UNION         reduce using rule 145 (class-name)
    UNION         [reduce using rule 294 (enum-name)]
    UNION         [reduce using rule 1052 (template-name)]
    UNION         [reduce using rule 1110 (typedef-name)]
    SPACESHIP     reduce using rule 1140 (unqualified-id)
    QUERY         reduce using rule 1140 (unqualified-id)
    AND_AND       reduce using rule 145 (class-name)
    AND_AND       [reduce using rule 294 (enum-name)]
    AND_AND       [reduce using rule 1052 (template-name)]
    AND_AND       [reduce using rule 1110 (typedef-name)]
    AND_AND       [reduce using rule 1140 (unqualified-id)]
    OR_OR         reduce using rule 1140 (unqualified-id)
    OPERATOR      reduce using rule 145 (class-name)
    OPERATOR      [reduce using rule 294 (enum-name)]
    OPERATOR      [reduce using rule 1052 (template-name)]
    OPERATOR      [reduce using rule 1110 (typedef-name)]
    CONST         reduce using rule 145 (class-name)
    CONST         [reduce using rule 294 (enum-name)]
    CONST         [reduce using rule 1052 (template-name)]
    CONST         [reduce using rule 1110 (typedef-name)]
    VOLATILE      reduce using rule 145 (class-name)
    VOLATILE      [reduce using rule 294 (enum-name)]
    VOLATILE      [reduce using rule 1052 (template-name)]
    VOLATILE      [reduce using rule 1110 (typedef-name)]
    FRIEND        reduce using rule 145 (class-name)
    FRIEND        [reduce using rule 294 (enum-name)]
    FRIEND        [reduce using rule 1052 (template-name)]
    FRIEND        [reduce using rule 1110 (typedef-name)]
    TYPEDEF       reduce using rule 145 (class-name)
    TYPEDEF       [reduce using rule 294 (enum-name)]
    TYPEDEF       [reduce using rule 1052 (template-name)]
    TYPEDEF       [reduce using rule 1110 (typedef-name)]
    CONSTEXPR     reduce using rule 145 (class-name)
    CONSTEXPR     [reduce using rule 294 (enum-name)]
    CONSTEXPR     [reduce using rule 1052 (template-name)]
    CONSTEXPR     [reduce using rule 1110 (typedef-name)]
    CONSTEVAL     reduce using rule 145 (class-name)
    CONSTEVAL     [reduce using rule 294 (enum-name)]
    CONSTEVAL     [reduce using rule 1052 (template-name)]
    CONSTEVAL     [reduce using rule 1110 (typedef-name)]
    CONSTINIT     reduce using rule 145 (class-name)
    CONSTINIT     [reduce using rule 294 (enum-name)]
    CONSTINIT     [reduce using rule 1052 (template-name)]
    CONSTINIT     [reduce using rule 1110 (typedef-name)]
    INLINE        reduce using rule 145 (class-name)
    INLINE        [reduce using rule 294 (enum-name)]
    INLINE        [reduce using rule 1052 (template-name)]
    INLINE        [reduce using rule 1110 (typedef-name)]
    DECLTYPE      reduce using rule 145 (class-name)
    DECLTYPE      [reduce using rule 163 (concept-name)]
    DECLTYPE      [reduce using rule 294 (enum-name)]
    DECLTYPE      [reduce using rule 1052 (template-name)]
    DECLTYPE      [reduce using rule 1110 (typedef-name)]
    DEREF         reduce using rule 1140 (unqualified-id)
    DOT           reduce using rule 1140 (unqualified-id)
    ENUM          reduce using rule 145 (class-name)
    ENUM          [reduce using rule 294 (enum-name)]
    ENUM          [reduce using rule 1052 (template-name)]
    ENUM          [reduce using rule 1110 (typedef-name)]
    EQ_EQ         reduce using rule 1140 (unqualified-id)
    NOT_EQ        reduce using rule 1140 (unqualified-id)
    XOR           reduce using rule 1140 (unqualified-id)
    EXTERN        reduce using rule 145 (class-name)
    EXTERN        [reduce using rule 294 (enum-name)]
    EXTERN        [reduce using rule 1052 (template-name)]
    EXTERN        [reduce using rule 1110 (typedef-name)]
    LESS          reduce using rule 163 (concept-name)
    LESS          [reduce using rule 1052 (template-name)]
    LESS          [reduce using rule 1140 (unqualified-id)]
    GREATER       reduce using rule 1140 (unqualified-id)
    EXPLICIT      reduce using rule 145 (class-name)
    EXPLICIT      [reduce using rule 294 (enum-name)]
    EXPLICIT      [reduce using rule 1052 (template-name)]
    EXPLICIT      [reduce using rule 1110 (typedef-name)]
    MULT          reduce using rule 145 (class-name)
    MULT          [reduce using rule 294 (enum-name)]
    MULT          [reduce using rule 1052 (template-name)]
    MULT          [reduce using rule 1110 (typedef-name)]
    MULT          [reduce using rule 1140 (unqualified-id)]
    DIV           reduce using rule 1140 (unqualified-id)
    MOD           reduce using rule 1140 (unqualified-id)
    OR            reduce using rule 1140 (unqualified-id)
    LSHIFT        reduce using rule 1140 (unqualified-id)
    RSHIFT        reduce using rule 1140 (unqualified-id)
    LESS_EQ       reduce using rule 1140 (unqualified-id)
    GREATER_EQ    reduce using rule 1140 (unqualified-id)
    DOT_STAR      reduce using rule 1140 (unqualified-id)
    DEREF_STAR    reduce using rule 1140 (unqualified-id)
    COMPL         reduce using rule 145 (class-name)
    COMPL         [reduce using rule 294 (enum-name)]
    COMPL         [reduce using rule 1052 (template-name)]
    COMPL         [reduce using rule 1110 (typedef-name)]
    PLUS_PLUS     reduce using rule 1140 (unqualified-id)
    MINUS_MINUS   reduce using rule 1140 (unqualified-id)
    AUTO          reduce using rule 145 (class-name)
    AUTO          [reduce using rule 163 (concept-name)]
    AUTO          [reduce using rule 294 (enum-name)]
    AUTO          [reduce using rule 1052 (template-name)]
    AUTO          [reduce using rule 1110 (typedef-name)]
    CHAR          reduce using rule 145 (class-name)
    CHAR          [reduce using rule 294 (enum-name)]
    CHAR          [reduce using rule 1052 (template-name)]
    CHAR          [reduce using rule 1110 (typedef-name)]
    CHAR8_T       reduce using rule 145 (class-name)
    CHAR8_T       [reduce using rule 294 (enum-name)]
    CHAR8_T       [reduce using rule 1052 (template-name)]
    CHAR8_T       [reduce using rule 1110 (typedef-name)]
    CHAR16_T      reduce using rule 145 (class-name)
    CHAR16_T      [reduce using rule 294 (enum-name)]
    CHAR16_T      [reduce using rule 1052 (template-name)]
    CHAR16_T      [reduce using rule 1110 (typedef-name)]
    CHAR32_T      reduce using rule 145 (class-name)
    CHAR32_T      [reduce using rule 294 (enum-name)]
    CHAR32_T      [reduce using rule 1052 (template-name)]
    CHAR32_T      [reduce using rule 1110 (typedef-name)]
    WCHAR_T       reduce using rule 145 (class-name)
    WCHAR_T       [reduce using rule 294 (enum-name)]
    WCHAR_T       [reduce using rule 1052 (template-name)]
    WCHAR_T       [reduce using rule 1110 (typedef-name)]
    BOOL          reduce using rule 145 (class-name)
    BOOL          [reduce using rule 294 (enum-name)]
    BOOL          [reduce using rule 1052 (template-name)]
    BOOL          [reduce using rule 1110 (typedef-name)]
    SHORT         reduce using rule 145 (class-name)
    SHORT         [reduce using rule 294 (enum-name)]
    SHORT         [reduce using rule 1052 (template-name)]
    SHORT         [reduce using rule 1110 (typedef-name)]
    INT           reduce using rule 145 (class-name)
    INT           [reduce using rule 294 (enum-name)]
    INT           [reduce using rule 1052 (template-name)]
    INT           [reduce using rule 1110 (typedef-name)]
    LONG          reduce using rule 145 (class-name)
    LONG          [reduce using rule 294 (enum-name)]
    LONG          [reduce using rule 1052 (template-name)]
    LONG          [reduce using rule 1110 (typedef-name)]
    SIGNED        reduce using rule 145 (class-name)
    SIGNED        [reduce using rule 294 (enum-name)]
    SIGNED        [reduce using rule 1052 (template-name)]
    SIGNED        [reduce using rule 1110 (typedef-name)]
    UNSIGNED      reduce using rule 145 (class-name)
    UNSIGNED      [reduce using rule 294 (enum-name)]
    UNSIGNED      [reduce using rule 1052 (template-name)]
    UNSIGNED      [reduce using rule 1110 (typedef-name)]
    FLOAT         reduce using rule 145 (class-name)
    FLOAT         [reduce using rule 294 (enum-name)]
    FLOAT         [reduce using rule 1052 (template-name)]
    FLOAT         [reduce using rule 1110 (typedef-name)]
    DOUBLE        reduce using rule 145 (class-name)
    DOUBLE        [reduce using rule 294 (enum-name)]
    DOUBLE        [reduce using rule 1052 (template-name)]
    DOUBLE        [reduce using rule 1110 (typedef-name)]
    VOID          reduce using rule 145 (class-name)
    VOID          [reduce using rule 294 (enum-name)]
    VOID          [reduce using rule 1052 (template-name)]
    VOID          [reduce using rule 1110 (typedef-name)]
    STATIC        reduce using rule 145 (class-name)
    STATIC        [reduce using rule 294 (enum-name)]
    STATIC        [reduce using rule 1052 (template-name)]
    STATIC        [reduce using rule 1110 (typedef-name)]
    THREAD_LOCAL  reduce using rule 145 (class-name)
    THREAD_LOCAL  [reduce using rule 294 (enum-name)]
    THREAD_LOCAL  [reduce using rule 1052 (template-name)]
    THREAD_LOCAL  [reduce using rule 1110 (typedef-name)]
    MUTABLE       reduce using rule 145 (class-name)
    MUTABLE       [reduce using rule 294 (enum-name)]
    MUTABLE       [reduce using rule 1052 (template-name)]
    MUTABLE       [reduce using rule 1110 (typedef-name)]
    TYPENAME      reduce using rule 145 (class-name)
    TYPENAME      [reduce using rule 294 (enum-name)]
    TYPENAME      [reduce using rule 1052 (template-name)]
    TYPENAME      [reduce using rule 1110 (typedef-name)]
    $default      reduce using rule 145 (class-name)


State 1181

  523 labeled-statement: attribute-specifier-seq DEFAULT • COLON statement

    COLON  shift, and go to state 1558


State 1182

  521 labeled-statement: attribute-specifier-seq CASE • constant-expression COLON statement

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 407
    constant-expression                  go to state 1559
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 430
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 1183

  1011 statement: attribute-specifier-seq compound-statement •

    $default  reduce using rule 1011 (statement)


State 1184

  965 simple-declaration: attribute-specifier-seq decl-specifier-seq • init-declarator-list SEMICOLON
  966                   | attribute-specifier-seq decl-specifier-seq • OPEN_SQUARE identifier-list CLOSE_SQUARE initializer SEMICOLON
  968                   | attribute-specifier-seq decl-specifier-seq • ref-qualifier OPEN_SQUARE identifier-list CLOSE_SQUARE initializer SEMICOLON

    IDENTIFIER   shift, and go to state 147
    OPEN_PAREN   shift, and go to state 5
    ELLIPSIS     shift, and go to state 6
    AND          shift, and go to state 278
    SCOPE        shift, and go to state 9
    OPEN_SQUARE  shift, and go to state 577
    AND_AND      shift, and go to state 280
    OPERATOR     shift, and go to state 17
    DECLTYPE     shift, and go to state 134
    MULT         shift, and go to state 31
    COMPL        shift, and go to state 35

    class-name              go to state 65
    conversion-function-id  go to state 68
    declarator              go to state 1149
    declarator-id           go to state 75
    decltype-specifier      go to state 138
    enum-name               go to state 84
    id-expression           go to state 93
    init-declarator         go to state 282
    init-declarator-list    go to state 579
    literal-operator-id     go to state 95
    namespace-alias         go to state 99
    namespace-name          go to state 102
    nested-name-specifier   go to state 148
    noptr-declarator        go to state 106
    operator-function-id    go to state 108
    ptr-declarator          go to state 110
    ptr-operator            go to state 111
    qualified-id            go to state 112
    ref-qualifier           go to state 580
    simple-template-id      go to state 114
    template-id             go to state 120
    template-name           go to state 142
    type-name               go to state 143
    typedef-name            go to state 126
    unqualified-id          go to state 129


State 1185

  1009 statement: attribute-specifier-seq expression-statement •

    $default  reduce using rule 1009 (statement)


State 1186

  1015 statement: attribute-specifier-seq iteration-statement •

    $default  reduce using rule 1015 (statement)


State 1187

  1017 statement: attribute-specifier-seq jump-statement •

    $default  reduce using rule 1017 (statement)


State 1188

  1013 statement: attribute-specifier-seq selection-statement •

    $default  reduce using rule 1013 (statement)


State 1189

  1020 statement: attribute-specifier-seq try-block •

    $default  reduce using rule 1020 (statement)


State 1190

  337 expression-statement: expression SEMICOLON •

    $default  reduce using rule 337 (expression-statement)


State 1191

  161 compound-statement: OPEN_BRACE statement-seq CLOSE_BRACE •

    $default  reduce using rule 161 (compound-statement)


State 1192

  1023 statement-seq: statement-seq statement •

    $default  reduce using rule 1023 (statement-seq)


State 1193

  416 handler: CATCH • OPEN_PAREN exception-declaration CLOSE_PAREN compound-statement

    OPEN_PAREN  shift, and go to state 1560


State 1194

  417 handler-seq: handler •
  418            | handler • handler-seq

    CATCH  shift, and go to state 1193

    $default  reduce using rule 417 (handler-seq)

    handler      go to state 1194
    handler-seq  go to state 1561


State 1195

  409 function-try-block: TRY compound-statement handler-seq •

    $default  reduce using rule 409 (function-try-block)


State 1196

  410 function-try-block: TRY ctor-initializer compound-statement • handler-seq

    CATCH  shift, and go to state 1193

    handler      go to state 1194
    handler-seq  go to state 1562


State 1197

  174 constraint-logical-and-expression: constraint-logical-and-expression AND_AND • primary-expression

    IDENTIFIER    shift, and go to state 147
    OPEN_PAREN    shift, and go to state 696
    SCOPE         shift, and go to state 9
    OPEN_SQUARE   shift, and go to state 361
    ZERO_LB       shift, and go to state 363
    ZERO_HB       shift, and go to state 364
    SINGLE_QUOTE  shift, and go to state 365
    FALSE         shift, and go to state 366
    TRUE          shift, and go to state 367
    OPERATOR      shift, and go to state 17
    DECLTYPE      shift, and go to state 134
    DOT           shift, and go to state 370
    UNICODE_8     shift, and go to state 184
    DOUBLE_QUOTE  shift, and go to state 199
    ZERO_LX       shift, and go to state 372
    ZERO_HX       shift, and go to state 373
    REQUIRES      shift, and go to state 374
    COMPL         shift, and go to state 35
    THIS          shift, and go to state 380
    NULLPTR       shift, and go to state 381
    '0'           shift, and go to state 389
    '1'           shift, and go to state 390
    '2'           shift, and go to state 391
    '3'           shift, and go to state 392
    '4'           shift, and go to state 393
    '5'           shift, and go to state 394
    '6'           shift, and go to state 395
    '7'           shift, and go to state 396
    '8'           shift, and go to state 397
    '9'           shift, and go to state 398
    'u'           shift, and go to state 205
    'U'           shift, and go to state 206
    'L'           shift, and go to state 207
    'R'           shift, and go to state 208

    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    character-literal                    go to state 405
    class-name                           go to state 65
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 138
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 152
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    pointer-literal                      go to state 438
    primary-expression                   go to state 1563
    qualified-id                         go to state 112
    requires-expression                  go to state 442
    simple-template-id                   go to state 114
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 142
    type-name                            go to state 143
    typedef-name                         go to state 126
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 1198

  176 constraint-logical-or-expression: constraint-logical-or-expression OR_OR • constraint-logical-and-expression

    IDENTIFIER    shift, and go to state 147
    OPEN_PAREN    shift, and go to state 696
    SCOPE         shift, and go to state 9
    OPEN_SQUARE   shift, and go to state 361
    ZERO_LB       shift, and go to state 363
    ZERO_HB       shift, and go to state 364
    SINGLE_QUOTE  shift, and go to state 365
    FALSE         shift, and go to state 366
    TRUE          shift, and go to state 367
    OPERATOR      shift, and go to state 17
    DECLTYPE      shift, and go to state 134
    DOT           shift, and go to state 370
    UNICODE_8     shift, and go to state 184
    DOUBLE_QUOTE  shift, and go to state 199
    ZERO_LX       shift, and go to state 372
    ZERO_HX       shift, and go to state 373
    REQUIRES      shift, and go to state 374
    COMPL         shift, and go to state 35
    THIS          shift, and go to state 380
    NULLPTR       shift, and go to state 381
    '0'           shift, and go to state 389
    '1'           shift, and go to state 390
    '2'           shift, and go to state 391
    '3'           shift, and go to state 392
    '4'           shift, and go to state 393
    '5'           shift, and go to state 394
    '6'           shift, and go to state 395
    '7'           shift, and go to state 396
    '8'           shift, and go to state 397
    '9'           shift, and go to state 398
    'u'           shift, and go to state 205
    'U'           shift, and go to state 206
    'L'           shift, and go to state 207
    'R'           shift, and go to state 208

    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    character-literal                    go to state 405
    class-name                           go to state 65
    constraint-logical-and-expression    go to state 1564
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 138
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 152
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    pointer-literal                      go to state 438
    primary-expression                   go to state 699
    qualified-id                         go to state 112
    requires-expression                  go to state 442
    simple-template-id                   go to state 114
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 142
    type-name                            go to state 143
    typedef-name                         go to state 126
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 1199

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  299 enumerator: IDENTIFIER attribute-specifier-seq •

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    $default  reduce using rule 299 (enumerator)

    alignment-specifier  go to state 57
    attribute-specifier  go to state 260


State 1200

  301 enumerator-definition: enumerator EQ • constant-expression

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 407
    constant-expression                  go to state 1565
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 430
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 1201

  297 enum-specifier: enum-head OPEN_BRACE enumerator-list COMMA • CLOSE_BRACE
  303 enumerator-list: enumerator-list COMMA • enumerator-definition

    IDENTIFIER   shift, and go to state 704
    CLOSE_BRACE  shift, and go to state 1566

    enumerator             go to state 706
    enumerator-definition  go to state 1567


State 1202

  296 enum-specifier: enum-head OPEN_BRACE enumerator-list CLOSE_BRACE •

    $default  reduce using rule 296 (enum-specifier)


State 1203

  752 opaque-enum-declaration: enum-key attribute-specifier-seq enum-head-name SEMICOLON •

    $default  reduce using rule 752 (opaque-enum-declaration)


State 1204

  288 enum-head: enum-key attribute-specifier-seq enum-head-name enum-base •
  754 opaque-enum-declaration: enum-key attribute-specifier-seq enum-head-name enum-base • SEMICOLON

    SEMICOLON  shift, and go to state 1568

    $default  reduce using rule 288 (enum-head)


State 1205

  753 opaque-enum-declaration: enum-key enum-head-name enum-base SEMICOLON •

    $default  reduce using rule 753 (opaque-enum-declaration)


State 1206

  231 deduction-guide: explicit-specifier template-name OPEN_PAREN parameter-declaration-clause • CLOSE_PAREN DEREF simple-template-id SEMICOLON

    CLOSE_PAREN  shift, and go to state 1569


State 1207

  1067 translation-unit: global-module-fragment module-declaration declaration-seq private-module-fragment •

    $default  reduce using rule 1067 (translation-unit)


State 1208

  1051 template-id: literal-operator-id LESS template-argument-list GREATER •

    $default  reduce using rule 1051 (template-id)


State 1209

  886 private-module-fragment: MODULE COLON PRIVATE • SEMICOLON
  887                        | MODULE COLON PRIVATE • SEMICOLON declaration-seq

    SEMICOLON  shift, and go to state 1570


State 1210

  661 nested-name-specifier: nested-name-specifier TEMPLATE simple-template-id SCOPE •

    $default  reduce using rule 661 (nested-name-specifier)


State 1211

  904 ptr-operator: nested-name-specifier MULT attribute-specifier-seq cv-qualifier-seq •

    $default  reduce using rule 904 (ptr-operator)


State 1212

  1072 type-constraint: nested-name-specifier concept-name LESS GREATER •

    $default  reduce using rule 1072 (type-constraint)


State 1213

  1041 template-argument-list: template-argument-list • COMMA template-argument
  1042                       | template-argument-list • COMMA template-argument ELLIPSIS
  1074 type-constraint: nested-name-specifier concept-name LESS template-argument-list • GREATER

    COMMA    shift, and go to state 1129
    GREATER  shift, and go to state 1571


State 1214

  832 parameters-and-qualifiers: OPEN_PAREN parameter-declaration-clause CLOSE_PAREN •
  833                          | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN • cv-qualifier-seq
  834                          | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN • ref-qualifier
  835                          | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN • cv-qualifier-seq ref-qualifier
  836                          | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN • noexcept-specifier
  837                          | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN • cv-qualifier-seq noexcept-specifier
  838                          | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN • ref-qualifier noexcept-specifier
  839                          | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN • cv-qualifier-seq ref-qualifier noexcept-specifier
  840                          | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN • attribute-specifier-seq
  841                          | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN • cv-qualifier-seq attribute-specifier-seq
  842                          | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN • ref-qualifier attribute-specifier-seq
  843                          | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN • cv-qualifier-seq ref-qualifier attribute-specifier-seq
  844                          | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN • noexcept-specifier attribute-specifier-seq
  845                          | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN • cv-qualifier-seq noexcept-specifier attribute-specifier-seq
  846                          | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN • ref-qualifier noexcept-specifier attribute-specifier-seq
  847                          | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN • cv-qualifier-seq ref-qualifier noexcept-specifier attribute-specifier-seq

    ALIGNAS      shift, and go to state 4
    AND          shift, and go to state 1572
    OPEN_SQUARE  shift, and go to state 10
    NOEXCEPT     shift, and go to state 894
    AND_AND      shift, and go to state 1573
    CONST        shift, and go to state 18
    VOLATILE     shift, and go to state 19

    OPEN_SQUARE  [reduce using rule 832 (parameters-and-qualifiers)]
    $default     reduce using rule 832 (parameters-and-qualifiers)

    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 1574
    cv-qualifier             go to state 233
    cv-qualifier-seq         go to state 1575
    noexcept-specifier       go to state 1576
    ref-qualifier            go to state 1577


State 1215

  827 parameter-declaration-clause: parameter-declaration-list ELLIPSIS •

    $default  reduce using rule 827 (parameter-declaration-clause)


State 1216

  829 parameter-declaration-clause: parameter-declaration-list COMMA • ELLIPSIS
  831 parameter-declaration-list: parameter-declaration-list COMMA • parameter-declaration

    IDENTIFIER    shift, and go to state 162
    ALIGNAS       shift, and go to state 4
    ELLIPSIS      shift, and go to state 1578
    SCOPE         shift, and go to state 9
    OPEN_SQUARE   shift, and go to state 10
    VIRTUAL       shift, and go to state 11
    CLASS         shift, and go to state 12
    STRUCT        shift, and go to state 13
    UNION         shift, and go to state 14
    CONST         shift, and go to state 18
    VOLATILE      shift, and go to state 19
    FRIEND        shift, and go to state 20
    TYPEDEF       shift, and go to state 21
    CONSTEXPR     shift, and go to state 22
    CONSTEVAL     shift, and go to state 23
    CONSTINIT     shift, and go to state 24
    INLINE        shift, and go to state 258
    DECLTYPE      shift, and go to state 26
    ENUM          shift, and go to state 27
    EXTERN        shift, and go to state 259
    EXPLICIT      shift, and go to state 29
    THIS          shift, and go to state 471
    AUTO          shift, and go to state 36
    CHAR          shift, and go to state 37
    CHAR8_T       shift, and go to state 38
    CHAR16_T      shift, and go to state 39
    CHAR32_T      shift, and go to state 40
    WCHAR_T       shift, and go to state 41
    BOOL          shift, and go to state 42
    SHORT         shift, and go to state 43
    INT           shift, and go to state 44
    LONG          shift, and go to state 45
    SIGNED        shift, and go to state 46
    UNSIGNED      shift, and go to state 47
    FLOAT         shift, and go to state 48
    DOUBLE        shift, and go to state 49
    VOID          shift, and go to state 50
    STATIC        shift, and go to state 52
    THREAD_LOCAL  shift, and go to state 53
    MUTABLE       shift, and go to state 54
    TYPENAME      shift, and go to state 55

    alignment-specifier         go to state 57
    attribute-specifier         go to state 60
    attribute-specifier-seq     go to state 473
    class-head                  go to state 63
    class-key                   go to state 64
    class-name                  go to state 65
    class-specifier             go to state 66
    concept-name                go to state 67
    cv-qualifier                go to state 69
    decl-specifier              go to state 70
    decl-specifier-seq          go to state 474
    decltype-specifier          go to state 76
    defining-type-specifier     go to state 78
    elaborated-enum-specifier   go to state 79
    elaborated-type-specifier   go to state 80
    enum-head                   go to state 82
    enum-key                    go to state 263
    enum-name                   go to state 84
    enum-specifier              go to state 85
    explicit-specifier          go to state 264
    function-specifier          go to state 91
    namespace-alias             go to state 99
    namespace-name              go to state 102
    nested-name-specifier       go to state 212
    parameter-declaration       go to state 1579
    placeholder-type-specifier  go to state 109
    simple-template-id          go to state 141
    simple-type-specifier       go to state 115
    storage-class-specifier     go to state 117
    template-name               go to state 215
    type-constraint             go to state 123
    type-name                   go to state 124
    type-specifier              go to state 125
    typedef-name                go to state 126
    typename-specifier          go to state 127


State 1217

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  726 noptr-declarator: noptr-declarator OPEN_SQUARE CLOSE_SQUARE attribute-specifier-seq •

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    OPEN_SQUARE  [reduce using rule 726 (noptr-declarator)]
    $default     reduce using rule 726 (noptr-declarator)

    alignment-specifier  go to state 57
    attribute-specifier  go to state 260


State 1218

  725 noptr-declarator: noptr-declarator OPEN_SQUARE constant-expression CLOSE_SQUARE •
  727                 | noptr-declarator OPEN_SQUARE constant-expression CLOSE_SQUARE • attribute-specifier-seq

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    OPEN_SQUARE  [reduce using rule 725 (noptr-declarator)]
    $default     reduce using rule 725 (noptr-declarator)

    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 1580


State 1219

  1059 trailing-return-type: DEREF type-id •

    $default  reduce using rule 1059 (trailing-return-type)


State 1220

  1049 template-id: operator-function-id LESS template-argument-list GREATER •

    $default  reduce using rule 1049 (template-id)


State 1221

  162 concept-definition: CONCEPT concept-name EQ • constraint-expression SEMICOLON

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    constraint-expression                go to state 1581
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 1582
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 1222

  232 deduction-guide: template-name OPEN_PAREN parameter-declaration-clause CLOSE_PAREN • DEREF simple-template-id SEMICOLON

    DEREF  shift, and go to state 1583


State 1223

  984 simple-template-id: template-name LESS template-argument-list GREATER •

    $default  reduce using rule 984 (simple-template-id)


State 1224

  850 placeholder-type-specifier: type-constraint DECLTYPE OPEN_PAREN AUTO • CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 1584


State 1225

   13 alias-declaration: USING IDENTIFIER EQ defining-type-id SEMICOLON •

    $default  reduce using rule 13 (alias-declaration)


State 1226

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  239 defining-type-specifier-seq: defining-type-specifier attribute-specifier-seq •

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    OPEN_SQUARE  [reduce using rule 239 (defining-type-specifier-seq)]
    $default     reduce using rule 239 (defining-type-specifier-seq)

    alignment-specifier  go to state 57
    attribute-specifier  go to state 260


State 1227

  240 defining-type-specifier-seq: defining-type-specifier defining-type-specifier-seq •

    $default  reduce using rule 240 (defining-type-specifier-seq)


State 1228

  234 defining-type-id: defining-type-specifier-seq abstract-declarator •

    $default  reduce using rule 234 (defining-type-id)


State 1229

   14 alias-declaration: USING IDENTIFIER attribute-specifier-seq EQ defining-type-id • SEMICOLON

    SEMICOLON  shift, and go to state 1585


State 1230

  1174 using-directive: USING NAMESPACE nested-name-specifier namespace-name SEMICOLON •

    $default  reduce using rule 1174 (using-directive)


State 1231

  1170 using-declarator-list: using-declarator-list COMMA using-declarator ELLIPSIS •

    $default  reduce using rule 1170 (using-declarator-list)


State 1232

  348 fold-operator: PLUS •

    $default  reduce using rule 348 (fold-operator)


State 1233

  349 fold-operator: MINUS •

    $default  reduce using rule 349 (fold-operator)


State 1234

  368 fold-operator: EQ •

    $default  reduce using rule 368 (fold-operator)


State 1235

  354 fold-operator: AND •

    $default  reduce using rule 354 (fold-operator)


State 1236

  360 fold-operator: MULT_EQ •

    $default  reduce using rule 360 (fold-operator)


State 1237

  361 fold-operator: DIV_EQ •

    $default  reduce using rule 361 (fold-operator)


State 1238

  362 fold-operator: MOD_EQ •

    $default  reduce using rule 362 (fold-operator)


State 1239

  358 fold-operator: PLUS_EQ •

    $default  reduce using rule 358 (fold-operator)


State 1240

  359 fold-operator: MINUS_EQ •

    $default  reduce using rule 359 (fold-operator)


State 1241

  367 fold-operator: RSHIFT_EQ •

    $default  reduce using rule 367 (fold-operator)


State 1242

  366 fold-operator: LSHIFT_EQ •

    $default  reduce using rule 366 (fold-operator)


State 1243

  364 fold-operator: AND_EQ •

    $default  reduce using rule 364 (fold-operator)


State 1244

  363 fold-operator: XOR_EQ •

    $default  reduce using rule 363 (fold-operator)


State 1245

  365 fold-operator: OR_EQ •

    $default  reduce using rule 365 (fold-operator)


State 1246

  377 fold-operator: COMMA •

    $default  reduce using rule 377 (fold-operator)


State 1247

  375 fold-operator: AND_AND •

    $default  reduce using rule 375 (fold-operator)


State 1248

  376 fold-operator: OR_OR •

    $default  reduce using rule 376 (fold-operator)


State 1249

  369 fold-operator: EQ_EQ •

    $default  reduce using rule 369 (fold-operator)


State 1250

  370 fold-operator: NOT_EQ •

    $default  reduce using rule 370 (fold-operator)


State 1251

  353 fold-operator: XOR •

    $default  reduce using rule 353 (fold-operator)


State 1252

  371 fold-operator: LESS •

    $default  reduce using rule 371 (fold-operator)


State 1253

  372 fold-operator: GREATER •

    $default  reduce using rule 372 (fold-operator)


State 1254

  350 fold-operator: MULT •

    $default  reduce using rule 350 (fold-operator)


State 1255

  351 fold-operator: DIV •

    $default  reduce using rule 351 (fold-operator)


State 1256

  352 fold-operator: MOD •

    $default  reduce using rule 352 (fold-operator)


State 1257

  355 fold-operator: OR •

    $default  reduce using rule 355 (fold-operator)


State 1258

  356 fold-operator: LSHIFT •

    $default  reduce using rule 356 (fold-operator)


State 1259

  357 fold-operator: RSHIFT •

    $default  reduce using rule 357 (fold-operator)


State 1260

  373 fold-operator: LESS_EQ •

    $default  reduce using rule 373 (fold-operator)


State 1261

  374 fold-operator: GREATER_EQ •

    $default  reduce using rule 374 (fold-operator)


State 1262

  378 fold-operator: DOT_STAR •

    $default  reduce using rule 378 (fold-operator)


State 1263

  379 fold-operator: DEREF_STAR •

    $default  reduce using rule 379 (fold-operator)


State 1264

  346 fold-expression: OPEN_PAREN ELLIPSIS fold-operator • cast-expression CLOSE_PAREN

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 1586
    character-literal                    go to state 405
    class-name                           go to state 65
    concept-name                         go to state 67
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    requires-expression                  go to state 442
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 1265

  345 fold-expression: OPEN_PAREN cast-expression fold-operator • ELLIPSIS CLOSE_PAREN
  347                | OPEN_PAREN cast-expression fold-operator • ELLIPSIS fold-operator cast-expression CLOSE_PAREN

    ELLIPSIS  shift, and go to state 1587


State 1266

  881 primary-expression: OPEN_PAREN expression CLOSE_PAREN •

    $default  reduce using rule 881 (primary-expression)


State 1267

  125 cast-expression: OPEN_PAREN type-id CLOSE_PAREN • cast-expression

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 1588
    character-literal                    go to state 405
    class-name                           go to state 65
    concept-name                         go to state 67
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    requires-expression                  go to state 442
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 1268

  243 delete-expression: SCOPE DELETE OPEN_SQUARE • CLOSE_SQUARE cast-expression
  534 lambda-introducer: OPEN_SQUARE • CLOSE_SQUARE
  535                  | OPEN_SQUARE • lambda-capture CLOSE_SQUARE

    IDENTIFIER    shift, and go to state 762
    EQ            shift, and go to state 763
    ELLIPSIS      shift, and go to state 764
    AND           shift, and go to state 765
    CLOSE_SQUARE  shift, and go to state 1589
    MULT          shift, and go to state 767
    THIS          shift, and go to state 768

    capture          go to state 769
    capture-default  go to state 770
    capture-list     go to state 771
    init-capture     go to state 772
    lambda-capture   go to state 773
    simple-capture   go to state 774


State 1269

  241 delete-expression: SCOPE DELETE cast-expression •

    $default  reduce using rule 241 (delete-expression)


State 1270

  676 new-expression: SCOPE NEW OPEN_PAREN • type-id CLOSE_PAREN
  680               | SCOPE NEW OPEN_PAREN • type-id CLOSE_PAREN new-initializer
  687 new-placement: OPEN_PAREN • expression-list CLOSE_PAREN

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 935
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 135
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 1134
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    braced-init-list                     go to state 1135
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-key                            go to state 209
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    expression-list                      go to state 1299
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    initializer-clause                   go to state 1138
    initializer-list                     go to state 1139
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-id                              go to state 1590
    type-name                            go to state 124
    type-specifier                       go to state 216
    type-specifier-seq                   go to state 447
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 1271

  670 new-expression: SCOPE NEW new-placement • new-type-id
  674               | SCOPE NEW new-placement • new-type-id new-initializer
  678               | SCOPE NEW new-placement • OPEN_PAREN type-id CLOSE_PAREN
  682               | SCOPE NEW new-placement • OPEN_PAREN type-id CLOSE_PAREN new-initializer

    IDENTIFIER  shift, and go to state 162
    OPEN_PAREN  shift, and go to state 1591
    SCOPE       shift, and go to state 9
    CLASS       shift, and go to state 12
    STRUCT      shift, and go to state 13
    UNION       shift, and go to state 14
    CONST       shift, and go to state 18
    VOLATILE    shift, and go to state 19
    DECLTYPE    shift, and go to state 26
    ENUM        shift, and go to state 135
    AUTO        shift, and go to state 36
    CHAR        shift, and go to state 37
    CHAR8_T     shift, and go to state 38
    CHAR16_T    shift, and go to state 39
    CHAR32_T    shift, and go to state 40
    WCHAR_T     shift, and go to state 41
    BOOL        shift, and go to state 42
    SHORT       shift, and go to state 43
    INT         shift, and go to state 44
    LONG        shift, and go to state 45
    SIGNED      shift, and go to state 46
    UNSIGNED    shift, and go to state 47
    FLOAT       shift, and go to state 48
    DOUBLE      shift, and go to state 49
    VOID        shift, and go to state 50
    TYPENAME    shift, and go to state 55

    class-key                   go to state 209
    class-name                  go to state 65
    concept-name                go to state 67
    cv-qualifier                go to state 69
    decltype-specifier          go to state 76
    elaborated-enum-specifier   go to state 79
    elaborated-type-specifier   go to state 80
    enum-name                   go to state 84
    namespace-alias             go to state 99
    namespace-name              go to state 102
    nested-name-specifier       go to state 212
    new-type-id                 go to state 1592
    placeholder-type-specifier  go to state 109
    simple-template-id          go to state 141
    simple-type-specifier       go to state 115
    template-name               go to state 215
    type-constraint             go to state 123
    type-name                   go to state 124
    type-specifier              go to state 216
    type-specifier-seq          go to state 807
    typedef-name                go to state 126
    typename-specifier          go to state 127


State 1272

  668 new-expression: SCOPE NEW new-type-id •
  672               | SCOPE NEW new-type-id • new-initializer

    OPEN_PAREN  shift, and go to state 1303
    OPEN_BRACE  shift, and go to state 935

    OPEN_BRACE  [reduce using rule 668 (new-expression)]
    $default    reduce using rule 668 (new-expression)

    braced-init-list  go to state 1304
    new-initializer   go to state 1593


State 1273

  106 brace-or-equal-initializer: EQ • initializer-clause

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 935
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 1134
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    braced-init-list                     go to state 1135
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    initializer-clause                   go to state 1136
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 1274

  958 simple-capture: IDENTIFIER ELLIPSIS •

    $default  reduce using rule 958 (simple-capture)


State 1275

  466 init-capture: IDENTIFIER initializer •

    $default  reduce using rule 466 (init-capture)


State 1276

  465 init-capture: ELLIPSIS IDENTIFIER • initializer

    EQ          shift, and go to state 1273
    OPEN_PAREN  shift, and go to state 643
    OPEN_BRACE  shift, and go to state 935

    brace-or-equal-initializer  go to state 645
    braced-init-list            go to state 646
    initializer                 go to state 1594


State 1277

  467 init-capture: AND IDENTIFIER • initializer
  959 simple-capture: AND IDENTIFIER •
  960               | AND IDENTIFIER • ELLIPSIS

    EQ          shift, and go to state 1273
    OPEN_PAREN  shift, and go to state 643
    ELLIPSIS    shift, and go to state 1595
    OPEN_BRACE  shift, and go to state 935

    $default  reduce using rule 959 (simple-capture)

    brace-or-equal-initializer  go to state 645
    braced-init-list            go to state 646
    initializer                 go to state 1596


State 1278

  468 init-capture: AND ELLIPSIS • IDENTIFIER initializer

    IDENTIFIER  shift, and go to state 1597


State 1279

  962 simple-capture: MULT THIS •

    $default  reduce using rule 962 (simple-capture)


State 1280

  527 lambda-capture: capture-default COMMA • capture-list

    IDENTIFIER  shift, and go to state 762
    ELLIPSIS    shift, and go to state 764
    AND         shift, and go to state 1598
    MULT        shift, and go to state 767
    THIS        shift, and go to state 768

    capture         go to state 769
    capture-list    go to state 1599
    init-capture    go to state 772
    simple-capture  go to state 774


State 1281

  123 capture-list: capture-list COMMA • capture

    IDENTIFIER  shift, and go to state 762
    ELLIPSIS    shift, and go to state 764
    AND         shift, and go to state 1598
    MULT        shift, and go to state 767
    THIS        shift, and go to state 768

    capture         go to state 1600
    init-capture    go to state 772
    simple-capture  go to state 774


State 1282

  535 lambda-introducer: OPEN_SQUARE lambda-capture CLOSE_SQUARE •

    $default  reduce using rule 535 (lambda-introducer)


State 1283

  127 character-literal: SINGLE_QUOTE c-char-sequence SINGLE_QUOTE •

    $default  reduce using rule 127 (character-literal)


State 1284

  117 c-char-sequence: c-char-sequence c-char •

    $default  reduce using rule 117 (c-char-sequence)


State 1285

  335 expression: expression • COMMA assignment-expression
  692 noexcept-expression: NOEXCEPT OPEN_PAREN expression • CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 1601
    COMMA        shift, and go to state 1029


State 1286

  244 delete-expression: DELETE OPEN_SQUARE CLOSE_SQUARE • cast-expression
  534 lambda-introducer: OPEN_SQUARE CLOSE_SQUARE •

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    IDENTIFIER   [reduce using rule 534 (lambda-introducer)]
    OPEN_PAREN   [reduce using rule 534 (lambda-introducer)]
    SCOPE        [reduce using rule 534 (lambda-introducer)]
    OPEN_SQUARE  [reduce using rule 534 (lambda-introducer)]
    NOEXCEPT     [reduce using rule 534 (lambda-introducer)]
    DECLTYPE     [reduce using rule 534 (lambda-introducer)]
    AUTO         [reduce using rule 534 (lambda-introducer)]
    CHAR         [reduce using rule 534 (lambda-introducer)]
    CHAR8_T      [reduce using rule 534 (lambda-introducer)]
    CHAR16_T     [reduce using rule 534 (lambda-introducer)]
    CHAR32_T     [reduce using rule 534 (lambda-introducer)]
    WCHAR_T      [reduce using rule 534 (lambda-introducer)]
    BOOL         [reduce using rule 534 (lambda-introducer)]
    SHORT        [reduce using rule 534 (lambda-introducer)]
    INT          [reduce using rule 534 (lambda-introducer)]
    LONG         [reduce using rule 534 (lambda-introducer)]
    SIGNED       [reduce using rule 534 (lambda-introducer)]
    UNSIGNED     [reduce using rule 534 (lambda-introducer)]
    FLOAT        [reduce using rule 534 (lambda-introducer)]
    DOUBLE       [reduce using rule 534 (lambda-introducer)]
    VOID         [reduce using rule 534 (lambda-introducer)]
    TYPENAME     [reduce using rule 534 (lambda-introducer)]
    $default     reduce using rule 534 (lambda-introducer)

    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 1602
    character-literal                    go to state 405
    class-name                           go to state 65
    concept-name                         go to state 67
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    requires-expression                  go to state 442
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 1287

  926 requirement-parameter-list: OPEN_PAREN parameter-declaration-clause • CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 1603


State 1288

  156 compound-requirement: OPEN_BRACE • expression CLOSE_BRACE SEMICOLON
  157                     | OPEN_BRACE • expression CLOSE_BRACE NOEXCEPT SEMICOLON
  158                     | OPEN_BRACE • expression CLOSE_BRACE return-type-requirement SEMICOLON
  159                     | OPEN_BRACE • expression CLOSE_BRACE NOEXCEPT return-type-requirement SEMICOLON

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 525
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    expression                           go to state 1604
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 1289

  664 nested-requirement: REQUIRES • constraint-expression SEMICOLON
  930 requires-expression: REQUIRES • requirement-body
  931                    | REQUIRES • requirement-parameter-list requirement-body

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 1605
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 801
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    constraint-expression                go to state 1606
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 1582
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requirement-body                     go to state 802
    requirement-parameter-list           go to state 803
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 1290

  1101 type-requirement: TYPENAME • type-name SEMICOLON
  1102                 | TYPENAME • nested-name-specifier type-name SEMICOLON
  1112 typename-specifier: TYPENAME • nested-name-specifier IDENTIFIER
  1113                   | TYPENAME • nested-name-specifier simple-template-id
  1114                   | TYPENAME • nested-name-specifier TEMPLATE simple-template-id

    IDENTIFIER  shift, and go to state 253
    SCOPE       shift, and go to state 9
    DECLTYPE    shift, and go to state 134

    class-name             go to state 65
    decltype-specifier     go to state 138
    enum-name              go to state 84
    namespace-alias        go to state 99
    namespace-name         go to state 102
    nested-name-specifier  go to state 1607
    simple-template-id     go to state 141
    template-name          go to state 142
    type-name              go to state 1608
    typedef-name           go to state 126


State 1291

  923 requirement: compound-requirement •

    $default  reduce using rule 923 (requirement)


State 1292

  335 expression: expression • COMMA assignment-expression
  982 simple-requirement: expression • SEMICOLON

    SEMICOLON  shift, and go to state 1609
    COMMA      shift, and go to state 1029


State 1293

  924 requirement: nested-requirement •

    $default  reduce using rule 924 (requirement)


State 1294

  927 requirement-seq: requirement •

    $default  reduce using rule 927 (requirement-seq)


State 1295

  925 requirement-body: OPEN_BRACE requirement-seq • CLOSE_BRACE
  928 requirement-seq: requirement-seq • requirement

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 1288
    CLOSE_BRACE       shift, and go to state 1610
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 1289
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 1290
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 525
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    compound-requirement                 go to state 1291
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    expression                           go to state 1292
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    nested-requirement                   go to state 1293
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requirement                          go to state 1611
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-requirement                   go to state 1296
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    type-requirement                     go to state 1297
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 1296

  921 requirement: simple-requirement •

    $default  reduce using rule 921 (requirement)


State 1297

  922 requirement: type-requirement •

    $default  reduce using rule 922 (requirement)


State 1298

  931 requires-expression: REQUIRES requirement-parameter-list requirement-body •

    $default  reduce using rule 931 (requires-expression)


State 1299

  687 new-placement: OPEN_PAREN expression-list • CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 1612


State 1300

  677 new-expression: NEW OPEN_PAREN type-id • CLOSE_PAREN
  681               | NEW OPEN_PAREN type-id • CLOSE_PAREN new-initializer

    CLOSE_PAREN  shift, and go to state 1613


State 1301

  679 new-expression: NEW new-placement OPEN_PAREN • type-id CLOSE_PAREN
  683               | NEW new-placement OPEN_PAREN • type-id CLOSE_PAREN new-initializer

    IDENTIFIER  shift, and go to state 162
    SCOPE       shift, and go to state 9
    CLASS       shift, and go to state 12
    STRUCT      shift, and go to state 13
    UNION       shift, and go to state 14
    CONST       shift, and go to state 18
    VOLATILE    shift, and go to state 19
    DECLTYPE    shift, and go to state 26
    ENUM        shift, and go to state 135
    AUTO        shift, and go to state 36
    CHAR        shift, and go to state 37
    CHAR8_T     shift, and go to state 38
    CHAR16_T    shift, and go to state 39
    CHAR32_T    shift, and go to state 40
    WCHAR_T     shift, and go to state 41
    BOOL        shift, and go to state 42
    SHORT       shift, and go to state 43
    INT         shift, and go to state 44
    LONG        shift, and go to state 45
    SIGNED      shift, and go to state 46
    UNSIGNED    shift, and go to state 47
    FLOAT       shift, and go to state 48
    DOUBLE      shift, and go to state 49
    VOID        shift, and go to state 50
    TYPENAME    shift, and go to state 55

    class-key                   go to state 209
    class-name                  go to state 65
    concept-name                go to state 67
    cv-qualifier                go to state 69
    decltype-specifier          go to state 76
    elaborated-enum-specifier   go to state 79
    elaborated-type-specifier   go to state 80
    enum-name                   go to state 84
    namespace-alias             go to state 99
    namespace-name              go to state 102
    nested-name-specifier       go to state 212
    placeholder-type-specifier  go to state 109
    simple-template-id          go to state 141
    simple-type-specifier       go to state 115
    template-name               go to state 215
    type-constraint             go to state 123
    type-id                     go to state 1614
    type-name                   go to state 124
    type-specifier              go to state 216
    type-specifier-seq          go to state 447
    typedef-name                go to state 126
    typename-specifier          go to state 127


State 1302

  671 new-expression: NEW new-placement new-type-id •
  675               | NEW new-placement new-type-id • new-initializer

    OPEN_PAREN  shift, and go to state 1303
    OPEN_BRACE  shift, and go to state 935

    OPEN_BRACE  [reduce using rule 671 (new-expression)]
    $default    reduce using rule 671 (new-expression)

    braced-init-list  go to state 1304
    new-initializer   go to state 1615


State 1303

  684 new-initializer: OPEN_PAREN • CLOSE_PAREN
  685                | OPEN_PAREN • expression-list CLOSE_PAREN

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    CLOSE_PAREN       shift, and go to state 1616
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 935
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 1134
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    braced-init-list                     go to state 1135
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    expression-list                      go to state 1617
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    initializer-clause                   go to state 1138
    initializer-list                     go to state 1139
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 1304

  686 new-initializer: braced-init-list •

    $default  reduce using rule 686 (new-initializer)


State 1305

  673 new-expression: NEW new-type-id new-initializer •

    $default  reduce using rule 673 (new-expression)


State 1306

  729 noptr-new-declarator: OPEN_SQUARE • CLOSE_SQUARE
  730                     | OPEN_SQUARE • expression CLOSE_SQUARE
  731                     | OPEN_SQUARE • CLOSE_SQUARE attribute-specifier-seq
  732                     | OPEN_SQUARE • expression CLOSE_SQUARE attribute-specifier-seq

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CLOSE_SQUARE      shift, and go to state 1618
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 525
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    expression                           go to state 1619
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 1307

  689 new-type-id: type-specifier-seq new-declarator •

    $default  reduce using rule 689 (new-type-id)


State 1308

  667 new-declarator: noptr-new-declarator •
  733 noptr-new-declarator: noptr-new-declarator • OPEN_SQUARE constant-expression CLOSE_SQUARE
  734                     | noptr-new-declarator • OPEN_SQUARE constant-expression CLOSE_SQUARE attribute-specifier-seq

    OPEN_SQUARE  shift, and go to state 1620

    $default  reduce using rule 667 (new-declarator)


State 1309

  665 new-declarator: ptr-operator •
  666               | ptr-operator • new-declarator

    IDENTIFIER   shift, and go to state 253
    AND          shift, and go to state 7
    SCOPE        shift, and go to state 9
    OPEN_SQUARE  shift, and go to state 1306
    AND_AND      shift, and go to state 16
    DECLTYPE     shift, and go to state 134
    MULT         shift, and go to state 31

    AND       [reduce using rule 665 (new-declarator)]
    AND_AND   [reduce using rule 665 (new-declarator)]
    MULT      [reduce using rule 665 (new-declarator)]
    $default  reduce using rule 665 (new-declarator)

    class-name             go to state 65
    decltype-specifier     go to state 138
    enum-name              go to state 84
    namespace-alias        go to state 99
    namespace-name         go to state 102
    nested-name-specifier  go to state 517
    new-declarator         go to state 1621
    noptr-new-declarator   go to state 1308
    ptr-operator           go to state 1309
    simple-template-id     go to state 141
    template-name          go to state 142
    type-name              go to state 143
    typedef-name           go to state 126


State 1310

  873 postfix-expression: DYNAMIC_CAST LESS type-id • GREATER OPEN_PAREN expression CLOSE_PAREN

    GREATER  shift, and go to state 1622


State 1311

  874 postfix-expression: STATIC_CAST LESS type-id • GREATER OPEN_PAREN expression CLOSE_PAREN

    GREATER  shift, and go to state 1623


State 1312

  875 postfix-expression: REINTERPRET_CAST LESS type-id • GREATER OPEN_PAREN expression CLOSE_PAREN

    GREATER  shift, and go to state 1624


State 1313

  876 postfix-expression: CONST_CAST LESS type-id • GREATER OPEN_PAREN expression CLOSE_PAREN

    GREATER  shift, and go to state 1625


State 1314

  335 expression: expression • COMMA assignment-expression
  877 postfix-expression: TYPEID OPEN_PAREN expression • CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 1626
    COMMA        shift, and go to state 1029


State 1315

  878 postfix-expression: TYPEID OPEN_PAREN type-id • CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 1627


State 1316

  1122 unary-expression: SIZEOF OPEN_PAREN type-id • CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 1628


State 1317

  1123 unary-expression: SIZEOF ELLIPSIS OPEN_PAREN • IDENTIFIER CLOSE_PAREN

    IDENTIFIER  shift, and go to state 1629


State 1318

  1124 unary-expression: ALIGNOF OPEN_PAREN type-id • CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 1630


State 1319

   11 additive-expression: additive-expression PLUS multiplicative-expression •
  640 multiplicative-expression: multiplicative-expression • MULT pm-expression
  641                          | multiplicative-expression • DIV pm-expression
  642                          | multiplicative-expression • MOD pm-expression

    MULT  shift, and go to state 905
    DIV   shift, and go to state 906
    MOD   shift, and go to state 907

    $default  reduce using rule 11 (additive-expression)


State 1320

   12 additive-expression: additive-expression MINUS multiplicative-expression •
  640 multiplicative-expression: multiplicative-expression • MULT pm-expression
  641                          | multiplicative-expression • DIV pm-expression
  642                          | multiplicative-expression • MOD pm-expression

    MULT  shift, and go to state 905
    DIV   shift, and go to state 906
    MOD   shift, and go to state 907

    $default  reduce using rule 12 (additive-expression)


State 1321

   20 and-expression: and-expression AND equality-expression •
  305 equality-expression: equality-expression • EQ_EQ relational-expression
  306                    | equality-expression • NOT_EQ relational-expression

    EQ_EQ   shift, and go to state 854
    NOT_EQ  shift, and go to state 855

    $default  reduce using rule 20 (and-expression)


State 1322

   94 binary-literal: binary-literal SINGLE_QUOTE binary-digit •

    $default  reduce using rule 94 (binary-literal)


State 1323

  502 integer-suffix: long-long-suffix unsigned-suffix •

    $default  reduce using rule 502 (integer-suffix)


State 1324

  500 integer-suffix: long-suffix unsigned-suffix •

    $default  reduce using rule 500 (integer-suffix)


State 1325

  504 integer-suffix: size-suffix unsigned-suffix •

    $default  reduce using rule 504 (integer-suffix)


State 1326

  496 integer-suffix: unsigned-suffix long-long-suffix •

    $default  reduce using rule 496 (integer-suffix)


State 1327

  494 integer-suffix: unsigned-suffix long-suffix •

    $default  reduce using rule 494 (integer-suffix)


State 1328

  498 integer-suffix: unsigned-suffix size-suffix •

    $default  reduce using rule 498 (integer-suffix)


State 1329

  155 compare-expression: compare-expression SPACESHIP shift-expression •
  953 shift-expression: shift-expression • LSHIFT additive-expression
  954                 | shift-expression • RSHIFT additive-expression

    LSHIFT  shift, and go to state 932
    RSHIFT  shift, and go to state 933

    $default  reduce using rule 155 (compare-expression)


State 1330

   18 alignment-specifier: ALIGNAS OPEN_PAREN constant-expression ELLIPSIS CLOSE_PAREN •

    $default  reduce using rule 18 (alignment-specifier)


State 1331

  197 decimal-literal: decimal-literal SINGLE_QUOTE digit •

    $default  reduce using rule 197 (decimal-literal)


State 1332

  261 digit-sequence: digit-sequence SINGLE_QUOTE digit •

    $default  reduce using rule 261 (digit-sequence)


State 1333

  260 digit-sequence: digit-sequence • digit
  261               | digit-sequence • SINGLE_QUOTE digit
  387 fractional-constant: digit-sequence DOT digit-sequence •

    SINGLE_QUOTE  shift, and go to state 847
    '0'           shift, and go to state 789
    '1'           shift, and go to state 790
    '2'           shift, and go to state 791
    '3'           shift, and go to state 792
    '4'           shift, and go to state 793
    '5'           shift, and go to state 794
    '6'           shift, and go to state 795
    '7'           shift, and go to state 796
    '8'           shift, and go to state 797
    '9'           shift, and go to state 798

    $default  reduce using rule 387 (fractional-constant)

    digit  go to state 851


State 1334

  955 sign: PLUS •

    $default  reduce using rule 955 (sign)


State 1335

  956 sign: MINUS •

    $default  reduce using rule 956 (sign)


State 1336

  260 digit-sequence: digit-sequence • digit
  261               | digit-sequence • SINGLE_QUOTE digit
  324 exponent-part: 'e' digit-sequence •

    SINGLE_QUOTE  shift, and go to state 847
    '0'           shift, and go to state 789
    '1'           shift, and go to state 790
    '2'           shift, and go to state 791
    '3'           shift, and go to state 792
    '4'           shift, and go to state 793
    '5'           shift, and go to state 794
    '6'           shift, and go to state 795
    '7'           shift, and go to state 796
    '8'           shift, and go to state 797
    '9'           shift, and go to state 798

    $default  reduce using rule 324 (exponent-part)

    digit  go to state 851


State 1337

  325 exponent-part: 'e' sign • digit-sequence

    '0'  shift, and go to state 789
    '1'  shift, and go to state 790
    '2'  shift, and go to state 791
    '3'  shift, and go to state 792
    '4'  shift, and go to state 793
    '5'  shift, and go to state 794
    '6'  shift, and go to state 795
    '7'  shift, and go to state 796
    '8'  shift, and go to state 797
    '9'  shift, and go to state 798

    digit           go to state 412
    digit-sequence  go to state 1631


State 1338

  260 digit-sequence: digit-sequence • digit
  261               | digit-sequence • SINGLE_QUOTE digit
  326 exponent-part: 'E' digit-sequence •

    SINGLE_QUOTE  shift, and go to state 847
    '0'           shift, and go to state 789
    '1'           shift, and go to state 790
    '2'           shift, and go to state 791
    '3'           shift, and go to state 792
    '4'           shift, and go to state 793
    '5'           shift, and go to state 794
    '6'           shift, and go to state 795
    '7'           shift, and go to state 796
    '8'           shift, and go to state 797
    '9'           shift, and go to state 798

    $default  reduce using rule 326 (exponent-part)

    digit  go to state 851


State 1339

  327 exponent-part: 'E' sign • digit-sequence

    '0'  shift, and go to state 789
    '1'  shift, and go to state 790
    '2'  shift, and go to state 791
    '3'  shift, and go to state 792
    '4'  shift, and go to state 793
    '5'  shift, and go to state 794
    '6'  shift, and go to state 795
    '7'  shift, and go to state 796
    '8'  shift, and go to state 797
    '9'  shift, and go to state 798

    digit           go to state 412
    digit-sequence  go to state 1632


State 1340

  194 decimal-floating-point-literal: digit-sequence exponent-part floating-point-suffix •

    $default  reduce using rule 194 (decimal-floating-point-literal)


State 1341

  1152 user-defined-floating-point-literal: digit-sequence exponent-part ud-suffix •

    $default  reduce using rule 1152 (user-defined-floating-point-literal)


State 1342

  117 c-char-sequence: c-char-sequence • c-char
  126 character-literal: encoding-prefix SINGLE_QUOTE c-char-sequence • SINGLE_QUOTE

    BASIC_C_CHAR  shift, and go to state 780
    SINGLE_QUOTE  shift, and go to state 1633
    ESCAPE        shift, and go to state 486
    ESCAPE_LX     shift, and go to state 488
    ESCAPE_LU     shift, and go to state 489
    ESCAPE_HU     shift, and go to state 490

    basic-c-char                 go to state 781
    c-char                       go to state 1284
    conditional-escape-sequence  go to state 492
    escape-sequence              go to state 784
    hexadecimal-escape-sequence  go to state 494
    numeric-escape-sequence      go to state 495
    octal-escape-sequence        go to state 496
    simple-escape-sequence       go to state 499
    universal-character-name     go to state 785


State 1343

  305 equality-expression: equality-expression EQ_EQ relational-expression •
  917 relational-expression: relational-expression • LESS compare-expression
  918                      | relational-expression • GREATER compare-expression
  919                      | relational-expression • LESS_EQ compare-expression
  920                      | relational-expression • GREATER_EQ compare-expression

    LESS        shift, and go to state 928
    GREATER     shift, and go to state 929
    LESS_EQ     shift, and go to state 930
    GREATER_EQ  shift, and go to state 931

    GREATER   [reduce using rule 305 (equality-expression)]
    $default  reduce using rule 305 (equality-expression)


State 1344

  306 equality-expression: equality-expression NOT_EQ relational-expression •
  917 relational-expression: relational-expression • LESS compare-expression
  918                      | relational-expression • GREATER compare-expression
  919                      | relational-expression • LESS_EQ compare-expression
  920                      | relational-expression • GREATER_EQ compare-expression

    LESS        shift, and go to state 928
    GREATER     shift, and go to state 929
    LESS_EQ     shift, and go to state 930
    GREATER_EQ  shift, and go to state 931

    GREATER   [reduce using rule 306 (equality-expression)]
    $default  reduce using rule 306 (equality-expression)


State 1345

   20 and-expression: and-expression • AND equality-expression
  318 exclusive-or-expression: exclusive-or-expression XOR and-expression •

    AND  shift, and go to state 821

    $default  reduce using rule 318 (exclusive-or-expression)


State 1346

  192 decimal-floating-point-literal: fractional-constant exponent-part floating-point-suffix •

    $default  reduce using rule 192 (decimal-floating-point-literal)


State 1347

  1151 user-defined-floating-point-literal: fractional-constant exponent-part ud-suffix •

    $default  reduce using rule 1151 (user-defined-floating-point-literal)


State 1348

  445 hexadecimal-digit-sequence: hexadecimal-digit-sequence • hexadecimal-digit
  446                           | hexadecimal-digit-sequence • SINGLE_QUOTE hexadecimal-digit
  454 hexadecimal-fractional-constant: DOT hexadecimal-digit-sequence •

    SINGLE_QUOTE  shift, and go to state 1349
    '0'           shift, and go to state 867
    '1'           shift, and go to state 868
    '2'           shift, and go to state 869
    '3'           shift, and go to state 870
    '4'           shift, and go to state 871
    '5'           shift, and go to state 872
    '6'           shift, and go to state 873
    '7'           shift, and go to state 874
    '8'           shift, and go to state 875
    '9'           shift, and go to state 876
    'e'           shift, and go to state 877
    'E'           shift, and go to state 878
    'f'           shift, and go to state 879
    'F'           shift, and go to state 880
    'a'           shift, and go to state 881
    'b'           shift, and go to state 882
    'c'           shift, and go to state 883
    'd'           shift, and go to state 884
    'A'           shift, and go to state 885
    'B'           shift, and go to state 886
    'C'           shift, and go to state 887
    'D'           shift, and go to state 888

    $default  reduce using rule 454 (hexadecimal-fractional-constant)

    hexadecimal-digit  go to state 1354


State 1349

  446 hexadecimal-digit-sequence: hexadecimal-digit-sequence SINGLE_QUOTE • hexadecimal-digit

    '0'  shift, and go to state 867
    '1'  shift, and go to state 868
    '2'  shift, and go to state 869
    '3'  shift, and go to state 870
    '4'  shift, and go to state 871
    '5'  shift, and go to state 872
    '6'  shift, and go to state 873
    '7'  shift, and go to state 874
    '8'  shift, and go to state 875
    '9'  shift, and go to state 876
    'e'  shift, and go to state 877
    'E'  shift, and go to state 878
    'f'  shift, and go to state 879
    'F'  shift, and go to state 880
    'a'  shift, and go to state 881
    'b'  shift, and go to state 882
    'c'  shift, and go to state 883
    'd'  shift, and go to state 884
    'A'  shift, and go to state 885
    'B'  shift, and go to state 886
    'C'  shift, and go to state 887
    'D'  shift, and go to state 888

    hexadecimal-digit  go to state 1634


State 1350

  453 hexadecimal-fractional-constant: hexadecimal-digit-sequence DOT • hexadecimal-digit-sequence
  455                                | hexadecimal-digit-sequence DOT •

    '0'  shift, and go to state 867
    '1'  shift, and go to state 868
    '2'  shift, and go to state 869
    '3'  shift, and go to state 870
    '4'  shift, and go to state 871
    '5'  shift, and go to state 872
    '6'  shift, and go to state 873
    '7'  shift, and go to state 874
    '8'  shift, and go to state 875
    '9'  shift, and go to state 876
    'e'  shift, and go to state 877
    'E'  shift, and go to state 878
    'f'  shift, and go to state 879
    'F'  shift, and go to state 880
    'a'  shift, and go to state 881
    'b'  shift, and go to state 882
    'c'  shift, and go to state 883
    'd'  shift, and go to state 884
    'A'  shift, and go to state 885
    'B'  shift, and go to state 886
    'C'  shift, and go to state 887
    'D'  shift, and go to state 888

    $default  reduce using rule 455 (hexadecimal-fractional-constant)

    hexadecimal-digit           go to state 889
    hexadecimal-digit-sequence  go to state 1635


State 1351

   87 binary-exponent-part: 'p' • digit-sequence
   88                     | 'p' • sign digit-sequence

    PLUS   shift, and go to state 1334
    MINUS  shift, and go to state 1335
    '0'    shift, and go to state 789
    '1'    shift, and go to state 790
    '2'    shift, and go to state 791
    '3'    shift, and go to state 792
    '4'    shift, and go to state 793
    '5'    shift, and go to state 794
    '6'    shift, and go to state 795
    '7'    shift, and go to state 796
    '8'    shift, and go to state 797
    '9'    shift, and go to state 798

    digit           go to state 412
    digit-sequence  go to state 1636
    sign            go to state 1637


State 1352

   89 binary-exponent-part: 'P' • digit-sequence
   90                     | 'P' • sign digit-sequence

    PLUS   shift, and go to state 1334
    MINUS  shift, and go to state 1335
    '0'    shift, and go to state 789
    '1'    shift, and go to state 790
    '2'    shift, and go to state 791
    '3'    shift, and go to state 792
    '4'    shift, and go to state 793
    '5'    shift, and go to state 794
    '6'    shift, and go to state 795
    '7'    shift, and go to state 796
    '8'    shift, and go to state 797
    '9'    shift, and go to state 798

    digit           go to state 412
    digit-sequence  go to state 1638
    sign            go to state 1639


State 1353

  451 hexadecimal-floating-point-literal: hexadecimal-prefix hexadecimal-digit-sequence binary-exponent-part •
  452                                   | hexadecimal-prefix hexadecimal-digit-sequence binary-exponent-part • floating-point-suffix
  1154 user-defined-floating-point-literal: hexadecimal-prefix hexadecimal-digit-sequence binary-exponent-part • ud-suffix

    IDENTIFIER  shift, and go to state 822
    'L'         shift, and go to state 857
    'f'         shift, and go to state 858
    'l'         shift, and go to state 859
    'F'         shift, and go to state 860

    IDENTIFIER  [reduce using rule 451 (hexadecimal-floating-point-literal)]
    $default    reduce using rule 451 (hexadecimal-floating-point-literal)

    floating-point-suffix  go to state 1640
    ud-suffix              go to state 1641


State 1354

  445 hexadecimal-digit-sequence: hexadecimal-digit-sequence hexadecimal-digit •

    $default  reduce using rule 445 (hexadecimal-digit-sequence)


State 1355

  449 hexadecimal-floating-point-literal: hexadecimal-prefix hexadecimal-fractional-constant binary-exponent-part •
  450                                   | hexadecimal-prefix hexadecimal-fractional-constant binary-exponent-part • floating-point-suffix
  1153 user-defined-floating-point-literal: hexadecimal-prefix hexadecimal-fractional-constant binary-exponent-part • ud-suffix

    IDENTIFIER  shift, and go to state 822
    'L'         shift, and go to state 857
    'f'         shift, and go to state 858
    'l'         shift, and go to state 859
    'F'         shift, and go to state 860

    IDENTIFIER  [reduce using rule 449 (hexadecimal-floating-point-literal)]
    $default    reduce using rule 449 (hexadecimal-floating-point-literal)

    floating-point-suffix  go to state 1642
    ud-suffix              go to state 1643


State 1356

  318 exclusive-or-expression: exclusive-or-expression • XOR and-expression
  464 inclusive-or-expression: inclusive-or-expression OR exclusive-or-expression •

    XOR  shift, and go to state 856

    $default  reduce using rule 464 (inclusive-or-expression)


State 1357

  529 lambda-declarator: OPEN_PAREN parameter-declaration-clause • CLOSE_PAREN lambda-specifiers
  530                  | OPEN_PAREN parameter-declaration-clause • CLOSE_PAREN lambda-specifiers requires-clause

    CLOSE_PAREN  shift, and go to state 1644


State 1358

  693 noexcept-specifier: NOEXCEPT OPEN_PAREN • constant-expression CLOSE_PAREN

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 407
    constant-expression                  go to state 1645
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 430
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 1359

  532 lambda-expression: lambda-introducer LESS template-parameter-list • GREATER lambda-declarator compound-statement
  533                  | lambda-introducer LESS template-parameter-list • GREATER requires-clause lambda-declarator compound-statement
  1056 template-parameter-list: template-parameter-list • COMMA template-parameter

    COMMA    shift, and go to state 977
    GREATER  shift, and go to state 1646


State 1360

  548 lambda-specifiers: attribute-specifier-seq trailing-return-type •

    $default  reduce using rule 548 (lambda-specifiers)


State 1361

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  539 lambda-specifiers: decl-specifier-seq attribute-specifier-seq •
  547                  | decl-specifier-seq attribute-specifier-seq • trailing-return-type

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10
    DEREF        shift, and go to state 736

    $default  reduce using rule 539 (lambda-specifiers)

    alignment-specifier   go to state 57
    attribute-specifier   go to state 260
    trailing-return-type  go to state 1647


State 1362

  537 lambda-specifiers: decl-specifier-seq noexcept-specifier •
  541                  | decl-specifier-seq noexcept-specifier • attribute-specifier-seq
  545                  | decl-specifier-seq noexcept-specifier • trailing-return-type
  549                  | decl-specifier-seq noexcept-specifier • attribute-specifier-seq trailing-return-type

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10
    DEREF        shift, and go to state 736

    $default  reduce using rule 537 (lambda-specifiers)

    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 1648
    trailing-return-type     go to state 1649


State 1363

  543 lambda-specifiers: decl-specifier-seq trailing-return-type •

    $default  reduce using rule 543 (lambda-specifiers)


State 1364

  531 lambda-expression: lambda-introducer lambda-declarator compound-statement •

    $default  reduce using rule 531 (lambda-expression)


State 1365

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  542 lambda-specifiers: noexcept-specifier attribute-specifier-seq •
  550                  | noexcept-specifier attribute-specifier-seq • trailing-return-type

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10
    DEREF        shift, and go to state 736

    $default  reduce using rule 542 (lambda-specifiers)

    alignment-specifier   go to state 57
    attribute-specifier   go to state 260
    trailing-return-type  go to state 1650


State 1366

  546 lambda-specifiers: noexcept-specifier trailing-return-type •

    $default  reduce using rule 546 (lambda-specifiers)


State 1367

  464 inclusive-or-expression: inclusive-or-expression • OR exclusive-or-expression
  564 logical-and-expression: logical-and-expression AND_AND inclusive-or-expression •

    OR  shift, and go to state 892

    $default  reduce using rule 564 (logical-and-expression)


State 1368

  170 conditional-expression: logical-or-expression QUERY expression • COLON assignment-expression
  335 expression: expression • COMMA assignment-expression

    COMMA  shift, and go to state 1029
    COLON  shift, and go to state 1651


State 1369

  564 logical-and-expression: logical-and-expression • AND_AND inclusive-or-expression
  566 logical-or-expression: logical-or-expression OR_OR logical-and-expression •

    AND_AND  shift, and go to state 902

    $default  reduce using rule 566 (logical-or-expression)


State 1370

  640 multiplicative-expression: multiplicative-expression MULT pm-expression •
  853 pm-expression: pm-expression • DOT_STAR cast-expression
  854              | pm-expression • DEREF_STAR cast-expression

    DOT_STAR    shift, and go to state 920
    DEREF_STAR  shift, and go to state 921

    $default  reduce using rule 640 (multiplicative-expression)


State 1371

  641 multiplicative-expression: multiplicative-expression DIV pm-expression •
  853 pm-expression: pm-expression • DOT_STAR cast-expression
  854              | pm-expression • DEREF_STAR cast-expression

    DOT_STAR    shift, and go to state 920
    DEREF_STAR  shift, and go to state 921

    $default  reduce using rule 641 (multiplicative-expression)


State 1372

  642 multiplicative-expression: multiplicative-expression MOD pm-expression •
  853 pm-expression: pm-expression • DOT_STAR cast-expression
  854              | pm-expression • DEREF_STAR cast-expression

    DOT_STAR    shift, and go to state 920
    DEREF_STAR  shift, and go to state 921

    $default  reduce using rule 642 (multiplicative-expression)


State 1373

  750 octal-literal: octal-literal SINGLE_QUOTE octal-digit •

    $default  reduce using rule 750 (octal-literal)


State 1374

  853 pm-expression: pm-expression DOT_STAR cast-expression •

    $default  reduce using rule 853 (pm-expression)


State 1375

  854 pm-expression: pm-expression DEREF_STAR cast-expression •

    $default  reduce using rule 854 (pm-expression)


State 1376

  859 postfix-expression: postfix-expression OPEN_PAREN CLOSE_PAREN •

    $default  reduce using rule 859 (postfix-expression)


State 1377

  860 postfix-expression: postfix-expression OPEN_PAREN expression-list • CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 1652


State 1378

  857 postfix-expression: postfix-expression OPEN_SQUARE CLOSE_SQUARE •

    $default  reduce using rule 857 (postfix-expression)


State 1379

  858 postfix-expression: postfix-expression OPEN_SQUARE expression-list • CLOSE_SQUARE

    CLOSE_SQUARE  shift, and go to state 1653


State 1380

  870 postfix-expression: postfix-expression DEREF TEMPLATE • id-expression

    IDENTIFIER  shift, and go to state 147
    SCOPE       shift, and go to state 9
    OPERATOR    shift, and go to state 17
    DECLTYPE    shift, and go to state 134
    COMPL       shift, and go to state 35

    class-name              go to state 65
    conversion-function-id  go to state 68
    decltype-specifier      go to state 138
    enum-name               go to state 84
    id-expression           go to state 1654
    literal-operator-id     go to state 95
    namespace-alias         go to state 99
    namespace-name          go to state 102
    nested-name-specifier   go to state 152
    operator-function-id    go to state 108
    qualified-id            go to state 112
    simple-template-id      go to state 114
    template-id             go to state 120
    template-name           go to state 142
    type-name               go to state 143
    typedef-name            go to state 126
    unqualified-id          go to state 129


State 1381

  869 postfix-expression: postfix-expression DEREF id-expression •

    $default  reduce using rule 869 (postfix-expression)


State 1382

  868 postfix-expression: postfix-expression DOT TEMPLATE • id-expression

    IDENTIFIER  shift, and go to state 147
    SCOPE       shift, and go to state 9
    OPERATOR    shift, and go to state 17
    DECLTYPE    shift, and go to state 134
    COMPL       shift, and go to state 35

    class-name              go to state 65
    conversion-function-id  go to state 68
    decltype-specifier      go to state 138
    enum-name               go to state 84
    id-expression           go to state 1655
    literal-operator-id     go to state 95
    namespace-alias         go to state 99
    namespace-name          go to state 102
    nested-name-specifier   go to state 152
    operator-function-id    go to state 108
    qualified-id            go to state 112
    simple-template-id      go to state 114
    template-id             go to state 120
    template-name           go to state 142
    type-name               go to state 143
    typedef-name            go to state 126
    unqualified-id          go to state 129


State 1383

  867 postfix-expression: postfix-expression DOT id-expression •

    $default  reduce using rule 867 (postfix-expression)


State 1384

  155 compare-expression: compare-expression • SPACESHIP shift-expression
  917 relational-expression: relational-expression LESS compare-expression •

    SPACESHIP  shift, and go to state 840

    $default  reduce using rule 917 (relational-expression)


State 1385

  155 compare-expression: compare-expression • SPACESHIP shift-expression
  918 relational-expression: relational-expression GREATER compare-expression •

    SPACESHIP  shift, and go to state 840

    $default  reduce using rule 918 (relational-expression)


State 1386

  155 compare-expression: compare-expression • SPACESHIP shift-expression
  919 relational-expression: relational-expression LESS_EQ compare-expression •

    SPACESHIP  shift, and go to state 840

    $default  reduce using rule 919 (relational-expression)


State 1387

  155 compare-expression: compare-expression • SPACESHIP shift-expression
  920 relational-expression: relational-expression GREATER_EQ compare-expression •

    SPACESHIP  shift, and go to state 840

    $default  reduce using rule 920 (relational-expression)


State 1388

   11 additive-expression: additive-expression • PLUS multiplicative-expression
   12                    | additive-expression • MINUS multiplicative-expression
  953 shift-expression: shift-expression LSHIFT additive-expression •

    PLUS   shift, and go to state 819
    MINUS  shift, and go to state 820

    $default  reduce using rule 953 (shift-expression)


State 1389

   11 additive-expression: additive-expression • PLUS multiplicative-expression
   12                    | additive-expression • MINUS multiplicative-expression
  954 shift-expression: shift-expression RSHIFT additive-expression •

    PLUS   shift, and go to state 819
    MINUS  shift, and go to state 820

    $default  reduce using rule 954 (shift-expression)


State 1390

  861 postfix-expression: simple-type-specifier OPEN_PAREN CLOSE_PAREN •

    $default  reduce using rule 861 (postfix-expression)


State 1391

  862 postfix-expression: simple-type-specifier OPEN_PAREN expression-list • CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 1656


State 1392

  112 braced-init-list: OPEN_BRACE CLOSE_BRACE •

    $default  reduce using rule 112 (braced-init-list)


State 1393

   16 alignment-specifier: ALIGNAS OPEN_PAREN type-id ELLIPSIS CLOSE_PAREN •

    $default  reduce using rule 16 (alignment-specifier)


State 1394

   50 attribute-specifier: OPEN_SQUARE • OPEN_SQUARE attribute-list CLOSE_SQUARE CLOSE_SQUARE
   51                    | OPEN_SQUARE • OPEN_SQUARE attribute-using-prefix attribute-list CLOSE_SQUARE CLOSE_SQUARE
  707 noptr-abstract-declarator: OPEN_SQUARE • CLOSE_SQUARE
  709                          | OPEN_SQUARE • constant-expression CLOSE_SQUARE
  711                          | OPEN_SQUARE • CLOSE_SQUARE attribute-specifier-seq
  713                          | OPEN_SQUARE • constant-expression CLOSE_SQUARE attribute-specifier-seq

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 1657
    CLOSE_SQUARE      shift, and go to state 1400
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 407
    constant-expression                  go to state 1401
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 430
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 1395

  659 nested-name-specifier: nested-name-specifier • IDENTIFIER SCOPE
  660                      | nested-name-specifier • simple-template-id SCOPE
  661                      | nested-name-specifier • TEMPLATE simple-template-id SCOPE
  901 ptr-operator: nested-name-specifier • MULT
  902             | nested-name-specifier • MULT attribute-specifier-seq
  903             | nested-name-specifier • MULT cv-qualifier-seq
  904             | nested-name-specifier • MULT attribute-specifier-seq cv-qualifier-seq
  985 simple-type-specifier: nested-name-specifier • type-name
  987                      | nested-name-specifier • TEMPLATE simple-template-id
  990                      | nested-name-specifier • template-name
  1070 type-constraint: nested-name-specifier • concept-name
  1072                | nested-name-specifier • concept-name LESS GREATER
  1074                | nested-name-specifier • concept-name LESS template-argument-list GREATER

    IDENTIFIER  shift, and go to state 508
    TEMPLATE    shift, and go to state 509
    MULT        shift, and go to state 322

    class-name          go to state 65
    concept-name        go to state 323
    enum-name           go to state 84
    simple-template-id  go to state 510
    template-name       go to state 325
    type-name           go to state 326
    typedef-name        go to state 126


State 1396

  704 noptr-abstract-declarator: noptr-abstract-declarator • parameters-and-qualifiers
  706                          | noptr-abstract-declarator • OPEN_SQUARE CLOSE_SQUARE
  708                          | noptr-abstract-declarator • OPEN_SQUARE constant-expression CLOSE_SQUARE
  710                          | noptr-abstract-declarator • OPEN_SQUARE CLOSE_SQUARE attribute-specifier-seq
  712                          | noptr-abstract-declarator • OPEN_SQUARE constant-expression CLOSE_SQUARE attribute-specifier-seq
  888 ptr-abstract-declarator: noptr-abstract-declarator •

    OPEN_PAREN   shift, and go to state 328
    OPEN_SQUARE  shift, and go to state 1402

    OPEN_PAREN  [reduce using rule 888 (ptr-abstract-declarator)]
    $default    reduce using rule 888 (ptr-abstract-declarator)

    parameters-and-qualifiers  go to state 1658


State 1397

  705 noptr-abstract-declarator: parameters-and-qualifiers •

    $default  reduce using rule 705 (noptr-abstract-declarator)


State 1398

  714 noptr-abstract-declarator: OPEN_PAREN ptr-abstract-declarator • CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 1659


State 1399

  889 ptr-abstract-declarator: ptr-operator •
  890                        | ptr-operator • ptr-abstract-declarator

    IDENTIFIER   shift, and go to state 253
    OPEN_PAREN   shift, and go to state 939
    AND          shift, and go to state 7
    SCOPE        shift, and go to state 9
    OPEN_SQUARE  shift, and go to state 941
    AND_AND      shift, and go to state 16
    DECLTYPE     shift, and go to state 134
    MULT         shift, and go to state 31

    $default  reduce using rule 889 (ptr-abstract-declarator)

    class-name                 go to state 65
    decltype-specifier         go to state 138
    enum-name                  go to state 84
    namespace-alias            go to state 99
    namespace-name             go to state 102
    nested-name-specifier      go to state 517
    noptr-abstract-declarator  go to state 1396
    parameters-and-qualifiers  go to state 1397
    ptr-abstract-declarator    go to state 1408
    ptr-operator               go to state 1399
    simple-template-id         go to state 141
    template-name              go to state 142
    type-name                  go to state 143
    typedef-name               go to state 126


State 1400

  707 noptr-abstract-declarator: OPEN_SQUARE CLOSE_SQUARE •
  711                          | OPEN_SQUARE CLOSE_SQUARE • attribute-specifier-seq

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    OPEN_SQUARE  [reduce using rule 707 (noptr-abstract-declarator)]
    $default     reduce using rule 707 (noptr-abstract-declarator)

    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 1660


State 1401

  709 noptr-abstract-declarator: OPEN_SQUARE constant-expression • CLOSE_SQUARE
  713                          | OPEN_SQUARE constant-expression • CLOSE_SQUARE attribute-specifier-seq

    CLOSE_SQUARE  shift, and go to state 1661


State 1402

  706 noptr-abstract-declarator: noptr-abstract-declarator OPEN_SQUARE • CLOSE_SQUARE
  708                          | noptr-abstract-declarator OPEN_SQUARE • constant-expression CLOSE_SQUARE
  710                          | noptr-abstract-declarator OPEN_SQUARE • CLOSE_SQUARE attribute-specifier-seq
  712                          | noptr-abstract-declarator OPEN_SQUARE • constant-expression CLOSE_SQUARE attribute-specifier-seq

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CLOSE_SQUARE      shift, and go to state 1662
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 407
    constant-expression                  go to state 1663
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 430
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 1403

    2 abstract-declarator: noptr-abstract-declarator parameters-and-qualifiers • trailing-return-type
  704 noptr-abstract-declarator: noptr-abstract-declarator parameters-and-qualifiers •

    DEREF  shift, and go to state 736

    $default  reduce using rule 704 (noptr-abstract-declarator)

    trailing-return-type  go to state 1664


State 1404

  716 noptr-abstract-pack-declarator: noptr-abstract-pack-declarator OPEN_SQUARE • CLOSE_SQUARE
  717                               | noptr-abstract-pack-declarator OPEN_SQUARE • constant-expression CLOSE_SQUARE
  718                               | noptr-abstract-pack-declarator OPEN_SQUARE • CLOSE_SQUARE attribute-specifier-seq
  719                               | noptr-abstract-pack-declarator OPEN_SQUARE • constant-expression CLOSE_SQUARE attribute-specifier-seq

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CLOSE_SQUARE      shift, and go to state 1665
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 407
    constant-expression                  go to state 1666
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 430
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 1405

  715 noptr-abstract-pack-declarator: noptr-abstract-pack-declarator parameters-and-qualifiers •

    $default  reduce using rule 715 (noptr-abstract-pack-declarator)


State 1406

    3 abstract-declarator: parameters-and-qualifiers trailing-return-type •

    $default  reduce using rule 3 (abstract-declarator)


State 1407

    6 abstract-pack-declarator: ptr-operator abstract-pack-declarator •

    $default  reduce using rule 6 (abstract-pack-declarator)


State 1408

  890 ptr-abstract-declarator: ptr-operator ptr-abstract-declarator •

    $default  reduce using rule 890 (ptr-abstract-declarator)


State 1409

  863 postfix-expression: typename-specifier OPEN_PAREN CLOSE_PAREN •

    $default  reduce using rule 863 (postfix-expression)


State 1410

  864 postfix-expression: typename-specifier OPEN_PAREN expression-list • CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 1667


State 1411

   22 asm-declaration: ASM OPEN_PAREN string-literal CLOSE_PAREN SEMICOLON •

    $default  reduce using rule 22 (asm-declaration)


State 1412

   57 attribute-using-prefix: USING attribute-namespace COLON •

    $default  reduce using rule 57 (attribute-using-prefix)


State 1413

   45 attribute-list: attribute-list COMMA attribute •
   47               | attribute-list COMMA attribute • ELLIPSIS

    ELLIPSIS  shift, and go to state 1668

    $default  reduce using rule 45 (attribute-list)


State 1414

   50 attribute-specifier: OPEN_SQUARE OPEN_SQUARE attribute-list CLOSE_SQUARE CLOSE_SQUARE •

    $default  reduce using rule 50 (attribute-specifier)


State 1415

   49 attribute-scoped-token: attribute-namespace SCOPE IDENTIFIER •

    $default  reduce using rule 49 (attribute-scoped-token)


State 1416

   59 balanced-token: OPEN_PAREN • CLOSE_PAREN
   60               | OPEN_PAREN • balanced-token-seq CLOSE_PAREN

    OPEN_PAREN      shift, and go to state 1416
    CLOSE_PAREN     shift, and go to state 1669
    OPEN_SQUARE     shift, and go to state 1418
    OPEN_BRACE      shift, and go to state 1419
    BALANCED_TOKEN  shift, and go to state 1420

    balanced-token      go to state 1421
    balanced-token-seq  go to state 1670


State 1417

   40 attribute-argument-clause: OPEN_PAREN CLOSE_PAREN •

    $default  reduce using rule 40 (attribute-argument-clause)


State 1418

   61 balanced-token: OPEN_SQUARE • CLOSE_SQUARE
   62               | OPEN_SQUARE • balanced-token-seq CLOSE_SQUARE

    OPEN_PAREN      shift, and go to state 1416
    OPEN_SQUARE     shift, and go to state 1418
    CLOSE_SQUARE    shift, and go to state 1671
    OPEN_BRACE      shift, and go to state 1419
    BALANCED_TOKEN  shift, and go to state 1420

    balanced-token      go to state 1421
    balanced-token-seq  go to state 1672


State 1419

   63 balanced-token: OPEN_BRACE • CLOSE_BRACE
   64               | OPEN_BRACE • balanced-token-seq CLOSE_BRACE

    OPEN_PAREN      shift, and go to state 1416
    OPEN_SQUARE     shift, and go to state 1418
    OPEN_BRACE      shift, and go to state 1419
    CLOSE_BRACE     shift, and go to state 1673
    BALANCED_TOKEN  shift, and go to state 1420

    balanced-token      go to state 1421
    balanced-token-seq  go to state 1674


State 1420

   65 balanced-token: BALANCED_TOKEN •

    $default  reduce using rule 65 (balanced-token)


State 1421

   66 balanced-token-seq: balanced-token •

    $default  reduce using rule 66 (balanced-token-seq)


State 1422

   41 attribute-argument-clause: OPEN_PAREN balanced-token-seq • CLOSE_PAREN
   67 balanced-token-seq: balanced-token-seq • balanced-token

    OPEN_PAREN      shift, and go to state 1416
    CLOSE_PAREN     shift, and go to state 1675
    OPEN_SQUARE     shift, and go to state 1418
    OPEN_BRACE      shift, and go to state 1419
    BALANCED_TOKEN  shift, and go to state 1420

    balanced-token  go to state 1676


State 1423

   51 attribute-specifier: OPEN_SQUARE OPEN_SQUARE attribute-using-prefix attribute-list CLOSE_SQUARE • CLOSE_SQUARE

    CLOSE_SQUARE  shift, and go to state 1677


State 1424

  821 parameter-declaration: THIS decl-specifier-seq EQ • initializer-clause

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 935
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 1134
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    braced-init-list                     go to state 1135
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    initializer-clause                   go to state 1678
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 1425

  817 parameter-declaration: THIS decl-specifier-seq abstract-declarator •
  825                      | THIS decl-specifier-seq abstract-declarator • EQ initializer-clause

    EQ  shift, and go to state 1679

    $default  reduce using rule 817 (parameter-declaration)


State 1426

  805 parameter-declaration: THIS decl-specifier-seq declarator •
  809                      | THIS decl-specifier-seq declarator • EQ initializer-clause

    EQ  shift, and go to state 1680

    $default  reduce using rule 805 (parameter-declaration)


State 1427

  804 parameter-declaration: attribute-specifier-seq THIS decl-specifier-seq • declarator
  808                      | attribute-specifier-seq THIS decl-specifier-seq • declarator EQ initializer-clause
  812                      | attribute-specifier-seq THIS decl-specifier-seq •
  816                      | attribute-specifier-seq THIS decl-specifier-seq • abstract-declarator
  820                      | attribute-specifier-seq THIS decl-specifier-seq • EQ initializer-clause
  824                      | attribute-specifier-seq THIS decl-specifier-seq • abstract-declarator EQ initializer-clause

    IDENTIFIER   shift, and go to state 147
    EQ           shift, and go to state 1681
    OPEN_PAREN   shift, and go to state 969
    ELLIPSIS     shift, and go to state 970
    AND          shift, and go to state 7
    SCOPE        shift, and go to state 9
    OPEN_SQUARE  shift, and go to state 941
    AND_AND      shift, and go to state 16
    OPERATOR     shift, and go to state 17
    DECLTYPE     shift, and go to state 134
    MULT         shift, and go to state 31
    COMPL        shift, and go to state 35

    ELLIPSIS  [reduce using rule 812 (parameter-declaration)]
    $default  reduce using rule 812 (parameter-declaration)

    abstract-declarator             go to state 1682
    abstract-pack-declarator        go to state 943
    class-name                      go to state 65
    conversion-function-id          go to state 68
    declarator                      go to state 1683
    declarator-id                   go to state 75
    decltype-specifier              go to state 138
    enum-name                       go to state 84
    id-expression                   go to state 93
    literal-operator-id             go to state 95
    namespace-alias                 go to state 99
    namespace-name                  go to state 102
    nested-name-specifier           go to state 148
    noptr-abstract-declarator       go to state 944
    noptr-abstract-pack-declarator  go to state 945
    noptr-declarator                go to state 106
    operator-function-id            go to state 108
    parameters-and-qualifiers       go to state 946
    ptr-abstract-declarator         go to state 947
    ptr-declarator                  go to state 110
    ptr-operator                    go to state 973
    qualified-id                    go to state 112
    simple-template-id              go to state 114
    template-id                     go to state 120
    template-name                   go to state 142
    type-name                       go to state 143
    typedef-name                    go to state 126
    unqualified-id                  go to state 129


State 1428

  818 parameter-declaration: attribute-specifier-seq decl-specifier-seq EQ • initializer-clause

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 935
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 1134
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    braced-init-list                     go to state 1135
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    initializer-clause                   go to state 1684
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 1429

  814 parameter-declaration: attribute-specifier-seq decl-specifier-seq abstract-declarator •
  822                      | attribute-specifier-seq decl-specifier-seq abstract-declarator • EQ initializer-clause

    EQ  shift, and go to state 1685

    $default  reduce using rule 814 (parameter-declaration)


State 1430

  802 parameter-declaration: attribute-specifier-seq decl-specifier-seq declarator •
  806                      | attribute-specifier-seq decl-specifier-seq declarator • EQ initializer-clause

    EQ  shift, and go to state 1686

    $default  reduce using rule 802 (parameter-declaration)


State 1431

  819 parameter-declaration: decl-specifier-seq EQ initializer-clause •

    $default  reduce using rule 819 (parameter-declaration)


State 1432

  228 declarator-id: ELLIPSIS • id-expression
  828 parameter-declaration-clause: ELLIPSIS •

    IDENTIFIER  shift, and go to state 147
    SCOPE       shift, and go to state 9
    OPERATOR    shift, and go to state 17
    DECLTYPE    shift, and go to state 134
    COMPL       shift, and go to state 35

    $default  reduce using rule 828 (parameter-declaration-clause)

    class-name              go to state 65
    conversion-function-id  go to state 68
    decltype-specifier      go to state 138
    enum-name               go to state 84
    id-expression           go to state 151
    literal-operator-id     go to state 95
    namespace-alias         go to state 99
    namespace-name          go to state 102
    nested-name-specifier   go to state 152
    operator-function-id    go to state 108
    qualified-id            go to state 112
    simple-template-id      go to state 114
    template-id             go to state 120
    template-name           go to state 142
    type-name               go to state 143
    typedef-name            go to state 126
    unqualified-id          go to state 129


State 1433

  889 ptr-abstract-declarator: ptr-operator •
  890                        | ptr-operator • ptr-abstract-declarator
  892 ptr-declarator: ptr-operator • ptr-declarator

    IDENTIFIER   shift, and go to state 147
    OPEN_PAREN   shift, and go to state 969
    ELLIPSIS     shift, and go to state 6
    AND          shift, and go to state 7
    SCOPE        shift, and go to state 9
    OPEN_SQUARE  shift, and go to state 941
    AND_AND      shift, and go to state 16
    OPERATOR     shift, and go to state 17
    DECLTYPE     shift, and go to state 134
    MULT         shift, and go to state 31
    COMPL        shift, and go to state 35

    $default  reduce using rule 889 (ptr-abstract-declarator)

    class-name                 go to state 65
    conversion-function-id     go to state 68
    declarator-id              go to state 75
    decltype-specifier         go to state 138
    enum-name                  go to state 84
    id-expression              go to state 93
    literal-operator-id        go to state 95
    namespace-alias            go to state 99
    namespace-name             go to state 102
    nested-name-specifier      go to state 148
    noptr-abstract-declarator  go to state 1396
    noptr-declarator           go to state 149
    operator-function-id       go to state 108
    parameters-and-qualifiers  go to state 1397
    ptr-abstract-declarator    go to state 1408
    ptr-declarator             go to state 332
    ptr-operator               go to state 1433
    qualified-id               go to state 112
    simple-template-id         go to state 114
    template-id                go to state 120
    template-name              go to state 142
    type-name                  go to state 143
    typedef-name               go to state 126
    unqualified-id             go to state 129


State 1434

  823 parameter-declaration: decl-specifier-seq abstract-declarator EQ • initializer-clause

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 935
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 1134
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    braced-init-list                     go to state 1135
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    initializer-clause                   go to state 1687
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 1435

  807 parameter-declaration: decl-specifier-seq declarator EQ • initializer-clause

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 935
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 1134
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    braced-init-list                     go to state 1135
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    initializer-clause                   go to state 1688
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 1436

  1095 type-parameter: template-head type-parameter-key IDENTIFIER •
  1098               | template-head type-parameter-key IDENTIFIER • EQ id-expression

    EQ  shift, and go to state 1689

    $default  reduce using rule 1095 (type-parameter)


State 1437

  1097 type-parameter: template-head type-parameter-key EQ • id-expression

    IDENTIFIER  shift, and go to state 147
    SCOPE       shift, and go to state 9
    OPERATOR    shift, and go to state 17
    DECLTYPE    shift, and go to state 134
    COMPL       shift, and go to state 35

    class-name              go to state 65
    conversion-function-id  go to state 68
    decltype-specifier      go to state 138
    enum-name               go to state 84
    id-expression           go to state 1690
    literal-operator-id     go to state 95
    namespace-alias         go to state 99
    namespace-name          go to state 102
    nested-name-specifier   go to state 152
    operator-function-id    go to state 108
    qualified-id            go to state 112
    simple-template-id      go to state 114
    template-id             go to state 120
    template-name           go to state 142
    type-name               go to state 143
    typedef-name            go to state 126
    unqualified-id          go to state 129


State 1438

  1094 type-parameter: template-head type-parameter-key ELLIPSIS •
  1096               | template-head type-parameter-key ELLIPSIS • IDENTIFIER

    IDENTIFIER  shift, and go to state 1691

    $default  reduce using rule 1094 (type-parameter)


State 1439

  1056 template-parameter-list: template-parameter-list COMMA template-parameter •

    $default  reduce using rule 1056 (template-parameter-list)


State 1440

  1046 template-head: TEMPLATE LESS template-parameter-list GREATER requires-clause •

    $default  reduce using rule 1046 (template-head)


State 1441

  1092 type-parameter: type-constraint IDENTIFIER EQ • type-id

    IDENTIFIER  shift, and go to state 162
    SCOPE       shift, and go to state 9
    CLASS       shift, and go to state 12
    STRUCT      shift, and go to state 13
    UNION       shift, and go to state 14
    CONST       shift, and go to state 18
    VOLATILE    shift, and go to state 19
    DECLTYPE    shift, and go to state 26
    ENUM        shift, and go to state 135
    AUTO        shift, and go to state 36
    CHAR        shift, and go to state 37
    CHAR8_T     shift, and go to state 38
    CHAR16_T    shift, and go to state 39
    CHAR32_T    shift, and go to state 40
    WCHAR_T     shift, and go to state 41
    BOOL        shift, and go to state 42
    SHORT       shift, and go to state 43
    INT         shift, and go to state 44
    LONG        shift, and go to state 45
    SIGNED      shift, and go to state 46
    UNSIGNED    shift, and go to state 47
    FLOAT       shift, and go to state 48
    DOUBLE      shift, and go to state 49
    VOID        shift, and go to state 50
    TYPENAME    shift, and go to state 55

    class-key                   go to state 209
    class-name                  go to state 65
    concept-name                go to state 67
    cv-qualifier                go to state 69
    decltype-specifier          go to state 76
    elaborated-enum-specifier   go to state 79
    elaborated-type-specifier   go to state 80
    enum-name                   go to state 84
    namespace-alias             go to state 99
    namespace-name              go to state 102
    nested-name-specifier       go to state 212
    placeholder-type-specifier  go to state 109
    simple-template-id          go to state 141
    simple-type-specifier       go to state 115
    template-name               go to state 215
    type-constraint             go to state 123
    type-id                     go to state 1692
    type-name                   go to state 124
    type-specifier              go to state 216
    type-specifier-seq          go to state 447
    typedef-name                go to state 126
    typename-specifier          go to state 127


State 1442

  1091 type-parameter: type-constraint EQ type-id •

    $default  reduce using rule 1091 (type-parameter)


State 1443

  1090 type-parameter: type-constraint ELLIPSIS IDENTIFIER •

    $default  reduce using rule 1090 (type-parameter)


State 1444

  1086 type-parameter: type-parameter-key IDENTIFIER EQ • type-id

    IDENTIFIER  shift, and go to state 162
    SCOPE       shift, and go to state 9
    CLASS       shift, and go to state 12
    STRUCT      shift, and go to state 13
    UNION       shift, and go to state 14
    CONST       shift, and go to state 18
    VOLATILE    shift, and go to state 19
    DECLTYPE    shift, and go to state 26
    ENUM        shift, and go to state 135
    AUTO        shift, and go to state 36
    CHAR        shift, and go to state 37
    CHAR8_T     shift, and go to state 38
    CHAR16_T    shift, and go to state 39
    CHAR32_T    shift, and go to state 40
    WCHAR_T     shift, and go to state 41
    BOOL        shift, and go to state 42
    SHORT       shift, and go to state 43
    INT         shift, and go to state 44
    LONG        shift, and go to state 45
    SIGNED      shift, and go to state 46
    UNSIGNED    shift, and go to state 47
    FLOAT       shift, and go to state 48
    DOUBLE      shift, and go to state 49
    VOID        shift, and go to state 50
    TYPENAME    shift, and go to state 55

    class-key                   go to state 209
    class-name                  go to state 65
    concept-name                go to state 67
    cv-qualifier                go to state 69
    decltype-specifier          go to state 76
    elaborated-enum-specifier   go to state 79
    elaborated-type-specifier   go to state 80
    enum-name                   go to state 84
    namespace-alias             go to state 99
    namespace-name              go to state 102
    nested-name-specifier       go to state 212
    placeholder-type-specifier  go to state 109
    simple-template-id          go to state 141
    simple-type-specifier       go to state 115
    template-name               go to state 215
    type-constraint             go to state 123
    type-id                     go to state 1693
    type-name                   go to state 124
    type-specifier              go to state 216
    type-specifier-seq          go to state 447
    typedef-name                go to state 126
    typename-specifier          go to state 127


State 1445

  1085 type-parameter: type-parameter-key EQ type-id •

    $default  reduce using rule 1085 (type-parameter)


State 1446

  1084 type-parameter: type-parameter-key ELLIPSIS IDENTIFIER •

    $default  reduce using rule 1084 (type-parameter)


State 1447

  746 octal-escape-sequence: ESCAPE octal-digit octal-digit •
  747                      | ESCAPE octal-digit octal-digit • octal-digit

    '0'  shift, and go to state 909
    '1'  shift, and go to state 910
    '2'  shift, and go to state 911
    '3'  shift, and go to state 912
    '4'  shift, and go to state 913
    '5'  shift, and go to state 914
    '6'  shift, and go to state 915
    '7'  shift, and go to state 916

    $default  reduce using rule 746 (octal-escape-sequence)

    octal-digit  go to state 1694


State 1448

  421 hex-quad: hexadecimal-digit hexadecimal-digit • hexadecimal-digit hexadecimal-digit

    '0'  shift, and go to state 867
    '1'  shift, and go to state 868
    '2'  shift, and go to state 869
    '3'  shift, and go to state 870
    '4'  shift, and go to state 871
    '5'  shift, and go to state 872
    '6'  shift, and go to state 873
    '7'  shift, and go to state 874
    '8'  shift, and go to state 875
    '9'  shift, and go to state 876
    'e'  shift, and go to state 877
    'E'  shift, and go to state 878
    'f'  shift, and go to state 879
    'F'  shift, and go to state 880
    'a'  shift, and go to state 881
    'b'  shift, and go to state 882
    'c'  shift, and go to state 883
    'd'  shift, and go to state 884
    'A'  shift, and go to state 885
    'B'  shift, and go to state 886
    'C'  shift, and go to state 887
    'D'  shift, and go to state 888

    hexadecimal-digit  go to state 1695


State 1449

  1135 universal-character-name: ESCAPE_HU hex-quad hex-quad •

    $default  reduce using rule 1135 (universal-character-name)


State 1450

  267 elaborated-type-specifier: class-key attribute-specifier-seq nested-name-specifier IDENTIFIER •
  659 nested-name-specifier: nested-name-specifier IDENTIFIER • SCOPE
  1052 template-name: IDENTIFIER •

    SCOPE  shift, and go to state 722

    SCOPE     [reduce using rule 267 (elaborated-type-specifier)]
    LESS      reduce using rule 267 (elaborated-type-specifier)
    LESS      [reduce using rule 1052 (template-name)]
    $default  reduce using rule 267 (elaborated-type-specifier)


State 1451

  1032 string-literal: encoding-prefix DOUBLE_QUOTE s-char-sequence DOUBLE_QUOTE •

    $default  reduce using rule 1032 (string-literal)


State 1452

  757 operator-function-id: OPERATOR overloadable-operator LESS template-argument-list GREATER •

    $default  reduce using rule 757 (operator-function-id)


State 1453

  643 named-namespace-definition: INLINE NAMESPACE IDENTIFIER OPEN_BRACE namespace-body • CLOSE_BRACE

    CLOSE_BRACE  shift, and go to state 1696


State 1454

  1136 unnamed-namespace-definition: INLINE NAMESPACE OPEN_BRACE namespace-body CLOSE_BRACE •

    $default  reduce using rule 1136 (unnamed-namespace-definition)


State 1455

  645 named-namespace-definition: INLINE NAMESPACE attribute-specifier-seq IDENTIFIER OPEN_BRACE • namespace-body CLOSE_BRACE

    USING          shift, and go to state 1
    IDENTIFIER     shift, and go to state 2
    SEMICOLON      shift, and go to state 3
    ALIGNAS        shift, and go to state 4
    OPEN_PAREN     shift, and go to state 5
    ELLIPSIS       shift, and go to state 6
    AND            shift, and go to state 7
    ASM            shift, and go to state 8
    SCOPE          shift, and go to state 9
    OPEN_SQUARE    shift, and go to state 10
    VIRTUAL        shift, and go to state 11
    CLASS          shift, and go to state 12
    STRUCT         shift, and go to state 13
    UNION          shift, and go to state 14
    TEMPLATE       shift, and go to state 15
    AND_AND        shift, and go to state 16
    OPERATOR       shift, and go to state 17
    CONST          shift, and go to state 18
    VOLATILE       shift, and go to state 19
    FRIEND         shift, and go to state 20
    TYPEDEF        shift, and go to state 21
    CONSTEXPR      shift, and go to state 22
    CONSTEVAL      shift, and go to state 23
    CONSTINIT      shift, and go to state 24
    INLINE         shift, and go to state 25
    DECLTYPE       shift, and go to state 26
    ENUM           shift, and go to state 27
    EXTERN         shift, and go to state 28
    EXPLICIT       shift, and go to state 29
    EXPORT         shift, and go to state 157
    MULT           shift, and go to state 31
    IMPORT         shift, and go to state 33
    NAMESPACE      shift, and go to state 34
    COMPL          shift, and go to state 35
    AUTO           shift, and go to state 36
    CHAR           shift, and go to state 37
    CHAR8_T        shift, and go to state 38
    CHAR16_T       shift, and go to state 39
    CHAR32_T       shift, and go to state 40
    WCHAR_T        shift, and go to state 41
    BOOL           shift, and go to state 42
    SHORT          shift, and go to state 43
    INT            shift, and go to state 44
    LONG           shift, and go to state 45
    SIGNED         shift, and go to state 46
    UNSIGNED       shift, and go to state 47
    FLOAT          shift, and go to state 48
    DOUBLE         shift, and go to state 49
    VOID           shift, and go to state 50
    STATIC_ASSERT  shift, and go to state 51
    STATIC         shift, and go to state 52
    THREAD_LOCAL   shift, and go to state 53
    MUTABLE        shift, and go to state 54
    TYPENAME       shift, and go to state 55

    alias-declaration                go to state 56
    alignment-specifier              go to state 57
    asm-declaration                  go to state 58
    attribute-declaration            go to state 59
    attribute-specifier              go to state 60
    attribute-specifier-seq          go to state 61
    block-declaration                go to state 62
    class-head                       go to state 63
    class-key                        go to state 64
    class-name                       go to state 65
    class-specifier                  go to state 66
    concept-name                     go to state 67
    conversion-function-id           go to state 68
    cv-qualifier                     go to state 69
    decl-specifier                   go to state 70
    decl-specifier-seq               go to state 71
    declaration                      go to state 72
    declaration-seq                  go to state 566
    declarator                       go to state 74
    declarator-id                    go to state 75
    decltype-specifier               go to state 76
    deduction-guide                  go to state 77
    defining-type-specifier          go to state 78
    elaborated-enum-specifier        go to state 79
    elaborated-type-specifier        go to state 80
    empty-declaration                go to state 81
    enum-head                        go to state 82
    enum-key                         go to state 83
    enum-name                        go to state 84
    enum-specifier                   go to state 85
    explicit-instantiation           go to state 86
    explicit-specialization          go to state 87
    explicit-specifier               go to state 88
    export-declaration               go to state 89
    function-definition              go to state 90
    function-specifier               go to state 91
    id-expression                    go to state 93
    linkage-specification            go to state 94
    literal-operator-id              go to state 95
    module-import-declaration        go to state 97
    named-namespace-definition       go to state 98
    namespace-alias                  go to state 99
    namespace-alias-definition       go to state 100
    namespace-body                   go to state 1697
    namespace-definition             go to state 101
    namespace-name                   go to state 102
    nested-name-specifier            go to state 103
    nested-namespace-definition      go to state 104
    nodeclspec-function-declaration  go to state 105
    noptr-declarator                 go to state 106
    opaque-enum-declaration          go to state 107
    operator-function-id             go to state 108
    placeholder-type-specifier       go to state 109
    ptr-declarator                   go to state 110
    ptr-operator                     go to state 111
    qualified-id                     go to state 112
    simple-declaration               go to state 113
    simple-template-id               go to state 114
    simple-type-specifier            go to state 115
    static_assert-declaration        go to state 116
    storage-class-specifier          go to state 117
    template-declaration             go to state 118
    template-head                    go to state 119
    template-id                      go to state 120
    template-name                    go to state 121
    type-constraint                  go to state 123
    type-name                        go to state 124
    type-specifier                   go to state 125
    typedef-name                     go to state 126
    typename-specifier               go to state 127
    unnamed-namespace-definition     go to state 128
    unqualified-id                   go to state 129
    using-declaration                go to state 130
    using-directive                  go to state 131
    using-enum-declaration           go to state 132


State 1456

  1138 unnamed-namespace-definition: INLINE NAMESPACE attribute-specifier-seq OPEN_BRACE namespace-body • CLOSE_BRACE

    CLOSE_BRACE  shift, and go to state 1698


State 1457

  335 expression: expression COMMA assignment-expression •

    $default  reduce using rule 335 (expression)


State 1458

   26 assignment-expression: logical-or-expression assignment-operator initializer-clause •

    $default  reduce using rule 26 (assignment-expression)


State 1459

  552 linkage-specification: EXTERN string-literal OPEN_BRACE declaration-seq CLOSE_BRACE •

    $default  reduce using rule 552 (linkage-specification)


State 1460

  623 module-declaration: EXPORT MODULE module-name attribute-specifier-seq SEMICOLON •

    $default  reduce using rule 623 (module-declaration)


State 1461

  621 module-declaration: EXPORT MODULE module-name module-partition SEMICOLON •

    $default  reduce using rule 621 (module-declaration)


State 1462

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  625 module-declaration: EXPORT MODULE module-name module-partition attribute-specifier-seq • SEMICOLON

    SEMICOLON    shift, and go to state 1699
    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    alignment-specifier  go to state 57
    attribute-specifier  go to state 260


State 1463

  626 module-declaration: MODULE module-name module-partition attribute-specifier-seq SEMICOLON •

    $default  reduce using rule 626 (module-declaration)


State 1464

  911 qualified-namespace-specifier: nested-name-specifier namespace-name •

    $default  reduce using rule 911 (qualified-namespace-specifier)


State 1465

  648 namespace-alias-definition: NAMESPACE IDENTIFIER EQ qualified-namespace-specifier SEMICOLON •

    $default  reduce using rule 648 (namespace-alias-definition)


State 1466

  644 named-namespace-definition: NAMESPACE IDENTIFIER OPEN_BRACE namespace-body CLOSE_BRACE •

    $default  reduce using rule 644 (named-namespace-definition)


State 1467

  646 named-namespace-definition: NAMESPACE attribute-specifier-seq IDENTIFIER OPEN_BRACE namespace-body • CLOSE_BRACE

    CLOSE_BRACE  shift, and go to state 1700


State 1468

  1139 unnamed-namespace-definition: NAMESPACE attribute-specifier-seq OPEN_BRACE namespace-body CLOSE_BRACE •

    $default  reduce using rule 1139 (unnamed-namespace-definition)


State 1469

  662 nested-namespace-definition: NAMESPACE enclosing-namespace-specifier SCOPE IDENTIFIER OPEN_BRACE • namespace-body CLOSE_BRACE

    USING          shift, and go to state 1
    IDENTIFIER     shift, and go to state 2
    SEMICOLON      shift, and go to state 3
    ALIGNAS        shift, and go to state 4
    OPEN_PAREN     shift, and go to state 5
    ELLIPSIS       shift, and go to state 6
    AND            shift, and go to state 7
    ASM            shift, and go to state 8
    SCOPE          shift, and go to state 9
    OPEN_SQUARE    shift, and go to state 10
    VIRTUAL        shift, and go to state 11
    CLASS          shift, and go to state 12
    STRUCT         shift, and go to state 13
    UNION          shift, and go to state 14
    TEMPLATE       shift, and go to state 15
    AND_AND        shift, and go to state 16
    OPERATOR       shift, and go to state 17
    CONST          shift, and go to state 18
    VOLATILE       shift, and go to state 19
    FRIEND         shift, and go to state 20
    TYPEDEF        shift, and go to state 21
    CONSTEXPR      shift, and go to state 22
    CONSTEVAL      shift, and go to state 23
    CONSTINIT      shift, and go to state 24
    INLINE         shift, and go to state 25
    DECLTYPE       shift, and go to state 26
    ENUM           shift, and go to state 27
    EXTERN         shift, and go to state 28
    EXPLICIT       shift, and go to state 29
    EXPORT         shift, and go to state 157
    MULT           shift, and go to state 31
    IMPORT         shift, and go to state 33
    NAMESPACE      shift, and go to state 34
    COMPL          shift, and go to state 35
    AUTO           shift, and go to state 36
    CHAR           shift, and go to state 37
    CHAR8_T        shift, and go to state 38
    CHAR16_T       shift, and go to state 39
    CHAR32_T       shift, and go to state 40
    WCHAR_T        shift, and go to state 41
    BOOL           shift, and go to state 42
    SHORT          shift, and go to state 43
    INT            shift, and go to state 44
    LONG           shift, and go to state 45
    SIGNED         shift, and go to state 46
    UNSIGNED       shift, and go to state 47
    FLOAT          shift, and go to state 48
    DOUBLE         shift, and go to state 49
    VOID           shift, and go to state 50
    STATIC_ASSERT  shift, and go to state 51
    STATIC         shift, and go to state 52
    THREAD_LOCAL   shift, and go to state 53
    MUTABLE        shift, and go to state 54
    TYPENAME       shift, and go to state 55

    alias-declaration                go to state 56
    alignment-specifier              go to state 57
    asm-declaration                  go to state 58
    attribute-declaration            go to state 59
    attribute-specifier              go to state 60
    attribute-specifier-seq          go to state 61
    block-declaration                go to state 62
    class-head                       go to state 63
    class-key                        go to state 64
    class-name                       go to state 65
    class-specifier                  go to state 66
    concept-name                     go to state 67
    conversion-function-id           go to state 68
    cv-qualifier                     go to state 69
    decl-specifier                   go to state 70
    decl-specifier-seq               go to state 71
    declaration                      go to state 72
    declaration-seq                  go to state 566
    declarator                       go to state 74
    declarator-id                    go to state 75
    decltype-specifier               go to state 76
    deduction-guide                  go to state 77
    defining-type-specifier          go to state 78
    elaborated-enum-specifier        go to state 79
    elaborated-type-specifier        go to state 80
    empty-declaration                go to state 81
    enum-head                        go to state 82
    enum-key                         go to state 83
    enum-name                        go to state 84
    enum-specifier                   go to state 85
    explicit-instantiation           go to state 86
    explicit-specialization          go to state 87
    explicit-specifier               go to state 88
    export-declaration               go to state 89
    function-definition              go to state 90
    function-specifier               go to state 91
    id-expression                    go to state 93
    linkage-specification            go to state 94
    literal-operator-id              go to state 95
    module-import-declaration        go to state 97
    named-namespace-definition       go to state 98
    namespace-alias                  go to state 99
    namespace-alias-definition       go to state 100
    namespace-body                   go to state 1701
    namespace-definition             go to state 101
    namespace-name                   go to state 102
    nested-name-specifier            go to state 103
    nested-namespace-definition      go to state 104
    nodeclspec-function-declaration  go to state 105
    noptr-declarator                 go to state 106
    opaque-enum-declaration          go to state 107
    operator-function-id             go to state 108
    placeholder-type-specifier       go to state 109
    ptr-declarator                   go to state 110
    ptr-operator                     go to state 111
    qualified-id                     go to state 112
    simple-declaration               go to state 113
    simple-template-id               go to state 114
    simple-type-specifier            go to state 115
    static_assert-declaration        go to state 116
    storage-class-specifier          go to state 117
    template-declaration             go to state 118
    template-head                    go to state 119
    template-id                      go to state 120
    template-name                    go to state 121
    type-constraint                  go to state 123
    type-name                        go to state 124
    type-specifier                   go to state 125
    typedef-name                     go to state 126
    typename-specifier               go to state 127
    unnamed-namespace-definition     go to state 128
    unqualified-id                   go to state 129
    using-declaration                go to state 130
    using-directive                  go to state 131
    using-enum-declaration           go to state 132


State 1470

  275 enclosing-namespace-specifier: enclosing-namespace-specifier SCOPE INLINE IDENTIFIER •
  663 nested-namespace-definition: NAMESPACE enclosing-namespace-specifier SCOPE INLINE IDENTIFIER • OPEN_BRACE namespace-body CLOSE_BRACE

    OPEN_BRACE  shift, and go to state 1702

    $default  reduce using rule 275 (enclosing-namespace-specifier)


State 1471

  1024 static_assert-declaration: STATIC_ASSERT OPEN_PAREN constant-expression CLOSE_PAREN SEMICOLON •

    $default  reduce using rule 1024 (static_assert-declaration)


State 1472

  1025 static_assert-declaration: STATIC_ASSERT OPEN_PAREN constant-expression COMMA string-literal • CLOSE_PAREN SEMICOLON

    CLOSE_PAREN  shift, and go to state 1703


State 1473

  1171 using-directive: attribute-specifier-seq USING NAMESPACE namespace-name SEMICOLON •

    $default  reduce using rule 1171 (using-directive)


State 1474

  1173 using-directive: attribute-specifier-seq USING NAMESPACE nested-name-specifier namespace-name • SEMICOLON

    SEMICOLON  shift, and go to state 1704


State 1475

   21 asm-declaration: attribute-specifier-seq ASM OPEN_PAREN string-literal CLOSE_PAREN • SEMICOLON

    SEMICOLON  shift, and go to state 1705


State 1476

  966 simple-declaration: attribute-specifier-seq decl-specifier-seq OPEN_SQUARE identifier-list CLOSE_SQUARE • initializer SEMICOLON

    EQ          shift, and go to state 1273
    OPEN_PAREN  shift, and go to state 643
    OPEN_BRACE  shift, and go to state 935

    brace-or-equal-initializer  go to state 645
    braced-init-list            go to state 646
    initializer                 go to state 1706


State 1477

  405 function-definition: attribute-specifier-seq decl-specifier-seq declarator requires-clause function-body •

    $default  reduce using rule 405 (function-definition)


State 1478

  401 function-definition: attribute-specifier-seq decl-specifier-seq declarator virt-specifier-seq function-body •

    $default  reduce using rule 401 (function-definition)


State 1479

  462 identifier-list: identifier-list • COMMA IDENTIFIER
  968 simple-declaration: attribute-specifier-seq decl-specifier-seq ref-qualifier OPEN_SQUARE identifier-list • CLOSE_SQUARE initializer SEMICOLON

    COMMA         shift, and go to state 1131
    CLOSE_SQUARE  shift, and go to state 1707


State 1480

  288 enum-head: enum-key attribute-specifier-seq enum-head-name enum-base •

    $default  reduce using rule 288 (enum-head)


State 1481

  605 member-declarator: IDENTIFIER COLON constant-expression •
  609                  | IDENTIFIER COLON constant-expression • brace-or-equal-initializer

    EQ          shift, and go to state 1273
    OPEN_BRACE  shift, and go to state 935

    $default  reduce using rule 605 (member-declarator)

    brace-or-equal-initializer  go to state 1708
    braced-init-list            go to state 646


State 1482

  607 member-declarator: IDENTIFIER attribute-specifier-seq COLON • constant-expression
  611                  | IDENTIFIER attribute-specifier-seq COLON • constant-expression brace-or-equal-initializer

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 407
    constant-expression                  go to state 1709
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 430
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 1483

  610 member-declarator: COLON constant-expression brace-or-equal-initializer •

    $default  reduce using rule 610 (member-declarator)


State 1484

  618 member-specification: access-specifier COLON member-specification •

    $default  reduce using rule 618 (member-specification)


State 1485

  606 member-declarator: COLON constant-expression •
  608                  | attribute-specifier-seq COLON constant-expression •
  610                  | COLON constant-expression • brace-or-equal-initializer
  612                  | attribute-specifier-seq COLON constant-expression • brace-or-equal-initializer

    EQ          shift, and go to state 1273
    OPEN_BRACE  shift, and go to state 935

    SEMICOLON  reduce using rule 606 (member-declarator)
    SEMICOLON  [reduce using rule 608 (member-declarator)]
    COMMA      reduce using rule 606 (member-declarator)
    COMMA      [reduce using rule 608 (member-declarator)]
    $default   reduce using rule 606 (member-declarator)

    brace-or-equal-initializer  go to state 1710
    braced-init-list            go to state 646


State 1486

  608 member-declarator: attribute-specifier-seq COLON • constant-expression
  612                  | attribute-specifier-seq COLON • constant-expression brace-or-equal-initializer

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 407
    constant-expression                  go to state 1711
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 430
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 1487

  582 member-declaration: attribute-specifier-seq decl-specifier-seq SEMICOLON •

    $default  reduce using rule 582 (member-declaration)


State 1488

  397 function-definition: attribute-specifier-seq decl-specifier-seq declarator • function-body
  401                    | attribute-specifier-seq decl-specifier-seq declarator • virt-specifier-seq function-body
  405                    | attribute-specifier-seq decl-specifier-seq declarator • requires-clause function-body
  598 member-declarator: declarator •
  599                  | declarator • virt-specifier-seq
  600                  | declarator • pure-specifier
  601                  | declarator • virt-specifier-seq pure-specifier
  602                  | declarator • requires-clause
  603                  | declarator •
  604                  | declarator • brace-or-equal-initializer

    EQ          shift, and go to state 1101
    COLON       shift, and go to state 288
    OPEN_BRACE  shift, and go to state 644
    FINAL       shift, and go to state 290
    TRY         shift, and go to state 291
    REQUIRES    shift, and go to state 292
    OVERRIDE    shift, and go to state 293

    SEMICOLON  reduce using rule 598 (member-declarator)
    SEMICOLON  [reduce using rule 603 (member-declarator)]
    COMMA      reduce using rule 598 (member-declarator)
    COMMA      [reduce using rule 603 (member-declarator)]
    $default   reduce using rule 598 (member-declarator)

    brace-or-equal-initializer  go to state 1102
    braced-init-list            go to state 646
    compound-statement          go to state 294
    ctor-initializer            go to state 295
    function-body               go to state 1077
    function-try-block          go to state 297
    pure-specifier              go to state 1103
    requires-clause             go to state 1712
    virt-specifier              go to state 299
    virt-specifier-seq          go to state 1713


State 1489

  586 member-declaration: attribute-specifier-seq decl-specifier-seq member-declarator-list • SEMICOLON
  614 member-declarator-list: member-declarator-list • COMMA member-declarator

    SEMICOLON  shift, and go to state 1714
    COMMA      shift, and go to state 1108


State 1490

  403 function-definition: attribute-specifier-seq declarator requires-clause • function-body
  602 member-declarator: declarator requires-clause •

    EQ          shift, and go to state 286
    COLON       shift, and go to state 288
    OPEN_BRACE  shift, and go to state 289
    TRY         shift, and go to state 291

    $default  reduce using rule 602 (member-declarator)

    compound-statement  go to state 294
    ctor-initializer    go to state 295
    function-body       go to state 1082
    function-try-block  go to state 297


State 1491

  399 function-definition: attribute-specifier-seq declarator virt-specifier-seq • function-body
  599 member-declarator: declarator virt-specifier-seq •
  601                  | declarator virt-specifier-seq • pure-specifier
  1179 virt-specifier-seq: virt-specifier-seq • virt-specifier

    EQ          shift, and go to state 1497
    COLON       shift, and go to state 288
    OPEN_BRACE  shift, and go to state 289
    FINAL       shift, and go to state 290
    TRY         shift, and go to state 291
    OVERRIDE    shift, and go to state 293

    $default  reduce using rule 599 (member-declarator)

    compound-statement  go to state 294
    ctor-initializer    go to state 295
    function-body       go to state 1083
    function-try-block  go to state 297
    pure-specifier      go to state 1498
    virt-specifier      go to state 703


State 1492

  584 member-declaration: attribute-specifier-seq member-declarator-list SEMICOLON •

    $default  reduce using rule 584 (member-declaration)


State 1493

  406 function-definition: decl-specifier-seq declarator requires-clause • function-body
  602 member-declarator: declarator requires-clause •

    EQ          shift, and go to state 286
    COLON       shift, and go to state 288
    OPEN_BRACE  shift, and go to state 289
    TRY         shift, and go to state 291

    $default  reduce using rule 602 (member-declarator)

    compound-statement  go to state 294
    ctor-initializer    go to state 295
    function-body       go to state 1147
    function-try-block  go to state 297


State 1494

  402 function-definition: decl-specifier-seq declarator virt-specifier-seq • function-body
  599 member-declarator: declarator virt-specifier-seq •
  601                  | declarator virt-specifier-seq • pure-specifier
  1179 virt-specifier-seq: virt-specifier-seq • virt-specifier

    EQ          shift, and go to state 1497
    COLON       shift, and go to state 288
    OPEN_BRACE  shift, and go to state 289
    FINAL       shift, and go to state 290
    TRY         shift, and go to state 291
    OVERRIDE    shift, and go to state 293

    $default  reduce using rule 599 (member-declarator)

    compound-statement  go to state 294
    ctor-initializer    go to state 295
    function-body       go to state 1148
    function-try-block  go to state 297
    pure-specifier      go to state 1498
    virt-specifier      go to state 703


State 1495

  587 member-declaration: decl-specifier-seq member-declarator-list SEMICOLON •

    $default  reduce using rule 587 (member-declaration)


State 1496

  249 digit: '0' •
  748 octal-literal: '0' •
  905 pure-specifier: EQ '0' •

    SEMICOLON     reduce using rule 748 (octal-literal)
    SEMICOLON     [reduce using rule 905 (pure-specifier)]
    COMMA         reduce using rule 748 (octal-literal)
    COMMA         [reduce using rule 905 (pure-specifier)]
    SINGLE_QUOTE  reduce using rule 249 (digit)
    SINGLE_QUOTE  [reduce using rule 748 (octal-literal)]
    DOT           reduce using rule 249 (digit)
    DOT           [reduce using rule 748 (octal-literal)]
    '0'           reduce using rule 249 (digit)
    '0'           [reduce using rule 748 (octal-literal)]
    '1'           reduce using rule 249 (digit)
    '1'           [reduce using rule 748 (octal-literal)]
    '2'           reduce using rule 249 (digit)
    '2'           [reduce using rule 748 (octal-literal)]
    '3'           reduce using rule 249 (digit)
    '3'           [reduce using rule 748 (octal-literal)]
    '4'           reduce using rule 249 (digit)
    '4'           [reduce using rule 748 (octal-literal)]
    '5'           reduce using rule 249 (digit)
    '5'           [reduce using rule 748 (octal-literal)]
    '6'           reduce using rule 249 (digit)
    '6'           [reduce using rule 748 (octal-literal)]
    '7'           reduce using rule 249 (digit)
    '7'           [reduce using rule 748 (octal-literal)]
    '8'           reduce using rule 249 (digit)
    '9'           reduce using rule 249 (digit)
    'e'           reduce using rule 249 (digit)
    'E'           reduce using rule 249 (digit)
    $default      reduce using rule 748 (octal-literal)


State 1497

  393 function-body: EQ • DEFAULT SEMICOLON
  394              | EQ • DELETE SEMICOLON
  905 pure-specifier: EQ • '0'

    DELETE   shift, and go to state 654
    DEFAULT  shift, and go to state 655
    '0'      shift, and go to state 1715


State 1498

  601 member-declarator: declarator virt-specifier-seq pure-specifier •

    $default  reduce using rule 601 (member-declarator)


State 1499

  598 member-declarator: declarator •
  599                  | declarator • virt-specifier-seq
  600                  | declarator • pure-specifier
  601                  | declarator • virt-specifier-seq pure-specifier
  602                  | declarator • requires-clause
  603                  | declarator •
  604                  | declarator • brace-or-equal-initializer

    EQ          shift, and go to state 1716
    OPEN_BRACE  shift, and go to state 935
    FINAL       shift, and go to state 290
    REQUIRES    shift, and go to state 292
    OVERRIDE    shift, and go to state 293

    SEMICOLON  reduce using rule 598 (member-declarator)
    SEMICOLON  [reduce using rule 603 (member-declarator)]
    COMMA      reduce using rule 598 (member-declarator)
    COMMA      [reduce using rule 603 (member-declarator)]
    $default   reduce using rule 598 (member-declarator)

    brace-or-equal-initializer  go to state 1102
    braced-init-list            go to state 646
    pure-specifier              go to state 1103
    requires-clause             go to state 1717
    virt-specifier              go to state 299
    virt-specifier-seq          go to state 1718


State 1500

  614 member-declarator-list: member-declarator-list COMMA member-declarator •

    $default  reduce using rule 614 (member-declarator-list)


State 1501

   74 base-specifier: VIRTUAL access-specifier class-or-decltype •

    $default  reduce using rule 74 (base-specifier)


State 1502

   78 base-specifier: access-specifier VIRTUAL class-or-decltype •

    $default  reduce using rule 78 (base-specifier)


State 1503

   73 base-specifier: attribute-specifier-seq VIRTUAL access-specifier • class-or-decltype

    IDENTIFIER  shift, and go to state 253
    SCOPE       shift, and go to state 9
    DECLTYPE    shift, and go to state 134

    class-name             go to state 65
    class-or-decltype      go to state 1719
    decltype-specifier     go to state 620
    enum-name              go to state 84
    namespace-alias        go to state 99
    namespace-name         go to state 102
    nested-name-specifier  go to state 621
    simple-template-id     go to state 141
    template-name          go to state 142
    type-name              go to state 622
    typedef-name           go to state 126


State 1504

   71 base-specifier: attribute-specifier-seq VIRTUAL class-or-decltype •

    $default  reduce using rule 71 (base-specifier)


State 1505

   77 base-specifier: attribute-specifier-seq access-specifier VIRTUAL • class-or-decltype

    IDENTIFIER  shift, and go to state 253
    SCOPE       shift, and go to state 9
    DECLTYPE    shift, and go to state 134

    class-name             go to state 65
    class-or-decltype      go to state 1720
    decltype-specifier     go to state 620
    enum-name              go to state 84
    namespace-alias        go to state 99
    namespace-name         go to state 102
    nested-name-specifier  go to state 621
    simple-template-id     go to state 141
    template-name          go to state 142
    type-name              go to state 622
    typedef-name           go to state 126


State 1506

   75 base-specifier: attribute-specifier-seq access-specifier class-or-decltype •

    $default  reduce using rule 75 (base-specifier)


State 1507

   81 base-specifier-list: base-specifier-list COMMA base-specifier •
   82                    | base-specifier-list COMMA base-specifier • ELLIPSIS

    ELLIPSIS  shift, and go to state 1721

    $default  reduce using rule 81 (base-specifier-list)


State 1508

  149 class-or-decltype: nested-name-specifier TEMPLATE simple-template-id •
  661 nested-name-specifier: nested-name-specifier TEMPLATE simple-template-id • SCOPE

    SCOPE  shift, and go to state 1210

    $default  reduce using rule 149 (class-or-decltype)


State 1509

  135 class-head: class-key attribute-specifier-seq class-head-name class-virt-specifier base-clause •

    $default  reduce using rule 135 (class-head)


State 1510

  1041 template-argument-list: template-argument-list COMMA template-argument •
  1042                       | template-argument-list COMMA template-argument • ELLIPSIS

    ELLIPSIS  shift, and go to state 1722

    $default  reduce using rule 1041 (template-argument-list)


State 1511

  462 identifier-list: identifier-list COMMA IDENTIFIER •

    $default  reduce using rule 462 (identifier-list)


State 1512

  967 simple-declaration: decl-specifier-seq OPEN_SQUARE identifier-list CLOSE_SQUARE initializer • SEMICOLON

    SEMICOLON  shift, and go to state 1723


State 1513

  478 initializer: OPEN_PAREN expression-list CLOSE_PAREN •

    $default  reduce using rule 478 (initializer)


State 1514

  482 initializer-list: initializer-clause ELLIPSIS •

    $default  reduce using rule 482 (initializer-list)


State 1515

  483 initializer-list: initializer-list COMMA • initializer-clause
  484                 | initializer-list COMMA • initializer-clause ELLIPSIS

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 935
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 1134
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    braced-init-list                     go to state 1135
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    initializer-clause                   go to state 1724
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 1516

  248 designator: DOT IDENTIFIER •

    $default  reduce using rule 248 (designator)


State 1517

  111 braced-init-list: OPEN_BRACE designated-initializer-list COMMA • CLOSE_BRACE
  247 designated-initializer-list: designated-initializer-list COMMA • designated-initializer-clause

    CLOSE_BRACE  shift, and go to state 1725
    DOT          shift, and go to state 1726

    designated-initializer-clause  go to state 1727
    designator                     go to state 1145


State 1518

  110 braced-init-list: OPEN_BRACE designated-initializer-list CLOSE_BRACE •

    $default  reduce using rule 110 (braced-init-list)


State 1519

  245 designated-initializer-clause: designator brace-or-equal-initializer •

    $default  reduce using rule 245 (designated-initializer-clause)


State 1520

  109 braced-init-list: OPEN_BRACE initializer-list COMMA • CLOSE_BRACE
  483 initializer-list: initializer-list COMMA • initializer-clause
  484                 | initializer-list COMMA • initializer-clause ELLIPSIS

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 935
    CLOSE_BRACE       shift, and go to state 1728
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 1134
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    braced-init-list                     go to state 1135
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    initializer-clause                   go to state 1724
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 1521

  108 braced-init-list: OPEN_BRACE initializer-list CLOSE_BRACE •

    $default  reduce using rule 108 (braced-init-list)


State 1522

  471 init-declarator: declarator requires-clause •

    $default  reduce using rule 471 (init-declarator)


State 1523

  969 simple-declaration: decl-specifier-seq ref-qualifier OPEN_SQUARE identifier-list CLOSE_SQUARE • initializer SEMICOLON

    EQ          shift, and go to state 1273
    OPEN_PAREN  shift, and go to state 643
    OPEN_BRACE  shift, and go to state 935

    brace-or-equal-initializer  go to state 645
    braced-init-list            go to state 646
    initializer                 go to state 1729


State 1524

  571 mem-initializer: mem-initializer-id OPEN_PAREN CLOSE_PAREN •

    $default  reduce using rule 571 (mem-initializer)


State 1525

  572 mem-initializer: mem-initializer-id OPEN_PAREN expression-list • CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 1730


State 1526

  578 mem-initializer-list: mem-initializer-list COMMA mem-initializer •
  579                     | mem-initializer-list COMMA mem-initializer • ELLIPSIS

    ELLIPSIS  shift, and go to state 1731

    $default  reduce using rule 578 (mem-initializer-list)


State 1527

  520 labeled-statement: IDENTIFIER COLON statement •

    $default  reduce using rule 520 (labeled-statement)


State 1528

  183 coroutine-return-statement: CO_RETURN expr-or-braced-init-list SEMICOLON •

    $default  reduce using rule 183 (coroutine-return-statement)


State 1529

  524 labeled-statement: DEFAULT COLON statement •

    $default  reduce using rule 524 (labeled-statement)


State 1530

  1069 try-block: TRY compound-statement handler-seq •

    $default  reduce using rule 1069 (try-block)


State 1531

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  165 condition: attribute-specifier-seq • decl-specifier-seq declarator brace-or-equal-initializer

    IDENTIFIER    shift, and go to state 162
    ALIGNAS       shift, and go to state 4
    SCOPE         shift, and go to state 9
    OPEN_SQUARE   shift, and go to state 10
    VIRTUAL       shift, and go to state 11
    CLASS         shift, and go to state 12
    STRUCT        shift, and go to state 13
    UNION         shift, and go to state 14
    CONST         shift, and go to state 18
    VOLATILE      shift, and go to state 19
    FRIEND        shift, and go to state 20
    TYPEDEF       shift, and go to state 21
    CONSTEXPR     shift, and go to state 22
    CONSTEVAL     shift, and go to state 23
    CONSTINIT     shift, and go to state 24
    INLINE        shift, and go to state 258
    DECLTYPE      shift, and go to state 26
    ENUM          shift, and go to state 27
    EXTERN        shift, and go to state 259
    EXPLICIT      shift, and go to state 29
    AUTO          shift, and go to state 36
    CHAR          shift, and go to state 37
    CHAR8_T       shift, and go to state 38
    CHAR16_T      shift, and go to state 39
    CHAR32_T      shift, and go to state 40
    WCHAR_T       shift, and go to state 41
    BOOL          shift, and go to state 42
    SHORT         shift, and go to state 43
    INT           shift, and go to state 44
    LONG          shift, and go to state 45
    SIGNED        shift, and go to state 46
    UNSIGNED      shift, and go to state 47
    FLOAT         shift, and go to state 48
    DOUBLE        shift, and go to state 49
    VOID          shift, and go to state 50
    STATIC        shift, and go to state 52
    THREAD_LOCAL  shift, and go to state 53
    MUTABLE       shift, and go to state 54
    TYPENAME      shift, and go to state 55

    alignment-specifier         go to state 57
    attribute-specifier         go to state 260
    class-head                  go to state 63
    class-key                   go to state 64
    class-name                  go to state 65
    class-specifier             go to state 66
    concept-name                go to state 67
    cv-qualifier                go to state 69
    decl-specifier              go to state 70
    decl-specifier-seq          go to state 1732
    decltype-specifier          go to state 76
    defining-type-specifier     go to state 78
    elaborated-enum-specifier   go to state 79
    elaborated-type-specifier   go to state 80
    enum-head                   go to state 82
    enum-key                    go to state 263
    enum-name                   go to state 84
    enum-specifier              go to state 85
    explicit-specifier          go to state 264
    function-specifier          go to state 91
    namespace-alias             go to state 99
    namespace-name              go to state 102
    nested-name-specifier       go to state 212
    placeholder-type-specifier  go to state 109
    simple-template-id          go to state 141
    simple-type-specifier       go to state 115
    storage-class-specifier     go to state 117
    template-name               go to state 215
    type-constraint             go to state 123
    type-name                   go to state 124
    type-specifier              go to state 125
    typedef-name                go to state 126
    typename-specifier          go to state 127


State 1532

  505 iteration-statement: WHILE OPEN_PAREN condition • CLOSE_PAREN statement

    CLOSE_PAREN  shift, and go to state 1733


State 1533

  166 condition: decl-specifier-seq • declarator brace-or-equal-initializer

    IDENTIFIER  shift, and go to state 147
    OPEN_PAREN  shift, and go to state 5
    ELLIPSIS    shift, and go to state 6
    AND         shift, and go to state 7
    SCOPE       shift, and go to state 9
    AND_AND     shift, and go to state 16
    OPERATOR    shift, and go to state 17
    DECLTYPE    shift, and go to state 134
    MULT        shift, and go to state 31
    COMPL       shift, and go to state 35

    class-name              go to state 65
    conversion-function-id  go to state 68
    declarator              go to state 1734
    declarator-id           go to state 75
    decltype-specifier      go to state 138
    enum-name               go to state 84
    id-expression           go to state 93
    literal-operator-id     go to state 95
    namespace-alias         go to state 99
    namespace-name          go to state 102
    nested-name-specifier   go to state 148
    noptr-declarator        go to state 106
    operator-function-id    go to state 108
    ptr-declarator          go to state 110
    ptr-operator            go to state 111
    qualified-id            go to state 112
    simple-template-id      go to state 114
    template-id             go to state 120
    template-name           go to state 142
    type-name               go to state 143
    typedef-name            go to state 126
    unqualified-id          go to state 129


State 1534

  164 condition: expression •
  335 expression: expression • COMMA assignment-expression

    COMMA  shift, and go to state 1029

    $default  reduce using rule 164 (condition)


State 1535

  506 iteration-statement: DO statement WHILE • OPEN_PAREN expression CLOSE_PAREN SEMICOLON

    OPEN_PAREN  shift, and go to state 1735


State 1536

   13 alias-declaration: USING • IDENTIFIER EQ defining-type-id SEMICOLON
   14                  | USING • IDENTIFIER attribute-specifier-seq EQ defining-type-id SEMICOLON

    IDENTIFIER  shift, and go to state 1736


State 1537

  476 init-statement: alias-declaration •

    $default  reduce using rule 476 (init-statement)


State 1538

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  380 for-range-declaration: attribute-specifier-seq • decl-specifier-seq declarator
  382                      | attribute-specifier-seq • decl-specifier-seq OPEN_SQUARE identifier-list CLOSE_SQUARE
  384                      | attribute-specifier-seq • decl-specifier-seq ref-qualifier OPEN_SQUARE identifier-list CLOSE_SQUARE
  965 simple-declaration: attribute-specifier-seq • decl-specifier-seq init-declarator-list SEMICOLON
  966                   | attribute-specifier-seq • decl-specifier-seq OPEN_SQUARE identifier-list CLOSE_SQUARE initializer SEMICOLON
  968                   | attribute-specifier-seq • decl-specifier-seq ref-qualifier OPEN_SQUARE identifier-list CLOSE_SQUARE initializer SEMICOLON

    IDENTIFIER    shift, and go to state 162
    ALIGNAS       shift, and go to state 4
    SCOPE         shift, and go to state 9
    OPEN_SQUARE   shift, and go to state 10
    VIRTUAL       shift, and go to state 11
    CLASS         shift, and go to state 12
    STRUCT        shift, and go to state 13
    UNION         shift, and go to state 14
    CONST         shift, and go to state 18
    VOLATILE      shift, and go to state 19
    FRIEND        shift, and go to state 20
    TYPEDEF       shift, and go to state 21
    CONSTEXPR     shift, and go to state 22
    CONSTEVAL     shift, and go to state 23
    CONSTINIT     shift, and go to state 24
    INLINE        shift, and go to state 258
    DECLTYPE      shift, and go to state 26
    ENUM          shift, and go to state 27
    EXTERN        shift, and go to state 259
    EXPLICIT      shift, and go to state 29
    AUTO          shift, and go to state 36
    CHAR          shift, and go to state 37
    CHAR8_T       shift, and go to state 38
    CHAR16_T      shift, and go to state 39
    CHAR32_T      shift, and go to state 40
    WCHAR_T       shift, and go to state 41
    BOOL          shift, and go to state 42
    SHORT         shift, and go to state 43
    INT           shift, and go to state 44
    LONG          shift, and go to state 45
    SIGNED        shift, and go to state 46
    UNSIGNED      shift, and go to state 47
    FLOAT         shift, and go to state 48
    DOUBLE        shift, and go to state 49
    VOID          shift, and go to state 50
    STATIC        shift, and go to state 52
    THREAD_LOCAL  shift, and go to state 53
    MUTABLE       shift, and go to state 54
    TYPENAME      shift, and go to state 55

    alignment-specifier         go to state 57
    attribute-specifier         go to state 260
    class-head                  go to state 63
    class-key                   go to state 64
    class-name                  go to state 65
    class-specifier             go to state 66
    concept-name                go to state 67
    cv-qualifier                go to state 69
    decl-specifier              go to state 70
    decl-specifier-seq          go to state 1737
    decltype-specifier          go to state 76
    defining-type-specifier     go to state 78
    elaborated-enum-specifier   go to state 79
    elaborated-type-specifier   go to state 80
    enum-head                   go to state 82
    enum-key                    go to state 263
    enum-name                   go to state 84
    enum-specifier              go to state 85
    explicit-specifier          go to state 264
    function-specifier          go to state 91
    namespace-alias             go to state 99
    namespace-name              go to state 102
    nested-name-specifier       go to state 212
    placeholder-type-specifier  go to state 109
    simple-template-id          go to state 141
    simple-type-specifier       go to state 115
    storage-class-specifier     go to state 117
    template-name               go to state 215
    type-constraint             go to state 123
    type-name                   go to state 124
    type-specifier              go to state 125
    typedef-name                go to state 126
    typename-specifier          go to state 127


State 1539

  381 for-range-declaration: decl-specifier-seq • declarator
  383                      | decl-specifier-seq • OPEN_SQUARE identifier-list CLOSE_SQUARE
  385                      | decl-specifier-seq • ref-qualifier OPEN_SQUARE identifier-list CLOSE_SQUARE
  963 simple-declaration: decl-specifier-seq • SEMICOLON
  964                   | decl-specifier-seq • init-declarator-list SEMICOLON
  967                   | decl-specifier-seq • OPEN_SQUARE identifier-list CLOSE_SQUARE initializer SEMICOLON
  969                   | decl-specifier-seq • ref-qualifier OPEN_SQUARE identifier-list CLOSE_SQUARE initializer SEMICOLON

    IDENTIFIER   shift, and go to state 147
    SEMICOLON    shift, and go to state 277
    OPEN_PAREN   shift, and go to state 5
    ELLIPSIS     shift, and go to state 6
    AND          shift, and go to state 278
    SCOPE        shift, and go to state 9
    OPEN_SQUARE  shift, and go to state 1738
    AND_AND      shift, and go to state 280
    OPERATOR     shift, and go to state 17
    DECLTYPE     shift, and go to state 134
    MULT         shift, and go to state 31
    COMPL        shift, and go to state 35

    class-name              go to state 65
    conversion-function-id  go to state 68
    declarator              go to state 1739
    declarator-id           go to state 75
    decltype-specifier      go to state 138
    enum-name               go to state 84
    id-expression           go to state 93
    init-declarator         go to state 282
    init-declarator-list    go to state 283
    literal-operator-id     go to state 95
    namespace-alias         go to state 99
    namespace-name          go to state 102
    nested-name-specifier   go to state 148
    noptr-declarator        go to state 106
    operator-function-id    go to state 108
    ptr-declarator          go to state 110
    ptr-operator            go to state 111
    qualified-id            go to state 112
    ref-qualifier           go to state 1740
    simple-template-id      go to state 114
    template-id             go to state 120
    template-name           go to state 142
    type-name               go to state 143
    typedef-name            go to state 126
    unqualified-id          go to state 129


State 1540

  474 init-statement: expression-statement •

    $default  reduce using rule 474 (init-statement)


State 1541

  511 iteration-statement: FOR OPEN_PAREN for-range-declaration • COLON for-range-initializer CLOSE_PAREN statement

    COLON  shift, and go to state 1741


State 1542

  507 iteration-statement: FOR OPEN_PAREN init-statement • SEMICOLON CLOSE_PAREN statement
  508                    | FOR OPEN_PAREN init-statement • condition SEMICOLON CLOSE_PAREN statement
  509                    | FOR OPEN_PAREN init-statement • SEMICOLON expression CLOSE_PAREN statement
  510                    | FOR OPEN_PAREN init-statement • condition SEMICOLON expression CLOSE_PAREN statement
  512                    | FOR OPEN_PAREN init-statement • for-range-declaration COLON for-range-initializer CLOSE_PAREN statement

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    SEMICOLON         shift, and go to state 1742
    ALIGNAS           shift, and go to state 4
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 663
    CO_AWAIT          shift, and go to state 362
    VIRTUAL           shift, and go to state 11
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    FRIEND            shift, and go to state 20
    TYPEDEF           shift, and go to state 21
    CONSTEXPR         shift, and go to state 22
    CONSTEVAL         shift, and go to state 23
    CONSTINIT         shift, and go to state 24
    INLINE            shift, and go to state 258
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 27
    UNICODE_8         shift, and go to state 184
    EXTERN            shift, and go to state 259
    EXPLICIT          shift, and go to state 29
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    STATIC            shift, and go to state 52
    THREAD_LOCAL      shift, and go to state 53
    MUTABLE           shift, and go to state 54
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    alignment-specifier                  go to state 57
    and-expression                       go to state 400
    assignment-expression                go to state 525
    attribute-specifier                  go to state 60
    attribute-specifier-seq              go to state 1743
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-head                           go to state 63
    class-key                            go to state 64
    class-name                           go to state 65
    class-specifier                      go to state 66
    compare-expression                   go to state 406
    concept-name                         go to state 67
    condition                            go to state 1744
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decl-specifier                       go to state 70
    decl-specifier-seq                   go to state 1745
    decltype-specifier                   go to state 76
    defining-type-specifier              go to state 78
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-head                            go to state 82
    enum-key                             go to state 263
    enum-name                            go to state 84
    enum-specifier                       go to state 85
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    explicit-specifier                   go to state 264
    expression                           go to state 1534
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    for-range-declaration                go to state 1746
    fractional-constant                  go to state 419
    function-specifier                   go to state 91
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    storage-class-specifier              go to state 117
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    type-specifier                       go to state 125
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 1543

  475 init-statement: simple-declaration •

    $default  reduce using rule 475 (init-statement)


State 1544

  516 jump-statement: RETURN expr-or-braced-init-list SEMICOLON •

    $default  reduce using rule 516 (jump-statement)


State 1545

  518 jump-statement: GOTO IDENTIFIER SEMICOLON •

    $default  reduce using rule 518 (jump-statement)


State 1546

  522 labeled-statement: CASE constant-expression COLON • statement

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    USING             shift, and go to state 1
    IDENTIFIER        shift, and go to state 661
    SEMICOLON         shift, and go to state 662
    ALIGNAS           shift, and go to state 4
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    ASM               shift, and go to state 8
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 663
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 289
    VIRTUAL           shift, and go to state 11
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CO_RETURN         shift, and go to state 665
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    FRIEND            shift, and go to state 20
    TYPEDEF           shift, and go to state 21
    CONSTEXPR         shift, and go to state 22
    CONSTEVAL         shift, and go to state 23
    CONSTINIT         shift, and go to state 24
    INLINE            shift, and go to state 258
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 27
    UNICODE_8         shift, and go to state 184
    EXTERN            shift, and go to state 259
    EXPLICIT          shift, and go to state 29
    MULT              shift, and go to state 371
    DEFAULT           shift, and go to state 666
    TRY               shift, and go to state 667
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    WHILE             shift, and go to state 668
    DO                shift, and go to state 669
    FOR               shift, and go to state 670
    BREAK             shift, and go to state 671
    CONTINUE          shift, and go to state 672
    RETURN            shift, and go to state 673
    GOTO              shift, and go to state 674
    CASE              shift, and go to state 675
    NAMESPACE         shift, and go to state 676
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    IF                shift, and go to state 677
    SWITCH            shift, and go to state 678
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    STATIC_ASSERT     shift, and go to state 51
    STATIC            shift, and go to state 52
    THREAD_LOCAL      shift, and go to state 53
    MUTABLE           shift, and go to state 54
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    alias-declaration                    go to state 56
    alignment-specifier                  go to state 57
    and-expression                       go to state 400
    asm-declaration                      go to state 58
    assignment-expression                go to state 525
    attribute-specifier                  go to state 60
    attribute-specifier-seq              go to state 679
    await-expression                     go to state 401
    binary-literal                       go to state 402
    block-declaration                    go to state 680
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-head                           go to state 63
    class-key                            go to state 64
    class-name                           go to state 65
    class-specifier                      go to state 66
    compare-expression                   go to state 406
    compound-statement                   go to state 681
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    coroutine-return-statement           go to state 682
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decl-specifier                       go to state 70
    decl-specifier-seq                   go to state 683
    declaration-statement                go to state 684
    decltype-specifier                   go to state 76
    defining-type-specifier              go to state 78
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-head                            go to state 82
    enum-key                             go to state 83
    enum-name                            go to state 84
    enum-specifier                       go to state 85
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    explicit-specifier                   go to state 264
    expression                           go to state 685
    expression-statement                 go to state 686
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    function-specifier                   go to state 91
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    iteration-statement                  go to state 687
    jump-statement                       go to state 688
    labeled-statement                    go to state 689
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-alias-definition           go to state 100
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    opaque-enum-declaration              go to state 107
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    selection-statement                  go to state 690
    shift-expression                     go to state 443
    simple-declaration                   go to state 113
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    statement                            go to state 1747
    static_assert-declaration            go to state 116
    storage-class-specifier              go to state 117
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    try-block                            go to state 693
    type-constraint                      go to state 123
    type-name                            go to state 124
    type-specifier                       go to state 125
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    using-declaration                    go to state 130
    using-directive                      go to state 131
    using-enum-declaration               go to state 132
    yield-expression                     go to state 532


State 1547

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  165 condition: attribute-specifier-seq • decl-specifier-seq declarator brace-or-equal-initializer
  965 simple-declaration: attribute-specifier-seq • decl-specifier-seq init-declarator-list SEMICOLON
  966                   | attribute-specifier-seq • decl-specifier-seq OPEN_SQUARE identifier-list CLOSE_SQUARE initializer SEMICOLON
  968                   | attribute-specifier-seq • decl-specifier-seq ref-qualifier OPEN_SQUARE identifier-list CLOSE_SQUARE initializer SEMICOLON

    IDENTIFIER    shift, and go to state 162
    ALIGNAS       shift, and go to state 4
    SCOPE         shift, and go to state 9
    OPEN_SQUARE   shift, and go to state 10
    VIRTUAL       shift, and go to state 11
    CLASS         shift, and go to state 12
    STRUCT        shift, and go to state 13
    UNION         shift, and go to state 14
    CONST         shift, and go to state 18
    VOLATILE      shift, and go to state 19
    FRIEND        shift, and go to state 20
    TYPEDEF       shift, and go to state 21
    CONSTEXPR     shift, and go to state 22
    CONSTEVAL     shift, and go to state 23
    CONSTINIT     shift, and go to state 24
    INLINE        shift, and go to state 258
    DECLTYPE      shift, and go to state 26
    ENUM          shift, and go to state 27
    EXTERN        shift, and go to state 259
    EXPLICIT      shift, and go to state 29
    AUTO          shift, and go to state 36
    CHAR          shift, and go to state 37
    CHAR8_T       shift, and go to state 38
    CHAR16_T      shift, and go to state 39
    CHAR32_T      shift, and go to state 40
    WCHAR_T       shift, and go to state 41
    BOOL          shift, and go to state 42
    SHORT         shift, and go to state 43
    INT           shift, and go to state 44
    LONG          shift, and go to state 45
    SIGNED        shift, and go to state 46
    UNSIGNED      shift, and go to state 47
    FLOAT         shift, and go to state 48
    DOUBLE        shift, and go to state 49
    VOID          shift, and go to state 50
    STATIC        shift, and go to state 52
    THREAD_LOCAL  shift, and go to state 53
    MUTABLE       shift, and go to state 54
    TYPENAME      shift, and go to state 55

    alignment-specifier         go to state 57
    attribute-specifier         go to state 260
    class-head                  go to state 63
    class-key                   go to state 64
    class-name                  go to state 65
    class-specifier             go to state 66
    concept-name                go to state 67
    cv-qualifier                go to state 69
    decl-specifier              go to state 70
    decl-specifier-seq          go to state 1748
    decltype-specifier          go to state 76
    defining-type-specifier     go to state 78
    elaborated-enum-specifier   go to state 79
    elaborated-type-specifier   go to state 80
    enum-head                   go to state 82
    enum-key                    go to state 263
    enum-name                   go to state 84
    enum-specifier              go to state 85
    explicit-specifier          go to state 264
    function-specifier          go to state 91
    namespace-alias             go to state 99
    namespace-name              go to state 102
    nested-name-specifier       go to state 212
    placeholder-type-specifier  go to state 109
    simple-template-id          go to state 141
    simple-type-specifier       go to state 115
    storage-class-specifier     go to state 117
    template-name               go to state 215
    type-constraint             go to state 123
    type-name                   go to state 124
    type-specifier              go to state 125
    typedef-name                go to state 126
    typename-specifier          go to state 127


State 1548

  938 selection-statement: IF OPEN_PAREN condition • CLOSE_PAREN statement
  942                    | IF OPEN_PAREN condition • CLOSE_PAREN statement ELSE statement

    CLOSE_PAREN  shift, and go to state 1749


State 1549

  166 condition: decl-specifier-seq • declarator brace-or-equal-initializer
  963 simple-declaration: decl-specifier-seq • SEMICOLON
  964                   | decl-specifier-seq • init-declarator-list SEMICOLON
  967                   | decl-specifier-seq • OPEN_SQUARE identifier-list CLOSE_SQUARE initializer SEMICOLON
  969                   | decl-specifier-seq • ref-qualifier OPEN_SQUARE identifier-list CLOSE_SQUARE initializer SEMICOLON

    IDENTIFIER   shift, and go to state 147
    SEMICOLON    shift, and go to state 277
    OPEN_PAREN   shift, and go to state 5
    ELLIPSIS     shift, and go to state 6
    AND          shift, and go to state 278
    SCOPE        shift, and go to state 9
    OPEN_SQUARE  shift, and go to state 279
    AND_AND      shift, and go to state 280
    OPERATOR     shift, and go to state 17
    DECLTYPE     shift, and go to state 134
    MULT         shift, and go to state 31
    COMPL        shift, and go to state 35

    class-name              go to state 65
    conversion-function-id  go to state 68
    declarator              go to state 1750
    declarator-id           go to state 75
    decltype-specifier      go to state 138
    enum-name               go to state 84
    id-expression           go to state 93
    init-declarator         go to state 282
    init-declarator-list    go to state 283
    literal-operator-id     go to state 95
    namespace-alias         go to state 99
    namespace-name          go to state 102
    nested-name-specifier   go to state 148
    noptr-declarator        go to state 106
    operator-function-id    go to state 108
    ptr-declarator          go to state 110
    ptr-operator            go to state 111
    qualified-id            go to state 112
    ref-qualifier           go to state 284
    simple-template-id      go to state 114
    template-id             go to state 120
    template-name           go to state 142
    type-name               go to state 143
    typedef-name            go to state 126
    unqualified-id          go to state 129


State 1550

  164 condition: expression •
  335 expression: expression • COMMA assignment-expression
  337 expression-statement: expression • SEMICOLON

    SEMICOLON  shift, and go to state 1190
    COMMA      shift, and go to state 1029

    $default  reduce using rule 164 (condition)


State 1551

  940 selection-statement: IF OPEN_PAREN init-statement • condition CLOSE_PAREN statement
  944                    | IF OPEN_PAREN init-statement • condition CLOSE_PAREN statement ELSE statement

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    ALIGNAS           shift, and go to state 4
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 663
    CO_AWAIT          shift, and go to state 362
    VIRTUAL           shift, and go to state 11
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    FRIEND            shift, and go to state 20
    TYPEDEF           shift, and go to state 21
    CONSTEXPR         shift, and go to state 22
    CONSTEVAL         shift, and go to state 23
    CONSTINIT         shift, and go to state 24
    INLINE            shift, and go to state 258
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 27
    UNICODE_8         shift, and go to state 184
    EXTERN            shift, and go to state 259
    EXPLICIT          shift, and go to state 29
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    STATIC            shift, and go to state 52
    THREAD_LOCAL      shift, and go to state 53
    MUTABLE           shift, and go to state 54
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    alignment-specifier                  go to state 57
    and-expression                       go to state 400
    assignment-expression                go to state 525
    attribute-specifier                  go to state 60
    attribute-specifier-seq              go to state 1531
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-head                           go to state 63
    class-key                            go to state 64
    class-name                           go to state 65
    class-specifier                      go to state 66
    compare-expression                   go to state 406
    concept-name                         go to state 67
    condition                            go to state 1751
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decl-specifier                       go to state 70
    decl-specifier-seq                   go to state 1533
    decltype-specifier                   go to state 76
    defining-type-specifier              go to state 78
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-head                            go to state 82
    enum-key                             go to state 263
    enum-name                            go to state 84
    enum-specifier                       go to state 85
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    explicit-specifier                   go to state 264
    expression                           go to state 1534
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    function-specifier                   go to state 91
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    storage-class-specifier              go to state 117
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    type-specifier                       go to state 125
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 1552

  939 selection-statement: IF CONSTEXPR OPEN_PAREN • condition CLOSE_PAREN statement
  941                    | IF CONSTEXPR OPEN_PAREN • init-statement condition CLOSE_PAREN statement
  943                    | IF CONSTEXPR OPEN_PAREN • condition CLOSE_PAREN statement ELSE statement
  945                    | IF CONSTEXPR OPEN_PAREN • init-statement condition CLOSE_PAREN statement ELSE statement

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    USING             shift, and go to state 1536
    IDENTIFIER        shift, and go to state 2
    SEMICOLON         shift, and go to state 662
    ALIGNAS           shift, and go to state 4
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 663
    CO_AWAIT          shift, and go to state 362
    VIRTUAL           shift, and go to state 11
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    FRIEND            shift, and go to state 20
    TYPEDEF           shift, and go to state 21
    CONSTEXPR         shift, and go to state 22
    CONSTEVAL         shift, and go to state 23
    CONSTINIT         shift, and go to state 24
    INLINE            shift, and go to state 258
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 27
    UNICODE_8         shift, and go to state 184
    EXTERN            shift, and go to state 259
    EXPLICIT          shift, and go to state 29
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    STATIC            shift, and go to state 52
    THREAD_LOCAL      shift, and go to state 53
    MUTABLE           shift, and go to state 54
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    alias-declaration                    go to state 1537
    alignment-specifier                  go to state 57
    and-expression                       go to state 400
    assignment-expression                go to state 525
    attribute-specifier                  go to state 60
    attribute-specifier-seq              go to state 1547
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-head                           go to state 63
    class-key                            go to state 64
    class-name                           go to state 65
    class-specifier                      go to state 66
    compare-expression                   go to state 406
    concept-name                         go to state 67
    condition                            go to state 1752
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decl-specifier                       go to state 70
    decl-specifier-seq                   go to state 1549
    decltype-specifier                   go to state 76
    defining-type-specifier              go to state 78
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-head                            go to state 82
    enum-key                             go to state 263
    enum-name                            go to state 84
    enum-specifier                       go to state 85
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    explicit-specifier                   go to state 264
    expression                           go to state 1550
    expression-statement                 go to state 1540
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    function-specifier                   go to state 91
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    init-statement                       go to state 1753
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-declaration                   go to state 1543
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    storage-class-specifier              go to state 117
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    type-specifier                       go to state 125
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 1553

  946 selection-statement: IF CONSTEVAL compound-statement •
  948                    | IF CONSTEVAL compound-statement • ELSE statement

    ELSE  shift, and go to state 1754

    ELSE      [reduce using rule 946 (selection-statement)]
    $default  reduce using rule 946 (selection-statement)


State 1554

  947 selection-statement: IF NOT CONSTEVAL • compound-statement
  949                    | IF NOT CONSTEVAL • compound-statement ELSE statement

    OPEN_BRACE  shift, and go to state 289

    compound-statement  go to state 1755


State 1555

  950 selection-statement: SWITCH OPEN_PAREN condition • CLOSE_PAREN statement

    CLOSE_PAREN  shift, and go to state 1756


State 1556

  951 selection-statement: SWITCH OPEN_PAREN init-statement • condition CLOSE_PAREN statement

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    ALIGNAS           shift, and go to state 4
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 663
    CO_AWAIT          shift, and go to state 362
    VIRTUAL           shift, and go to state 11
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    FRIEND            shift, and go to state 20
    TYPEDEF           shift, and go to state 21
    CONSTEXPR         shift, and go to state 22
    CONSTEVAL         shift, and go to state 23
    CONSTINIT         shift, and go to state 24
    INLINE            shift, and go to state 258
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 27
    UNICODE_8         shift, and go to state 184
    EXTERN            shift, and go to state 259
    EXPLICIT          shift, and go to state 29
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    STATIC            shift, and go to state 52
    THREAD_LOCAL      shift, and go to state 53
    MUTABLE           shift, and go to state 54
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    alignment-specifier                  go to state 57
    and-expression                       go to state 400
    assignment-expression                go to state 525
    attribute-specifier                  go to state 60
    attribute-specifier-seq              go to state 1531
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-head                           go to state 63
    class-key                            go to state 64
    class-name                           go to state 65
    class-specifier                      go to state 66
    compare-expression                   go to state 406
    concept-name                         go to state 67
    condition                            go to state 1757
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decl-specifier                       go to state 70
    decl-specifier-seq                   go to state 1533
    decltype-specifier                   go to state 76
    defining-type-specifier              go to state 78
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-head                            go to state 82
    enum-key                             go to state 263
    enum-name                            go to state 84
    enum-specifier                       go to state 85
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    explicit-specifier                   go to state 264
    expression                           go to state 1534
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    function-specifier                   go to state 91
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    storage-class-specifier              go to state 117
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    type-specifier                       go to state 125
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 1557

  519 labeled-statement: attribute-specifier-seq IDENTIFIER COLON • statement

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    USING             shift, and go to state 1
    IDENTIFIER        shift, and go to state 661
    SEMICOLON         shift, and go to state 662
    ALIGNAS           shift, and go to state 4
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    ASM               shift, and go to state 8
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 663
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 289
    VIRTUAL           shift, and go to state 11
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CO_RETURN         shift, and go to state 665
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    FRIEND            shift, and go to state 20
    TYPEDEF           shift, and go to state 21
    CONSTEXPR         shift, and go to state 22
    CONSTEVAL         shift, and go to state 23
    CONSTINIT         shift, and go to state 24
    INLINE            shift, and go to state 258
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 27
    UNICODE_8         shift, and go to state 184
    EXTERN            shift, and go to state 259
    EXPLICIT          shift, and go to state 29
    MULT              shift, and go to state 371
    DEFAULT           shift, and go to state 666
    TRY               shift, and go to state 667
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    WHILE             shift, and go to state 668
    DO                shift, and go to state 669
    FOR               shift, and go to state 670
    BREAK             shift, and go to state 671
    CONTINUE          shift, and go to state 672
    RETURN            shift, and go to state 673
    GOTO              shift, and go to state 674
    CASE              shift, and go to state 675
    NAMESPACE         shift, and go to state 676
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    IF                shift, and go to state 677
    SWITCH            shift, and go to state 678
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    STATIC_ASSERT     shift, and go to state 51
    STATIC            shift, and go to state 52
    THREAD_LOCAL      shift, and go to state 53
    MUTABLE           shift, and go to state 54
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    alias-declaration                    go to state 56
    alignment-specifier                  go to state 57
    and-expression                       go to state 400
    asm-declaration                      go to state 58
    assignment-expression                go to state 525
    attribute-specifier                  go to state 60
    attribute-specifier-seq              go to state 679
    await-expression                     go to state 401
    binary-literal                       go to state 402
    block-declaration                    go to state 680
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-head                           go to state 63
    class-key                            go to state 64
    class-name                           go to state 65
    class-specifier                      go to state 66
    compare-expression                   go to state 406
    compound-statement                   go to state 681
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    coroutine-return-statement           go to state 682
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decl-specifier                       go to state 70
    decl-specifier-seq                   go to state 683
    declaration-statement                go to state 684
    decltype-specifier                   go to state 76
    defining-type-specifier              go to state 78
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-head                            go to state 82
    enum-key                             go to state 83
    enum-name                            go to state 84
    enum-specifier                       go to state 85
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    explicit-specifier                   go to state 264
    expression                           go to state 685
    expression-statement                 go to state 686
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    function-specifier                   go to state 91
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    iteration-statement                  go to state 687
    jump-statement                       go to state 688
    labeled-statement                    go to state 689
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-alias-definition           go to state 100
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    opaque-enum-declaration              go to state 107
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    selection-statement                  go to state 690
    shift-expression                     go to state 443
    simple-declaration                   go to state 113
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    statement                            go to state 1758
    static_assert-declaration            go to state 116
    storage-class-specifier              go to state 117
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    try-block                            go to state 693
    type-constraint                      go to state 123
    type-name                            go to state 124
    type-specifier                       go to state 125
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    using-declaration                    go to state 130
    using-directive                      go to state 131
    using-enum-declaration               go to state 132
    yield-expression                     go to state 532


State 1558

  523 labeled-statement: attribute-specifier-seq DEFAULT COLON • statement

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    USING             shift, and go to state 1
    IDENTIFIER        shift, and go to state 661
    SEMICOLON         shift, and go to state 662
    ALIGNAS           shift, and go to state 4
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    ASM               shift, and go to state 8
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 663
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 289
    VIRTUAL           shift, and go to state 11
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CO_RETURN         shift, and go to state 665
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    FRIEND            shift, and go to state 20
    TYPEDEF           shift, and go to state 21
    CONSTEXPR         shift, and go to state 22
    CONSTEVAL         shift, and go to state 23
    CONSTINIT         shift, and go to state 24
    INLINE            shift, and go to state 258
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 27
    UNICODE_8         shift, and go to state 184
    EXTERN            shift, and go to state 259
    EXPLICIT          shift, and go to state 29
    MULT              shift, and go to state 371
    DEFAULT           shift, and go to state 666
    TRY               shift, and go to state 667
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    WHILE             shift, and go to state 668
    DO                shift, and go to state 669
    FOR               shift, and go to state 670
    BREAK             shift, and go to state 671
    CONTINUE          shift, and go to state 672
    RETURN            shift, and go to state 673
    GOTO              shift, and go to state 674
    CASE              shift, and go to state 675
    NAMESPACE         shift, and go to state 676
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    IF                shift, and go to state 677
    SWITCH            shift, and go to state 678
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    STATIC_ASSERT     shift, and go to state 51
    STATIC            shift, and go to state 52
    THREAD_LOCAL      shift, and go to state 53
    MUTABLE           shift, and go to state 54
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    alias-declaration                    go to state 56
    alignment-specifier                  go to state 57
    and-expression                       go to state 400
    asm-declaration                      go to state 58
    assignment-expression                go to state 525
    attribute-specifier                  go to state 60
    attribute-specifier-seq              go to state 679
    await-expression                     go to state 401
    binary-literal                       go to state 402
    block-declaration                    go to state 680
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-head                           go to state 63
    class-key                            go to state 64
    class-name                           go to state 65
    class-specifier                      go to state 66
    compare-expression                   go to state 406
    compound-statement                   go to state 681
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    coroutine-return-statement           go to state 682
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decl-specifier                       go to state 70
    decl-specifier-seq                   go to state 683
    declaration-statement                go to state 684
    decltype-specifier                   go to state 76
    defining-type-specifier              go to state 78
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-head                            go to state 82
    enum-key                             go to state 83
    enum-name                            go to state 84
    enum-specifier                       go to state 85
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    explicit-specifier                   go to state 264
    expression                           go to state 685
    expression-statement                 go to state 686
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    function-specifier                   go to state 91
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    iteration-statement                  go to state 687
    jump-statement                       go to state 688
    labeled-statement                    go to state 689
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-alias-definition           go to state 100
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    opaque-enum-declaration              go to state 107
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    selection-statement                  go to state 690
    shift-expression                     go to state 443
    simple-declaration                   go to state 113
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    statement                            go to state 1759
    static_assert-declaration            go to state 116
    storage-class-specifier              go to state 117
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    try-block                            go to state 693
    type-constraint                      go to state 123
    type-name                            go to state 124
    type-specifier                       go to state 125
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    using-declaration                    go to state 130
    using-directive                      go to state 131
    using-enum-declaration               go to state 132
    yield-expression                     go to state 532


State 1559

  521 labeled-statement: attribute-specifier-seq CASE constant-expression • COLON statement

    COLON  shift, and go to state 1760


State 1560

  416 handler: CATCH OPEN_PAREN • exception-declaration CLOSE_PAREN compound-statement

    IDENTIFIER   shift, and go to state 162
    ALIGNAS      shift, and go to state 4
    ELLIPSIS     shift, and go to state 1761
    SCOPE        shift, and go to state 9
    OPEN_SQUARE  shift, and go to state 10
    CLASS        shift, and go to state 12
    STRUCT       shift, and go to state 13
    UNION        shift, and go to state 14
    CONST        shift, and go to state 18
    VOLATILE     shift, and go to state 19
    DECLTYPE     shift, and go to state 26
    ENUM         shift, and go to state 135
    AUTO         shift, and go to state 36
    CHAR         shift, and go to state 37
    CHAR8_T      shift, and go to state 38
    CHAR16_T     shift, and go to state 39
    CHAR32_T     shift, and go to state 40
    WCHAR_T      shift, and go to state 41
    BOOL         shift, and go to state 42
    SHORT        shift, and go to state 43
    INT          shift, and go to state 44
    LONG         shift, and go to state 45
    SIGNED       shift, and go to state 46
    UNSIGNED     shift, and go to state 47
    FLOAT        shift, and go to state 48
    DOUBLE       shift, and go to state 49
    VOID         shift, and go to state 50
    TYPENAME     shift, and go to state 55

    alignment-specifier         go to state 57
    attribute-specifier         go to state 60
    attribute-specifier-seq     go to state 1762
    class-key                   go to state 209
    class-name                  go to state 65
    concept-name                go to state 67
    cv-qualifier                go to state 69
    decltype-specifier          go to state 76
    elaborated-enum-specifier   go to state 79
    elaborated-type-specifier   go to state 80
    enum-name                   go to state 84
    exception-declaration       go to state 1763
    namespace-alias             go to state 99
    namespace-name              go to state 102
    nested-name-specifier       go to state 212
    placeholder-type-specifier  go to state 109
    simple-template-id          go to state 141
    simple-type-specifier       go to state 115
    template-name               go to state 215
    type-constraint             go to state 123
    type-name                   go to state 124
    type-specifier              go to state 216
    type-specifier-seq          go to state 1764
    typedef-name                go to state 126
    typename-specifier          go to state 127


State 1561

  418 handler-seq: handler handler-seq •

    $default  reduce using rule 418 (handler-seq)


State 1562

  410 function-try-block: TRY ctor-initializer compound-statement handler-seq •

    $default  reduce using rule 410 (function-try-block)


State 1563

  174 constraint-logical-and-expression: constraint-logical-and-expression AND_AND primary-expression •

    $default  reduce using rule 174 (constraint-logical-and-expression)


State 1564

  174 constraint-logical-and-expression: constraint-logical-and-expression • AND_AND primary-expression
  176 constraint-logical-or-expression: constraint-logical-or-expression OR_OR constraint-logical-and-expression •

    AND_AND  shift, and go to state 1197

    AND_AND   [reduce using rule 176 (constraint-logical-or-expression)]
    $default  reduce using rule 176 (constraint-logical-or-expression)


State 1565

  301 enumerator-definition: enumerator EQ constant-expression •

    $default  reduce using rule 301 (enumerator-definition)


State 1566

  297 enum-specifier: enum-head OPEN_BRACE enumerator-list COMMA CLOSE_BRACE •

    $default  reduce using rule 297 (enum-specifier)


State 1567

  303 enumerator-list: enumerator-list COMMA enumerator-definition •

    $default  reduce using rule 303 (enumerator-list)


State 1568

  754 opaque-enum-declaration: enum-key attribute-specifier-seq enum-head-name enum-base SEMICOLON •

    $default  reduce using rule 754 (opaque-enum-declaration)


State 1569

  231 deduction-guide: explicit-specifier template-name OPEN_PAREN parameter-declaration-clause CLOSE_PAREN • DEREF simple-template-id SEMICOLON

    DEREF  shift, and go to state 1765


State 1570

  886 private-module-fragment: MODULE COLON PRIVATE SEMICOLON •
  887                        | MODULE COLON PRIVATE SEMICOLON • declaration-seq

    USING          shift, and go to state 1
    IDENTIFIER     shift, and go to state 2
    SEMICOLON      shift, and go to state 3
    ALIGNAS        shift, and go to state 4
    OPEN_PAREN     shift, and go to state 5
    ELLIPSIS       shift, and go to state 6
    AND            shift, and go to state 7
    ASM            shift, and go to state 8
    SCOPE          shift, and go to state 9
    OPEN_SQUARE    shift, and go to state 10
    VIRTUAL        shift, and go to state 11
    CLASS          shift, and go to state 12
    STRUCT         shift, and go to state 13
    UNION          shift, and go to state 14
    TEMPLATE       shift, and go to state 15
    AND_AND        shift, and go to state 16
    OPERATOR       shift, and go to state 17
    CONST          shift, and go to state 18
    VOLATILE       shift, and go to state 19
    FRIEND         shift, and go to state 20
    TYPEDEF        shift, and go to state 21
    CONSTEXPR      shift, and go to state 22
    CONSTEVAL      shift, and go to state 23
    CONSTINIT      shift, and go to state 24
    INLINE         shift, and go to state 25
    DECLTYPE       shift, and go to state 26
    ENUM           shift, and go to state 27
    EXTERN         shift, and go to state 28
    EXPLICIT       shift, and go to state 29
    EXPORT         shift, and go to state 157
    MULT           shift, and go to state 31
    IMPORT         shift, and go to state 33
    NAMESPACE      shift, and go to state 34
    COMPL          shift, and go to state 35
    AUTO           shift, and go to state 36
    CHAR           shift, and go to state 37
    CHAR8_T        shift, and go to state 38
    CHAR16_T       shift, and go to state 39
    CHAR32_T       shift, and go to state 40
    WCHAR_T        shift, and go to state 41
    BOOL           shift, and go to state 42
    SHORT          shift, and go to state 43
    INT            shift, and go to state 44
    LONG           shift, and go to state 45
    SIGNED         shift, and go to state 46
    UNSIGNED       shift, and go to state 47
    FLOAT          shift, and go to state 48
    DOUBLE         shift, and go to state 49
    VOID           shift, and go to state 50
    STATIC_ASSERT  shift, and go to state 51
    STATIC         shift, and go to state 52
    THREAD_LOCAL   shift, and go to state 53
    MUTABLE        shift, and go to state 54
    TYPENAME       shift, and go to state 55

    $default  reduce using rule 886 (private-module-fragment)

    alias-declaration                go to state 56
    alignment-specifier              go to state 57
    asm-declaration                  go to state 58
    attribute-declaration            go to state 59
    attribute-specifier              go to state 60
    attribute-specifier-seq          go to state 61
    block-declaration                go to state 62
    class-head                       go to state 63
    class-key                        go to state 64
    class-name                       go to state 65
    class-specifier                  go to state 66
    concept-name                     go to state 67
    conversion-function-id           go to state 68
    cv-qualifier                     go to state 69
    decl-specifier                   go to state 70
    decl-specifier-seq               go to state 71
    declaration                      go to state 72
    declaration-seq                  go to state 1766
    declarator                       go to state 74
    declarator-id                    go to state 75
    decltype-specifier               go to state 76
    deduction-guide                  go to state 77
    defining-type-specifier          go to state 78
    elaborated-enum-specifier        go to state 79
    elaborated-type-specifier        go to state 80
    empty-declaration                go to state 81
    enum-head                        go to state 82
    enum-key                         go to state 83
    enum-name                        go to state 84
    enum-specifier                   go to state 85
    explicit-instantiation           go to state 86
    explicit-specialization          go to state 87
    explicit-specifier               go to state 88
    export-declaration               go to state 89
    function-definition              go to state 90
    function-specifier               go to state 91
    id-expression                    go to state 93
    linkage-specification            go to state 94
    literal-operator-id              go to state 95
    module-import-declaration        go to state 97
    named-namespace-definition       go to state 98
    namespace-alias                  go to state 99
    namespace-alias-definition       go to state 100
    namespace-definition             go to state 101
    namespace-name                   go to state 102
    nested-name-specifier            go to state 103
    nested-namespace-definition      go to state 104
    nodeclspec-function-declaration  go to state 105
    noptr-declarator                 go to state 106
    opaque-enum-declaration          go to state 107
    operator-function-id             go to state 108
    placeholder-type-specifier       go to state 109
    ptr-declarator                   go to state 110
    ptr-operator                     go to state 111
    qualified-id                     go to state 112
    simple-declaration               go to state 113
    simple-template-id               go to state 114
    simple-type-specifier            go to state 115
    static_assert-declaration        go to state 116
    storage-class-specifier          go to state 117
    template-declaration             go to state 118
    template-head                    go to state 119
    template-id                      go to state 120
    template-name                    go to state 121
    type-constraint                  go to state 123
    type-name                        go to state 124
    type-specifier                   go to state 125
    typedef-name                     go to state 126
    typename-specifier               go to state 127
    unnamed-namespace-definition     go to state 128
    unqualified-id                   go to state 129
    using-declaration                go to state 130
    using-directive                  go to state 131
    using-enum-declaration           go to state 132


State 1571

  1074 type-constraint: nested-name-specifier concept-name LESS template-argument-list GREATER •

    $default  reduce using rule 1074 (type-constraint)


State 1572

  914 ref-qualifier: AND •

    $default  reduce using rule 914 (ref-qualifier)


State 1573

  915 ref-qualifier: AND_AND •

    $default  reduce using rule 915 (ref-qualifier)


State 1574

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  840 parameters-and-qualifiers: OPEN_PAREN parameter-declaration-clause CLOSE_PAREN attribute-specifier-seq •

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    OPEN_SQUARE  [reduce using rule 840 (parameters-and-qualifiers)]
    $default     reduce using rule 840 (parameters-and-qualifiers)

    alignment-specifier  go to state 57
    attribute-specifier  go to state 260


State 1575

  833 parameters-and-qualifiers: OPEN_PAREN parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq •
  835                          | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq • ref-qualifier
  837                          | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq • noexcept-specifier
  839                          | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq • ref-qualifier noexcept-specifier
  841                          | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq • attribute-specifier-seq
  843                          | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq • ref-qualifier attribute-specifier-seq
  845                          | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq • noexcept-specifier attribute-specifier-seq
  847                          | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq • ref-qualifier noexcept-specifier attribute-specifier-seq

    ALIGNAS      shift, and go to state 4
    AND          shift, and go to state 1572
    OPEN_SQUARE  shift, and go to state 10
    NOEXCEPT     shift, and go to state 894
    AND_AND      shift, and go to state 1573

    OPEN_SQUARE  [reduce using rule 833 (parameters-and-qualifiers)]
    $default     reduce using rule 833 (parameters-and-qualifiers)

    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 1767
    noexcept-specifier       go to state 1768
    ref-qualifier            go to state 1769


State 1576

  836 parameters-and-qualifiers: OPEN_PAREN parameter-declaration-clause CLOSE_PAREN noexcept-specifier •
  844                          | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN noexcept-specifier • attribute-specifier-seq

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    OPEN_SQUARE  [reduce using rule 836 (parameters-and-qualifiers)]
    $default     reduce using rule 836 (parameters-and-qualifiers)

    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 1770


State 1577

  834 parameters-and-qualifiers: OPEN_PAREN parameter-declaration-clause CLOSE_PAREN ref-qualifier •
  838                          | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN ref-qualifier • noexcept-specifier
  842                          | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN ref-qualifier • attribute-specifier-seq
  846                          | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN ref-qualifier • noexcept-specifier attribute-specifier-seq

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10
    NOEXCEPT     shift, and go to state 894

    OPEN_SQUARE  [reduce using rule 834 (parameters-and-qualifiers)]
    $default     reduce using rule 834 (parameters-and-qualifiers)

    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 1771
    noexcept-specifier       go to state 1772


State 1578

  829 parameter-declaration-clause: parameter-declaration-list COMMA ELLIPSIS •

    $default  reduce using rule 829 (parameter-declaration-clause)


State 1579

  831 parameter-declaration-list: parameter-declaration-list COMMA parameter-declaration •

    $default  reduce using rule 831 (parameter-declaration-list)


State 1580

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  727 noptr-declarator: noptr-declarator OPEN_SQUARE constant-expression CLOSE_SQUARE attribute-specifier-seq •

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    OPEN_SQUARE  [reduce using rule 727 (noptr-declarator)]
    $default     reduce using rule 727 (noptr-declarator)

    alignment-specifier  go to state 57
    attribute-specifier  go to state 260


State 1581

  162 concept-definition: CONCEPT concept-name EQ constraint-expression • SEMICOLON

    SEMICOLON  shift, and go to state 1773


State 1582

  172 constraint-expression: logical-or-expression •
  566 logical-or-expression: logical-or-expression • OR_OR logical-and-expression

    OR_OR  shift, and go to state 904

    $default  reduce using rule 172 (constraint-expression)


State 1583

  232 deduction-guide: template-name OPEN_PAREN parameter-declaration-clause CLOSE_PAREN DEREF • simple-template-id SEMICOLON

    IDENTIFIER  shift, and go to state 310

    simple-template-id  go to state 1774
    template-name       go to state 142


State 1584

  850 placeholder-type-specifier: type-constraint DECLTYPE OPEN_PAREN AUTO CLOSE_PAREN •

    $default  reduce using rule 850 (placeholder-type-specifier)


State 1585

   14 alias-declaration: USING IDENTIFIER attribute-specifier-seq EQ defining-type-id SEMICOLON •

    $default  reduce using rule 14 (alias-declaration)


State 1586

  346 fold-expression: OPEN_PAREN ELLIPSIS fold-operator cast-expression • CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 1775


State 1587

  345 fold-expression: OPEN_PAREN cast-expression fold-operator ELLIPSIS • CLOSE_PAREN
  347                | OPEN_PAREN cast-expression fold-operator ELLIPSIS • fold-operator cast-expression CLOSE_PAREN

    PLUS         shift, and go to state 1232
    MINUS        shift, and go to state 1233
    EQ           shift, and go to state 1234
    CLOSE_PAREN  shift, and go to state 1776
    AND          shift, and go to state 1235
    MULT_EQ      shift, and go to state 1236
    DIV_EQ       shift, and go to state 1237
    MOD_EQ       shift, and go to state 1238
    PLUS_EQ      shift, and go to state 1239
    MINUS_EQ     shift, and go to state 1240
    RSHIFT_EQ    shift, and go to state 1241
    LSHIFT_EQ    shift, and go to state 1242
    AND_EQ       shift, and go to state 1243
    XOR_EQ       shift, and go to state 1244
    OR_EQ        shift, and go to state 1245
    COMMA        shift, and go to state 1246
    AND_AND      shift, and go to state 1247
    OR_OR        shift, and go to state 1248
    EQ_EQ        shift, and go to state 1249
    NOT_EQ       shift, and go to state 1250
    XOR          shift, and go to state 1251
    LESS         shift, and go to state 1252
    GREATER      shift, and go to state 1253
    MULT         shift, and go to state 1254
    DIV          shift, and go to state 1255
    MOD          shift, and go to state 1256
    OR           shift, and go to state 1257
    LSHIFT       shift, and go to state 1258
    RSHIFT       shift, and go to state 1259
    LESS_EQ      shift, and go to state 1260
    GREATER_EQ   shift, and go to state 1261
    DOT_STAR     shift, and go to state 1262
    DEREF_STAR   shift, and go to state 1263

    fold-operator  go to state 1777


State 1588

  125 cast-expression: OPEN_PAREN type-id CLOSE_PAREN cast-expression •

    $default  reduce using rule 125 (cast-expression)


State 1589

  243 delete-expression: SCOPE DELETE OPEN_SQUARE CLOSE_SQUARE • cast-expression
  534 lambda-introducer: OPEN_SQUARE CLOSE_SQUARE •

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    IDENTIFIER   [reduce using rule 534 (lambda-introducer)]
    OPEN_PAREN   [reduce using rule 534 (lambda-introducer)]
    SCOPE        [reduce using rule 534 (lambda-introducer)]
    OPEN_SQUARE  [reduce using rule 534 (lambda-introducer)]
    NOEXCEPT     [reduce using rule 534 (lambda-introducer)]
    DECLTYPE     [reduce using rule 534 (lambda-introducer)]
    AUTO         [reduce using rule 534 (lambda-introducer)]
    CHAR         [reduce using rule 534 (lambda-introducer)]
    CHAR8_T      [reduce using rule 534 (lambda-introducer)]
    CHAR16_T     [reduce using rule 534 (lambda-introducer)]
    CHAR32_T     [reduce using rule 534 (lambda-introducer)]
    WCHAR_T      [reduce using rule 534 (lambda-introducer)]
    BOOL         [reduce using rule 534 (lambda-introducer)]
    SHORT        [reduce using rule 534 (lambda-introducer)]
    INT          [reduce using rule 534 (lambda-introducer)]
    LONG         [reduce using rule 534 (lambda-introducer)]
    SIGNED       [reduce using rule 534 (lambda-introducer)]
    UNSIGNED     [reduce using rule 534 (lambda-introducer)]
    FLOAT        [reduce using rule 534 (lambda-introducer)]
    DOUBLE       [reduce using rule 534 (lambda-introducer)]
    VOID         [reduce using rule 534 (lambda-introducer)]
    TYPENAME     [reduce using rule 534 (lambda-introducer)]
    $default     reduce using rule 534 (lambda-introducer)

    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 1778
    character-literal                    go to state 405
    class-name                           go to state 65
    concept-name                         go to state 67
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    requires-expression                  go to state 442
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 1590

  676 new-expression: SCOPE NEW OPEN_PAREN type-id • CLOSE_PAREN
  680               | SCOPE NEW OPEN_PAREN type-id • CLOSE_PAREN new-initializer

    CLOSE_PAREN  shift, and go to state 1779


State 1591

  678 new-expression: SCOPE NEW new-placement OPEN_PAREN • type-id CLOSE_PAREN
  682               | SCOPE NEW new-placement OPEN_PAREN • type-id CLOSE_PAREN new-initializer

    IDENTIFIER  shift, and go to state 162
    SCOPE       shift, and go to state 9
    CLASS       shift, and go to state 12
    STRUCT      shift, and go to state 13
    UNION       shift, and go to state 14
    CONST       shift, and go to state 18
    VOLATILE    shift, and go to state 19
    DECLTYPE    shift, and go to state 26
    ENUM        shift, and go to state 135
    AUTO        shift, and go to state 36
    CHAR        shift, and go to state 37
    CHAR8_T     shift, and go to state 38
    CHAR16_T    shift, and go to state 39
    CHAR32_T    shift, and go to state 40
    WCHAR_T     shift, and go to state 41
    BOOL        shift, and go to state 42
    SHORT       shift, and go to state 43
    INT         shift, and go to state 44
    LONG        shift, and go to state 45
    SIGNED      shift, and go to state 46
    UNSIGNED    shift, and go to state 47
    FLOAT       shift, and go to state 48
    DOUBLE      shift, and go to state 49
    VOID        shift, and go to state 50
    TYPENAME    shift, and go to state 55

    class-key                   go to state 209
    class-name                  go to state 65
    concept-name                go to state 67
    cv-qualifier                go to state 69
    decltype-specifier          go to state 76
    elaborated-enum-specifier   go to state 79
    elaborated-type-specifier   go to state 80
    enum-name                   go to state 84
    namespace-alias             go to state 99
    namespace-name              go to state 102
    nested-name-specifier       go to state 212
    placeholder-type-specifier  go to state 109
    simple-template-id          go to state 141
    simple-type-specifier       go to state 115
    template-name               go to state 215
    type-constraint             go to state 123
    type-id                     go to state 1780
    type-name                   go to state 124
    type-specifier              go to state 216
    type-specifier-seq          go to state 447
    typedef-name                go to state 126
    typename-specifier          go to state 127


State 1592

  670 new-expression: SCOPE NEW new-placement new-type-id •
  674               | SCOPE NEW new-placement new-type-id • new-initializer

    OPEN_PAREN  shift, and go to state 1303
    OPEN_BRACE  shift, and go to state 935

    OPEN_BRACE  [reduce using rule 670 (new-expression)]
    $default    reduce using rule 670 (new-expression)

    braced-init-list  go to state 1304
    new-initializer   go to state 1781


State 1593

  672 new-expression: SCOPE NEW new-type-id new-initializer •

    $default  reduce using rule 672 (new-expression)


State 1594

  465 init-capture: ELLIPSIS IDENTIFIER initializer •

    $default  reduce using rule 465 (init-capture)


State 1595

  960 simple-capture: AND IDENTIFIER ELLIPSIS •

    $default  reduce using rule 960 (simple-capture)


State 1596

  467 init-capture: AND IDENTIFIER initializer •

    $default  reduce using rule 467 (init-capture)


State 1597

  468 init-capture: AND ELLIPSIS IDENTIFIER • initializer

    EQ          shift, and go to state 1273
    OPEN_PAREN  shift, and go to state 643
    OPEN_BRACE  shift, and go to state 935

    brace-or-equal-initializer  go to state 645
    braced-init-list            go to state 646
    initializer                 go to state 1782


State 1598

  467 init-capture: AND • IDENTIFIER initializer
  468             | AND • ELLIPSIS IDENTIFIER initializer
  959 simple-capture: AND • IDENTIFIER
  960               | AND • IDENTIFIER ELLIPSIS

    IDENTIFIER  shift, and go to state 1277
    ELLIPSIS    shift, and go to state 1278


State 1599

  123 capture-list: capture-list • COMMA capture
  527 lambda-capture: capture-default COMMA capture-list •

    COMMA  shift, and go to state 1281

    $default  reduce using rule 527 (lambda-capture)


State 1600

  123 capture-list: capture-list COMMA capture •

    $default  reduce using rule 123 (capture-list)


State 1601

  692 noexcept-expression: NOEXCEPT OPEN_PAREN expression CLOSE_PAREN •

    $default  reduce using rule 692 (noexcept-expression)


State 1602

  244 delete-expression: DELETE OPEN_SQUARE CLOSE_SQUARE cast-expression •

    $default  reduce using rule 244 (delete-expression)


State 1603

  926 requirement-parameter-list: OPEN_PAREN parameter-declaration-clause CLOSE_PAREN •

    $default  reduce using rule 926 (requirement-parameter-list)


State 1604

  156 compound-requirement: OPEN_BRACE expression • CLOSE_BRACE SEMICOLON
  157                     | OPEN_BRACE expression • CLOSE_BRACE NOEXCEPT SEMICOLON
  158                     | OPEN_BRACE expression • CLOSE_BRACE return-type-requirement SEMICOLON
  159                     | OPEN_BRACE expression • CLOSE_BRACE NOEXCEPT return-type-requirement SEMICOLON
  335 expression: expression • COMMA assignment-expression

    COMMA        shift, and go to state 1029
    CLOSE_BRACE  shift, and go to state 1783


State 1605

  125 cast-expression: OPEN_PAREN • type-id CLOSE_PAREN cast-expression
  345 fold-expression: OPEN_PAREN • cast-expression fold-operator ELLIPSIS CLOSE_PAREN
  346                | OPEN_PAREN • ELLIPSIS fold-operator cast-expression CLOSE_PAREN
  347                | OPEN_PAREN • cast-expression fold-operator ELLIPSIS fold-operator cast-expression CLOSE_PAREN
  881 primary-expression: OPEN_PAREN • expression CLOSE_PAREN
  926 requirement-parameter-list: OPEN_PAREN • parameter-declaration-clause CLOSE_PAREN

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    ALIGNAS           shift, and go to state 4
    OPEN_PAREN        shift, and go to state 358
    ELLIPSIS          shift, and go to state 1784
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 663
    CO_AWAIT          shift, and go to state 362
    VIRTUAL           shift, and go to state 11
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    FRIEND            shift, and go to state 20
    TYPEDEF           shift, and go to state 21
    CONSTEXPR         shift, and go to state 22
    CONSTEVAL         shift, and go to state 23
    CONSTINIT         shift, and go to state 24
    INLINE            shift, and go to state 258
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 27
    UNICODE_8         shift, and go to state 184
    EXTERN            shift, and go to state 259
    EXPLICIT          shift, and go to state 29
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 1785
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    STATIC            shift, and go to state 52
    THREAD_LOCAL      shift, and go to state 53
    MUTABLE           shift, and go to state 54
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    alignment-specifier                  go to state 57
    and-expression                       go to state 400
    assignment-expression                go to state 525
    attribute-specifier                  go to state 60
    attribute-specifier-seq              go to state 473
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 757
    character-literal                    go to state 405
    class-head                           go to state 63
    class-key                            go to state 64
    class-name                           go to state 65
    class-specifier                      go to state 66
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decl-specifier                       go to state 70
    decl-specifier-seq                   go to state 474
    decltype-specifier                   go to state 76
    defining-type-specifier              go to state 78
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-head                            go to state 82
    enum-key                             go to state 263
    enum-name                            go to state 84
    enum-specifier                       go to state 85
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    explicit-specifier                   go to state 264
    expression                           go to state 758
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    function-specifier                   go to state 91
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    parameter-declaration                go to state 731
    parameter-declaration-clause         go to state 1287
    parameter-declaration-list           go to state 733
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    storage-class-specifier              go to state 117
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-id                              go to state 759
    type-name                            go to state 124
    type-specifier                       go to state 1786
    type-specifier-seq                   go to state 447
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 1606

  664 nested-requirement: REQUIRES constraint-expression • SEMICOLON

    SEMICOLON  shift, and go to state 1787


State 1607

  659 nested-name-specifier: nested-name-specifier • IDENTIFIER SCOPE
  660                      | nested-name-specifier • simple-template-id SCOPE
  661                      | nested-name-specifier • TEMPLATE simple-template-id SCOPE
  1102 type-requirement: TYPENAME nested-name-specifier • type-name SEMICOLON
  1112 typename-specifier: TYPENAME nested-name-specifier • IDENTIFIER
  1113                   | TYPENAME nested-name-specifier • simple-template-id
  1114                   | TYPENAME nested-name-specifier • TEMPLATE simple-template-id

    IDENTIFIER  shift, and go to state 1788
    TEMPLATE    shift, and go to state 573

    class-name          go to state 65
    enum-name           go to state 84
    simple-template-id  go to state 1789
    template-name       go to state 142
    type-name           go to state 1790
    typedef-name        go to state 126


State 1608

  656 nested-name-specifier: type-name • SCOPE
  1101 type-requirement: TYPENAME type-name • SEMICOLON

    SEMICOLON  shift, and go to state 1791
    SCOPE      shift, and go to state 341


State 1609

  982 simple-requirement: expression SEMICOLON •

    $default  reduce using rule 982 (simple-requirement)


State 1610

  925 requirement-body: OPEN_BRACE requirement-seq CLOSE_BRACE •

    $default  reduce using rule 925 (requirement-body)


State 1611

  928 requirement-seq: requirement-seq requirement •

    $default  reduce using rule 928 (requirement-seq)


State 1612

  687 new-placement: OPEN_PAREN expression-list CLOSE_PAREN •

    $default  reduce using rule 687 (new-placement)


State 1613

  677 new-expression: NEW OPEN_PAREN type-id CLOSE_PAREN •
  681               | NEW OPEN_PAREN type-id CLOSE_PAREN • new-initializer

    OPEN_PAREN  shift, and go to state 1303
    OPEN_BRACE  shift, and go to state 935

    OPEN_BRACE  [reduce using rule 677 (new-expression)]
    $default    reduce using rule 677 (new-expression)

    braced-init-list  go to state 1304
    new-initializer   go to state 1792


State 1614

  679 new-expression: NEW new-placement OPEN_PAREN type-id • CLOSE_PAREN
  683               | NEW new-placement OPEN_PAREN type-id • CLOSE_PAREN new-initializer

    CLOSE_PAREN  shift, and go to state 1793


State 1615

  675 new-expression: NEW new-placement new-type-id new-initializer •

    $default  reduce using rule 675 (new-expression)


State 1616

  684 new-initializer: OPEN_PAREN CLOSE_PAREN •

    $default  reduce using rule 684 (new-initializer)


State 1617

  685 new-initializer: OPEN_PAREN expression-list • CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 1794


State 1618

  729 noptr-new-declarator: OPEN_SQUARE CLOSE_SQUARE •
  731                     | OPEN_SQUARE CLOSE_SQUARE • attribute-specifier-seq

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    OPEN_SQUARE  [reduce using rule 729 (noptr-new-declarator)]
    $default     reduce using rule 729 (noptr-new-declarator)

    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 1795


State 1619

  335 expression: expression • COMMA assignment-expression
  730 noptr-new-declarator: OPEN_SQUARE expression • CLOSE_SQUARE
  732                     | OPEN_SQUARE expression • CLOSE_SQUARE attribute-specifier-seq

    COMMA         shift, and go to state 1029
    CLOSE_SQUARE  shift, and go to state 1796


State 1620

  733 noptr-new-declarator: noptr-new-declarator OPEN_SQUARE • constant-expression CLOSE_SQUARE
  734                     | noptr-new-declarator OPEN_SQUARE • constant-expression CLOSE_SQUARE attribute-specifier-seq

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 407
    constant-expression                  go to state 1797
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 430
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 1621

  666 new-declarator: ptr-operator new-declarator •

    $default  reduce using rule 666 (new-declarator)


State 1622

  873 postfix-expression: DYNAMIC_CAST LESS type-id GREATER • OPEN_PAREN expression CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 1798


State 1623

  874 postfix-expression: STATIC_CAST LESS type-id GREATER • OPEN_PAREN expression CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 1799


State 1624

  875 postfix-expression: REINTERPRET_CAST LESS type-id GREATER • OPEN_PAREN expression CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 1800


State 1625

  876 postfix-expression: CONST_CAST LESS type-id GREATER • OPEN_PAREN expression CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 1801


State 1626

  877 postfix-expression: TYPEID OPEN_PAREN expression CLOSE_PAREN •

    $default  reduce using rule 877 (postfix-expression)


State 1627

  878 postfix-expression: TYPEID OPEN_PAREN type-id CLOSE_PAREN •

    $default  reduce using rule 878 (postfix-expression)


State 1628

  1122 unary-expression: SIZEOF OPEN_PAREN type-id CLOSE_PAREN •

    $default  reduce using rule 1122 (unary-expression)


State 1629

  1123 unary-expression: SIZEOF ELLIPSIS OPEN_PAREN IDENTIFIER • CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 1802


State 1630

  1124 unary-expression: ALIGNOF OPEN_PAREN type-id CLOSE_PAREN •

    $default  reduce using rule 1124 (unary-expression)


State 1631

  260 digit-sequence: digit-sequence • digit
  261               | digit-sequence • SINGLE_QUOTE digit
  325 exponent-part: 'e' sign digit-sequence •

    SINGLE_QUOTE  shift, and go to state 847
    '0'           shift, and go to state 789
    '1'           shift, and go to state 790
    '2'           shift, and go to state 791
    '3'           shift, and go to state 792
    '4'           shift, and go to state 793
    '5'           shift, and go to state 794
    '6'           shift, and go to state 795
    '7'           shift, and go to state 796
    '8'           shift, and go to state 797
    '9'           shift, and go to state 798

    $default  reduce using rule 325 (exponent-part)

    digit  go to state 851


State 1632

  260 digit-sequence: digit-sequence • digit
  261               | digit-sequence • SINGLE_QUOTE digit
  327 exponent-part: 'E' sign digit-sequence •

    SINGLE_QUOTE  shift, and go to state 847
    '0'           shift, and go to state 789
    '1'           shift, and go to state 790
    '2'           shift, and go to state 791
    '3'           shift, and go to state 792
    '4'           shift, and go to state 793
    '5'           shift, and go to state 794
    '6'           shift, and go to state 795
    '7'           shift, and go to state 796
    '8'           shift, and go to state 797
    '9'           shift, and go to state 798

    $default  reduce using rule 327 (exponent-part)

    digit  go to state 851


State 1633

  126 character-literal: encoding-prefix SINGLE_QUOTE c-char-sequence SINGLE_QUOTE •

    $default  reduce using rule 126 (character-literal)


State 1634

  446 hexadecimal-digit-sequence: hexadecimal-digit-sequence SINGLE_QUOTE hexadecimal-digit •

    $default  reduce using rule 446 (hexadecimal-digit-sequence)


State 1635

  445 hexadecimal-digit-sequence: hexadecimal-digit-sequence • hexadecimal-digit
  446                           | hexadecimal-digit-sequence • SINGLE_QUOTE hexadecimal-digit
  453 hexadecimal-fractional-constant: hexadecimal-digit-sequence DOT hexadecimal-digit-sequence •

    SINGLE_QUOTE  shift, and go to state 1349
    '0'           shift, and go to state 867
    '1'           shift, and go to state 868
    '2'           shift, and go to state 869
    '3'           shift, and go to state 870
    '4'           shift, and go to state 871
    '5'           shift, and go to state 872
    '6'           shift, and go to state 873
    '7'           shift, and go to state 874
    '8'           shift, and go to state 875
    '9'           shift, and go to state 876
    'e'           shift, and go to state 877
    'E'           shift, and go to state 878
    'f'           shift, and go to state 879
    'F'           shift, and go to state 880
    'a'           shift, and go to state 881
    'b'           shift, and go to state 882
    'c'           shift, and go to state 883
    'd'           shift, and go to state 884
    'A'           shift, and go to state 885
    'B'           shift, and go to state 886
    'C'           shift, and go to state 887
    'D'           shift, and go to state 888

    $default  reduce using rule 453 (hexadecimal-fractional-constant)

    hexadecimal-digit  go to state 1354


State 1636

   87 binary-exponent-part: 'p' digit-sequence •
  260 digit-sequence: digit-sequence • digit
  261               | digit-sequence • SINGLE_QUOTE digit

    SINGLE_QUOTE  shift, and go to state 847
    '0'           shift, and go to state 789
    '1'           shift, and go to state 790
    '2'           shift, and go to state 791
    '3'           shift, and go to state 792
    '4'           shift, and go to state 793
    '5'           shift, and go to state 794
    '6'           shift, and go to state 795
    '7'           shift, and go to state 796
    '8'           shift, and go to state 797
    '9'           shift, and go to state 798

    $default  reduce using rule 87 (binary-exponent-part)

    digit  go to state 851


State 1637

   88 binary-exponent-part: 'p' sign • digit-sequence

    '0'  shift, and go to state 789
    '1'  shift, and go to state 790
    '2'  shift, and go to state 791
    '3'  shift, and go to state 792
    '4'  shift, and go to state 793
    '5'  shift, and go to state 794
    '6'  shift, and go to state 795
    '7'  shift, and go to state 796
    '8'  shift, and go to state 797
    '9'  shift, and go to state 798

    digit           go to state 412
    digit-sequence  go to state 1803


State 1638

   89 binary-exponent-part: 'P' digit-sequence •
  260 digit-sequence: digit-sequence • digit
  261               | digit-sequence • SINGLE_QUOTE digit

    SINGLE_QUOTE  shift, and go to state 847
    '0'           shift, and go to state 789
    '1'           shift, and go to state 790
    '2'           shift, and go to state 791
    '3'           shift, and go to state 792
    '4'           shift, and go to state 793
    '5'           shift, and go to state 794
    '6'           shift, and go to state 795
    '7'           shift, and go to state 796
    '8'           shift, and go to state 797
    '9'           shift, and go to state 798

    $default  reduce using rule 89 (binary-exponent-part)

    digit  go to state 851


State 1639

   90 binary-exponent-part: 'P' sign • digit-sequence

    '0'  shift, and go to state 789
    '1'  shift, and go to state 790
    '2'  shift, and go to state 791
    '3'  shift, and go to state 792
    '4'  shift, and go to state 793
    '5'  shift, and go to state 794
    '6'  shift, and go to state 795
    '7'  shift, and go to state 796
    '8'  shift, and go to state 797
    '9'  shift, and go to state 798

    digit           go to state 412
    digit-sequence  go to state 1804


State 1640

  452 hexadecimal-floating-point-literal: hexadecimal-prefix hexadecimal-digit-sequence binary-exponent-part floating-point-suffix •

    $default  reduce using rule 452 (hexadecimal-floating-point-literal)


State 1641

  1154 user-defined-floating-point-literal: hexadecimal-prefix hexadecimal-digit-sequence binary-exponent-part ud-suffix •

    $default  reduce using rule 1154 (user-defined-floating-point-literal)


State 1642

  450 hexadecimal-floating-point-literal: hexadecimal-prefix hexadecimal-fractional-constant binary-exponent-part floating-point-suffix •

    $default  reduce using rule 450 (hexadecimal-floating-point-literal)


State 1643

  1153 user-defined-floating-point-literal: hexadecimal-prefix hexadecimal-fractional-constant binary-exponent-part ud-suffix •

    $default  reduce using rule 1153 (user-defined-floating-point-literal)


State 1644

  529 lambda-declarator: OPEN_PAREN parameter-declaration-clause CLOSE_PAREN • lambda-specifiers
  530                  | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN • lambda-specifiers requires-clause

    IDENTIFIER    shift, and go to state 162
    ALIGNAS       shift, and go to state 4
    SCOPE         shift, and go to state 9
    OPEN_SQUARE   shift, and go to state 10
    VIRTUAL       shift, and go to state 11
    CLASS         shift, and go to state 12
    STRUCT        shift, and go to state 13
    UNION         shift, and go to state 14
    NOEXCEPT      shift, and go to state 894
    CONST         shift, and go to state 18
    VOLATILE      shift, and go to state 19
    FRIEND        shift, and go to state 20
    TYPEDEF       shift, and go to state 21
    CONSTEXPR     shift, and go to state 22
    CONSTEVAL     shift, and go to state 23
    CONSTINIT     shift, and go to state 24
    INLINE        shift, and go to state 258
    DECLTYPE      shift, and go to state 26
    DEREF         shift, and go to state 736
    ENUM          shift, and go to state 27
    EXTERN        shift, and go to state 259
    EXPLICIT      shift, and go to state 29
    AUTO          shift, and go to state 36
    CHAR          shift, and go to state 37
    CHAR8_T       shift, and go to state 38
    CHAR16_T      shift, and go to state 39
    CHAR32_T      shift, and go to state 40
    WCHAR_T       shift, and go to state 41
    BOOL          shift, and go to state 42
    SHORT         shift, and go to state 43
    INT           shift, and go to state 44
    LONG          shift, and go to state 45
    SIGNED        shift, and go to state 46
    UNSIGNED      shift, and go to state 47
    FLOAT         shift, and go to state 48
    DOUBLE        shift, and go to state 49
    VOID          shift, and go to state 50
    STATIC        shift, and go to state 52
    THREAD_LOCAL  shift, and go to state 53
    MUTABLE       shift, and go to state 54
    TYPENAME      shift, and go to state 55

    alignment-specifier         go to state 57
    attribute-specifier         go to state 60
    attribute-specifier-seq     go to state 896
    class-head                  go to state 63
    class-key                   go to state 64
    class-name                  go to state 65
    class-specifier             go to state 66
    concept-name                go to state 67
    cv-qualifier                go to state 69
    decl-specifier              go to state 70
    decl-specifier-seq          go to state 897
    decltype-specifier          go to state 76
    defining-type-specifier     go to state 78
    elaborated-enum-specifier   go to state 79
    elaborated-type-specifier   go to state 80
    enum-head                   go to state 82
    enum-key                    go to state 263
    enum-name                   go to state 84
    enum-specifier              go to state 85
    explicit-specifier          go to state 264
    function-specifier          go to state 91
    lambda-specifiers           go to state 1805
    namespace-alias             go to state 99
    namespace-name              go to state 102
    nested-name-specifier       go to state 212
    noexcept-specifier          go to state 900
    placeholder-type-specifier  go to state 109
    simple-template-id          go to state 141
    simple-type-specifier       go to state 115
    storage-class-specifier     go to state 117
    template-name               go to state 215
    trailing-return-type        go to state 901
    type-constraint             go to state 123
    type-name                   go to state 124
    type-specifier              go to state 125
    typedef-name                go to state 126
    typename-specifier          go to state 127


State 1645

  693 noexcept-specifier: NOEXCEPT OPEN_PAREN constant-expression • CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 1806


State 1646

  532 lambda-expression: lambda-introducer LESS template-parameter-list GREATER • lambda-declarator compound-statement
  533                  | lambda-introducer LESS template-parameter-list GREATER • requires-clause lambda-declarator compound-statement

    IDENTIFIER    shift, and go to state 162
    ALIGNAS       shift, and go to state 4
    OPEN_PAREN    shift, and go to state 893
    SCOPE         shift, and go to state 9
    OPEN_SQUARE   shift, and go to state 10
    VIRTUAL       shift, and go to state 11
    CLASS         shift, and go to state 12
    STRUCT        shift, and go to state 13
    UNION         shift, and go to state 14
    NOEXCEPT      shift, and go to state 894
    CONST         shift, and go to state 18
    VOLATILE      shift, and go to state 19
    FRIEND        shift, and go to state 20
    TYPEDEF       shift, and go to state 21
    CONSTEXPR     shift, and go to state 22
    CONSTEVAL     shift, and go to state 23
    CONSTINIT     shift, and go to state 24
    INLINE        shift, and go to state 258
    DECLTYPE      shift, and go to state 26
    DEREF         shift, and go to state 736
    ENUM          shift, and go to state 27
    EXTERN        shift, and go to state 259
    EXPLICIT      shift, and go to state 29
    REQUIRES      shift, and go to state 292
    AUTO          shift, and go to state 36
    CHAR          shift, and go to state 37
    CHAR8_T       shift, and go to state 38
    CHAR16_T      shift, and go to state 39
    CHAR32_T      shift, and go to state 40
    WCHAR_T       shift, and go to state 41
    BOOL          shift, and go to state 42
    SHORT         shift, and go to state 43
    INT           shift, and go to state 44
    LONG          shift, and go to state 45
    SIGNED        shift, and go to state 46
    UNSIGNED      shift, and go to state 47
    FLOAT         shift, and go to state 48
    DOUBLE        shift, and go to state 49
    VOID          shift, and go to state 50
    STATIC        shift, and go to state 52
    THREAD_LOCAL  shift, and go to state 53
    MUTABLE       shift, and go to state 54
    TYPENAME      shift, and go to state 55

    alignment-specifier         go to state 57
    attribute-specifier         go to state 60
    attribute-specifier-seq     go to state 896
    class-head                  go to state 63
    class-key                   go to state 64
    class-name                  go to state 65
    class-specifier             go to state 66
    concept-name                go to state 67
    cv-qualifier                go to state 69
    decl-specifier              go to state 70
    decl-specifier-seq          go to state 897
    decltype-specifier          go to state 76
    defining-type-specifier     go to state 78
    elaborated-enum-specifier   go to state 79
    elaborated-type-specifier   go to state 80
    enum-head                   go to state 82
    enum-key                    go to state 263
    enum-name                   go to state 84
    enum-specifier              go to state 85
    explicit-specifier          go to state 264
    function-specifier          go to state 91
    lambda-declarator           go to state 1807
    lambda-specifiers           go to state 899
    namespace-alias             go to state 99
    namespace-name              go to state 102
    nested-name-specifier       go to state 212
    noexcept-specifier          go to state 900
    placeholder-type-specifier  go to state 109
    requires-clause             go to state 1808
    simple-template-id          go to state 141
    simple-type-specifier       go to state 115
    storage-class-specifier     go to state 117
    template-name               go to state 215
    trailing-return-type        go to state 901
    type-constraint             go to state 123
    type-name                   go to state 124
    type-specifier              go to state 125
    typedef-name                go to state 126
    typename-specifier          go to state 127


State 1647

  547 lambda-specifiers: decl-specifier-seq attribute-specifier-seq trailing-return-type •

    $default  reduce using rule 547 (lambda-specifiers)


State 1648

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  541 lambda-specifiers: decl-specifier-seq noexcept-specifier attribute-specifier-seq •
  549                  | decl-specifier-seq noexcept-specifier attribute-specifier-seq • trailing-return-type

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10
    DEREF        shift, and go to state 736

    $default  reduce using rule 541 (lambda-specifiers)

    alignment-specifier   go to state 57
    attribute-specifier   go to state 260
    trailing-return-type  go to state 1809


State 1649

  545 lambda-specifiers: decl-specifier-seq noexcept-specifier trailing-return-type •

    $default  reduce using rule 545 (lambda-specifiers)


State 1650

  550 lambda-specifiers: noexcept-specifier attribute-specifier-seq trailing-return-type •

    $default  reduce using rule 550 (lambda-specifiers)


State 1651

  170 conditional-expression: logical-or-expression QUERY expression COLON • assignment-expression

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 1810
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 1652

  860 postfix-expression: postfix-expression OPEN_PAREN expression-list CLOSE_PAREN •

    $default  reduce using rule 860 (postfix-expression)


State 1653

  858 postfix-expression: postfix-expression OPEN_SQUARE expression-list CLOSE_SQUARE •

    $default  reduce using rule 858 (postfix-expression)


State 1654

  870 postfix-expression: postfix-expression DEREF TEMPLATE id-expression •

    $default  reduce using rule 870 (postfix-expression)


State 1655

  868 postfix-expression: postfix-expression DOT TEMPLATE id-expression •

    $default  reduce using rule 868 (postfix-expression)


State 1656

  862 postfix-expression: simple-type-specifier OPEN_PAREN expression-list CLOSE_PAREN •

    $default  reduce using rule 862 (postfix-expression)


State 1657

   50 attribute-specifier: OPEN_SQUARE OPEN_SQUARE • attribute-list CLOSE_SQUARE CLOSE_SQUARE
   51                    | OPEN_SQUARE OPEN_SQUARE • attribute-using-prefix attribute-list CLOSE_SQUARE CLOSE_SQUARE
  534 lambda-introducer: OPEN_SQUARE • CLOSE_SQUARE
  535                  | OPEN_SQUARE • lambda-capture CLOSE_SQUARE

    USING         shift, and go to state 460
    IDENTIFIER    shift, and go to state 1811
    EQ            shift, and go to state 763
    ELLIPSIS      shift, and go to state 764
    AND           shift, and go to state 765
    CLOSE_SQUARE  shift, and go to state 766
    MULT          shift, and go to state 767
    THIS          shift, and go to state 768

    attribute               go to state 462
    attribute-list          go to state 463
    attribute-namespace     go to state 464
    attribute-scoped-token  go to state 465
    attribute-token         go to state 466
    attribute-using-prefix  go to state 467
    capture                 go to state 769
    capture-default         go to state 770
    capture-list            go to state 771
    init-capture            go to state 772
    lambda-capture          go to state 773
    simple-capture          go to state 774


State 1658

  704 noptr-abstract-declarator: noptr-abstract-declarator parameters-and-qualifiers •

    $default  reduce using rule 704 (noptr-abstract-declarator)


State 1659

  714 noptr-abstract-declarator: OPEN_PAREN ptr-abstract-declarator CLOSE_PAREN •

    $default  reduce using rule 714 (noptr-abstract-declarator)


State 1660

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  711 noptr-abstract-declarator: OPEN_SQUARE CLOSE_SQUARE attribute-specifier-seq •

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    OPEN_SQUARE  [reduce using rule 711 (noptr-abstract-declarator)]
    $default     reduce using rule 711 (noptr-abstract-declarator)

    alignment-specifier  go to state 57
    attribute-specifier  go to state 260


State 1661

  709 noptr-abstract-declarator: OPEN_SQUARE constant-expression CLOSE_SQUARE •
  713                          | OPEN_SQUARE constant-expression CLOSE_SQUARE • attribute-specifier-seq

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    OPEN_SQUARE  [reduce using rule 709 (noptr-abstract-declarator)]
    $default     reduce using rule 709 (noptr-abstract-declarator)

    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 1812


State 1662

  706 noptr-abstract-declarator: noptr-abstract-declarator OPEN_SQUARE CLOSE_SQUARE •
  710                          | noptr-abstract-declarator OPEN_SQUARE CLOSE_SQUARE • attribute-specifier-seq

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    OPEN_SQUARE  [reduce using rule 706 (noptr-abstract-declarator)]
    $default     reduce using rule 706 (noptr-abstract-declarator)

    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 1813


State 1663

  708 noptr-abstract-declarator: noptr-abstract-declarator OPEN_SQUARE constant-expression • CLOSE_SQUARE
  712                          | noptr-abstract-declarator OPEN_SQUARE constant-expression • CLOSE_SQUARE attribute-specifier-seq

    CLOSE_SQUARE  shift, and go to state 1814


State 1664

    2 abstract-declarator: noptr-abstract-declarator parameters-and-qualifiers trailing-return-type •

    $default  reduce using rule 2 (abstract-declarator)


State 1665

  716 noptr-abstract-pack-declarator: noptr-abstract-pack-declarator OPEN_SQUARE CLOSE_SQUARE •
  718                               | noptr-abstract-pack-declarator OPEN_SQUARE CLOSE_SQUARE • attribute-specifier-seq

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    OPEN_SQUARE  [reduce using rule 716 (noptr-abstract-pack-declarator)]
    $default     reduce using rule 716 (noptr-abstract-pack-declarator)

    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 1815


State 1666

  717 noptr-abstract-pack-declarator: noptr-abstract-pack-declarator OPEN_SQUARE constant-expression • CLOSE_SQUARE
  719                               | noptr-abstract-pack-declarator OPEN_SQUARE constant-expression • CLOSE_SQUARE attribute-specifier-seq

    CLOSE_SQUARE  shift, and go to state 1816


State 1667

  864 postfix-expression: typename-specifier OPEN_PAREN expression-list CLOSE_PAREN •

    $default  reduce using rule 864 (postfix-expression)


State 1668

   47 attribute-list: attribute-list COMMA attribute ELLIPSIS •

    $default  reduce using rule 47 (attribute-list)


State 1669

   59 balanced-token: OPEN_PAREN CLOSE_PAREN •

    $default  reduce using rule 59 (balanced-token)


State 1670

   60 balanced-token: OPEN_PAREN balanced-token-seq • CLOSE_PAREN
   67 balanced-token-seq: balanced-token-seq • balanced-token

    OPEN_PAREN      shift, and go to state 1416
    CLOSE_PAREN     shift, and go to state 1817
    OPEN_SQUARE     shift, and go to state 1418
    OPEN_BRACE      shift, and go to state 1419
    BALANCED_TOKEN  shift, and go to state 1420

    balanced-token  go to state 1676


State 1671

   61 balanced-token: OPEN_SQUARE CLOSE_SQUARE •

    $default  reduce using rule 61 (balanced-token)


State 1672

   62 balanced-token: OPEN_SQUARE balanced-token-seq • CLOSE_SQUARE
   67 balanced-token-seq: balanced-token-seq • balanced-token

    OPEN_PAREN      shift, and go to state 1416
    OPEN_SQUARE     shift, and go to state 1418
    CLOSE_SQUARE    shift, and go to state 1818
    OPEN_BRACE      shift, and go to state 1419
    BALANCED_TOKEN  shift, and go to state 1420

    balanced-token  go to state 1676


State 1673

   63 balanced-token: OPEN_BRACE CLOSE_BRACE •

    $default  reduce using rule 63 (balanced-token)


State 1674

   64 balanced-token: OPEN_BRACE balanced-token-seq • CLOSE_BRACE
   67 balanced-token-seq: balanced-token-seq • balanced-token

    OPEN_PAREN      shift, and go to state 1416
    OPEN_SQUARE     shift, and go to state 1418
    OPEN_BRACE      shift, and go to state 1419
    CLOSE_BRACE     shift, and go to state 1819
    BALANCED_TOKEN  shift, and go to state 1420

    balanced-token  go to state 1676


State 1675

   41 attribute-argument-clause: OPEN_PAREN balanced-token-seq CLOSE_PAREN •

    $default  reduce using rule 41 (attribute-argument-clause)


State 1676

   67 balanced-token-seq: balanced-token-seq balanced-token •

    $default  reduce using rule 67 (balanced-token-seq)


State 1677

   51 attribute-specifier: OPEN_SQUARE OPEN_SQUARE attribute-using-prefix attribute-list CLOSE_SQUARE CLOSE_SQUARE •

    $default  reduce using rule 51 (attribute-specifier)


State 1678

  821 parameter-declaration: THIS decl-specifier-seq EQ initializer-clause •

    $default  reduce using rule 821 (parameter-declaration)


State 1679

  825 parameter-declaration: THIS decl-specifier-seq abstract-declarator EQ • initializer-clause

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 935
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 1134
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    braced-init-list                     go to state 1135
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    initializer-clause                   go to state 1820
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 1680

  809 parameter-declaration: THIS decl-specifier-seq declarator EQ • initializer-clause

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 935
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 1134
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    braced-init-list                     go to state 1135
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    initializer-clause                   go to state 1821
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 1681

  820 parameter-declaration: attribute-specifier-seq THIS decl-specifier-seq EQ • initializer-clause

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 935
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 1134
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    braced-init-list                     go to state 1135
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    initializer-clause                   go to state 1822
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 1682

  816 parameter-declaration: attribute-specifier-seq THIS decl-specifier-seq abstract-declarator •
  824                      | attribute-specifier-seq THIS decl-specifier-seq abstract-declarator • EQ initializer-clause

    EQ  shift, and go to state 1823

    $default  reduce using rule 816 (parameter-declaration)


State 1683

  804 parameter-declaration: attribute-specifier-seq THIS decl-specifier-seq declarator •
  808                      | attribute-specifier-seq THIS decl-specifier-seq declarator • EQ initializer-clause

    EQ  shift, and go to state 1824

    $default  reduce using rule 804 (parameter-declaration)


State 1684

  818 parameter-declaration: attribute-specifier-seq decl-specifier-seq EQ initializer-clause •

    $default  reduce using rule 818 (parameter-declaration)


State 1685

  822 parameter-declaration: attribute-specifier-seq decl-specifier-seq abstract-declarator EQ • initializer-clause

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 935
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 1134
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    braced-init-list                     go to state 1135
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    initializer-clause                   go to state 1825
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 1686

  806 parameter-declaration: attribute-specifier-seq decl-specifier-seq declarator EQ • initializer-clause

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 935
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 1134
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    braced-init-list                     go to state 1135
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    initializer-clause                   go to state 1826
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 1687

  823 parameter-declaration: decl-specifier-seq abstract-declarator EQ initializer-clause •

    $default  reduce using rule 823 (parameter-declaration)


State 1688

  807 parameter-declaration: decl-specifier-seq declarator EQ initializer-clause •

    $default  reduce using rule 807 (parameter-declaration)


State 1689

  1098 type-parameter: template-head type-parameter-key IDENTIFIER EQ • id-expression

    IDENTIFIER  shift, and go to state 147
    SCOPE       shift, and go to state 9
    OPERATOR    shift, and go to state 17
    DECLTYPE    shift, and go to state 134
    COMPL       shift, and go to state 35

    class-name              go to state 65
    conversion-function-id  go to state 68
    decltype-specifier      go to state 138
    enum-name               go to state 84
    id-expression           go to state 1827
    literal-operator-id     go to state 95
    namespace-alias         go to state 99
    namespace-name          go to state 102
    nested-name-specifier   go to state 152
    operator-function-id    go to state 108
    qualified-id            go to state 112
    simple-template-id      go to state 114
    template-id             go to state 120
    template-name           go to state 142
    type-name               go to state 143
    typedef-name            go to state 126
    unqualified-id          go to state 129


State 1690

  1097 type-parameter: template-head type-parameter-key EQ id-expression •

    $default  reduce using rule 1097 (type-parameter)


State 1691

  1096 type-parameter: template-head type-parameter-key ELLIPSIS IDENTIFIER •

    $default  reduce using rule 1096 (type-parameter)


State 1692

  1092 type-parameter: type-constraint IDENTIFIER EQ type-id •

    $default  reduce using rule 1092 (type-parameter)


State 1693

  1086 type-parameter: type-parameter-key IDENTIFIER EQ type-id •

    $default  reduce using rule 1086 (type-parameter)


State 1694

  747 octal-escape-sequence: ESCAPE octal-digit octal-digit octal-digit •

    $default  reduce using rule 747 (octal-escape-sequence)


State 1695

  421 hex-quad: hexadecimal-digit hexadecimal-digit hexadecimal-digit • hexadecimal-digit

    '0'  shift, and go to state 867
    '1'  shift, and go to state 868
    '2'  shift, and go to state 869
    '3'  shift, and go to state 870
    '4'  shift, and go to state 871
    '5'  shift, and go to state 872
    '6'  shift, and go to state 873
    '7'  shift, and go to state 874
    '8'  shift, and go to state 875
    '9'  shift, and go to state 876
    'e'  shift, and go to state 877
    'E'  shift, and go to state 878
    'f'  shift, and go to state 879
    'F'  shift, and go to state 880
    'a'  shift, and go to state 881
    'b'  shift, and go to state 882
    'c'  shift, and go to state 883
    'd'  shift, and go to state 884
    'A'  shift, and go to state 885
    'B'  shift, and go to state 886
    'C'  shift, and go to state 887
    'D'  shift, and go to state 888

    hexadecimal-digit  go to state 1828


State 1696

  643 named-namespace-definition: INLINE NAMESPACE IDENTIFIER OPEN_BRACE namespace-body CLOSE_BRACE •

    $default  reduce using rule 643 (named-namespace-definition)


State 1697

  645 named-namespace-definition: INLINE NAMESPACE attribute-specifier-seq IDENTIFIER OPEN_BRACE namespace-body • CLOSE_BRACE

    CLOSE_BRACE  shift, and go to state 1829


State 1698

  1138 unnamed-namespace-definition: INLINE NAMESPACE attribute-specifier-seq OPEN_BRACE namespace-body CLOSE_BRACE •

    $default  reduce using rule 1138 (unnamed-namespace-definition)


State 1699

  625 module-declaration: EXPORT MODULE module-name module-partition attribute-specifier-seq SEMICOLON •

    $default  reduce using rule 625 (module-declaration)


State 1700

  646 named-namespace-definition: NAMESPACE attribute-specifier-seq IDENTIFIER OPEN_BRACE namespace-body CLOSE_BRACE •

    $default  reduce using rule 646 (named-namespace-definition)


State 1701

  662 nested-namespace-definition: NAMESPACE enclosing-namespace-specifier SCOPE IDENTIFIER OPEN_BRACE namespace-body • CLOSE_BRACE

    CLOSE_BRACE  shift, and go to state 1830


State 1702

  663 nested-namespace-definition: NAMESPACE enclosing-namespace-specifier SCOPE INLINE IDENTIFIER OPEN_BRACE • namespace-body CLOSE_BRACE

    USING          shift, and go to state 1
    IDENTIFIER     shift, and go to state 2
    SEMICOLON      shift, and go to state 3
    ALIGNAS        shift, and go to state 4
    OPEN_PAREN     shift, and go to state 5
    ELLIPSIS       shift, and go to state 6
    AND            shift, and go to state 7
    ASM            shift, and go to state 8
    SCOPE          shift, and go to state 9
    OPEN_SQUARE    shift, and go to state 10
    VIRTUAL        shift, and go to state 11
    CLASS          shift, and go to state 12
    STRUCT         shift, and go to state 13
    UNION          shift, and go to state 14
    TEMPLATE       shift, and go to state 15
    AND_AND        shift, and go to state 16
    OPERATOR       shift, and go to state 17
    CONST          shift, and go to state 18
    VOLATILE       shift, and go to state 19
    FRIEND         shift, and go to state 20
    TYPEDEF        shift, and go to state 21
    CONSTEXPR      shift, and go to state 22
    CONSTEVAL      shift, and go to state 23
    CONSTINIT      shift, and go to state 24
    INLINE         shift, and go to state 25
    DECLTYPE       shift, and go to state 26
    ENUM           shift, and go to state 27
    EXTERN         shift, and go to state 28
    EXPLICIT       shift, and go to state 29
    EXPORT         shift, and go to state 157
    MULT           shift, and go to state 31
    IMPORT         shift, and go to state 33
    NAMESPACE      shift, and go to state 34
    COMPL          shift, and go to state 35
    AUTO           shift, and go to state 36
    CHAR           shift, and go to state 37
    CHAR8_T        shift, and go to state 38
    CHAR16_T       shift, and go to state 39
    CHAR32_T       shift, and go to state 40
    WCHAR_T        shift, and go to state 41
    BOOL           shift, and go to state 42
    SHORT          shift, and go to state 43
    INT            shift, and go to state 44
    LONG           shift, and go to state 45
    SIGNED         shift, and go to state 46
    UNSIGNED       shift, and go to state 47
    FLOAT          shift, and go to state 48
    DOUBLE         shift, and go to state 49
    VOID           shift, and go to state 50
    STATIC_ASSERT  shift, and go to state 51
    STATIC         shift, and go to state 52
    THREAD_LOCAL   shift, and go to state 53
    MUTABLE        shift, and go to state 54
    TYPENAME       shift, and go to state 55

    alias-declaration                go to state 56
    alignment-specifier              go to state 57
    asm-declaration                  go to state 58
    attribute-declaration            go to state 59
    attribute-specifier              go to state 60
    attribute-specifier-seq          go to state 61
    block-declaration                go to state 62
    class-head                       go to state 63
    class-key                        go to state 64
    class-name                       go to state 65
    class-specifier                  go to state 66
    concept-name                     go to state 67
    conversion-function-id           go to state 68
    cv-qualifier                     go to state 69
    decl-specifier                   go to state 70
    decl-specifier-seq               go to state 71
    declaration                      go to state 72
    declaration-seq                  go to state 566
    declarator                       go to state 74
    declarator-id                    go to state 75
    decltype-specifier               go to state 76
    deduction-guide                  go to state 77
    defining-type-specifier          go to state 78
    elaborated-enum-specifier        go to state 79
    elaborated-type-specifier        go to state 80
    empty-declaration                go to state 81
    enum-head                        go to state 82
    enum-key                         go to state 83
    enum-name                        go to state 84
    enum-specifier                   go to state 85
    explicit-instantiation           go to state 86
    explicit-specialization          go to state 87
    explicit-specifier               go to state 88
    export-declaration               go to state 89
    function-definition              go to state 90
    function-specifier               go to state 91
    id-expression                    go to state 93
    linkage-specification            go to state 94
    literal-operator-id              go to state 95
    module-import-declaration        go to state 97
    named-namespace-definition       go to state 98
    namespace-alias                  go to state 99
    namespace-alias-definition       go to state 100
    namespace-body                   go to state 1831
    namespace-definition             go to state 101
    namespace-name                   go to state 102
    nested-name-specifier            go to state 103
    nested-namespace-definition      go to state 104
    nodeclspec-function-declaration  go to state 105
    noptr-declarator                 go to state 106
    opaque-enum-declaration          go to state 107
    operator-function-id             go to state 108
    placeholder-type-specifier       go to state 109
    ptr-declarator                   go to state 110
    ptr-operator                     go to state 111
    qualified-id                     go to state 112
    simple-declaration               go to state 113
    simple-template-id               go to state 114
    simple-type-specifier            go to state 115
    static_assert-declaration        go to state 116
    storage-class-specifier          go to state 117
    template-declaration             go to state 118
    template-head                    go to state 119
    template-id                      go to state 120
    template-name                    go to state 121
    type-constraint                  go to state 123
    type-name                        go to state 124
    type-specifier                   go to state 125
    typedef-name                     go to state 126
    typename-specifier               go to state 127
    unnamed-namespace-definition     go to state 128
    unqualified-id                   go to state 129
    using-declaration                go to state 130
    using-directive                  go to state 131
    using-enum-declaration           go to state 132


State 1703

  1025 static_assert-declaration: STATIC_ASSERT OPEN_PAREN constant-expression COMMA string-literal CLOSE_PAREN • SEMICOLON

    SEMICOLON  shift, and go to state 1832


State 1704

  1173 using-directive: attribute-specifier-seq USING NAMESPACE nested-name-specifier namespace-name SEMICOLON •

    $default  reduce using rule 1173 (using-directive)


State 1705

   21 asm-declaration: attribute-specifier-seq ASM OPEN_PAREN string-literal CLOSE_PAREN SEMICOLON •

    $default  reduce using rule 21 (asm-declaration)


State 1706

  966 simple-declaration: attribute-specifier-seq decl-specifier-seq OPEN_SQUARE identifier-list CLOSE_SQUARE initializer • SEMICOLON

    SEMICOLON  shift, and go to state 1833


State 1707

  968 simple-declaration: attribute-specifier-seq decl-specifier-seq ref-qualifier OPEN_SQUARE identifier-list CLOSE_SQUARE • initializer SEMICOLON

    EQ          shift, and go to state 1273
    OPEN_PAREN  shift, and go to state 643
    OPEN_BRACE  shift, and go to state 935

    brace-or-equal-initializer  go to state 645
    braced-init-list            go to state 646
    initializer                 go to state 1834


State 1708

  609 member-declarator: IDENTIFIER COLON constant-expression brace-or-equal-initializer •

    $default  reduce using rule 609 (member-declarator)


State 1709

  607 member-declarator: IDENTIFIER attribute-specifier-seq COLON constant-expression •
  611                  | IDENTIFIER attribute-specifier-seq COLON constant-expression • brace-or-equal-initializer

    EQ          shift, and go to state 1273
    OPEN_BRACE  shift, and go to state 935

    $default  reduce using rule 607 (member-declarator)

    brace-or-equal-initializer  go to state 1835
    braced-init-list            go to state 646


State 1710

  610 member-declarator: COLON constant-expression brace-or-equal-initializer •
  612                  | attribute-specifier-seq COLON constant-expression brace-or-equal-initializer •

    SEMICOLON  reduce using rule 610 (member-declarator)
    SEMICOLON  [reduce using rule 612 (member-declarator)]
    COMMA      reduce using rule 610 (member-declarator)
    COMMA      [reduce using rule 612 (member-declarator)]
    $default   reduce using rule 610 (member-declarator)


State 1711

  608 member-declarator: attribute-specifier-seq COLON constant-expression •
  612                  | attribute-specifier-seq COLON constant-expression • brace-or-equal-initializer

    EQ          shift, and go to state 1273
    OPEN_BRACE  shift, and go to state 935

    $default  reduce using rule 608 (member-declarator)

    brace-or-equal-initializer  go to state 1836
    braced-init-list            go to state 646


State 1712

  405 function-definition: attribute-specifier-seq decl-specifier-seq declarator requires-clause • function-body
  602 member-declarator: declarator requires-clause •

    EQ          shift, and go to state 286
    COLON       shift, and go to state 288
    OPEN_BRACE  shift, and go to state 289
    TRY         shift, and go to state 291

    $default  reduce using rule 602 (member-declarator)

    compound-statement  go to state 294
    ctor-initializer    go to state 295
    function-body       go to state 1477
    function-try-block  go to state 297


State 1713

  401 function-definition: attribute-specifier-seq decl-specifier-seq declarator virt-specifier-seq • function-body
  599 member-declarator: declarator virt-specifier-seq •
  601                  | declarator virt-specifier-seq • pure-specifier
  1179 virt-specifier-seq: virt-specifier-seq • virt-specifier

    EQ          shift, and go to state 1497
    COLON       shift, and go to state 288
    OPEN_BRACE  shift, and go to state 289
    FINAL       shift, and go to state 290
    TRY         shift, and go to state 291
    OVERRIDE    shift, and go to state 293

    $default  reduce using rule 599 (member-declarator)

    compound-statement  go to state 294
    ctor-initializer    go to state 295
    function-body       go to state 1478
    function-try-block  go to state 297
    pure-specifier      go to state 1498
    virt-specifier      go to state 703


State 1714

  586 member-declaration: attribute-specifier-seq decl-specifier-seq member-declarator-list SEMICOLON •

    $default  reduce using rule 586 (member-declaration)


State 1715

  905 pure-specifier: EQ '0' •

    $default  reduce using rule 905 (pure-specifier)


State 1716

  106 brace-or-equal-initializer: EQ • initializer-clause
  905 pure-specifier: EQ • '0'

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 935
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 1496
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 1134
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    braced-init-list                     go to state 1135
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    initializer-clause                   go to state 1136
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 1717

  602 member-declarator: declarator requires-clause •

    $default  reduce using rule 602 (member-declarator)


State 1718

  599 member-declarator: declarator virt-specifier-seq •
  601                  | declarator virt-specifier-seq • pure-specifier
  1179 virt-specifier-seq: virt-specifier-seq • virt-specifier

    EQ        shift, and go to state 1837
    FINAL     shift, and go to state 290
    OVERRIDE  shift, and go to state 293

    $default  reduce using rule 599 (member-declarator)

    pure-specifier  go to state 1498
    virt-specifier  go to state 703


State 1719

   73 base-specifier: attribute-specifier-seq VIRTUAL access-specifier class-or-decltype •

    $default  reduce using rule 73 (base-specifier)


State 1720

   77 base-specifier: attribute-specifier-seq access-specifier VIRTUAL class-or-decltype •

    $default  reduce using rule 77 (base-specifier)


State 1721

   82 base-specifier-list: base-specifier-list COMMA base-specifier ELLIPSIS •

    $default  reduce using rule 82 (base-specifier-list)


State 1722

  1042 template-argument-list: template-argument-list COMMA template-argument ELLIPSIS •

    $default  reduce using rule 1042 (template-argument-list)


State 1723

  967 simple-declaration: decl-specifier-seq OPEN_SQUARE identifier-list CLOSE_SQUARE initializer SEMICOLON •

    $default  reduce using rule 967 (simple-declaration)


State 1724

  483 initializer-list: initializer-list COMMA initializer-clause •
  484                 | initializer-list COMMA initializer-clause • ELLIPSIS

    ELLIPSIS  shift, and go to state 1838

    $default  reduce using rule 483 (initializer-list)


State 1725

  111 braced-init-list: OPEN_BRACE designated-initializer-list COMMA CLOSE_BRACE •

    $default  reduce using rule 111 (braced-init-list)


State 1726

  248 designator: DOT • IDENTIFIER

    IDENTIFIER  shift, and go to state 1516


State 1727

  247 designated-initializer-list: designated-initializer-list COMMA designated-initializer-clause •

    $default  reduce using rule 247 (designated-initializer-list)


State 1728

  109 braced-init-list: OPEN_BRACE initializer-list COMMA CLOSE_BRACE •

    $default  reduce using rule 109 (braced-init-list)


State 1729

  969 simple-declaration: decl-specifier-seq ref-qualifier OPEN_SQUARE identifier-list CLOSE_SQUARE initializer • SEMICOLON

    SEMICOLON  shift, and go to state 1839


State 1730

  572 mem-initializer: mem-initializer-id OPEN_PAREN expression-list CLOSE_PAREN •

    $default  reduce using rule 572 (mem-initializer)


State 1731

  579 mem-initializer-list: mem-initializer-list COMMA mem-initializer ELLIPSIS •

    $default  reduce using rule 579 (mem-initializer-list)


State 1732

  165 condition: attribute-specifier-seq decl-specifier-seq • declarator brace-or-equal-initializer

    IDENTIFIER  shift, and go to state 147
    OPEN_PAREN  shift, and go to state 5
    ELLIPSIS    shift, and go to state 6
    AND         shift, and go to state 7
    SCOPE       shift, and go to state 9
    AND_AND     shift, and go to state 16
    OPERATOR    shift, and go to state 17
    DECLTYPE    shift, and go to state 134
    MULT        shift, and go to state 31
    COMPL       shift, and go to state 35

    class-name              go to state 65
    conversion-function-id  go to state 68
    declarator              go to state 1840
    declarator-id           go to state 75
    decltype-specifier      go to state 138
    enum-name               go to state 84
    id-expression           go to state 93
    literal-operator-id     go to state 95
    namespace-alias         go to state 99
    namespace-name          go to state 102
    nested-name-specifier   go to state 148
    noptr-declarator        go to state 106
    operator-function-id    go to state 108
    ptr-declarator          go to state 110
    ptr-operator            go to state 111
    qualified-id            go to state 112
    simple-template-id      go to state 114
    template-id             go to state 120
    template-name           go to state 142
    type-name               go to state 143
    typedef-name            go to state 126
    unqualified-id          go to state 129


State 1733

  505 iteration-statement: WHILE OPEN_PAREN condition CLOSE_PAREN • statement

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    USING             shift, and go to state 1
    IDENTIFIER        shift, and go to state 661
    SEMICOLON         shift, and go to state 662
    ALIGNAS           shift, and go to state 4
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    ASM               shift, and go to state 8
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 663
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 289
    VIRTUAL           shift, and go to state 11
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CO_RETURN         shift, and go to state 665
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    FRIEND            shift, and go to state 20
    TYPEDEF           shift, and go to state 21
    CONSTEXPR         shift, and go to state 22
    CONSTEVAL         shift, and go to state 23
    CONSTINIT         shift, and go to state 24
    INLINE            shift, and go to state 258
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 27
    UNICODE_8         shift, and go to state 184
    EXTERN            shift, and go to state 259
    EXPLICIT          shift, and go to state 29
    MULT              shift, and go to state 371
    DEFAULT           shift, and go to state 666
    TRY               shift, and go to state 667
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    WHILE             shift, and go to state 668
    DO                shift, and go to state 669
    FOR               shift, and go to state 670
    BREAK             shift, and go to state 671
    CONTINUE          shift, and go to state 672
    RETURN            shift, and go to state 673
    GOTO              shift, and go to state 674
    CASE              shift, and go to state 675
    NAMESPACE         shift, and go to state 676
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    IF                shift, and go to state 677
    SWITCH            shift, and go to state 678
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    STATIC_ASSERT     shift, and go to state 51
    STATIC            shift, and go to state 52
    THREAD_LOCAL      shift, and go to state 53
    MUTABLE           shift, and go to state 54
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    alias-declaration                    go to state 56
    alignment-specifier                  go to state 57
    and-expression                       go to state 400
    asm-declaration                      go to state 58
    assignment-expression                go to state 525
    attribute-specifier                  go to state 60
    attribute-specifier-seq              go to state 679
    await-expression                     go to state 401
    binary-literal                       go to state 402
    block-declaration                    go to state 680
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-head                           go to state 63
    class-key                            go to state 64
    class-name                           go to state 65
    class-specifier                      go to state 66
    compare-expression                   go to state 406
    compound-statement                   go to state 681
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    coroutine-return-statement           go to state 682
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decl-specifier                       go to state 70
    decl-specifier-seq                   go to state 683
    declaration-statement                go to state 684
    decltype-specifier                   go to state 76
    defining-type-specifier              go to state 78
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-head                            go to state 82
    enum-key                             go to state 83
    enum-name                            go to state 84
    enum-specifier                       go to state 85
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    explicit-specifier                   go to state 264
    expression                           go to state 685
    expression-statement                 go to state 686
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    function-specifier                   go to state 91
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    iteration-statement                  go to state 687
    jump-statement                       go to state 688
    labeled-statement                    go to state 689
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-alias-definition           go to state 100
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    opaque-enum-declaration              go to state 107
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    selection-statement                  go to state 690
    shift-expression                     go to state 443
    simple-declaration                   go to state 113
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    statement                            go to state 1841
    static_assert-declaration            go to state 116
    storage-class-specifier              go to state 117
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    try-block                            go to state 693
    type-constraint                      go to state 123
    type-name                            go to state 124
    type-specifier                       go to state 125
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    using-declaration                    go to state 130
    using-directive                      go to state 131
    using-enum-declaration               go to state 132
    yield-expression                     go to state 532


State 1734

  166 condition: decl-specifier-seq declarator • brace-or-equal-initializer

    EQ          shift, and go to state 1273
    OPEN_BRACE  shift, and go to state 935

    brace-or-equal-initializer  go to state 1842
    braced-init-list            go to state 646


State 1735

  506 iteration-statement: DO statement WHILE OPEN_PAREN • expression CLOSE_PAREN SEMICOLON

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 525
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    expression                           go to state 1843
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 1736

   13 alias-declaration: USING IDENTIFIER • EQ defining-type-id SEMICOLON
   14                  | USING IDENTIFIER • attribute-specifier-seq EQ defining-type-id SEMICOLON

    EQ           shift, and go to state 342
    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 343


State 1737

  380 for-range-declaration: attribute-specifier-seq decl-specifier-seq • declarator
  382                      | attribute-specifier-seq decl-specifier-seq • OPEN_SQUARE identifier-list CLOSE_SQUARE
  384                      | attribute-specifier-seq decl-specifier-seq • ref-qualifier OPEN_SQUARE identifier-list CLOSE_SQUARE
  965 simple-declaration: attribute-specifier-seq decl-specifier-seq • init-declarator-list SEMICOLON
  966                   | attribute-specifier-seq decl-specifier-seq • OPEN_SQUARE identifier-list CLOSE_SQUARE initializer SEMICOLON
  968                   | attribute-specifier-seq decl-specifier-seq • ref-qualifier OPEN_SQUARE identifier-list CLOSE_SQUARE initializer SEMICOLON

    IDENTIFIER   shift, and go to state 147
    OPEN_PAREN   shift, and go to state 5
    ELLIPSIS     shift, and go to state 6
    AND          shift, and go to state 278
    SCOPE        shift, and go to state 9
    OPEN_SQUARE  shift, and go to state 1844
    AND_AND      shift, and go to state 280
    OPERATOR     shift, and go to state 17
    DECLTYPE     shift, and go to state 134
    MULT         shift, and go to state 31
    COMPL        shift, and go to state 35

    class-name              go to state 65
    conversion-function-id  go to state 68
    declarator              go to state 1845
    declarator-id           go to state 75
    decltype-specifier      go to state 138
    enum-name               go to state 84
    id-expression           go to state 93
    init-declarator         go to state 282
    init-declarator-list    go to state 579
    literal-operator-id     go to state 95
    namespace-alias         go to state 99
    namespace-name          go to state 102
    nested-name-specifier   go to state 148
    noptr-declarator        go to state 106
    operator-function-id    go to state 108
    ptr-declarator          go to state 110
    ptr-operator            go to state 111
    qualified-id            go to state 112
    ref-qualifier           go to state 1846
    simple-template-id      go to state 114
    template-id             go to state 120
    template-name           go to state 142
    type-name               go to state 143
    typedef-name            go to state 126
    unqualified-id          go to state 129


State 1738

  383 for-range-declaration: decl-specifier-seq OPEN_SQUARE • identifier-list CLOSE_SQUARE
  967 simple-declaration: decl-specifier-seq OPEN_SQUARE • identifier-list CLOSE_SQUARE initializer SEMICOLON

    IDENTIFIER  shift, and go to state 640

    identifier-list  go to state 1847


State 1739

  381 for-range-declaration: decl-specifier-seq declarator •
  469 init-declarator: declarator •
  470                | declarator • initializer
  471                | declarator • requires-clause

    EQ          shift, and go to state 1273
    OPEN_PAREN  shift, and go to state 643
    OPEN_BRACE  shift, and go to state 935
    REQUIRES    shift, and go to state 292

    COLON     reduce using rule 381 (for-range-declaration)
    $default  reduce using rule 469 (init-declarator)

    brace-or-equal-initializer  go to state 645
    braced-init-list            go to state 646
    initializer                 go to state 648
    requires-clause             go to state 1522


State 1740

  385 for-range-declaration: decl-specifier-seq ref-qualifier • OPEN_SQUARE identifier-list CLOSE_SQUARE
  969 simple-declaration: decl-specifier-seq ref-qualifier • OPEN_SQUARE identifier-list CLOSE_SQUARE initializer SEMICOLON

    OPEN_SQUARE  shift, and go to state 1848


State 1741

  511 iteration-statement: FOR OPEN_PAREN for-range-declaration COLON • for-range-initializer CLOSE_PAREN statement

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 935
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 525
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    braced-init-list                     go to state 1160
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    expr-or-braced-init-list             go to state 1849
    expression                           go to state 1162
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    for-range-initializer                go to state 1850
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 1742

  507 iteration-statement: FOR OPEN_PAREN init-statement SEMICOLON • CLOSE_PAREN statement
  509                    | FOR OPEN_PAREN init-statement SEMICOLON • expression CLOSE_PAREN statement

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    CLOSE_PAREN       shift, and go to state 1851
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 525
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    expression                           go to state 1852
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 1743

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  165 condition: attribute-specifier-seq • decl-specifier-seq declarator brace-or-equal-initializer
  380 for-range-declaration: attribute-specifier-seq • decl-specifier-seq declarator
  382                      | attribute-specifier-seq • decl-specifier-seq OPEN_SQUARE identifier-list CLOSE_SQUARE
  384                      | attribute-specifier-seq • decl-specifier-seq ref-qualifier OPEN_SQUARE identifier-list CLOSE_SQUARE

    IDENTIFIER    shift, and go to state 162
    ALIGNAS       shift, and go to state 4
    SCOPE         shift, and go to state 9
    OPEN_SQUARE   shift, and go to state 10
    VIRTUAL       shift, and go to state 11
    CLASS         shift, and go to state 12
    STRUCT        shift, and go to state 13
    UNION         shift, and go to state 14
    CONST         shift, and go to state 18
    VOLATILE      shift, and go to state 19
    FRIEND        shift, and go to state 20
    TYPEDEF       shift, and go to state 21
    CONSTEXPR     shift, and go to state 22
    CONSTEVAL     shift, and go to state 23
    CONSTINIT     shift, and go to state 24
    INLINE        shift, and go to state 258
    DECLTYPE      shift, and go to state 26
    ENUM          shift, and go to state 27
    EXTERN        shift, and go to state 259
    EXPLICIT      shift, and go to state 29
    AUTO          shift, and go to state 36
    CHAR          shift, and go to state 37
    CHAR8_T       shift, and go to state 38
    CHAR16_T      shift, and go to state 39
    CHAR32_T      shift, and go to state 40
    WCHAR_T       shift, and go to state 41
    BOOL          shift, and go to state 42
    SHORT         shift, and go to state 43
    INT           shift, and go to state 44
    LONG          shift, and go to state 45
    SIGNED        shift, and go to state 46
    UNSIGNED      shift, and go to state 47
    FLOAT         shift, and go to state 48
    DOUBLE        shift, and go to state 49
    VOID          shift, and go to state 50
    STATIC        shift, and go to state 52
    THREAD_LOCAL  shift, and go to state 53
    MUTABLE       shift, and go to state 54
    TYPENAME      shift, and go to state 55

    alignment-specifier         go to state 57
    attribute-specifier         go to state 260
    class-head                  go to state 63
    class-key                   go to state 64
    class-name                  go to state 65
    class-specifier             go to state 66
    concept-name                go to state 67
    cv-qualifier                go to state 69
    decl-specifier              go to state 70
    decl-specifier-seq          go to state 1853
    decltype-specifier          go to state 76
    defining-type-specifier     go to state 78
    elaborated-enum-specifier   go to state 79
    elaborated-type-specifier   go to state 80
    enum-head                   go to state 82
    enum-key                    go to state 263
    enum-name                   go to state 84
    enum-specifier              go to state 85
    explicit-specifier          go to state 264
    function-specifier          go to state 91
    namespace-alias             go to state 99
    namespace-name              go to state 102
    nested-name-specifier       go to state 212
    placeholder-type-specifier  go to state 109
    simple-template-id          go to state 141
    simple-type-specifier       go to state 115
    storage-class-specifier     go to state 117
    template-name               go to state 215
    type-constraint             go to state 123
    type-name                   go to state 124
    type-specifier              go to state 125
    typedef-name                go to state 126
    typename-specifier          go to state 127


State 1744

  508 iteration-statement: FOR OPEN_PAREN init-statement condition • SEMICOLON CLOSE_PAREN statement
  510                    | FOR OPEN_PAREN init-statement condition • SEMICOLON expression CLOSE_PAREN statement

    SEMICOLON  shift, and go to state 1854


State 1745

  166 condition: decl-specifier-seq • declarator brace-or-equal-initializer
  381 for-range-declaration: decl-specifier-seq • declarator
  383                      | decl-specifier-seq • OPEN_SQUARE identifier-list CLOSE_SQUARE
  385                      | decl-specifier-seq • ref-qualifier OPEN_SQUARE identifier-list CLOSE_SQUARE

    IDENTIFIER   shift, and go to state 147
    OPEN_PAREN   shift, and go to state 5
    ELLIPSIS     shift, and go to state 6
    AND          shift, and go to state 278
    SCOPE        shift, and go to state 9
    OPEN_SQUARE  shift, and go to state 1855
    AND_AND      shift, and go to state 280
    OPERATOR     shift, and go to state 17
    DECLTYPE     shift, and go to state 134
    MULT         shift, and go to state 31
    COMPL        shift, and go to state 35

    class-name              go to state 65
    conversion-function-id  go to state 68
    declarator              go to state 1856
    declarator-id           go to state 75
    decltype-specifier      go to state 138
    enum-name               go to state 84
    id-expression           go to state 93
    literal-operator-id     go to state 95
    namespace-alias         go to state 99
    namespace-name          go to state 102
    nested-name-specifier   go to state 148
    noptr-declarator        go to state 106
    operator-function-id    go to state 108
    ptr-declarator          go to state 110
    ptr-operator            go to state 111
    qualified-id            go to state 112
    ref-qualifier           go to state 1857
    simple-template-id      go to state 114
    template-id             go to state 120
    template-name           go to state 142
    type-name               go to state 143
    typedef-name            go to state 126
    unqualified-id          go to state 129


State 1746

  512 iteration-statement: FOR OPEN_PAREN init-statement for-range-declaration • COLON for-range-initializer CLOSE_PAREN statement

    COLON  shift, and go to state 1858


State 1747

  522 labeled-statement: CASE constant-expression COLON statement •

    $default  reduce using rule 522 (labeled-statement)


State 1748

  165 condition: attribute-specifier-seq decl-specifier-seq • declarator brace-or-equal-initializer
  965 simple-declaration: attribute-specifier-seq decl-specifier-seq • init-declarator-list SEMICOLON
  966                   | attribute-specifier-seq decl-specifier-seq • OPEN_SQUARE identifier-list CLOSE_SQUARE initializer SEMICOLON
  968                   | attribute-specifier-seq decl-specifier-seq • ref-qualifier OPEN_SQUARE identifier-list CLOSE_SQUARE initializer SEMICOLON

    IDENTIFIER   shift, and go to state 147
    OPEN_PAREN   shift, and go to state 5
    ELLIPSIS     shift, and go to state 6
    AND          shift, and go to state 278
    SCOPE        shift, and go to state 9
    OPEN_SQUARE  shift, and go to state 577
    AND_AND      shift, and go to state 280
    OPERATOR     shift, and go to state 17
    DECLTYPE     shift, and go to state 134
    MULT         shift, and go to state 31
    COMPL        shift, and go to state 35

    class-name              go to state 65
    conversion-function-id  go to state 68
    declarator              go to state 1859
    declarator-id           go to state 75
    decltype-specifier      go to state 138
    enum-name               go to state 84
    id-expression           go to state 93
    init-declarator         go to state 282
    init-declarator-list    go to state 579
    literal-operator-id     go to state 95
    namespace-alias         go to state 99
    namespace-name          go to state 102
    nested-name-specifier   go to state 148
    noptr-declarator        go to state 106
    operator-function-id    go to state 108
    ptr-declarator          go to state 110
    ptr-operator            go to state 111
    qualified-id            go to state 112
    ref-qualifier           go to state 580
    simple-template-id      go to state 114
    template-id             go to state 120
    template-name           go to state 142
    type-name               go to state 143
    typedef-name            go to state 126
    unqualified-id          go to state 129


State 1749

  938 selection-statement: IF OPEN_PAREN condition CLOSE_PAREN • statement
  942                    | IF OPEN_PAREN condition CLOSE_PAREN • statement ELSE statement

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    USING             shift, and go to state 1
    IDENTIFIER        shift, and go to state 661
    SEMICOLON         shift, and go to state 662
    ALIGNAS           shift, and go to state 4
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    ASM               shift, and go to state 8
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 663
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 289
    VIRTUAL           shift, and go to state 11
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CO_RETURN         shift, and go to state 665
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    FRIEND            shift, and go to state 20
    TYPEDEF           shift, and go to state 21
    CONSTEXPR         shift, and go to state 22
    CONSTEVAL         shift, and go to state 23
    CONSTINIT         shift, and go to state 24
    INLINE            shift, and go to state 258
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 27
    UNICODE_8         shift, and go to state 184
    EXTERN            shift, and go to state 259
    EXPLICIT          shift, and go to state 29
    MULT              shift, and go to state 371
    DEFAULT           shift, and go to state 666
    TRY               shift, and go to state 667
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    WHILE             shift, and go to state 668
    DO                shift, and go to state 669
    FOR               shift, and go to state 670
    BREAK             shift, and go to state 671
    CONTINUE          shift, and go to state 672
    RETURN            shift, and go to state 673
    GOTO              shift, and go to state 674
    CASE              shift, and go to state 675
    NAMESPACE         shift, and go to state 676
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    IF                shift, and go to state 677
    SWITCH            shift, and go to state 678
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    STATIC_ASSERT     shift, and go to state 51
    STATIC            shift, and go to state 52
    THREAD_LOCAL      shift, and go to state 53
    MUTABLE           shift, and go to state 54
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    alias-declaration                    go to state 56
    alignment-specifier                  go to state 57
    and-expression                       go to state 400
    asm-declaration                      go to state 58
    assignment-expression                go to state 525
    attribute-specifier                  go to state 60
    attribute-specifier-seq              go to state 679
    await-expression                     go to state 401
    binary-literal                       go to state 402
    block-declaration                    go to state 680
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-head                           go to state 63
    class-key                            go to state 64
    class-name                           go to state 65
    class-specifier                      go to state 66
    compare-expression                   go to state 406
    compound-statement                   go to state 681
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    coroutine-return-statement           go to state 682
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decl-specifier                       go to state 70
    decl-specifier-seq                   go to state 683
    declaration-statement                go to state 684
    decltype-specifier                   go to state 76
    defining-type-specifier              go to state 78
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-head                            go to state 82
    enum-key                             go to state 83
    enum-name                            go to state 84
    enum-specifier                       go to state 85
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    explicit-specifier                   go to state 264
    expression                           go to state 685
    expression-statement                 go to state 686
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    function-specifier                   go to state 91
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    iteration-statement                  go to state 687
    jump-statement                       go to state 688
    labeled-statement                    go to state 689
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-alias-definition           go to state 100
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    opaque-enum-declaration              go to state 107
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    selection-statement                  go to state 690
    shift-expression                     go to state 443
    simple-declaration                   go to state 113
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    statement                            go to state 1860
    static_assert-declaration            go to state 116
    storage-class-specifier              go to state 117
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    try-block                            go to state 693
    type-constraint                      go to state 123
    type-name                            go to state 124
    type-specifier                       go to state 125
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    using-declaration                    go to state 130
    using-directive                      go to state 131
    using-enum-declaration               go to state 132
    yield-expression                     go to state 532


State 1750

  166 condition: decl-specifier-seq declarator • brace-or-equal-initializer
  469 init-declarator: declarator •
  470                | declarator • initializer
  471                | declarator • requires-clause

    EQ          shift, and go to state 1273
    OPEN_PAREN  shift, and go to state 643
    OPEN_BRACE  shift, and go to state 935
    REQUIRES    shift, and go to state 292

    $default  reduce using rule 469 (init-declarator)

    brace-or-equal-initializer  go to state 1861
    braced-init-list            go to state 646
    initializer                 go to state 648
    requires-clause             go to state 1522


State 1751

  940 selection-statement: IF OPEN_PAREN init-statement condition • CLOSE_PAREN statement
  944                    | IF OPEN_PAREN init-statement condition • CLOSE_PAREN statement ELSE statement

    CLOSE_PAREN  shift, and go to state 1862


State 1752

  939 selection-statement: IF CONSTEXPR OPEN_PAREN condition • CLOSE_PAREN statement
  943                    | IF CONSTEXPR OPEN_PAREN condition • CLOSE_PAREN statement ELSE statement

    CLOSE_PAREN  shift, and go to state 1863


State 1753

  941 selection-statement: IF CONSTEXPR OPEN_PAREN init-statement • condition CLOSE_PAREN statement
  945                    | IF CONSTEXPR OPEN_PAREN init-statement • condition CLOSE_PAREN statement ELSE statement

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    ALIGNAS           shift, and go to state 4
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 663
    CO_AWAIT          shift, and go to state 362
    VIRTUAL           shift, and go to state 11
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    FRIEND            shift, and go to state 20
    TYPEDEF           shift, and go to state 21
    CONSTEXPR         shift, and go to state 22
    CONSTEVAL         shift, and go to state 23
    CONSTINIT         shift, and go to state 24
    INLINE            shift, and go to state 258
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 27
    UNICODE_8         shift, and go to state 184
    EXTERN            shift, and go to state 259
    EXPLICIT          shift, and go to state 29
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    STATIC            shift, and go to state 52
    THREAD_LOCAL      shift, and go to state 53
    MUTABLE           shift, and go to state 54
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    alignment-specifier                  go to state 57
    and-expression                       go to state 400
    assignment-expression                go to state 525
    attribute-specifier                  go to state 60
    attribute-specifier-seq              go to state 1531
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-head                           go to state 63
    class-key                            go to state 64
    class-name                           go to state 65
    class-specifier                      go to state 66
    compare-expression                   go to state 406
    concept-name                         go to state 67
    condition                            go to state 1864
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decl-specifier                       go to state 70
    decl-specifier-seq                   go to state 1533
    decltype-specifier                   go to state 76
    defining-type-specifier              go to state 78
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-head                            go to state 82
    enum-key                             go to state 263
    enum-name                            go to state 84
    enum-specifier                       go to state 85
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    explicit-specifier                   go to state 264
    expression                           go to state 1534
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    function-specifier                   go to state 91
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    storage-class-specifier              go to state 117
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    type-specifier                       go to state 125
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 1754

  948 selection-statement: IF CONSTEVAL compound-statement ELSE • statement

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    USING             shift, and go to state 1
    IDENTIFIER        shift, and go to state 661
    SEMICOLON         shift, and go to state 662
    ALIGNAS           shift, and go to state 4
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    ASM               shift, and go to state 8
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 663
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 289
    VIRTUAL           shift, and go to state 11
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CO_RETURN         shift, and go to state 665
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    FRIEND            shift, and go to state 20
    TYPEDEF           shift, and go to state 21
    CONSTEXPR         shift, and go to state 22
    CONSTEVAL         shift, and go to state 23
    CONSTINIT         shift, and go to state 24
    INLINE            shift, and go to state 258
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 27
    UNICODE_8         shift, and go to state 184
    EXTERN            shift, and go to state 259
    EXPLICIT          shift, and go to state 29
    MULT              shift, and go to state 371
    DEFAULT           shift, and go to state 666
    TRY               shift, and go to state 667
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    WHILE             shift, and go to state 668
    DO                shift, and go to state 669
    FOR               shift, and go to state 670
    BREAK             shift, and go to state 671
    CONTINUE          shift, and go to state 672
    RETURN            shift, and go to state 673
    GOTO              shift, and go to state 674
    CASE              shift, and go to state 675
    NAMESPACE         shift, and go to state 676
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    IF                shift, and go to state 677
    SWITCH            shift, and go to state 678
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    STATIC_ASSERT     shift, and go to state 51
    STATIC            shift, and go to state 52
    THREAD_LOCAL      shift, and go to state 53
    MUTABLE           shift, and go to state 54
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    alias-declaration                    go to state 56
    alignment-specifier                  go to state 57
    and-expression                       go to state 400
    asm-declaration                      go to state 58
    assignment-expression                go to state 525
    attribute-specifier                  go to state 60
    attribute-specifier-seq              go to state 679
    await-expression                     go to state 401
    binary-literal                       go to state 402
    block-declaration                    go to state 680
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-head                           go to state 63
    class-key                            go to state 64
    class-name                           go to state 65
    class-specifier                      go to state 66
    compare-expression                   go to state 406
    compound-statement                   go to state 681
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    coroutine-return-statement           go to state 682
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decl-specifier                       go to state 70
    decl-specifier-seq                   go to state 683
    declaration-statement                go to state 684
    decltype-specifier                   go to state 76
    defining-type-specifier              go to state 78
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-head                            go to state 82
    enum-key                             go to state 83
    enum-name                            go to state 84
    enum-specifier                       go to state 85
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    explicit-specifier                   go to state 264
    expression                           go to state 685
    expression-statement                 go to state 686
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    function-specifier                   go to state 91
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    iteration-statement                  go to state 687
    jump-statement                       go to state 688
    labeled-statement                    go to state 689
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-alias-definition           go to state 100
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    opaque-enum-declaration              go to state 107
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    selection-statement                  go to state 690
    shift-expression                     go to state 443
    simple-declaration                   go to state 113
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    statement                            go to state 1865
    static_assert-declaration            go to state 116
    storage-class-specifier              go to state 117
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    try-block                            go to state 693
    type-constraint                      go to state 123
    type-name                            go to state 124
    type-specifier                       go to state 125
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    using-declaration                    go to state 130
    using-directive                      go to state 131
    using-enum-declaration               go to state 132
    yield-expression                     go to state 532


State 1755

  947 selection-statement: IF NOT CONSTEVAL compound-statement •
  949                    | IF NOT CONSTEVAL compound-statement • ELSE statement

    ELSE  shift, and go to state 1866

    ELSE      [reduce using rule 947 (selection-statement)]
    $default  reduce using rule 947 (selection-statement)


State 1756

  950 selection-statement: SWITCH OPEN_PAREN condition CLOSE_PAREN • statement

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    USING             shift, and go to state 1
    IDENTIFIER        shift, and go to state 661
    SEMICOLON         shift, and go to state 662
    ALIGNAS           shift, and go to state 4
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    ASM               shift, and go to state 8
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 663
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 289
    VIRTUAL           shift, and go to state 11
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CO_RETURN         shift, and go to state 665
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    FRIEND            shift, and go to state 20
    TYPEDEF           shift, and go to state 21
    CONSTEXPR         shift, and go to state 22
    CONSTEVAL         shift, and go to state 23
    CONSTINIT         shift, and go to state 24
    INLINE            shift, and go to state 258
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 27
    UNICODE_8         shift, and go to state 184
    EXTERN            shift, and go to state 259
    EXPLICIT          shift, and go to state 29
    MULT              shift, and go to state 371
    DEFAULT           shift, and go to state 666
    TRY               shift, and go to state 667
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    WHILE             shift, and go to state 668
    DO                shift, and go to state 669
    FOR               shift, and go to state 670
    BREAK             shift, and go to state 671
    CONTINUE          shift, and go to state 672
    RETURN            shift, and go to state 673
    GOTO              shift, and go to state 674
    CASE              shift, and go to state 675
    NAMESPACE         shift, and go to state 676
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    IF                shift, and go to state 677
    SWITCH            shift, and go to state 678
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    STATIC_ASSERT     shift, and go to state 51
    STATIC            shift, and go to state 52
    THREAD_LOCAL      shift, and go to state 53
    MUTABLE           shift, and go to state 54
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    alias-declaration                    go to state 56
    alignment-specifier                  go to state 57
    and-expression                       go to state 400
    asm-declaration                      go to state 58
    assignment-expression                go to state 525
    attribute-specifier                  go to state 60
    attribute-specifier-seq              go to state 679
    await-expression                     go to state 401
    binary-literal                       go to state 402
    block-declaration                    go to state 680
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-head                           go to state 63
    class-key                            go to state 64
    class-name                           go to state 65
    class-specifier                      go to state 66
    compare-expression                   go to state 406
    compound-statement                   go to state 681
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    coroutine-return-statement           go to state 682
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decl-specifier                       go to state 70
    decl-specifier-seq                   go to state 683
    declaration-statement                go to state 684
    decltype-specifier                   go to state 76
    defining-type-specifier              go to state 78
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-head                            go to state 82
    enum-key                             go to state 83
    enum-name                            go to state 84
    enum-specifier                       go to state 85
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    explicit-specifier                   go to state 264
    expression                           go to state 685
    expression-statement                 go to state 686
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    function-specifier                   go to state 91
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    iteration-statement                  go to state 687
    jump-statement                       go to state 688
    labeled-statement                    go to state 689
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-alias-definition           go to state 100
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    opaque-enum-declaration              go to state 107
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    selection-statement                  go to state 690
    shift-expression                     go to state 443
    simple-declaration                   go to state 113
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    statement                            go to state 1867
    static_assert-declaration            go to state 116
    storage-class-specifier              go to state 117
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    try-block                            go to state 693
    type-constraint                      go to state 123
    type-name                            go to state 124
    type-specifier                       go to state 125
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    using-declaration                    go to state 130
    using-directive                      go to state 131
    using-enum-declaration               go to state 132
    yield-expression                     go to state 532


State 1757

  951 selection-statement: SWITCH OPEN_PAREN init-statement condition • CLOSE_PAREN statement

    CLOSE_PAREN  shift, and go to state 1868


State 1758

  519 labeled-statement: attribute-specifier-seq IDENTIFIER COLON statement •

    $default  reduce using rule 519 (labeled-statement)


State 1759

  523 labeled-statement: attribute-specifier-seq DEFAULT COLON statement •

    $default  reduce using rule 523 (labeled-statement)


State 1760

  521 labeled-statement: attribute-specifier-seq CASE constant-expression COLON • statement

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    USING             shift, and go to state 1
    IDENTIFIER        shift, and go to state 661
    SEMICOLON         shift, and go to state 662
    ALIGNAS           shift, and go to state 4
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    ASM               shift, and go to state 8
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 663
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 289
    VIRTUAL           shift, and go to state 11
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CO_RETURN         shift, and go to state 665
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    FRIEND            shift, and go to state 20
    TYPEDEF           shift, and go to state 21
    CONSTEXPR         shift, and go to state 22
    CONSTEVAL         shift, and go to state 23
    CONSTINIT         shift, and go to state 24
    INLINE            shift, and go to state 258
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 27
    UNICODE_8         shift, and go to state 184
    EXTERN            shift, and go to state 259
    EXPLICIT          shift, and go to state 29
    MULT              shift, and go to state 371
    DEFAULT           shift, and go to state 666
    TRY               shift, and go to state 667
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    WHILE             shift, and go to state 668
    DO                shift, and go to state 669
    FOR               shift, and go to state 670
    BREAK             shift, and go to state 671
    CONTINUE          shift, and go to state 672
    RETURN            shift, and go to state 673
    GOTO              shift, and go to state 674
    CASE              shift, and go to state 675
    NAMESPACE         shift, and go to state 676
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    IF                shift, and go to state 677
    SWITCH            shift, and go to state 678
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    STATIC_ASSERT     shift, and go to state 51
    STATIC            shift, and go to state 52
    THREAD_LOCAL      shift, and go to state 53
    MUTABLE           shift, and go to state 54
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    alias-declaration                    go to state 56
    alignment-specifier                  go to state 57
    and-expression                       go to state 400
    asm-declaration                      go to state 58
    assignment-expression                go to state 525
    attribute-specifier                  go to state 60
    attribute-specifier-seq              go to state 679
    await-expression                     go to state 401
    binary-literal                       go to state 402
    block-declaration                    go to state 680
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-head                           go to state 63
    class-key                            go to state 64
    class-name                           go to state 65
    class-specifier                      go to state 66
    compare-expression                   go to state 406
    compound-statement                   go to state 681
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    coroutine-return-statement           go to state 682
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decl-specifier                       go to state 70
    decl-specifier-seq                   go to state 683
    declaration-statement                go to state 684
    decltype-specifier                   go to state 76
    defining-type-specifier              go to state 78
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-head                            go to state 82
    enum-key                             go to state 83
    enum-name                            go to state 84
    enum-specifier                       go to state 85
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    explicit-specifier                   go to state 264
    expression                           go to state 685
    expression-statement                 go to state 686
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    function-specifier                   go to state 91
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    iteration-statement                  go to state 687
    jump-statement                       go to state 688
    labeled-statement                    go to state 689
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-alias-definition           go to state 100
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    opaque-enum-declaration              go to state 107
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    selection-statement                  go to state 690
    shift-expression                     go to state 443
    simple-declaration                   go to state 113
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    statement                            go to state 1869
    static_assert-declaration            go to state 116
    storage-class-specifier              go to state 117
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    try-block                            go to state 693
    type-constraint                      go to state 123
    type-name                            go to state 124
    type-specifier                       go to state 125
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    using-declaration                    go to state 130
    using-directive                      go to state 131
    using-enum-declaration               go to state 132
    yield-expression                     go to state 532


State 1761

  316 exception-declaration: ELLIPSIS •

    $default  reduce using rule 316 (exception-declaration)


State 1762

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  310 exception-declaration: attribute-specifier-seq • type-specifier-seq declarator
  312                      | attribute-specifier-seq • type-specifier-seq
  314                      | attribute-specifier-seq • type-specifier-seq abstract-declarator

    IDENTIFIER   shift, and go to state 162
    ALIGNAS      shift, and go to state 4
    SCOPE        shift, and go to state 9
    OPEN_SQUARE  shift, and go to state 10
    CLASS        shift, and go to state 12
    STRUCT       shift, and go to state 13
    UNION        shift, and go to state 14
    CONST        shift, and go to state 18
    VOLATILE     shift, and go to state 19
    DECLTYPE     shift, and go to state 26
    ENUM         shift, and go to state 135
    AUTO         shift, and go to state 36
    CHAR         shift, and go to state 37
    CHAR8_T      shift, and go to state 38
    CHAR16_T     shift, and go to state 39
    CHAR32_T     shift, and go to state 40
    WCHAR_T      shift, and go to state 41
    BOOL         shift, and go to state 42
    SHORT        shift, and go to state 43
    INT          shift, and go to state 44
    LONG         shift, and go to state 45
    SIGNED       shift, and go to state 46
    UNSIGNED     shift, and go to state 47
    FLOAT        shift, and go to state 48
    DOUBLE       shift, and go to state 49
    VOID         shift, and go to state 50
    TYPENAME     shift, and go to state 55

    alignment-specifier         go to state 57
    attribute-specifier         go to state 260
    class-key                   go to state 209
    class-name                  go to state 65
    concept-name                go to state 67
    cv-qualifier                go to state 69
    decltype-specifier          go to state 76
    elaborated-enum-specifier   go to state 79
    elaborated-type-specifier   go to state 80
    enum-name                   go to state 84
    namespace-alias             go to state 99
    namespace-name              go to state 102
    nested-name-specifier       go to state 212
    placeholder-type-specifier  go to state 109
    simple-template-id          go to state 141
    simple-type-specifier       go to state 115
    template-name               go to state 215
    type-constraint             go to state 123
    type-name                   go to state 124
    type-specifier              go to state 216
    type-specifier-seq          go to state 1870
    typedef-name                go to state 126
    typename-specifier          go to state 127


State 1763

  416 handler: CATCH OPEN_PAREN exception-declaration • CLOSE_PAREN compound-statement

    CLOSE_PAREN  shift, and go to state 1871


State 1764

  311 exception-declaration: type-specifier-seq • declarator
  313                      | type-specifier-seq •
  315                      | type-specifier-seq • abstract-declarator

    IDENTIFIER   shift, and go to state 147
    OPEN_PAREN   shift, and go to state 969
    ELLIPSIS     shift, and go to state 970
    AND          shift, and go to state 7
    SCOPE        shift, and go to state 9
    OPEN_SQUARE  shift, and go to state 941
    AND_AND      shift, and go to state 16
    OPERATOR     shift, and go to state 17
    DECLTYPE     shift, and go to state 134
    MULT         shift, and go to state 31
    COMPL        shift, and go to state 35

    $default  reduce using rule 313 (exception-declaration)

    abstract-declarator             go to state 1872
    abstract-pack-declarator        go to state 943
    class-name                      go to state 65
    conversion-function-id          go to state 68
    declarator                      go to state 1873
    declarator-id                   go to state 75
    decltype-specifier              go to state 138
    enum-name                       go to state 84
    id-expression                   go to state 93
    literal-operator-id             go to state 95
    namespace-alias                 go to state 99
    namespace-name                  go to state 102
    nested-name-specifier           go to state 148
    noptr-abstract-declarator       go to state 944
    noptr-abstract-pack-declarator  go to state 945
    noptr-declarator                go to state 106
    operator-function-id            go to state 108
    parameters-and-qualifiers       go to state 946
    ptr-abstract-declarator         go to state 947
    ptr-declarator                  go to state 110
    ptr-operator                    go to state 973
    qualified-id                    go to state 112
    simple-template-id              go to state 114
    template-id                     go to state 120
    template-name                   go to state 142
    type-name                       go to state 143
    typedef-name                    go to state 126
    unqualified-id                  go to state 129


State 1765

  231 deduction-guide: explicit-specifier template-name OPEN_PAREN parameter-declaration-clause CLOSE_PAREN DEREF • simple-template-id SEMICOLON

    IDENTIFIER  shift, and go to state 310

    simple-template-id  go to state 1874
    template-name       go to state 142


State 1766

  224 declaration-seq: declaration-seq • declaration
  887 private-module-fragment: MODULE COLON PRIVATE SEMICOLON declaration-seq •

    USING          shift, and go to state 1
    IDENTIFIER     shift, and go to state 2
    SEMICOLON      shift, and go to state 3
    ALIGNAS        shift, and go to state 4
    OPEN_PAREN     shift, and go to state 5
    ELLIPSIS       shift, and go to state 6
    AND            shift, and go to state 7
    ASM            shift, and go to state 8
    SCOPE          shift, and go to state 9
    OPEN_SQUARE    shift, and go to state 10
    VIRTUAL        shift, and go to state 11
    CLASS          shift, and go to state 12
    STRUCT         shift, and go to state 13
    UNION          shift, and go to state 14
    TEMPLATE       shift, and go to state 15
    AND_AND        shift, and go to state 16
    OPERATOR       shift, and go to state 17
    CONST          shift, and go to state 18
    VOLATILE       shift, and go to state 19
    FRIEND         shift, and go to state 20
    TYPEDEF        shift, and go to state 21
    CONSTEXPR      shift, and go to state 22
    CONSTEVAL      shift, and go to state 23
    CONSTINIT      shift, and go to state 24
    INLINE         shift, and go to state 25
    DECLTYPE       shift, and go to state 26
    ENUM           shift, and go to state 27
    EXTERN         shift, and go to state 28
    EXPLICIT       shift, and go to state 29
    EXPORT         shift, and go to state 157
    MULT           shift, and go to state 31
    IMPORT         shift, and go to state 33
    NAMESPACE      shift, and go to state 34
    COMPL          shift, and go to state 35
    AUTO           shift, and go to state 36
    CHAR           shift, and go to state 37
    CHAR8_T        shift, and go to state 38
    CHAR16_T       shift, and go to state 39
    CHAR32_T       shift, and go to state 40
    WCHAR_T        shift, and go to state 41
    BOOL           shift, and go to state 42
    SHORT          shift, and go to state 43
    INT            shift, and go to state 44
    LONG           shift, and go to state 45
    SIGNED         shift, and go to state 46
    UNSIGNED       shift, and go to state 47
    FLOAT          shift, and go to state 48
    DOUBLE         shift, and go to state 49
    VOID           shift, and go to state 50
    STATIC_ASSERT  shift, and go to state 51
    STATIC         shift, and go to state 52
    THREAD_LOCAL   shift, and go to state 53
    MUTABLE        shift, and go to state 54
    TYPENAME       shift, and go to state 55

    $default  reduce using rule 887 (private-module-fragment)

    alias-declaration                go to state 56
    alignment-specifier              go to state 57
    asm-declaration                  go to state 58
    attribute-declaration            go to state 59
    attribute-specifier              go to state 60
    attribute-specifier-seq          go to state 61
    block-declaration                go to state 62
    class-head                       go to state 63
    class-key                        go to state 64
    class-name                       go to state 65
    class-specifier                  go to state 66
    concept-name                     go to state 67
    conversion-function-id           go to state 68
    cv-qualifier                     go to state 69
    decl-specifier                   go to state 70
    decl-specifier-seq               go to state 71
    declaration                      go to state 285
    declarator                       go to state 74
    declarator-id                    go to state 75
    decltype-specifier               go to state 76
    deduction-guide                  go to state 77
    defining-type-specifier          go to state 78
    elaborated-enum-specifier        go to state 79
    elaborated-type-specifier        go to state 80
    empty-declaration                go to state 81
    enum-head                        go to state 82
    enum-key                         go to state 83
    enum-name                        go to state 84
    enum-specifier                   go to state 85
    explicit-instantiation           go to state 86
    explicit-specialization          go to state 87
    explicit-specifier               go to state 88
    export-declaration               go to state 89
    function-definition              go to state 90
    function-specifier               go to state 91
    id-expression                    go to state 93
    linkage-specification            go to state 94
    literal-operator-id              go to state 95
    module-import-declaration        go to state 97
    named-namespace-definition       go to state 98
    namespace-alias                  go to state 99
    namespace-alias-definition       go to state 100
    namespace-definition             go to state 101
    namespace-name                   go to state 102
    nested-name-specifier            go to state 103
    nested-namespace-definition      go to state 104
    nodeclspec-function-declaration  go to state 105
    noptr-declarator                 go to state 106
    opaque-enum-declaration          go to state 107
    operator-function-id             go to state 108
    placeholder-type-specifier       go to state 109
    ptr-declarator                   go to state 110
    ptr-operator                     go to state 111
    qualified-id                     go to state 112
    simple-declaration               go to state 113
    simple-template-id               go to state 114
    simple-type-specifier            go to state 115
    static_assert-declaration        go to state 116
    storage-class-specifier          go to state 117
    template-declaration             go to state 118
    template-head                    go to state 119
    template-id                      go to state 120
    template-name                    go to state 121
    type-constraint                  go to state 123
    type-name                        go to state 124
    type-specifier                   go to state 125
    typedef-name                     go to state 126
    typename-specifier               go to state 127
    unnamed-namespace-definition     go to state 128
    unqualified-id                   go to state 129
    using-declaration                go to state 130
    using-directive                  go to state 131
    using-enum-declaration           go to state 132


State 1767

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  841 parameters-and-qualifiers: OPEN_PAREN parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq attribute-specifier-seq •

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    OPEN_SQUARE  [reduce using rule 841 (parameters-and-qualifiers)]
    $default     reduce using rule 841 (parameters-and-qualifiers)

    alignment-specifier  go to state 57
    attribute-specifier  go to state 260


State 1768

  837 parameters-and-qualifiers: OPEN_PAREN parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq noexcept-specifier •
  845                          | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq noexcept-specifier • attribute-specifier-seq

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    OPEN_SQUARE  [reduce using rule 837 (parameters-and-qualifiers)]
    $default     reduce using rule 837 (parameters-and-qualifiers)

    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 1875


State 1769

  835 parameters-and-qualifiers: OPEN_PAREN parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq ref-qualifier •
  839                          | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq ref-qualifier • noexcept-specifier
  843                          | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq ref-qualifier • attribute-specifier-seq
  847                          | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq ref-qualifier • noexcept-specifier attribute-specifier-seq

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10
    NOEXCEPT     shift, and go to state 894

    OPEN_SQUARE  [reduce using rule 835 (parameters-and-qualifiers)]
    $default     reduce using rule 835 (parameters-and-qualifiers)

    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 1876
    noexcept-specifier       go to state 1877


State 1770

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  844 parameters-and-qualifiers: OPEN_PAREN parameter-declaration-clause CLOSE_PAREN noexcept-specifier attribute-specifier-seq •

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    OPEN_SQUARE  [reduce using rule 844 (parameters-and-qualifiers)]
    $default     reduce using rule 844 (parameters-and-qualifiers)

    alignment-specifier  go to state 57
    attribute-specifier  go to state 260


State 1771

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  842 parameters-and-qualifiers: OPEN_PAREN parameter-declaration-clause CLOSE_PAREN ref-qualifier attribute-specifier-seq •

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    OPEN_SQUARE  [reduce using rule 842 (parameters-and-qualifiers)]
    $default     reduce using rule 842 (parameters-and-qualifiers)

    alignment-specifier  go to state 57
    attribute-specifier  go to state 260


State 1772

  838 parameters-and-qualifiers: OPEN_PAREN parameter-declaration-clause CLOSE_PAREN ref-qualifier noexcept-specifier •
  846                          | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN ref-qualifier noexcept-specifier • attribute-specifier-seq

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    OPEN_SQUARE  [reduce using rule 838 (parameters-and-qualifiers)]
    $default     reduce using rule 838 (parameters-and-qualifiers)

    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 1878


State 1773

  162 concept-definition: CONCEPT concept-name EQ constraint-expression SEMICOLON •

    $default  reduce using rule 162 (concept-definition)


State 1774

  232 deduction-guide: template-name OPEN_PAREN parameter-declaration-clause CLOSE_PAREN DEREF simple-template-id • SEMICOLON

    SEMICOLON  shift, and go to state 1879


State 1775

  346 fold-expression: OPEN_PAREN ELLIPSIS fold-operator cast-expression CLOSE_PAREN •

    $default  reduce using rule 346 (fold-expression)


State 1776

  345 fold-expression: OPEN_PAREN cast-expression fold-operator ELLIPSIS CLOSE_PAREN •

    $default  reduce using rule 345 (fold-expression)


State 1777

  347 fold-expression: OPEN_PAREN cast-expression fold-operator ELLIPSIS fold-operator • cast-expression CLOSE_PAREN

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 1880
    character-literal                    go to state 405
    class-name                           go to state 65
    concept-name                         go to state 67
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    requires-expression                  go to state 442
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455


State 1778

  243 delete-expression: SCOPE DELETE OPEN_SQUARE CLOSE_SQUARE cast-expression •

    $default  reduce using rule 243 (delete-expression)


State 1779

  676 new-expression: SCOPE NEW OPEN_PAREN type-id CLOSE_PAREN •
  680               | SCOPE NEW OPEN_PAREN type-id CLOSE_PAREN • new-initializer

    OPEN_PAREN  shift, and go to state 1303
    OPEN_BRACE  shift, and go to state 935

    OPEN_BRACE  [reduce using rule 676 (new-expression)]
    $default    reduce using rule 676 (new-expression)

    braced-init-list  go to state 1304
    new-initializer   go to state 1881


State 1780

  678 new-expression: SCOPE NEW new-placement OPEN_PAREN type-id • CLOSE_PAREN
  682               | SCOPE NEW new-placement OPEN_PAREN type-id • CLOSE_PAREN new-initializer

    CLOSE_PAREN  shift, and go to state 1882


State 1781

  674 new-expression: SCOPE NEW new-placement new-type-id new-initializer •

    $default  reduce using rule 674 (new-expression)


State 1782

  468 init-capture: AND ELLIPSIS IDENTIFIER initializer •

    $default  reduce using rule 468 (init-capture)


State 1783

  156 compound-requirement: OPEN_BRACE expression CLOSE_BRACE • SEMICOLON
  157                     | OPEN_BRACE expression CLOSE_BRACE • NOEXCEPT SEMICOLON
  158                     | OPEN_BRACE expression CLOSE_BRACE • return-type-requirement SEMICOLON
  159                     | OPEN_BRACE expression CLOSE_BRACE • NOEXCEPT return-type-requirement SEMICOLON

    SEMICOLON  shift, and go to state 1883
    NOEXCEPT   shift, and go to state 1884
    DEREF      shift, and go to state 1885

    return-type-requirement  go to state 1886


State 1784

  346 fold-expression: OPEN_PAREN ELLIPSIS • fold-operator cast-expression CLOSE_PAREN
  828 parameter-declaration-clause: ELLIPSIS •

    PLUS        shift, and go to state 1232
    MINUS       shift, and go to state 1233
    EQ          shift, and go to state 1234
    AND         shift, and go to state 1235
    MULT_EQ     shift, and go to state 1236
    DIV_EQ      shift, and go to state 1237
    MOD_EQ      shift, and go to state 1238
    PLUS_EQ     shift, and go to state 1239
    MINUS_EQ    shift, and go to state 1240
    RSHIFT_EQ   shift, and go to state 1241
    LSHIFT_EQ   shift, and go to state 1242
    AND_EQ      shift, and go to state 1243
    XOR_EQ      shift, and go to state 1244
    OR_EQ       shift, and go to state 1245
    COMMA       shift, and go to state 1246
    AND_AND     shift, and go to state 1247
    OR_OR       shift, and go to state 1248
    EQ_EQ       shift, and go to state 1249
    NOT_EQ      shift, and go to state 1250
    XOR         shift, and go to state 1251
    LESS        shift, and go to state 1252
    GREATER     shift, and go to state 1253
    MULT        shift, and go to state 1254
    DIV         shift, and go to state 1255
    MOD         shift, and go to state 1256
    OR          shift, and go to state 1257
    LSHIFT      shift, and go to state 1258
    RSHIFT      shift, and go to state 1259
    LESS_EQ     shift, and go to state 1260
    GREATER_EQ  shift, and go to state 1261
    DOT_STAR    shift, and go to state 1262
    DEREF_STAR  shift, and go to state 1263

    $default  reduce using rule 828 (parameter-declaration-clause)

    fold-operator  go to state 1264


State 1785

  805 parameter-declaration: THIS • decl-specifier-seq declarator
  809                      | THIS • decl-specifier-seq declarator EQ initializer-clause
  813                      | THIS • decl-specifier-seq
  817                      | THIS • decl-specifier-seq abstract-declarator
  821                      | THIS • decl-specifier-seq EQ initializer-clause
  825                      | THIS • decl-specifier-seq abstract-declarator EQ initializer-clause
  880 primary-expression: THIS •

    IDENTIFIER    shift, and go to state 162
    SCOPE         shift, and go to state 9
    VIRTUAL       shift, and go to state 11
    CLASS         shift, and go to state 12
    STRUCT        shift, and go to state 13
    UNION         shift, and go to state 14
    CONST         shift, and go to state 18
    VOLATILE      shift, and go to state 19
    FRIEND        shift, and go to state 20
    TYPEDEF       shift, and go to state 21
    CONSTEXPR     shift, and go to state 22
    CONSTEVAL     shift, and go to state 23
    CONSTINIT     shift, and go to state 24
    INLINE        shift, and go to state 258
    DECLTYPE      shift, and go to state 26
    ENUM          shift, and go to state 27
    EXTERN        shift, and go to state 259
    EXPLICIT      shift, and go to state 29
    AUTO          shift, and go to state 36
    CHAR          shift, and go to state 37
    CHAR8_T       shift, and go to state 38
    CHAR16_T      shift, and go to state 39
    CHAR32_T      shift, and go to state 40
    WCHAR_T       shift, and go to state 41
    BOOL          shift, and go to state 42
    SHORT         shift, and go to state 43
    INT           shift, and go to state 44
    LONG          shift, and go to state 45
    SIGNED        shift, and go to state 46
    UNSIGNED      shift, and go to state 47
    FLOAT         shift, and go to state 48
    DOUBLE        shift, and go to state 49
    VOID          shift, and go to state 50
    STATIC        shift, and go to state 52
    THREAD_LOCAL  shift, and go to state 53
    MUTABLE       shift, and go to state 54
    TYPENAME      shift, and go to state 55

    $default  reduce using rule 880 (primary-expression)

    class-head                  go to state 63
    class-key                   go to state 64
    class-name                  go to state 65
    class-specifier             go to state 66
    concept-name                go to state 67
    cv-qualifier                go to state 69
    decl-specifier              go to state 70
    decl-specifier-seq          go to state 965
    decltype-specifier          go to state 76
    defining-type-specifier     go to state 78
    elaborated-enum-specifier   go to state 79
    elaborated-type-specifier   go to state 80
    enum-head                   go to state 82
    enum-key                    go to state 263
    enum-name                   go to state 84
    enum-specifier              go to state 85
    explicit-specifier          go to state 264
    function-specifier          go to state 91
    namespace-alias             go to state 99
    namespace-name              go to state 102
    nested-name-specifier       go to state 212
    placeholder-type-specifier  go to state 109
    simple-template-id          go to state 141
    simple-type-specifier       go to state 115
    storage-class-specifier     go to state 117
    template-name               go to state 215
    type-constraint             go to state 123
    type-name                   go to state 124
    type-specifier              go to state 125
    typedef-name                go to state 126
    typename-specifier          go to state 127


State 1786

  235 defining-type-specifier: type-specifier •
  1107 type-specifier-seq: type-specifier •
  1108                   | type-specifier • attribute-specifier-seq
  1109                   | type-specifier • type-specifier-seq

    IDENTIFIER   shift, and go to state 162
    ALIGNAS      shift, and go to state 4
    SCOPE        shift, and go to state 9
    OPEN_SQUARE  shift, and go to state 10
    CLASS        shift, and go to state 12
    STRUCT       shift, and go to state 13
    UNION        shift, and go to state 14
    CONST        shift, and go to state 18
    VOLATILE     shift, and go to state 19
    DECLTYPE     shift, and go to state 26
    ENUM         shift, and go to state 135
    AUTO         shift, and go to state 36
    CHAR         shift, and go to state 37
    CHAR8_T      shift, and go to state 38
    CHAR16_T     shift, and go to state 39
    CHAR32_T     shift, and go to state 40
    WCHAR_T      shift, and go to state 41
    BOOL         shift, and go to state 42
    SHORT        shift, and go to state 43
    INT          shift, and go to state 44
    LONG         shift, and go to state 45
    SIGNED       shift, and go to state 46
    UNSIGNED     shift, and go to state 47
    FLOAT        shift, and go to state 48
    DOUBLE       shift, and go to state 49
    VOID         shift, and go to state 50
    TYPENAME     shift, and go to state 55

    IDENTIFIER   [reduce using rule 235 (defining-type-specifier)]
    IDENTIFIER   [reduce using rule 1107 (type-specifier-seq)]
    ALIGNAS      [reduce using rule 235 (defining-type-specifier)]
    OPEN_PAREN   reduce using rule 235 (defining-type-specifier)
    OPEN_PAREN   [reduce using rule 1107 (type-specifier-seq)]
    CLOSE_PAREN  reduce using rule 235 (defining-type-specifier)
    CLOSE_PAREN  [reduce using rule 1107 (type-specifier-seq)]
    ELLIPSIS     reduce using rule 235 (defining-type-specifier)
    ELLIPSIS     [reduce using rule 1107 (type-specifier-seq)]
    AND          reduce using rule 235 (defining-type-specifier)
    AND          [reduce using rule 1107 (type-specifier-seq)]
    SCOPE        [reduce using rule 235 (defining-type-specifier)]
    SCOPE        [reduce using rule 1107 (type-specifier-seq)]
    OPEN_SQUARE  [reduce using rule 235 (defining-type-specifier)]
    OPEN_SQUARE  [reduce using rule 1107 (type-specifier-seq)]
    CLASS        [reduce using rule 235 (defining-type-specifier)]
    STRUCT       [reduce using rule 235 (defining-type-specifier)]
    UNION        [reduce using rule 235 (defining-type-specifier)]
    AND_AND      reduce using rule 235 (defining-type-specifier)
    AND_AND      [reduce using rule 1107 (type-specifier-seq)]
    CONST        [reduce using rule 235 (defining-type-specifier)]
    VOLATILE     [reduce using rule 235 (defining-type-specifier)]
    DECLTYPE     [reduce using rule 235 (defining-type-specifier)]
    DECLTYPE     [reduce using rule 1107 (type-specifier-seq)]
    ENUM         [reduce using rule 235 (defining-type-specifier)]
    MULT         reduce using rule 235 (defining-type-specifier)
    MULT         [reduce using rule 1107 (type-specifier-seq)]
    AUTO         [reduce using rule 235 (defining-type-specifier)]
    CHAR         [reduce using rule 235 (defining-type-specifier)]
    CHAR8_T      [reduce using rule 235 (defining-type-specifier)]
    CHAR16_T     [reduce using rule 235 (defining-type-specifier)]
    CHAR32_T     [reduce using rule 235 (defining-type-specifier)]
    WCHAR_T      [reduce using rule 235 (defining-type-specifier)]
    BOOL         [reduce using rule 235 (defining-type-specifier)]
    SHORT        [reduce using rule 235 (defining-type-specifier)]
    INT          [reduce using rule 235 (defining-type-specifier)]
    LONG         [reduce using rule 235 (defining-type-specifier)]
    SIGNED       [reduce using rule 235 (defining-type-specifier)]
    UNSIGNED     [reduce using rule 235 (defining-type-specifier)]
    FLOAT        [reduce using rule 235 (defining-type-specifier)]
    DOUBLE       [reduce using rule 235 (defining-type-specifier)]
    VOID         [reduce using rule 235 (defining-type-specifier)]
    TYPENAME     [reduce using rule 235 (defining-type-specifier)]
    $default     reduce using rule 235 (defining-type-specifier)

    alignment-specifier         go to state 57
    attribute-specifier         go to state 60
    attribute-specifier-seq     go to state 514
    class-key                   go to state 209
    class-name                  go to state 65
    concept-name                go to state 67
    cv-qualifier                go to state 69
    decltype-specifier          go to state 76
    elaborated-enum-specifier   go to state 79
    elaborated-type-specifier   go to state 80
    enum-name                   go to state 84
    namespace-alias             go to state 99
    namespace-name              go to state 102
    nested-name-specifier       go to state 212
    placeholder-type-specifier  go to state 109
    simple-template-id          go to state 141
    simple-type-specifier       go to state 115
    template-name               go to state 215
    type-constraint             go to state 123
    type-name                   go to state 124
    type-specifier              go to state 216
    type-specifier-seq          go to state 515
    typedef-name                go to state 126
    typename-specifier          go to state 127


State 1787

  664 nested-requirement: REQUIRES constraint-expression SEMICOLON •

    $default  reduce using rule 664 (nested-requirement)


State 1788

  145 class-name: IDENTIFIER •
  294 enum-name: IDENTIFIER •
  659 nested-name-specifier: nested-name-specifier IDENTIFIER • SCOPE
  1052 template-name: IDENTIFIER •
  1110 typedef-name: IDENTIFIER •
  1112 typename-specifier: TYPENAME nested-name-specifier IDENTIFIER •

    SCOPE  shift, and go to state 722

    SEMICOLON  reduce using rule 145 (class-name)
    SEMICOLON  [reduce using rule 294 (enum-name)]
    SEMICOLON  [reduce using rule 1110 (typedef-name)]
    LESS       reduce using rule 1052 (template-name)
    $default   reduce using rule 1112 (typename-specifier)


State 1789

  146 class-name: simple-template-id •
  660 nested-name-specifier: nested-name-specifier simple-template-id • SCOPE
  1111 typedef-name: simple-template-id •
  1113 typename-specifier: TYPENAME nested-name-specifier simple-template-id •

    SCOPE  shift, and go to state 729

    SEMICOLON  reduce using rule 146 (class-name)
    SEMICOLON  [reduce using rule 1111 (typedef-name)]
    $default   reduce using rule 1113 (typename-specifier)


State 1790

  1102 type-requirement: TYPENAME nested-name-specifier type-name • SEMICOLON

    SEMICOLON  shift, and go to state 1887


State 1791

  1101 type-requirement: TYPENAME type-name SEMICOLON •

    $default  reduce using rule 1101 (type-requirement)


State 1792

  681 new-expression: NEW OPEN_PAREN type-id CLOSE_PAREN new-initializer •

    $default  reduce using rule 681 (new-expression)


State 1793

  679 new-expression: NEW new-placement OPEN_PAREN type-id CLOSE_PAREN •
  683               | NEW new-placement OPEN_PAREN type-id CLOSE_PAREN • new-initializer

    OPEN_PAREN  shift, and go to state 1303
    OPEN_BRACE  shift, and go to state 935

    OPEN_BRACE  [reduce using rule 679 (new-expression)]
    $default    reduce using rule 679 (new-expression)

    braced-init-list  go to state 1304
    new-initializer   go to state 1888


State 1794

  685 new-initializer: OPEN_PAREN expression-list CLOSE_PAREN •

    $default  reduce using rule 685 (new-initializer)


State 1795

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  731 noptr-new-declarator: OPEN_SQUARE CLOSE_SQUARE attribute-specifier-seq •

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    OPEN_SQUARE  [reduce using rule 731 (noptr-new-declarator)]
    $default     reduce using rule 731 (noptr-new-declarator)

    alignment-specifier  go to state 57
    attribute-specifier  go to state 260


State 1796

  730 noptr-new-declarator: OPEN_SQUARE expression CLOSE_SQUARE •
  732                     | OPEN_SQUARE expression CLOSE_SQUARE • attribute-specifier-seq

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    OPEN_SQUARE  [reduce using rule 730 (noptr-new-declarator)]
    $default     reduce using rule 730 (noptr-new-declarator)

    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 1889


State 1797

  733 noptr-new-declarator: noptr-new-declarator OPEN_SQUARE constant-expression • CLOSE_SQUARE
  734                     | noptr-new-declarator OPEN_SQUARE constant-expression • CLOSE_SQUARE attribute-specifier-seq

    CLOSE_SQUARE  shift, and go to state 1890


State 1798

  873 postfix-expression: DYNAMIC_CAST LESS type-id GREATER OPEN_PAREN • expression CLOSE_PAREN

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 525
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    expression                           go to state 1891
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 1799

  874 postfix-expression: STATIC_CAST LESS type-id GREATER OPEN_PAREN • expression CLOSE_PAREN

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 525
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    expression                           go to state 1892
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 1800

  875 postfix-expression: REINTERPRET_CAST LESS type-id GREATER OPEN_PAREN • expression CLOSE_PAREN

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 525
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    expression                           go to state 1893
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 1801

  876 postfix-expression: CONST_CAST LESS type-id GREATER OPEN_PAREN • expression CLOSE_PAREN

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 525
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    expression                           go to state 1894
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 1802

  1123 unary-expression: SIZEOF ELLIPSIS OPEN_PAREN IDENTIFIER CLOSE_PAREN •

    $default  reduce using rule 1123 (unary-expression)


State 1803

   88 binary-exponent-part: 'p' sign digit-sequence •
  260 digit-sequence: digit-sequence • digit
  261               | digit-sequence • SINGLE_QUOTE digit

    SINGLE_QUOTE  shift, and go to state 847
    '0'           shift, and go to state 789
    '1'           shift, and go to state 790
    '2'           shift, and go to state 791
    '3'           shift, and go to state 792
    '4'           shift, and go to state 793
    '5'           shift, and go to state 794
    '6'           shift, and go to state 795
    '7'           shift, and go to state 796
    '8'           shift, and go to state 797
    '9'           shift, and go to state 798

    $default  reduce using rule 88 (binary-exponent-part)

    digit  go to state 851


State 1804

   90 binary-exponent-part: 'P' sign digit-sequence •
  260 digit-sequence: digit-sequence • digit
  261               | digit-sequence • SINGLE_QUOTE digit

    SINGLE_QUOTE  shift, and go to state 847
    '0'           shift, and go to state 789
    '1'           shift, and go to state 790
    '2'           shift, and go to state 791
    '3'           shift, and go to state 792
    '4'           shift, and go to state 793
    '5'           shift, and go to state 794
    '6'           shift, and go to state 795
    '7'           shift, and go to state 796
    '8'           shift, and go to state 797
    '9'           shift, and go to state 798

    $default  reduce using rule 90 (binary-exponent-part)

    digit  go to state 851


State 1805

  529 lambda-declarator: OPEN_PAREN parameter-declaration-clause CLOSE_PAREN lambda-specifiers •
  530                  | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN lambda-specifiers • requires-clause

    REQUIRES  shift, and go to state 292

    $default  reduce using rule 529 (lambda-declarator)

    requires-clause  go to state 1895


State 1806

  693 noexcept-specifier: NOEXCEPT OPEN_PAREN constant-expression CLOSE_PAREN •

    $default  reduce using rule 693 (noexcept-specifier)


State 1807

  532 lambda-expression: lambda-introducer LESS template-parameter-list GREATER lambda-declarator • compound-statement

    OPEN_BRACE  shift, and go to state 289

    compound-statement  go to state 1896


State 1808

  533 lambda-expression: lambda-introducer LESS template-parameter-list GREATER requires-clause • lambda-declarator compound-statement

    IDENTIFIER    shift, and go to state 162
    ALIGNAS       shift, and go to state 4
    OPEN_PAREN    shift, and go to state 893
    SCOPE         shift, and go to state 9
    OPEN_SQUARE   shift, and go to state 10
    VIRTUAL       shift, and go to state 11
    CLASS         shift, and go to state 12
    STRUCT        shift, and go to state 13
    UNION         shift, and go to state 14
    NOEXCEPT      shift, and go to state 894
    CONST         shift, and go to state 18
    VOLATILE      shift, and go to state 19
    FRIEND        shift, and go to state 20
    TYPEDEF       shift, and go to state 21
    CONSTEXPR     shift, and go to state 22
    CONSTEVAL     shift, and go to state 23
    CONSTINIT     shift, and go to state 24
    INLINE        shift, and go to state 258
    DECLTYPE      shift, and go to state 26
    DEREF         shift, and go to state 736
    ENUM          shift, and go to state 27
    EXTERN        shift, and go to state 259
    EXPLICIT      shift, and go to state 29
    AUTO          shift, and go to state 36
    CHAR          shift, and go to state 37
    CHAR8_T       shift, and go to state 38
    CHAR16_T      shift, and go to state 39
    CHAR32_T      shift, and go to state 40
    WCHAR_T       shift, and go to state 41
    BOOL          shift, and go to state 42
    SHORT         shift, and go to state 43
    INT           shift, and go to state 44
    LONG          shift, and go to state 45
    SIGNED        shift, and go to state 46
    UNSIGNED      shift, and go to state 47
    FLOAT         shift, and go to state 48
    DOUBLE        shift, and go to state 49
    VOID          shift, and go to state 50
    STATIC        shift, and go to state 52
    THREAD_LOCAL  shift, and go to state 53
    MUTABLE       shift, and go to state 54
    TYPENAME      shift, and go to state 55

    alignment-specifier         go to state 57
    attribute-specifier         go to state 60
    attribute-specifier-seq     go to state 896
    class-head                  go to state 63
    class-key                   go to state 64
    class-name                  go to state 65
    class-specifier             go to state 66
    concept-name                go to state 67
    cv-qualifier                go to state 69
    decl-specifier              go to state 70
    decl-specifier-seq          go to state 897
    decltype-specifier          go to state 76
    defining-type-specifier     go to state 78
    elaborated-enum-specifier   go to state 79
    elaborated-type-specifier   go to state 80
    enum-head                   go to state 82
    enum-key                    go to state 263
    enum-name                   go to state 84
    enum-specifier              go to state 85
    explicit-specifier          go to state 264
    function-specifier          go to state 91
    lambda-declarator           go to state 1897
    lambda-specifiers           go to state 899
    namespace-alias             go to state 99
    namespace-name              go to state 102
    nested-name-specifier       go to state 212
    noexcept-specifier          go to state 900
    placeholder-type-specifier  go to state 109
    simple-template-id          go to state 141
    simple-type-specifier       go to state 115
    storage-class-specifier     go to state 117
    template-name               go to state 215
    trailing-return-type        go to state 901
    type-constraint             go to state 123
    type-name                   go to state 124
    type-specifier              go to state 125
    typedef-name                go to state 126
    typename-specifier          go to state 127


State 1809

  549 lambda-specifiers: decl-specifier-seq noexcept-specifier attribute-specifier-seq trailing-return-type •

    $default  reduce using rule 549 (lambda-specifiers)


State 1810

  170 conditional-expression: logical-or-expression QUERY expression COLON assignment-expression •

    $default  reduce using rule 170 (conditional-expression)


State 1811

   48 attribute-namespace: IDENTIFIER •
   55 attribute-token: IDENTIFIER •
  466 init-capture: IDENTIFIER • initializer
  957 simple-capture: IDENTIFIER •
  958               | IDENTIFIER • ELLIPSIS

    EQ          shift, and go to state 1273
    OPEN_PAREN  shift, and go to state 643
    ELLIPSIS    shift, and go to state 1274
    OPEN_BRACE  shift, and go to state 935

    OPEN_PAREN    [reduce using rule 55 (attribute-token)]
    ELLIPSIS      [reduce using rule 55 (attribute-token)]
    COMMA         reduce using rule 55 (attribute-token)
    COMMA         [reduce using rule 957 (simple-capture)]
    SCOPE         reduce using rule 48 (attribute-namespace)
    CLOSE_SQUARE  reduce using rule 55 (attribute-token)
    CLOSE_SQUARE  [reduce using rule 957 (simple-capture)]
    $default      reduce using rule 55 (attribute-token)

    brace-or-equal-initializer  go to state 645
    braced-init-list            go to state 646
    initializer                 go to state 1275


State 1812

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  713 noptr-abstract-declarator: OPEN_SQUARE constant-expression CLOSE_SQUARE attribute-specifier-seq •

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    OPEN_SQUARE  [reduce using rule 713 (noptr-abstract-declarator)]
    $default     reduce using rule 713 (noptr-abstract-declarator)

    alignment-specifier  go to state 57
    attribute-specifier  go to state 260


State 1813

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  710 noptr-abstract-declarator: noptr-abstract-declarator OPEN_SQUARE CLOSE_SQUARE attribute-specifier-seq •

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    OPEN_SQUARE  [reduce using rule 710 (noptr-abstract-declarator)]
    $default     reduce using rule 710 (noptr-abstract-declarator)

    alignment-specifier  go to state 57
    attribute-specifier  go to state 260


State 1814

  708 noptr-abstract-declarator: noptr-abstract-declarator OPEN_SQUARE constant-expression CLOSE_SQUARE •
  712                          | noptr-abstract-declarator OPEN_SQUARE constant-expression CLOSE_SQUARE • attribute-specifier-seq

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    OPEN_SQUARE  [reduce using rule 708 (noptr-abstract-declarator)]
    $default     reduce using rule 708 (noptr-abstract-declarator)

    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 1898


State 1815

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  718 noptr-abstract-pack-declarator: noptr-abstract-pack-declarator OPEN_SQUARE CLOSE_SQUARE attribute-specifier-seq •

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    OPEN_SQUARE  [reduce using rule 718 (noptr-abstract-pack-declarator)]
    $default     reduce using rule 718 (noptr-abstract-pack-declarator)

    alignment-specifier  go to state 57
    attribute-specifier  go to state 260


State 1816

  717 noptr-abstract-pack-declarator: noptr-abstract-pack-declarator OPEN_SQUARE constant-expression CLOSE_SQUARE •
  719                               | noptr-abstract-pack-declarator OPEN_SQUARE constant-expression CLOSE_SQUARE • attribute-specifier-seq

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    OPEN_SQUARE  [reduce using rule 717 (noptr-abstract-pack-declarator)]
    $default     reduce using rule 717 (noptr-abstract-pack-declarator)

    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 1899


State 1817

   60 balanced-token: OPEN_PAREN balanced-token-seq CLOSE_PAREN •

    $default  reduce using rule 60 (balanced-token)


State 1818

   62 balanced-token: OPEN_SQUARE balanced-token-seq CLOSE_SQUARE •

    $default  reduce using rule 62 (balanced-token)


State 1819

   64 balanced-token: OPEN_BRACE balanced-token-seq CLOSE_BRACE •

    $default  reduce using rule 64 (balanced-token)


State 1820

  825 parameter-declaration: THIS decl-specifier-seq abstract-declarator EQ initializer-clause •

    $default  reduce using rule 825 (parameter-declaration)


State 1821

  809 parameter-declaration: THIS decl-specifier-seq declarator EQ initializer-clause •

    $default  reduce using rule 809 (parameter-declaration)


State 1822

  820 parameter-declaration: attribute-specifier-seq THIS decl-specifier-seq EQ initializer-clause •

    $default  reduce using rule 820 (parameter-declaration)


State 1823

  824 parameter-declaration: attribute-specifier-seq THIS decl-specifier-seq abstract-declarator EQ • initializer-clause

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 935
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 1134
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    braced-init-list                     go to state 1135
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    initializer-clause                   go to state 1900
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 1824

  808 parameter-declaration: attribute-specifier-seq THIS decl-specifier-seq declarator EQ • initializer-clause

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 935
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 1134
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    braced-init-list                     go to state 1135
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    initializer-clause                   go to state 1901
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 1825

  822 parameter-declaration: attribute-specifier-seq decl-specifier-seq abstract-declarator EQ initializer-clause •

    $default  reduce using rule 822 (parameter-declaration)


State 1826

  806 parameter-declaration: attribute-specifier-seq decl-specifier-seq declarator EQ initializer-clause •

    $default  reduce using rule 806 (parameter-declaration)


State 1827

  1098 type-parameter: template-head type-parameter-key IDENTIFIER EQ id-expression •

    $default  reduce using rule 1098 (type-parameter)


State 1828

  421 hex-quad: hexadecimal-digit hexadecimal-digit hexadecimal-digit hexadecimal-digit •

    $default  reduce using rule 421 (hex-quad)


State 1829

  645 named-namespace-definition: INLINE NAMESPACE attribute-specifier-seq IDENTIFIER OPEN_BRACE namespace-body CLOSE_BRACE •

    $default  reduce using rule 645 (named-namespace-definition)


State 1830

  662 nested-namespace-definition: NAMESPACE enclosing-namespace-specifier SCOPE IDENTIFIER OPEN_BRACE namespace-body CLOSE_BRACE •

    $default  reduce using rule 662 (nested-namespace-definition)


State 1831

  663 nested-namespace-definition: NAMESPACE enclosing-namespace-specifier SCOPE INLINE IDENTIFIER OPEN_BRACE namespace-body • CLOSE_BRACE

    CLOSE_BRACE  shift, and go to state 1902


State 1832

  1025 static_assert-declaration: STATIC_ASSERT OPEN_PAREN constant-expression COMMA string-literal CLOSE_PAREN SEMICOLON •

    $default  reduce using rule 1025 (static_assert-declaration)


State 1833

  966 simple-declaration: attribute-specifier-seq decl-specifier-seq OPEN_SQUARE identifier-list CLOSE_SQUARE initializer SEMICOLON •

    $default  reduce using rule 966 (simple-declaration)


State 1834

  968 simple-declaration: attribute-specifier-seq decl-specifier-seq ref-qualifier OPEN_SQUARE identifier-list CLOSE_SQUARE initializer • SEMICOLON

    SEMICOLON  shift, and go to state 1903


State 1835

  611 member-declarator: IDENTIFIER attribute-specifier-seq COLON constant-expression brace-or-equal-initializer •

    $default  reduce using rule 611 (member-declarator)


State 1836

  612 member-declarator: attribute-specifier-seq COLON constant-expression brace-or-equal-initializer •

    $default  reduce using rule 612 (member-declarator)


State 1837

  905 pure-specifier: EQ • '0'

    '0'  shift, and go to state 1715


State 1838

  484 initializer-list: initializer-list COMMA initializer-clause ELLIPSIS •

    $default  reduce using rule 484 (initializer-list)


State 1839

  969 simple-declaration: decl-specifier-seq ref-qualifier OPEN_SQUARE identifier-list CLOSE_SQUARE initializer SEMICOLON •

    $default  reduce using rule 969 (simple-declaration)


State 1840

  165 condition: attribute-specifier-seq decl-specifier-seq declarator • brace-or-equal-initializer

    EQ          shift, and go to state 1273
    OPEN_BRACE  shift, and go to state 935

    brace-or-equal-initializer  go to state 1904
    braced-init-list            go to state 646


State 1841

  505 iteration-statement: WHILE OPEN_PAREN condition CLOSE_PAREN statement •

    $default  reduce using rule 505 (iteration-statement)


State 1842

  166 condition: decl-specifier-seq declarator brace-or-equal-initializer •

    $default  reduce using rule 166 (condition)


State 1843

  335 expression: expression • COMMA assignment-expression
  506 iteration-statement: DO statement WHILE OPEN_PAREN expression • CLOSE_PAREN SEMICOLON

    CLOSE_PAREN  shift, and go to state 1905
    COMMA        shift, and go to state 1029


State 1844

  382 for-range-declaration: attribute-specifier-seq decl-specifier-seq OPEN_SQUARE • identifier-list CLOSE_SQUARE
  966 simple-declaration: attribute-specifier-seq decl-specifier-seq OPEN_SQUARE • identifier-list CLOSE_SQUARE initializer SEMICOLON

    IDENTIFIER  shift, and go to state 640

    identifier-list  go to state 1906


State 1845

  380 for-range-declaration: attribute-specifier-seq decl-specifier-seq declarator •
  469 init-declarator: declarator •
  470                | declarator • initializer
  471                | declarator • requires-clause

    EQ          shift, and go to state 1273
    OPEN_PAREN  shift, and go to state 643
    OPEN_BRACE  shift, and go to state 935
    REQUIRES    shift, and go to state 292

    COLON     reduce using rule 380 (for-range-declaration)
    $default  reduce using rule 469 (init-declarator)

    brace-or-equal-initializer  go to state 645
    braced-init-list            go to state 646
    initializer                 go to state 648
    requires-clause             go to state 1522


State 1846

  384 for-range-declaration: attribute-specifier-seq decl-specifier-seq ref-qualifier • OPEN_SQUARE identifier-list CLOSE_SQUARE
  968 simple-declaration: attribute-specifier-seq decl-specifier-seq ref-qualifier • OPEN_SQUARE identifier-list CLOSE_SQUARE initializer SEMICOLON

    OPEN_SQUARE  shift, and go to state 1907


State 1847

  383 for-range-declaration: decl-specifier-seq OPEN_SQUARE identifier-list • CLOSE_SQUARE
  462 identifier-list: identifier-list • COMMA IDENTIFIER
  967 simple-declaration: decl-specifier-seq OPEN_SQUARE identifier-list • CLOSE_SQUARE initializer SEMICOLON

    COMMA         shift, and go to state 1131
    CLOSE_SQUARE  shift, and go to state 1908


State 1848

  385 for-range-declaration: decl-specifier-seq ref-qualifier OPEN_SQUARE • identifier-list CLOSE_SQUARE
  969 simple-declaration: decl-specifier-seq ref-qualifier OPEN_SQUARE • identifier-list CLOSE_SQUARE initializer SEMICOLON

    IDENTIFIER  shift, and go to state 640

    identifier-list  go to state 1909


State 1849

  386 for-range-initializer: expr-or-braced-init-list •

    $default  reduce using rule 386 (for-range-initializer)


State 1850

  511 iteration-statement: FOR OPEN_PAREN for-range-declaration COLON for-range-initializer • CLOSE_PAREN statement

    CLOSE_PAREN  shift, and go to state 1910


State 1851

  507 iteration-statement: FOR OPEN_PAREN init-statement SEMICOLON CLOSE_PAREN • statement

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    USING             shift, and go to state 1
    IDENTIFIER        shift, and go to state 661
    SEMICOLON         shift, and go to state 662
    ALIGNAS           shift, and go to state 4
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    ASM               shift, and go to state 8
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 663
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 289
    VIRTUAL           shift, and go to state 11
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CO_RETURN         shift, and go to state 665
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    FRIEND            shift, and go to state 20
    TYPEDEF           shift, and go to state 21
    CONSTEXPR         shift, and go to state 22
    CONSTEVAL         shift, and go to state 23
    CONSTINIT         shift, and go to state 24
    INLINE            shift, and go to state 258
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 27
    UNICODE_8         shift, and go to state 184
    EXTERN            shift, and go to state 259
    EXPLICIT          shift, and go to state 29
    MULT              shift, and go to state 371
    DEFAULT           shift, and go to state 666
    TRY               shift, and go to state 667
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    WHILE             shift, and go to state 668
    DO                shift, and go to state 669
    FOR               shift, and go to state 670
    BREAK             shift, and go to state 671
    CONTINUE          shift, and go to state 672
    RETURN            shift, and go to state 673
    GOTO              shift, and go to state 674
    CASE              shift, and go to state 675
    NAMESPACE         shift, and go to state 676
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    IF                shift, and go to state 677
    SWITCH            shift, and go to state 678
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    STATIC_ASSERT     shift, and go to state 51
    STATIC            shift, and go to state 52
    THREAD_LOCAL      shift, and go to state 53
    MUTABLE           shift, and go to state 54
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    alias-declaration                    go to state 56
    alignment-specifier                  go to state 57
    and-expression                       go to state 400
    asm-declaration                      go to state 58
    assignment-expression                go to state 525
    attribute-specifier                  go to state 60
    attribute-specifier-seq              go to state 679
    await-expression                     go to state 401
    binary-literal                       go to state 402
    block-declaration                    go to state 680
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-head                           go to state 63
    class-key                            go to state 64
    class-name                           go to state 65
    class-specifier                      go to state 66
    compare-expression                   go to state 406
    compound-statement                   go to state 681
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    coroutine-return-statement           go to state 682
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decl-specifier                       go to state 70
    decl-specifier-seq                   go to state 683
    declaration-statement                go to state 684
    decltype-specifier                   go to state 76
    defining-type-specifier              go to state 78
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-head                            go to state 82
    enum-key                             go to state 83
    enum-name                            go to state 84
    enum-specifier                       go to state 85
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    explicit-specifier                   go to state 264
    expression                           go to state 685
    expression-statement                 go to state 686
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    function-specifier                   go to state 91
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    iteration-statement                  go to state 687
    jump-statement                       go to state 688
    labeled-statement                    go to state 689
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-alias-definition           go to state 100
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    opaque-enum-declaration              go to state 107
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    selection-statement                  go to state 690
    shift-expression                     go to state 443
    simple-declaration                   go to state 113
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    statement                            go to state 1911
    static_assert-declaration            go to state 116
    storage-class-specifier              go to state 117
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    try-block                            go to state 693
    type-constraint                      go to state 123
    type-name                            go to state 124
    type-specifier                       go to state 125
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    using-declaration                    go to state 130
    using-directive                      go to state 131
    using-enum-declaration               go to state 132
    yield-expression                     go to state 532


State 1852

  335 expression: expression • COMMA assignment-expression
  509 iteration-statement: FOR OPEN_PAREN init-statement SEMICOLON expression • CLOSE_PAREN statement

    CLOSE_PAREN  shift, and go to state 1912
    COMMA        shift, and go to state 1029


State 1853

  165 condition: attribute-specifier-seq decl-specifier-seq • declarator brace-or-equal-initializer
  380 for-range-declaration: attribute-specifier-seq decl-specifier-seq • declarator
  382                      | attribute-specifier-seq decl-specifier-seq • OPEN_SQUARE identifier-list CLOSE_SQUARE
  384                      | attribute-specifier-seq decl-specifier-seq • ref-qualifier OPEN_SQUARE identifier-list CLOSE_SQUARE

    IDENTIFIER   shift, and go to state 147
    OPEN_PAREN   shift, and go to state 5
    ELLIPSIS     shift, and go to state 6
    AND          shift, and go to state 278
    SCOPE        shift, and go to state 9
    OPEN_SQUARE  shift, and go to state 1913
    AND_AND      shift, and go to state 280
    OPERATOR     shift, and go to state 17
    DECLTYPE     shift, and go to state 134
    MULT         shift, and go to state 31
    COMPL        shift, and go to state 35

    class-name              go to state 65
    conversion-function-id  go to state 68
    declarator              go to state 1914
    declarator-id           go to state 75
    decltype-specifier      go to state 138
    enum-name               go to state 84
    id-expression           go to state 93
    literal-operator-id     go to state 95
    namespace-alias         go to state 99
    namespace-name          go to state 102
    nested-name-specifier   go to state 148
    noptr-declarator        go to state 106
    operator-function-id    go to state 108
    ptr-declarator          go to state 110
    ptr-operator            go to state 111
    qualified-id            go to state 112
    ref-qualifier           go to state 1915
    simple-template-id      go to state 114
    template-id             go to state 120
    template-name           go to state 142
    type-name               go to state 143
    typedef-name            go to state 126
    unqualified-id          go to state 129


State 1854

  508 iteration-statement: FOR OPEN_PAREN init-statement condition SEMICOLON • CLOSE_PAREN statement
  510                    | FOR OPEN_PAREN init-statement condition SEMICOLON • expression CLOSE_PAREN statement

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    CLOSE_PAREN       shift, and go to state 1916
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 525
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    expression                           go to state 1917
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 1855

  383 for-range-declaration: decl-specifier-seq OPEN_SQUARE • identifier-list CLOSE_SQUARE

    IDENTIFIER  shift, and go to state 640

    identifier-list  go to state 1918


State 1856

  166 condition: decl-specifier-seq declarator • brace-or-equal-initializer
  381 for-range-declaration: decl-specifier-seq declarator •

    EQ          shift, and go to state 1273
    OPEN_BRACE  shift, and go to state 935

    $default  reduce using rule 381 (for-range-declaration)

    brace-or-equal-initializer  go to state 1842
    braced-init-list            go to state 646


State 1857

  385 for-range-declaration: decl-specifier-seq ref-qualifier • OPEN_SQUARE identifier-list CLOSE_SQUARE

    OPEN_SQUARE  shift, and go to state 1919


State 1858

  512 iteration-statement: FOR OPEN_PAREN init-statement for-range-declaration COLON • for-range-initializer CLOSE_PAREN statement

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    IDENTIFIER        shift, and go to state 2
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 361
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 935
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    UNICODE_8         shift, and go to state 184
    MULT              shift, and go to state 371
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    and-expression                       go to state 400
    assignment-expression                go to state 525
    await-expression                     go to state 401
    binary-literal                       go to state 402
    boolean-literal                      go to state 403
    braced-init-list                     go to state 1160
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-name                           go to state 65
    compare-expression                   go to state 406
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decltype-specifier                   go to state 76
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    encoding-prefix                      go to state 414
    enum-name                            go to state 84
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    expr-or-braced-init-list             go to state 1849
    expression                           go to state 1162
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    for-range-initializer                go to state 1920
    fractional-constant                  go to state 419
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    shift-expression                     go to state 443
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 529
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    type-constraint                      go to state 123
    type-name                            go to state 124
    typedef-name                         go to state 126
    typename-specifier                   go to state 531
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    yield-expression                     go to state 532


State 1859

  165 condition: attribute-specifier-seq decl-specifier-seq declarator • brace-or-equal-initializer
  469 init-declarator: declarator •
  470                | declarator • initializer
  471                | declarator • requires-clause

    EQ          shift, and go to state 1273
    OPEN_PAREN  shift, and go to state 643
    OPEN_BRACE  shift, and go to state 935
    REQUIRES    shift, and go to state 292

    $default  reduce using rule 469 (init-declarator)

    brace-or-equal-initializer  go to state 1921
    braced-init-list            go to state 646
    initializer                 go to state 648
    requires-clause             go to state 1522


State 1860

  938 selection-statement: IF OPEN_PAREN condition CLOSE_PAREN statement •
  942                    | IF OPEN_PAREN condition CLOSE_PAREN statement • ELSE statement

    ELSE  shift, and go to state 1922

    ELSE      [reduce using rule 938 (selection-statement)]
    $default  reduce using rule 938 (selection-statement)


State 1861

  166 condition: decl-specifier-seq declarator brace-or-equal-initializer •
  477 initializer: brace-or-equal-initializer •

    CLOSE_PAREN  reduce using rule 166 (condition)
    $default     reduce using rule 477 (initializer)


State 1862

  940 selection-statement: IF OPEN_PAREN init-statement condition CLOSE_PAREN • statement
  944                    | IF OPEN_PAREN init-statement condition CLOSE_PAREN • statement ELSE statement

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    USING             shift, and go to state 1
    IDENTIFIER        shift, and go to state 661
    SEMICOLON         shift, and go to state 662
    ALIGNAS           shift, and go to state 4
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    ASM               shift, and go to state 8
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 663
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 289
    VIRTUAL           shift, and go to state 11
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CO_RETURN         shift, and go to state 665
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    FRIEND            shift, and go to state 20
    TYPEDEF           shift, and go to state 21
    CONSTEXPR         shift, and go to state 22
    CONSTEVAL         shift, and go to state 23
    CONSTINIT         shift, and go to state 24
    INLINE            shift, and go to state 258
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 27
    UNICODE_8         shift, and go to state 184
    EXTERN            shift, and go to state 259
    EXPLICIT          shift, and go to state 29
    MULT              shift, and go to state 371
    DEFAULT           shift, and go to state 666
    TRY               shift, and go to state 667
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    WHILE             shift, and go to state 668
    DO                shift, and go to state 669
    FOR               shift, and go to state 670
    BREAK             shift, and go to state 671
    CONTINUE          shift, and go to state 672
    RETURN            shift, and go to state 673
    GOTO              shift, and go to state 674
    CASE              shift, and go to state 675
    NAMESPACE         shift, and go to state 676
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    IF                shift, and go to state 677
    SWITCH            shift, and go to state 678
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    STATIC_ASSERT     shift, and go to state 51
    STATIC            shift, and go to state 52
    THREAD_LOCAL      shift, and go to state 53
    MUTABLE           shift, and go to state 54
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    alias-declaration                    go to state 56
    alignment-specifier                  go to state 57
    and-expression                       go to state 400
    asm-declaration                      go to state 58
    assignment-expression                go to state 525
    attribute-specifier                  go to state 60
    attribute-specifier-seq              go to state 679
    await-expression                     go to state 401
    binary-literal                       go to state 402
    block-declaration                    go to state 680
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-head                           go to state 63
    class-key                            go to state 64
    class-name                           go to state 65
    class-specifier                      go to state 66
    compare-expression                   go to state 406
    compound-statement                   go to state 681
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    coroutine-return-statement           go to state 682
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decl-specifier                       go to state 70
    decl-specifier-seq                   go to state 683
    declaration-statement                go to state 684
    decltype-specifier                   go to state 76
    defining-type-specifier              go to state 78
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-head                            go to state 82
    enum-key                             go to state 83
    enum-name                            go to state 84
    enum-specifier                       go to state 85
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    explicit-specifier                   go to state 264
    expression                           go to state 685
    expression-statement                 go to state 686
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    function-specifier                   go to state 91
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    iteration-statement                  go to state 687
    jump-statement                       go to state 688
    labeled-statement                    go to state 689
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-alias-definition           go to state 100
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    opaque-enum-declaration              go to state 107
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    selection-statement                  go to state 690
    shift-expression                     go to state 443
    simple-declaration                   go to state 113
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    statement                            go to state 1923
    static_assert-declaration            go to state 116
    storage-class-specifier              go to state 117
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    try-block                            go to state 693
    type-constraint                      go to state 123
    type-name                            go to state 124
    type-specifier                       go to state 125
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    using-declaration                    go to state 130
    using-directive                      go to state 131
    using-enum-declaration               go to state 132
    yield-expression                     go to state 532


State 1863

  939 selection-statement: IF CONSTEXPR OPEN_PAREN condition CLOSE_PAREN • statement
  943                    | IF CONSTEXPR OPEN_PAREN condition CLOSE_PAREN • statement ELSE statement

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    USING             shift, and go to state 1
    IDENTIFIER        shift, and go to state 661
    SEMICOLON         shift, and go to state 662
    ALIGNAS           shift, and go to state 4
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    ASM               shift, and go to state 8
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 663
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 289
    VIRTUAL           shift, and go to state 11
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CO_RETURN         shift, and go to state 665
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    FRIEND            shift, and go to state 20
    TYPEDEF           shift, and go to state 21
    CONSTEXPR         shift, and go to state 22
    CONSTEVAL         shift, and go to state 23
    CONSTINIT         shift, and go to state 24
    INLINE            shift, and go to state 258
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 27
    UNICODE_8         shift, and go to state 184
    EXTERN            shift, and go to state 259
    EXPLICIT          shift, and go to state 29
    MULT              shift, and go to state 371
    DEFAULT           shift, and go to state 666
    TRY               shift, and go to state 667
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    WHILE             shift, and go to state 668
    DO                shift, and go to state 669
    FOR               shift, and go to state 670
    BREAK             shift, and go to state 671
    CONTINUE          shift, and go to state 672
    RETURN            shift, and go to state 673
    GOTO              shift, and go to state 674
    CASE              shift, and go to state 675
    NAMESPACE         shift, and go to state 676
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    IF                shift, and go to state 677
    SWITCH            shift, and go to state 678
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    STATIC_ASSERT     shift, and go to state 51
    STATIC            shift, and go to state 52
    THREAD_LOCAL      shift, and go to state 53
    MUTABLE           shift, and go to state 54
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    alias-declaration                    go to state 56
    alignment-specifier                  go to state 57
    and-expression                       go to state 400
    asm-declaration                      go to state 58
    assignment-expression                go to state 525
    attribute-specifier                  go to state 60
    attribute-specifier-seq              go to state 679
    await-expression                     go to state 401
    binary-literal                       go to state 402
    block-declaration                    go to state 680
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-head                           go to state 63
    class-key                            go to state 64
    class-name                           go to state 65
    class-specifier                      go to state 66
    compare-expression                   go to state 406
    compound-statement                   go to state 681
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    coroutine-return-statement           go to state 682
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decl-specifier                       go to state 70
    decl-specifier-seq                   go to state 683
    declaration-statement                go to state 684
    decltype-specifier                   go to state 76
    defining-type-specifier              go to state 78
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-head                            go to state 82
    enum-key                             go to state 83
    enum-name                            go to state 84
    enum-specifier                       go to state 85
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    explicit-specifier                   go to state 264
    expression                           go to state 685
    expression-statement                 go to state 686
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    function-specifier                   go to state 91
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    iteration-statement                  go to state 687
    jump-statement                       go to state 688
    labeled-statement                    go to state 689
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-alias-definition           go to state 100
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    opaque-enum-declaration              go to state 107
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    selection-statement                  go to state 690
    shift-expression                     go to state 443
    simple-declaration                   go to state 113
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    statement                            go to state 1924
    static_assert-declaration            go to state 116
    storage-class-specifier              go to state 117
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    try-block                            go to state 693
    type-constraint                      go to state 123
    type-name                            go to state 124
    type-specifier                       go to state 125
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    using-declaration                    go to state 130
    using-directive                      go to state 131
    using-enum-declaration               go to state 132
    yield-expression                     go to state 532


State 1864

  941 selection-statement: IF CONSTEXPR OPEN_PAREN init-statement condition • CLOSE_PAREN statement
  945                    | IF CONSTEXPR OPEN_PAREN init-statement condition • CLOSE_PAREN statement ELSE statement

    CLOSE_PAREN  shift, and go to state 1925


State 1865

  948 selection-statement: IF CONSTEVAL compound-statement ELSE statement •

    $default  reduce using rule 948 (selection-statement)


State 1866

  949 selection-statement: IF NOT CONSTEVAL compound-statement ELSE • statement

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    USING             shift, and go to state 1
    IDENTIFIER        shift, and go to state 661
    SEMICOLON         shift, and go to state 662
    ALIGNAS           shift, and go to state 4
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    ASM               shift, and go to state 8
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 663
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 289
    VIRTUAL           shift, and go to state 11
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CO_RETURN         shift, and go to state 665
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    FRIEND            shift, and go to state 20
    TYPEDEF           shift, and go to state 21
    CONSTEXPR         shift, and go to state 22
    CONSTEVAL         shift, and go to state 23
    CONSTINIT         shift, and go to state 24
    INLINE            shift, and go to state 258
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 27
    UNICODE_8         shift, and go to state 184
    EXTERN            shift, and go to state 259
    EXPLICIT          shift, and go to state 29
    MULT              shift, and go to state 371
    DEFAULT           shift, and go to state 666
    TRY               shift, and go to state 667
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    WHILE             shift, and go to state 668
    DO                shift, and go to state 669
    FOR               shift, and go to state 670
    BREAK             shift, and go to state 671
    CONTINUE          shift, and go to state 672
    RETURN            shift, and go to state 673
    GOTO              shift, and go to state 674
    CASE              shift, and go to state 675
    NAMESPACE         shift, and go to state 676
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    IF                shift, and go to state 677
    SWITCH            shift, and go to state 678
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    STATIC_ASSERT     shift, and go to state 51
    STATIC            shift, and go to state 52
    THREAD_LOCAL      shift, and go to state 53
    MUTABLE           shift, and go to state 54
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    alias-declaration                    go to state 56
    alignment-specifier                  go to state 57
    and-expression                       go to state 400
    asm-declaration                      go to state 58
    assignment-expression                go to state 525
    attribute-specifier                  go to state 60
    attribute-specifier-seq              go to state 679
    await-expression                     go to state 401
    binary-literal                       go to state 402
    block-declaration                    go to state 680
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-head                           go to state 63
    class-key                            go to state 64
    class-name                           go to state 65
    class-specifier                      go to state 66
    compare-expression                   go to state 406
    compound-statement                   go to state 681
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    coroutine-return-statement           go to state 682
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decl-specifier                       go to state 70
    decl-specifier-seq                   go to state 683
    declaration-statement                go to state 684
    decltype-specifier                   go to state 76
    defining-type-specifier              go to state 78
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-head                            go to state 82
    enum-key                             go to state 83
    enum-name                            go to state 84
    enum-specifier                       go to state 85
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    explicit-specifier                   go to state 264
    expression                           go to state 685
    expression-statement                 go to state 686
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    function-specifier                   go to state 91
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    iteration-statement                  go to state 687
    jump-statement                       go to state 688
    labeled-statement                    go to state 689
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-alias-definition           go to state 100
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    opaque-enum-declaration              go to state 107
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    selection-statement                  go to state 690
    shift-expression                     go to state 443
    simple-declaration                   go to state 113
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    statement                            go to state 1926
    static_assert-declaration            go to state 116
    storage-class-specifier              go to state 117
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    try-block                            go to state 693
    type-constraint                      go to state 123
    type-name                            go to state 124
    type-specifier                       go to state 125
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    using-declaration                    go to state 130
    using-directive                      go to state 131
    using-enum-declaration               go to state 132
    yield-expression                     go to state 532


State 1867

  950 selection-statement: SWITCH OPEN_PAREN condition CLOSE_PAREN statement •

    $default  reduce using rule 950 (selection-statement)


State 1868

  951 selection-statement: SWITCH OPEN_PAREN init-statement condition CLOSE_PAREN • statement

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    USING             shift, and go to state 1
    IDENTIFIER        shift, and go to state 661
    SEMICOLON         shift, and go to state 662
    ALIGNAS           shift, and go to state 4
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    ASM               shift, and go to state 8
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 663
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 289
    VIRTUAL           shift, and go to state 11
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CO_RETURN         shift, and go to state 665
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    FRIEND            shift, and go to state 20
    TYPEDEF           shift, and go to state 21
    CONSTEXPR         shift, and go to state 22
    CONSTEVAL         shift, and go to state 23
    CONSTINIT         shift, and go to state 24
    INLINE            shift, and go to state 258
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 27
    UNICODE_8         shift, and go to state 184
    EXTERN            shift, and go to state 259
    EXPLICIT          shift, and go to state 29
    MULT              shift, and go to state 371
    DEFAULT           shift, and go to state 666
    TRY               shift, and go to state 667
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    WHILE             shift, and go to state 668
    DO                shift, and go to state 669
    FOR               shift, and go to state 670
    BREAK             shift, and go to state 671
    CONTINUE          shift, and go to state 672
    RETURN            shift, and go to state 673
    GOTO              shift, and go to state 674
    CASE              shift, and go to state 675
    NAMESPACE         shift, and go to state 676
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    IF                shift, and go to state 677
    SWITCH            shift, and go to state 678
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    STATIC_ASSERT     shift, and go to state 51
    STATIC            shift, and go to state 52
    THREAD_LOCAL      shift, and go to state 53
    MUTABLE           shift, and go to state 54
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    alias-declaration                    go to state 56
    alignment-specifier                  go to state 57
    and-expression                       go to state 400
    asm-declaration                      go to state 58
    assignment-expression                go to state 525
    attribute-specifier                  go to state 60
    attribute-specifier-seq              go to state 679
    await-expression                     go to state 401
    binary-literal                       go to state 402
    block-declaration                    go to state 680
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-head                           go to state 63
    class-key                            go to state 64
    class-name                           go to state 65
    class-specifier                      go to state 66
    compare-expression                   go to state 406
    compound-statement                   go to state 681
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    coroutine-return-statement           go to state 682
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decl-specifier                       go to state 70
    decl-specifier-seq                   go to state 683
    declaration-statement                go to state 684
    decltype-specifier                   go to state 76
    defining-type-specifier              go to state 78
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-head                            go to state 82
    enum-key                             go to state 83
    enum-name                            go to state 84
    enum-specifier                       go to state 85
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    explicit-specifier                   go to state 264
    expression                           go to state 685
    expression-statement                 go to state 686
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    function-specifier                   go to state 91
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    iteration-statement                  go to state 687
    jump-statement                       go to state 688
    labeled-statement                    go to state 689
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-alias-definition           go to state 100
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    opaque-enum-declaration              go to state 107
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    selection-statement                  go to state 690
    shift-expression                     go to state 443
    simple-declaration                   go to state 113
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    statement                            go to state 1927
    static_assert-declaration            go to state 116
    storage-class-specifier              go to state 117
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    try-block                            go to state 693
    type-constraint                      go to state 123
    type-name                            go to state 124
    type-specifier                       go to state 125
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    using-declaration                    go to state 130
    using-directive                      go to state 131
    using-enum-declaration               go to state 132
    yield-expression                     go to state 532


State 1869

  521 labeled-statement: attribute-specifier-seq CASE constant-expression COLON statement •

    $default  reduce using rule 521 (labeled-statement)


State 1870

  310 exception-declaration: attribute-specifier-seq type-specifier-seq • declarator
  312                      | attribute-specifier-seq type-specifier-seq •
  314                      | attribute-specifier-seq type-specifier-seq • abstract-declarator

    IDENTIFIER   shift, and go to state 147
    OPEN_PAREN   shift, and go to state 969
    ELLIPSIS     shift, and go to state 970
    AND          shift, and go to state 7
    SCOPE        shift, and go to state 9
    OPEN_SQUARE  shift, and go to state 941
    AND_AND      shift, and go to state 16
    OPERATOR     shift, and go to state 17
    DECLTYPE     shift, and go to state 134
    MULT         shift, and go to state 31
    COMPL        shift, and go to state 35

    $default  reduce using rule 312 (exception-declaration)

    abstract-declarator             go to state 1928
    abstract-pack-declarator        go to state 943
    class-name                      go to state 65
    conversion-function-id          go to state 68
    declarator                      go to state 1929
    declarator-id                   go to state 75
    decltype-specifier              go to state 138
    enum-name                       go to state 84
    id-expression                   go to state 93
    literal-operator-id             go to state 95
    namespace-alias                 go to state 99
    namespace-name                  go to state 102
    nested-name-specifier           go to state 148
    noptr-abstract-declarator       go to state 944
    noptr-abstract-pack-declarator  go to state 945
    noptr-declarator                go to state 106
    operator-function-id            go to state 108
    parameters-and-qualifiers       go to state 946
    ptr-abstract-declarator         go to state 947
    ptr-declarator                  go to state 110
    ptr-operator                    go to state 973
    qualified-id                    go to state 112
    simple-template-id              go to state 114
    template-id                     go to state 120
    template-name                   go to state 142
    type-name                       go to state 143
    typedef-name                    go to state 126
    unqualified-id                  go to state 129


State 1871

  416 handler: CATCH OPEN_PAREN exception-declaration CLOSE_PAREN • compound-statement

    OPEN_BRACE  shift, and go to state 289

    compound-statement  go to state 1930


State 1872

  315 exception-declaration: type-specifier-seq abstract-declarator •

    $default  reduce using rule 315 (exception-declaration)


State 1873

  311 exception-declaration: type-specifier-seq declarator •

    $default  reduce using rule 311 (exception-declaration)


State 1874

  231 deduction-guide: explicit-specifier template-name OPEN_PAREN parameter-declaration-clause CLOSE_PAREN DEREF simple-template-id • SEMICOLON

    SEMICOLON  shift, and go to state 1931


State 1875

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  845 parameters-and-qualifiers: OPEN_PAREN parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq noexcept-specifier attribute-specifier-seq •

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    OPEN_SQUARE  [reduce using rule 845 (parameters-and-qualifiers)]
    $default     reduce using rule 845 (parameters-and-qualifiers)

    alignment-specifier  go to state 57
    attribute-specifier  go to state 260


State 1876

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  843 parameters-and-qualifiers: OPEN_PAREN parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq ref-qualifier attribute-specifier-seq •

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    OPEN_SQUARE  [reduce using rule 843 (parameters-and-qualifiers)]
    $default     reduce using rule 843 (parameters-and-qualifiers)

    alignment-specifier  go to state 57
    attribute-specifier  go to state 260


State 1877

  839 parameters-and-qualifiers: OPEN_PAREN parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq ref-qualifier noexcept-specifier •
  847                          | OPEN_PAREN parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq ref-qualifier noexcept-specifier • attribute-specifier-seq

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    OPEN_SQUARE  [reduce using rule 839 (parameters-and-qualifiers)]
    $default     reduce using rule 839 (parameters-and-qualifiers)

    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 1932


State 1878

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  846 parameters-and-qualifiers: OPEN_PAREN parameter-declaration-clause CLOSE_PAREN ref-qualifier noexcept-specifier attribute-specifier-seq •

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    OPEN_SQUARE  [reduce using rule 846 (parameters-and-qualifiers)]
    $default     reduce using rule 846 (parameters-and-qualifiers)

    alignment-specifier  go to state 57
    attribute-specifier  go to state 260


State 1879

  232 deduction-guide: template-name OPEN_PAREN parameter-declaration-clause CLOSE_PAREN DEREF simple-template-id SEMICOLON •

    $default  reduce using rule 232 (deduction-guide)


State 1880

  347 fold-expression: OPEN_PAREN cast-expression fold-operator ELLIPSIS fold-operator cast-expression • CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 1933


State 1881

  680 new-expression: SCOPE NEW OPEN_PAREN type-id CLOSE_PAREN new-initializer •

    $default  reduce using rule 680 (new-expression)


State 1882

  678 new-expression: SCOPE NEW new-placement OPEN_PAREN type-id CLOSE_PAREN •
  682               | SCOPE NEW new-placement OPEN_PAREN type-id CLOSE_PAREN • new-initializer

    OPEN_PAREN  shift, and go to state 1303
    OPEN_BRACE  shift, and go to state 935

    OPEN_BRACE  [reduce using rule 678 (new-expression)]
    $default    reduce using rule 678 (new-expression)

    braced-init-list  go to state 1304
    new-initializer   go to state 1934


State 1883

  156 compound-requirement: OPEN_BRACE expression CLOSE_BRACE SEMICOLON •

    $default  reduce using rule 156 (compound-requirement)


State 1884

  157 compound-requirement: OPEN_BRACE expression CLOSE_BRACE NOEXCEPT • SEMICOLON
  159                     | OPEN_BRACE expression CLOSE_BRACE NOEXCEPT • return-type-requirement SEMICOLON

    SEMICOLON  shift, and go to state 1935
    DEREF      shift, and go to state 1885

    return-type-requirement  go to state 1936


State 1885

  932 return-type-requirement: DEREF • type-constraint

    IDENTIFIER  shift, and go to state 162
    SCOPE       shift, and go to state 9
    DECLTYPE    shift, and go to state 134

    class-name             go to state 65
    concept-name           go to state 67
    decltype-specifier     go to state 138
    enum-name              go to state 84
    namespace-alias        go to state 99
    namespace-name         go to state 102
    nested-name-specifier  go to state 1937
    simple-template-id     go to state 141
    template-name          go to state 142
    type-constraint        go to state 1938
    type-name              go to state 143
    typedef-name           go to state 126


State 1886

  158 compound-requirement: OPEN_BRACE expression CLOSE_BRACE return-type-requirement • SEMICOLON

    SEMICOLON  shift, and go to state 1939


State 1887

  1102 type-requirement: TYPENAME nested-name-specifier type-name SEMICOLON •

    $default  reduce using rule 1102 (type-requirement)


State 1888

  683 new-expression: NEW new-placement OPEN_PAREN type-id CLOSE_PAREN new-initializer •

    $default  reduce using rule 683 (new-expression)


State 1889

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  732 noptr-new-declarator: OPEN_SQUARE expression CLOSE_SQUARE attribute-specifier-seq •

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    OPEN_SQUARE  [reduce using rule 732 (noptr-new-declarator)]
    $default     reduce using rule 732 (noptr-new-declarator)

    alignment-specifier  go to state 57
    attribute-specifier  go to state 260


State 1890

  733 noptr-new-declarator: noptr-new-declarator OPEN_SQUARE constant-expression CLOSE_SQUARE •
  734                     | noptr-new-declarator OPEN_SQUARE constant-expression CLOSE_SQUARE • attribute-specifier-seq

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    OPEN_SQUARE  [reduce using rule 733 (noptr-new-declarator)]
    $default     reduce using rule 733 (noptr-new-declarator)

    alignment-specifier      go to state 57
    attribute-specifier      go to state 60
    attribute-specifier-seq  go to state 1940


State 1891

  335 expression: expression • COMMA assignment-expression
  873 postfix-expression: DYNAMIC_CAST LESS type-id GREATER OPEN_PAREN expression • CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 1941
    COMMA        shift, and go to state 1029


State 1892

  335 expression: expression • COMMA assignment-expression
  874 postfix-expression: STATIC_CAST LESS type-id GREATER OPEN_PAREN expression • CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 1942
    COMMA        shift, and go to state 1029


State 1893

  335 expression: expression • COMMA assignment-expression
  875 postfix-expression: REINTERPRET_CAST LESS type-id GREATER OPEN_PAREN expression • CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 1943
    COMMA        shift, and go to state 1029


State 1894

  335 expression: expression • COMMA assignment-expression
  876 postfix-expression: CONST_CAST LESS type-id GREATER OPEN_PAREN expression • CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 1944
    COMMA        shift, and go to state 1029


State 1895

  530 lambda-declarator: OPEN_PAREN parameter-declaration-clause CLOSE_PAREN lambda-specifiers requires-clause •

    $default  reduce using rule 530 (lambda-declarator)


State 1896

  532 lambda-expression: lambda-introducer LESS template-parameter-list GREATER lambda-declarator compound-statement •

    $default  reduce using rule 532 (lambda-expression)


State 1897

  533 lambda-expression: lambda-introducer LESS template-parameter-list GREATER requires-clause lambda-declarator • compound-statement

    OPEN_BRACE  shift, and go to state 289

    compound-statement  go to state 1945


State 1898

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  712 noptr-abstract-declarator: noptr-abstract-declarator OPEN_SQUARE constant-expression CLOSE_SQUARE attribute-specifier-seq •

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    OPEN_SQUARE  [reduce using rule 712 (noptr-abstract-declarator)]
    $default     reduce using rule 712 (noptr-abstract-declarator)

    alignment-specifier  go to state 57
    attribute-specifier  go to state 260


State 1899

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  719 noptr-abstract-pack-declarator: noptr-abstract-pack-declarator OPEN_SQUARE constant-expression CLOSE_SQUARE attribute-specifier-seq •

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    OPEN_SQUARE  [reduce using rule 719 (noptr-abstract-pack-declarator)]
    $default     reduce using rule 719 (noptr-abstract-pack-declarator)

    alignment-specifier  go to state 57
    attribute-specifier  go to state 260


State 1900

  824 parameter-declaration: attribute-specifier-seq THIS decl-specifier-seq abstract-declarator EQ initializer-clause •

    $default  reduce using rule 824 (parameter-declaration)


State 1901

  808 parameter-declaration: attribute-specifier-seq THIS decl-specifier-seq declarator EQ initializer-clause •

    $default  reduce using rule 808 (parameter-declaration)


State 1902

  663 nested-namespace-definition: NAMESPACE enclosing-namespace-specifier SCOPE INLINE IDENTIFIER OPEN_BRACE namespace-body CLOSE_BRACE •

    $default  reduce using rule 663 (nested-namespace-definition)


State 1903

  968 simple-declaration: attribute-specifier-seq decl-specifier-seq ref-qualifier OPEN_SQUARE identifier-list CLOSE_SQUARE initializer SEMICOLON •

    $default  reduce using rule 968 (simple-declaration)


State 1904

  165 condition: attribute-specifier-seq decl-specifier-seq declarator brace-or-equal-initializer •

    $default  reduce using rule 165 (condition)


State 1905

  506 iteration-statement: DO statement WHILE OPEN_PAREN expression CLOSE_PAREN • SEMICOLON

    SEMICOLON  shift, and go to state 1946


State 1906

  382 for-range-declaration: attribute-specifier-seq decl-specifier-seq OPEN_SQUARE identifier-list • CLOSE_SQUARE
  462 identifier-list: identifier-list • COMMA IDENTIFIER
  966 simple-declaration: attribute-specifier-seq decl-specifier-seq OPEN_SQUARE identifier-list • CLOSE_SQUARE initializer SEMICOLON

    COMMA         shift, and go to state 1131
    CLOSE_SQUARE  shift, and go to state 1947


State 1907

  384 for-range-declaration: attribute-specifier-seq decl-specifier-seq ref-qualifier OPEN_SQUARE • identifier-list CLOSE_SQUARE
  968 simple-declaration: attribute-specifier-seq decl-specifier-seq ref-qualifier OPEN_SQUARE • identifier-list CLOSE_SQUARE initializer SEMICOLON

    IDENTIFIER  shift, and go to state 640

    identifier-list  go to state 1948


State 1908

  383 for-range-declaration: decl-specifier-seq OPEN_SQUARE identifier-list CLOSE_SQUARE •
  967 simple-declaration: decl-specifier-seq OPEN_SQUARE identifier-list CLOSE_SQUARE • initializer SEMICOLON

    EQ          shift, and go to state 1273
    OPEN_PAREN  shift, and go to state 643
    OPEN_BRACE  shift, and go to state 935

    $default  reduce using rule 383 (for-range-declaration)

    brace-or-equal-initializer  go to state 645
    braced-init-list            go to state 646
    initializer                 go to state 1512


State 1909

  385 for-range-declaration: decl-specifier-seq ref-qualifier OPEN_SQUARE identifier-list • CLOSE_SQUARE
  462 identifier-list: identifier-list • COMMA IDENTIFIER
  969 simple-declaration: decl-specifier-seq ref-qualifier OPEN_SQUARE identifier-list • CLOSE_SQUARE initializer SEMICOLON

    COMMA         shift, and go to state 1131
    CLOSE_SQUARE  shift, and go to state 1949


State 1910

  511 iteration-statement: FOR OPEN_PAREN for-range-declaration COLON for-range-initializer CLOSE_PAREN • statement

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    USING             shift, and go to state 1
    IDENTIFIER        shift, and go to state 661
    SEMICOLON         shift, and go to state 662
    ALIGNAS           shift, and go to state 4
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    ASM               shift, and go to state 8
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 663
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 289
    VIRTUAL           shift, and go to state 11
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CO_RETURN         shift, and go to state 665
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    FRIEND            shift, and go to state 20
    TYPEDEF           shift, and go to state 21
    CONSTEXPR         shift, and go to state 22
    CONSTEVAL         shift, and go to state 23
    CONSTINIT         shift, and go to state 24
    INLINE            shift, and go to state 258
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 27
    UNICODE_8         shift, and go to state 184
    EXTERN            shift, and go to state 259
    EXPLICIT          shift, and go to state 29
    MULT              shift, and go to state 371
    DEFAULT           shift, and go to state 666
    TRY               shift, and go to state 667
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    WHILE             shift, and go to state 668
    DO                shift, and go to state 669
    FOR               shift, and go to state 670
    BREAK             shift, and go to state 671
    CONTINUE          shift, and go to state 672
    RETURN            shift, and go to state 673
    GOTO              shift, and go to state 674
    CASE              shift, and go to state 675
    NAMESPACE         shift, and go to state 676
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    IF                shift, and go to state 677
    SWITCH            shift, and go to state 678
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    STATIC_ASSERT     shift, and go to state 51
    STATIC            shift, and go to state 52
    THREAD_LOCAL      shift, and go to state 53
    MUTABLE           shift, and go to state 54
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    alias-declaration                    go to state 56
    alignment-specifier                  go to state 57
    and-expression                       go to state 400
    asm-declaration                      go to state 58
    assignment-expression                go to state 525
    attribute-specifier                  go to state 60
    attribute-specifier-seq              go to state 679
    await-expression                     go to state 401
    binary-literal                       go to state 402
    block-declaration                    go to state 680
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-head                           go to state 63
    class-key                            go to state 64
    class-name                           go to state 65
    class-specifier                      go to state 66
    compare-expression                   go to state 406
    compound-statement                   go to state 681
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    coroutine-return-statement           go to state 682
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decl-specifier                       go to state 70
    decl-specifier-seq                   go to state 683
    declaration-statement                go to state 684
    decltype-specifier                   go to state 76
    defining-type-specifier              go to state 78
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-head                            go to state 82
    enum-key                             go to state 83
    enum-name                            go to state 84
    enum-specifier                       go to state 85
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    explicit-specifier                   go to state 264
    expression                           go to state 685
    expression-statement                 go to state 686
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    function-specifier                   go to state 91
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    iteration-statement                  go to state 687
    jump-statement                       go to state 688
    labeled-statement                    go to state 689
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-alias-definition           go to state 100
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    opaque-enum-declaration              go to state 107
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    selection-statement                  go to state 690
    shift-expression                     go to state 443
    simple-declaration                   go to state 113
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    statement                            go to state 1950
    static_assert-declaration            go to state 116
    storage-class-specifier              go to state 117
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    try-block                            go to state 693
    type-constraint                      go to state 123
    type-name                            go to state 124
    type-specifier                       go to state 125
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    using-declaration                    go to state 130
    using-directive                      go to state 131
    using-enum-declaration               go to state 132
    yield-expression                     go to state 532


State 1911

  507 iteration-statement: FOR OPEN_PAREN init-statement SEMICOLON CLOSE_PAREN statement •

    $default  reduce using rule 507 (iteration-statement)


State 1912

  509 iteration-statement: FOR OPEN_PAREN init-statement SEMICOLON expression CLOSE_PAREN • statement

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    USING             shift, and go to state 1
    IDENTIFIER        shift, and go to state 661
    SEMICOLON         shift, and go to state 662
    ALIGNAS           shift, and go to state 4
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    ASM               shift, and go to state 8
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 663
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 289
    VIRTUAL           shift, and go to state 11
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CO_RETURN         shift, and go to state 665
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    FRIEND            shift, and go to state 20
    TYPEDEF           shift, and go to state 21
    CONSTEXPR         shift, and go to state 22
    CONSTEVAL         shift, and go to state 23
    CONSTINIT         shift, and go to state 24
    INLINE            shift, and go to state 258
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 27
    UNICODE_8         shift, and go to state 184
    EXTERN            shift, and go to state 259
    EXPLICIT          shift, and go to state 29
    MULT              shift, and go to state 371
    DEFAULT           shift, and go to state 666
    TRY               shift, and go to state 667
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    WHILE             shift, and go to state 668
    DO                shift, and go to state 669
    FOR               shift, and go to state 670
    BREAK             shift, and go to state 671
    CONTINUE          shift, and go to state 672
    RETURN            shift, and go to state 673
    GOTO              shift, and go to state 674
    CASE              shift, and go to state 675
    NAMESPACE         shift, and go to state 676
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    IF                shift, and go to state 677
    SWITCH            shift, and go to state 678
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    STATIC_ASSERT     shift, and go to state 51
    STATIC            shift, and go to state 52
    THREAD_LOCAL      shift, and go to state 53
    MUTABLE           shift, and go to state 54
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    alias-declaration                    go to state 56
    alignment-specifier                  go to state 57
    and-expression                       go to state 400
    asm-declaration                      go to state 58
    assignment-expression                go to state 525
    attribute-specifier                  go to state 60
    attribute-specifier-seq              go to state 679
    await-expression                     go to state 401
    binary-literal                       go to state 402
    block-declaration                    go to state 680
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-head                           go to state 63
    class-key                            go to state 64
    class-name                           go to state 65
    class-specifier                      go to state 66
    compare-expression                   go to state 406
    compound-statement                   go to state 681
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    coroutine-return-statement           go to state 682
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decl-specifier                       go to state 70
    decl-specifier-seq                   go to state 683
    declaration-statement                go to state 684
    decltype-specifier                   go to state 76
    defining-type-specifier              go to state 78
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-head                            go to state 82
    enum-key                             go to state 83
    enum-name                            go to state 84
    enum-specifier                       go to state 85
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    explicit-specifier                   go to state 264
    expression                           go to state 685
    expression-statement                 go to state 686
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    function-specifier                   go to state 91
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    iteration-statement                  go to state 687
    jump-statement                       go to state 688
    labeled-statement                    go to state 689
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-alias-definition           go to state 100
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    opaque-enum-declaration              go to state 107
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    selection-statement                  go to state 690
    shift-expression                     go to state 443
    simple-declaration                   go to state 113
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    statement                            go to state 1951
    static_assert-declaration            go to state 116
    storage-class-specifier              go to state 117
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    try-block                            go to state 693
    type-constraint                      go to state 123
    type-name                            go to state 124
    type-specifier                       go to state 125
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    using-declaration                    go to state 130
    using-directive                      go to state 131
    using-enum-declaration               go to state 132
    yield-expression                     go to state 532


State 1913

  382 for-range-declaration: attribute-specifier-seq decl-specifier-seq OPEN_SQUARE • identifier-list CLOSE_SQUARE

    IDENTIFIER  shift, and go to state 640

    identifier-list  go to state 1952


State 1914

  165 condition: attribute-specifier-seq decl-specifier-seq declarator • brace-or-equal-initializer
  380 for-range-declaration: attribute-specifier-seq decl-specifier-seq declarator •

    EQ          shift, and go to state 1273
    OPEN_BRACE  shift, and go to state 935

    $default  reduce using rule 380 (for-range-declaration)

    brace-or-equal-initializer  go to state 1904
    braced-init-list            go to state 646


State 1915

  384 for-range-declaration: attribute-specifier-seq decl-specifier-seq ref-qualifier • OPEN_SQUARE identifier-list CLOSE_SQUARE

    OPEN_SQUARE  shift, and go to state 1953


State 1916

  508 iteration-statement: FOR OPEN_PAREN init-statement condition SEMICOLON CLOSE_PAREN • statement

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    USING             shift, and go to state 1
    IDENTIFIER        shift, and go to state 661
    SEMICOLON         shift, and go to state 662
    ALIGNAS           shift, and go to state 4
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    ASM               shift, and go to state 8
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 663
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 289
    VIRTUAL           shift, and go to state 11
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CO_RETURN         shift, and go to state 665
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    FRIEND            shift, and go to state 20
    TYPEDEF           shift, and go to state 21
    CONSTEXPR         shift, and go to state 22
    CONSTEVAL         shift, and go to state 23
    CONSTINIT         shift, and go to state 24
    INLINE            shift, and go to state 258
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 27
    UNICODE_8         shift, and go to state 184
    EXTERN            shift, and go to state 259
    EXPLICIT          shift, and go to state 29
    MULT              shift, and go to state 371
    DEFAULT           shift, and go to state 666
    TRY               shift, and go to state 667
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    WHILE             shift, and go to state 668
    DO                shift, and go to state 669
    FOR               shift, and go to state 670
    BREAK             shift, and go to state 671
    CONTINUE          shift, and go to state 672
    RETURN            shift, and go to state 673
    GOTO              shift, and go to state 674
    CASE              shift, and go to state 675
    NAMESPACE         shift, and go to state 676
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    IF                shift, and go to state 677
    SWITCH            shift, and go to state 678
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    STATIC_ASSERT     shift, and go to state 51
    STATIC            shift, and go to state 52
    THREAD_LOCAL      shift, and go to state 53
    MUTABLE           shift, and go to state 54
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    alias-declaration                    go to state 56
    alignment-specifier                  go to state 57
    and-expression                       go to state 400
    asm-declaration                      go to state 58
    assignment-expression                go to state 525
    attribute-specifier                  go to state 60
    attribute-specifier-seq              go to state 679
    await-expression                     go to state 401
    binary-literal                       go to state 402
    block-declaration                    go to state 680
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-head                           go to state 63
    class-key                            go to state 64
    class-name                           go to state 65
    class-specifier                      go to state 66
    compare-expression                   go to state 406
    compound-statement                   go to state 681
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    coroutine-return-statement           go to state 682
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decl-specifier                       go to state 70
    decl-specifier-seq                   go to state 683
    declaration-statement                go to state 684
    decltype-specifier                   go to state 76
    defining-type-specifier              go to state 78
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-head                            go to state 82
    enum-key                             go to state 83
    enum-name                            go to state 84
    enum-specifier                       go to state 85
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    explicit-specifier                   go to state 264
    expression                           go to state 685
    expression-statement                 go to state 686
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    function-specifier                   go to state 91
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    iteration-statement                  go to state 687
    jump-statement                       go to state 688
    labeled-statement                    go to state 689
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-alias-definition           go to state 100
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    opaque-enum-declaration              go to state 107
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    selection-statement                  go to state 690
    shift-expression                     go to state 443
    simple-declaration                   go to state 113
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    statement                            go to state 1954
    static_assert-declaration            go to state 116
    storage-class-specifier              go to state 117
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    try-block                            go to state 693
    type-constraint                      go to state 123
    type-name                            go to state 124
    type-specifier                       go to state 125
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    using-declaration                    go to state 130
    using-directive                      go to state 131
    using-enum-declaration               go to state 132
    yield-expression                     go to state 532


State 1917

  335 expression: expression • COMMA assignment-expression
  510 iteration-statement: FOR OPEN_PAREN init-statement condition SEMICOLON expression • CLOSE_PAREN statement

    CLOSE_PAREN  shift, and go to state 1955
    COMMA        shift, and go to state 1029


State 1918

  383 for-range-declaration: decl-specifier-seq OPEN_SQUARE identifier-list • CLOSE_SQUARE
  462 identifier-list: identifier-list • COMMA IDENTIFIER

    COMMA         shift, and go to state 1131
    CLOSE_SQUARE  shift, and go to state 1956


State 1919

  385 for-range-declaration: decl-specifier-seq ref-qualifier OPEN_SQUARE • identifier-list CLOSE_SQUARE

    IDENTIFIER  shift, and go to state 640

    identifier-list  go to state 1957


State 1920

  512 iteration-statement: FOR OPEN_PAREN init-statement for-range-declaration COLON for-range-initializer • CLOSE_PAREN statement

    CLOSE_PAREN  shift, and go to state 1958


State 1921

  165 condition: attribute-specifier-seq decl-specifier-seq declarator brace-or-equal-initializer •
  477 initializer: brace-or-equal-initializer •

    CLOSE_PAREN  reduce using rule 165 (condition)
    $default     reduce using rule 477 (initializer)


State 1922

  942 selection-statement: IF OPEN_PAREN condition CLOSE_PAREN statement ELSE • statement

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    USING             shift, and go to state 1
    IDENTIFIER        shift, and go to state 661
    SEMICOLON         shift, and go to state 662
    ALIGNAS           shift, and go to state 4
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    ASM               shift, and go to state 8
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 663
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 289
    VIRTUAL           shift, and go to state 11
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CO_RETURN         shift, and go to state 665
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    FRIEND            shift, and go to state 20
    TYPEDEF           shift, and go to state 21
    CONSTEXPR         shift, and go to state 22
    CONSTEVAL         shift, and go to state 23
    CONSTINIT         shift, and go to state 24
    INLINE            shift, and go to state 258
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 27
    UNICODE_8         shift, and go to state 184
    EXTERN            shift, and go to state 259
    EXPLICIT          shift, and go to state 29
    MULT              shift, and go to state 371
    DEFAULT           shift, and go to state 666
    TRY               shift, and go to state 667
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    WHILE             shift, and go to state 668
    DO                shift, and go to state 669
    FOR               shift, and go to state 670
    BREAK             shift, and go to state 671
    CONTINUE          shift, and go to state 672
    RETURN            shift, and go to state 673
    GOTO              shift, and go to state 674
    CASE              shift, and go to state 675
    NAMESPACE         shift, and go to state 676
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    IF                shift, and go to state 677
    SWITCH            shift, and go to state 678
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    STATIC_ASSERT     shift, and go to state 51
    STATIC            shift, and go to state 52
    THREAD_LOCAL      shift, and go to state 53
    MUTABLE           shift, and go to state 54
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    alias-declaration                    go to state 56
    alignment-specifier                  go to state 57
    and-expression                       go to state 400
    asm-declaration                      go to state 58
    assignment-expression                go to state 525
    attribute-specifier                  go to state 60
    attribute-specifier-seq              go to state 679
    await-expression                     go to state 401
    binary-literal                       go to state 402
    block-declaration                    go to state 680
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-head                           go to state 63
    class-key                            go to state 64
    class-name                           go to state 65
    class-specifier                      go to state 66
    compare-expression                   go to state 406
    compound-statement                   go to state 681
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    coroutine-return-statement           go to state 682
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decl-specifier                       go to state 70
    decl-specifier-seq                   go to state 683
    declaration-statement                go to state 684
    decltype-specifier                   go to state 76
    defining-type-specifier              go to state 78
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-head                            go to state 82
    enum-key                             go to state 83
    enum-name                            go to state 84
    enum-specifier                       go to state 85
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    explicit-specifier                   go to state 264
    expression                           go to state 685
    expression-statement                 go to state 686
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    function-specifier                   go to state 91
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    iteration-statement                  go to state 687
    jump-statement                       go to state 688
    labeled-statement                    go to state 689
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-alias-definition           go to state 100
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    opaque-enum-declaration              go to state 107
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    selection-statement                  go to state 690
    shift-expression                     go to state 443
    simple-declaration                   go to state 113
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    statement                            go to state 1959
    static_assert-declaration            go to state 116
    storage-class-specifier              go to state 117
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    try-block                            go to state 693
    type-constraint                      go to state 123
    type-name                            go to state 124
    type-specifier                       go to state 125
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    using-declaration                    go to state 130
    using-directive                      go to state 131
    using-enum-declaration               go to state 132
    yield-expression                     go to state 532


State 1923

  940 selection-statement: IF OPEN_PAREN init-statement condition CLOSE_PAREN statement •
  944                    | IF OPEN_PAREN init-statement condition CLOSE_PAREN statement • ELSE statement

    ELSE  shift, and go to state 1960

    ELSE      [reduce using rule 940 (selection-statement)]
    $default  reduce using rule 940 (selection-statement)


State 1924

  939 selection-statement: IF CONSTEXPR OPEN_PAREN condition CLOSE_PAREN statement •
  943                    | IF CONSTEXPR OPEN_PAREN condition CLOSE_PAREN statement • ELSE statement

    ELSE  shift, and go to state 1961

    ELSE      [reduce using rule 939 (selection-statement)]
    $default  reduce using rule 939 (selection-statement)


State 1925

  941 selection-statement: IF CONSTEXPR OPEN_PAREN init-statement condition CLOSE_PAREN • statement
  945                    | IF CONSTEXPR OPEN_PAREN init-statement condition CLOSE_PAREN • statement ELSE statement

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    USING             shift, and go to state 1
    IDENTIFIER        shift, and go to state 661
    SEMICOLON         shift, and go to state 662
    ALIGNAS           shift, and go to state 4
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    ASM               shift, and go to state 8
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 663
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 289
    VIRTUAL           shift, and go to state 11
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CO_RETURN         shift, and go to state 665
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    FRIEND            shift, and go to state 20
    TYPEDEF           shift, and go to state 21
    CONSTEXPR         shift, and go to state 22
    CONSTEVAL         shift, and go to state 23
    CONSTINIT         shift, and go to state 24
    INLINE            shift, and go to state 258
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 27
    UNICODE_8         shift, and go to state 184
    EXTERN            shift, and go to state 259
    EXPLICIT          shift, and go to state 29
    MULT              shift, and go to state 371
    DEFAULT           shift, and go to state 666
    TRY               shift, and go to state 667
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    WHILE             shift, and go to state 668
    DO                shift, and go to state 669
    FOR               shift, and go to state 670
    BREAK             shift, and go to state 671
    CONTINUE          shift, and go to state 672
    RETURN            shift, and go to state 673
    GOTO              shift, and go to state 674
    CASE              shift, and go to state 675
    NAMESPACE         shift, and go to state 676
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    IF                shift, and go to state 677
    SWITCH            shift, and go to state 678
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    STATIC_ASSERT     shift, and go to state 51
    STATIC            shift, and go to state 52
    THREAD_LOCAL      shift, and go to state 53
    MUTABLE           shift, and go to state 54
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    alias-declaration                    go to state 56
    alignment-specifier                  go to state 57
    and-expression                       go to state 400
    asm-declaration                      go to state 58
    assignment-expression                go to state 525
    attribute-specifier                  go to state 60
    attribute-specifier-seq              go to state 679
    await-expression                     go to state 401
    binary-literal                       go to state 402
    block-declaration                    go to state 680
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-head                           go to state 63
    class-key                            go to state 64
    class-name                           go to state 65
    class-specifier                      go to state 66
    compare-expression                   go to state 406
    compound-statement                   go to state 681
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    coroutine-return-statement           go to state 682
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decl-specifier                       go to state 70
    decl-specifier-seq                   go to state 683
    declaration-statement                go to state 684
    decltype-specifier                   go to state 76
    defining-type-specifier              go to state 78
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-head                            go to state 82
    enum-key                             go to state 83
    enum-name                            go to state 84
    enum-specifier                       go to state 85
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    explicit-specifier                   go to state 264
    expression                           go to state 685
    expression-statement                 go to state 686
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    function-specifier                   go to state 91
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    iteration-statement                  go to state 687
    jump-statement                       go to state 688
    labeled-statement                    go to state 689
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-alias-definition           go to state 100
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    opaque-enum-declaration              go to state 107
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    selection-statement                  go to state 690
    shift-expression                     go to state 443
    simple-declaration                   go to state 113
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    statement                            go to state 1962
    static_assert-declaration            go to state 116
    storage-class-specifier              go to state 117
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    try-block                            go to state 693
    type-constraint                      go to state 123
    type-name                            go to state 124
    type-specifier                       go to state 125
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    using-declaration                    go to state 130
    using-directive                      go to state 131
    using-enum-declaration               go to state 132
    yield-expression                     go to state 532


State 1926

  949 selection-statement: IF NOT CONSTEVAL compound-statement ELSE statement •

    $default  reduce using rule 949 (selection-statement)


State 1927

  951 selection-statement: SWITCH OPEN_PAREN init-statement condition CLOSE_PAREN statement •

    $default  reduce using rule 951 (selection-statement)


State 1928

  314 exception-declaration: attribute-specifier-seq type-specifier-seq abstract-declarator •

    $default  reduce using rule 314 (exception-declaration)


State 1929

  310 exception-declaration: attribute-specifier-seq type-specifier-seq declarator •

    $default  reduce using rule 310 (exception-declaration)


State 1930

  416 handler: CATCH OPEN_PAREN exception-declaration CLOSE_PAREN compound-statement •

    $default  reduce using rule 416 (handler)


State 1931

  231 deduction-guide: explicit-specifier template-name OPEN_PAREN parameter-declaration-clause CLOSE_PAREN DEREF simple-template-id SEMICOLON •

    $default  reduce using rule 231 (deduction-guide)


State 1932

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  847 parameters-and-qualifiers: OPEN_PAREN parameter-declaration-clause CLOSE_PAREN cv-qualifier-seq ref-qualifier noexcept-specifier attribute-specifier-seq •

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    OPEN_SQUARE  [reduce using rule 847 (parameters-and-qualifiers)]
    $default     reduce using rule 847 (parameters-and-qualifiers)

    alignment-specifier  go to state 57
    attribute-specifier  go to state 260


State 1933

  347 fold-expression: OPEN_PAREN cast-expression fold-operator ELLIPSIS fold-operator cast-expression CLOSE_PAREN •

    $default  reduce using rule 347 (fold-expression)


State 1934

  682 new-expression: SCOPE NEW new-placement OPEN_PAREN type-id CLOSE_PAREN new-initializer •

    $default  reduce using rule 682 (new-expression)


State 1935

  157 compound-requirement: OPEN_BRACE expression CLOSE_BRACE NOEXCEPT SEMICOLON •

    $default  reduce using rule 157 (compound-requirement)


State 1936

  159 compound-requirement: OPEN_BRACE expression CLOSE_BRACE NOEXCEPT return-type-requirement • SEMICOLON

    SEMICOLON  shift, and go to state 1963


State 1937

  659 nested-name-specifier: nested-name-specifier • IDENTIFIER SCOPE
  660                      | nested-name-specifier • simple-template-id SCOPE
  661                      | nested-name-specifier • TEMPLATE simple-template-id SCOPE
  1070 type-constraint: nested-name-specifier • concept-name
  1072                | nested-name-specifier • concept-name LESS GREATER
  1074                | nested-name-specifier • concept-name LESS template-argument-list GREATER

    IDENTIFIER  shift, and go to state 1964
    TEMPLATE    shift, and go to state 350

    concept-name        go to state 323
    simple-template-id  go to state 534
    template-name       go to state 142


State 1938

  932 return-type-requirement: DEREF type-constraint •

    $default  reduce using rule 932 (return-type-requirement)


State 1939

  158 compound-requirement: OPEN_BRACE expression CLOSE_BRACE return-type-requirement SEMICOLON •

    $default  reduce using rule 158 (compound-requirement)


State 1940

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  734 noptr-new-declarator: noptr-new-declarator OPEN_SQUARE constant-expression CLOSE_SQUARE attribute-specifier-seq •

    ALIGNAS      shift, and go to state 4
    OPEN_SQUARE  shift, and go to state 10

    OPEN_SQUARE  [reduce using rule 734 (noptr-new-declarator)]
    $default     reduce using rule 734 (noptr-new-declarator)

    alignment-specifier  go to state 57
    attribute-specifier  go to state 260


State 1941

  873 postfix-expression: DYNAMIC_CAST LESS type-id GREATER OPEN_PAREN expression CLOSE_PAREN •

    $default  reduce using rule 873 (postfix-expression)


State 1942

  874 postfix-expression: STATIC_CAST LESS type-id GREATER OPEN_PAREN expression CLOSE_PAREN •

    $default  reduce using rule 874 (postfix-expression)


State 1943

  875 postfix-expression: REINTERPRET_CAST LESS type-id GREATER OPEN_PAREN expression CLOSE_PAREN •

    $default  reduce using rule 875 (postfix-expression)


State 1944

  876 postfix-expression: CONST_CAST LESS type-id GREATER OPEN_PAREN expression CLOSE_PAREN •

    $default  reduce using rule 876 (postfix-expression)


State 1945

  533 lambda-expression: lambda-introducer LESS template-parameter-list GREATER requires-clause lambda-declarator compound-statement •

    $default  reduce using rule 533 (lambda-expression)


State 1946

  506 iteration-statement: DO statement WHILE OPEN_PAREN expression CLOSE_PAREN SEMICOLON •

    $default  reduce using rule 506 (iteration-statement)


State 1947

  382 for-range-declaration: attribute-specifier-seq decl-specifier-seq OPEN_SQUARE identifier-list CLOSE_SQUARE •
  966 simple-declaration: attribute-specifier-seq decl-specifier-seq OPEN_SQUARE identifier-list CLOSE_SQUARE • initializer SEMICOLON

    EQ          shift, and go to state 1273
    OPEN_PAREN  shift, and go to state 643
    OPEN_BRACE  shift, and go to state 935

    $default  reduce using rule 382 (for-range-declaration)

    brace-or-equal-initializer  go to state 645
    braced-init-list            go to state 646
    initializer                 go to state 1706


State 1948

  384 for-range-declaration: attribute-specifier-seq decl-specifier-seq ref-qualifier OPEN_SQUARE identifier-list • CLOSE_SQUARE
  462 identifier-list: identifier-list • COMMA IDENTIFIER
  968 simple-declaration: attribute-specifier-seq decl-specifier-seq ref-qualifier OPEN_SQUARE identifier-list • CLOSE_SQUARE initializer SEMICOLON

    COMMA         shift, and go to state 1131
    CLOSE_SQUARE  shift, and go to state 1965


State 1949

  385 for-range-declaration: decl-specifier-seq ref-qualifier OPEN_SQUARE identifier-list CLOSE_SQUARE •
  969 simple-declaration: decl-specifier-seq ref-qualifier OPEN_SQUARE identifier-list CLOSE_SQUARE • initializer SEMICOLON

    EQ          shift, and go to state 1273
    OPEN_PAREN  shift, and go to state 643
    OPEN_BRACE  shift, and go to state 935

    $default  reduce using rule 385 (for-range-declaration)

    brace-or-equal-initializer  go to state 645
    braced-init-list            go to state 646
    initializer                 go to state 1729


State 1950

  511 iteration-statement: FOR OPEN_PAREN for-range-declaration COLON for-range-initializer CLOSE_PAREN statement •

    $default  reduce using rule 511 (iteration-statement)


State 1951

  509 iteration-statement: FOR OPEN_PAREN init-statement SEMICOLON expression CLOSE_PAREN statement •

    $default  reduce using rule 509 (iteration-statement)


State 1952

  382 for-range-declaration: attribute-specifier-seq decl-specifier-seq OPEN_SQUARE identifier-list • CLOSE_SQUARE
  462 identifier-list: identifier-list • COMMA IDENTIFIER

    COMMA         shift, and go to state 1131
    CLOSE_SQUARE  shift, and go to state 1966


State 1953

  384 for-range-declaration: attribute-specifier-seq decl-specifier-seq ref-qualifier OPEN_SQUARE • identifier-list CLOSE_SQUARE

    IDENTIFIER  shift, and go to state 640

    identifier-list  go to state 1967


State 1954

  508 iteration-statement: FOR OPEN_PAREN init-statement condition SEMICOLON CLOSE_PAREN statement •

    $default  reduce using rule 508 (iteration-statement)


State 1955

  510 iteration-statement: FOR OPEN_PAREN init-statement condition SEMICOLON expression CLOSE_PAREN • statement

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    USING             shift, and go to state 1
    IDENTIFIER        shift, and go to state 661
    SEMICOLON         shift, and go to state 662
    ALIGNAS           shift, and go to state 4
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    ASM               shift, and go to state 8
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 663
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 289
    VIRTUAL           shift, and go to state 11
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CO_RETURN         shift, and go to state 665
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    FRIEND            shift, and go to state 20
    TYPEDEF           shift, and go to state 21
    CONSTEXPR         shift, and go to state 22
    CONSTEVAL         shift, and go to state 23
    CONSTINIT         shift, and go to state 24
    INLINE            shift, and go to state 258
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 27
    UNICODE_8         shift, and go to state 184
    EXTERN            shift, and go to state 259
    EXPLICIT          shift, and go to state 29
    MULT              shift, and go to state 371
    DEFAULT           shift, and go to state 666
    TRY               shift, and go to state 667
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    WHILE             shift, and go to state 668
    DO                shift, and go to state 669
    FOR               shift, and go to state 670
    BREAK             shift, and go to state 671
    CONTINUE          shift, and go to state 672
    RETURN            shift, and go to state 673
    GOTO              shift, and go to state 674
    CASE              shift, and go to state 675
    NAMESPACE         shift, and go to state 676
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    IF                shift, and go to state 677
    SWITCH            shift, and go to state 678
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    STATIC_ASSERT     shift, and go to state 51
    STATIC            shift, and go to state 52
    THREAD_LOCAL      shift, and go to state 53
    MUTABLE           shift, and go to state 54
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    alias-declaration                    go to state 56
    alignment-specifier                  go to state 57
    and-expression                       go to state 400
    asm-declaration                      go to state 58
    assignment-expression                go to state 525
    attribute-specifier                  go to state 60
    attribute-specifier-seq              go to state 679
    await-expression                     go to state 401
    binary-literal                       go to state 402
    block-declaration                    go to state 680
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-head                           go to state 63
    class-key                            go to state 64
    class-name                           go to state 65
    class-specifier                      go to state 66
    compare-expression                   go to state 406
    compound-statement                   go to state 681
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    coroutine-return-statement           go to state 682
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decl-specifier                       go to state 70
    decl-specifier-seq                   go to state 683
    declaration-statement                go to state 684
    decltype-specifier                   go to state 76
    defining-type-specifier              go to state 78
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-head                            go to state 82
    enum-key                             go to state 83
    enum-name                            go to state 84
    enum-specifier                       go to state 85
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    explicit-specifier                   go to state 264
    expression                           go to state 685
    expression-statement                 go to state 686
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    function-specifier                   go to state 91
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    iteration-statement                  go to state 687
    jump-statement                       go to state 688
    labeled-statement                    go to state 689
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-alias-definition           go to state 100
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    opaque-enum-declaration              go to state 107
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    selection-statement                  go to state 690
    shift-expression                     go to state 443
    simple-declaration                   go to state 113
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    statement                            go to state 1968
    static_assert-declaration            go to state 116
    storage-class-specifier              go to state 117
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    try-block                            go to state 693
    type-constraint                      go to state 123
    type-name                            go to state 124
    type-specifier                       go to state 125
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    using-declaration                    go to state 130
    using-directive                      go to state 131
    using-enum-declaration               go to state 132
    yield-expression                     go to state 532


State 1956

  383 for-range-declaration: decl-specifier-seq OPEN_SQUARE identifier-list CLOSE_SQUARE •

    $default  reduce using rule 383 (for-range-declaration)


State 1957

  385 for-range-declaration: decl-specifier-seq ref-qualifier OPEN_SQUARE identifier-list • CLOSE_SQUARE
  462 identifier-list: identifier-list • COMMA IDENTIFIER

    COMMA         shift, and go to state 1131
    CLOSE_SQUARE  shift, and go to state 1969


State 1958

  512 iteration-statement: FOR OPEN_PAREN init-statement for-range-declaration COLON for-range-initializer CLOSE_PAREN • statement

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    USING             shift, and go to state 1
    IDENTIFIER        shift, and go to state 661
    SEMICOLON         shift, and go to state 662
    ALIGNAS           shift, and go to state 4
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    ASM               shift, and go to state 8
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 663
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 289
    VIRTUAL           shift, and go to state 11
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CO_RETURN         shift, and go to state 665
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    FRIEND            shift, and go to state 20
    TYPEDEF           shift, and go to state 21
    CONSTEXPR         shift, and go to state 22
    CONSTEVAL         shift, and go to state 23
    CONSTINIT         shift, and go to state 24
    INLINE            shift, and go to state 258
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 27
    UNICODE_8         shift, and go to state 184
    EXTERN            shift, and go to state 259
    EXPLICIT          shift, and go to state 29
    MULT              shift, and go to state 371
    DEFAULT           shift, and go to state 666
    TRY               shift, and go to state 667
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    WHILE             shift, and go to state 668
    DO                shift, and go to state 669
    FOR               shift, and go to state 670
    BREAK             shift, and go to state 671
    CONTINUE          shift, and go to state 672
    RETURN            shift, and go to state 673
    GOTO              shift, and go to state 674
    CASE              shift, and go to state 675
    NAMESPACE         shift, and go to state 676
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    IF                shift, and go to state 677
    SWITCH            shift, and go to state 678
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    STATIC_ASSERT     shift, and go to state 51
    STATIC            shift, and go to state 52
    THREAD_LOCAL      shift, and go to state 53
    MUTABLE           shift, and go to state 54
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    alias-declaration                    go to state 56
    alignment-specifier                  go to state 57
    and-expression                       go to state 400
    asm-declaration                      go to state 58
    assignment-expression                go to state 525
    attribute-specifier                  go to state 60
    attribute-specifier-seq              go to state 679
    await-expression                     go to state 401
    binary-literal                       go to state 402
    block-declaration                    go to state 680
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-head                           go to state 63
    class-key                            go to state 64
    class-name                           go to state 65
    class-specifier                      go to state 66
    compare-expression                   go to state 406
    compound-statement                   go to state 681
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    coroutine-return-statement           go to state 682
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decl-specifier                       go to state 70
    decl-specifier-seq                   go to state 683
    declaration-statement                go to state 684
    decltype-specifier                   go to state 76
    defining-type-specifier              go to state 78
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-head                            go to state 82
    enum-key                             go to state 83
    enum-name                            go to state 84
    enum-specifier                       go to state 85
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    explicit-specifier                   go to state 264
    expression                           go to state 685
    expression-statement                 go to state 686
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    function-specifier                   go to state 91
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    iteration-statement                  go to state 687
    jump-statement                       go to state 688
    labeled-statement                    go to state 689
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-alias-definition           go to state 100
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    opaque-enum-declaration              go to state 107
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    selection-statement                  go to state 690
    shift-expression                     go to state 443
    simple-declaration                   go to state 113
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    statement                            go to state 1970
    static_assert-declaration            go to state 116
    storage-class-specifier              go to state 117
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    try-block                            go to state 693
    type-constraint                      go to state 123
    type-name                            go to state 124
    type-specifier                       go to state 125
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    using-declaration                    go to state 130
    using-directive                      go to state 131
    using-enum-declaration               go to state 132
    yield-expression                     go to state 532


State 1959

  942 selection-statement: IF OPEN_PAREN condition CLOSE_PAREN statement ELSE statement •

    $default  reduce using rule 942 (selection-statement)


State 1960

  944 selection-statement: IF OPEN_PAREN init-statement condition CLOSE_PAREN statement ELSE • statement

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    USING             shift, and go to state 1
    IDENTIFIER        shift, and go to state 661
    SEMICOLON         shift, and go to state 662
    ALIGNAS           shift, and go to state 4
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    ASM               shift, and go to state 8
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 663
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 289
    VIRTUAL           shift, and go to state 11
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CO_RETURN         shift, and go to state 665
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    FRIEND            shift, and go to state 20
    TYPEDEF           shift, and go to state 21
    CONSTEXPR         shift, and go to state 22
    CONSTEVAL         shift, and go to state 23
    CONSTINIT         shift, and go to state 24
    INLINE            shift, and go to state 258
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 27
    UNICODE_8         shift, and go to state 184
    EXTERN            shift, and go to state 259
    EXPLICIT          shift, and go to state 29
    MULT              shift, and go to state 371
    DEFAULT           shift, and go to state 666
    TRY               shift, and go to state 667
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    WHILE             shift, and go to state 668
    DO                shift, and go to state 669
    FOR               shift, and go to state 670
    BREAK             shift, and go to state 671
    CONTINUE          shift, and go to state 672
    RETURN            shift, and go to state 673
    GOTO              shift, and go to state 674
    CASE              shift, and go to state 675
    NAMESPACE         shift, and go to state 676
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    IF                shift, and go to state 677
    SWITCH            shift, and go to state 678
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    STATIC_ASSERT     shift, and go to state 51
    STATIC            shift, and go to state 52
    THREAD_LOCAL      shift, and go to state 53
    MUTABLE           shift, and go to state 54
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    alias-declaration                    go to state 56
    alignment-specifier                  go to state 57
    and-expression                       go to state 400
    asm-declaration                      go to state 58
    assignment-expression                go to state 525
    attribute-specifier                  go to state 60
    attribute-specifier-seq              go to state 679
    await-expression                     go to state 401
    binary-literal                       go to state 402
    block-declaration                    go to state 680
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-head                           go to state 63
    class-key                            go to state 64
    class-name                           go to state 65
    class-specifier                      go to state 66
    compare-expression                   go to state 406
    compound-statement                   go to state 681
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    coroutine-return-statement           go to state 682
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decl-specifier                       go to state 70
    decl-specifier-seq                   go to state 683
    declaration-statement                go to state 684
    decltype-specifier                   go to state 76
    defining-type-specifier              go to state 78
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-head                            go to state 82
    enum-key                             go to state 83
    enum-name                            go to state 84
    enum-specifier                       go to state 85
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    explicit-specifier                   go to state 264
    expression                           go to state 685
    expression-statement                 go to state 686
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    function-specifier                   go to state 91
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    iteration-statement                  go to state 687
    jump-statement                       go to state 688
    labeled-statement                    go to state 689
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-alias-definition           go to state 100
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    opaque-enum-declaration              go to state 107
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    selection-statement                  go to state 690
    shift-expression                     go to state 443
    simple-declaration                   go to state 113
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    statement                            go to state 1971
    static_assert-declaration            go to state 116
    storage-class-specifier              go to state 117
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    try-block                            go to state 693
    type-constraint                      go to state 123
    type-name                            go to state 124
    type-specifier                       go to state 125
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    using-declaration                    go to state 130
    using-directive                      go to state 131
    using-enum-declaration               go to state 132
    yield-expression                     go to state 532


State 1961

  943 selection-statement: IF CONSTEXPR OPEN_PAREN condition CLOSE_PAREN statement ELSE • statement

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    USING             shift, and go to state 1
    IDENTIFIER        shift, and go to state 661
    SEMICOLON         shift, and go to state 662
    ALIGNAS           shift, and go to state 4
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    ASM               shift, and go to state 8
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 663
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 289
    VIRTUAL           shift, and go to state 11
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CO_RETURN         shift, and go to state 665
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    FRIEND            shift, and go to state 20
    TYPEDEF           shift, and go to state 21
    CONSTEXPR         shift, and go to state 22
    CONSTEVAL         shift, and go to state 23
    CONSTINIT         shift, and go to state 24
    INLINE            shift, and go to state 258
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 27
    UNICODE_8         shift, and go to state 184
    EXTERN            shift, and go to state 259
    EXPLICIT          shift, and go to state 29
    MULT              shift, and go to state 371
    DEFAULT           shift, and go to state 666
    TRY               shift, and go to state 667
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    WHILE             shift, and go to state 668
    DO                shift, and go to state 669
    FOR               shift, and go to state 670
    BREAK             shift, and go to state 671
    CONTINUE          shift, and go to state 672
    RETURN            shift, and go to state 673
    GOTO              shift, and go to state 674
    CASE              shift, and go to state 675
    NAMESPACE         shift, and go to state 676
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    IF                shift, and go to state 677
    SWITCH            shift, and go to state 678
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    STATIC_ASSERT     shift, and go to state 51
    STATIC            shift, and go to state 52
    THREAD_LOCAL      shift, and go to state 53
    MUTABLE           shift, and go to state 54
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    alias-declaration                    go to state 56
    alignment-specifier                  go to state 57
    and-expression                       go to state 400
    asm-declaration                      go to state 58
    assignment-expression                go to state 525
    attribute-specifier                  go to state 60
    attribute-specifier-seq              go to state 679
    await-expression                     go to state 401
    binary-literal                       go to state 402
    block-declaration                    go to state 680
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-head                           go to state 63
    class-key                            go to state 64
    class-name                           go to state 65
    class-specifier                      go to state 66
    compare-expression                   go to state 406
    compound-statement                   go to state 681
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    coroutine-return-statement           go to state 682
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decl-specifier                       go to state 70
    decl-specifier-seq                   go to state 683
    declaration-statement                go to state 684
    decltype-specifier                   go to state 76
    defining-type-specifier              go to state 78
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-head                            go to state 82
    enum-key                             go to state 83
    enum-name                            go to state 84
    enum-specifier                       go to state 85
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    explicit-specifier                   go to state 264
    expression                           go to state 685
    expression-statement                 go to state 686
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    function-specifier                   go to state 91
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    iteration-statement                  go to state 687
    jump-statement                       go to state 688
    labeled-statement                    go to state 689
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-alias-definition           go to state 100
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    opaque-enum-declaration              go to state 107
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    selection-statement                  go to state 690
    shift-expression                     go to state 443
    simple-declaration                   go to state 113
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    statement                            go to state 1972
    static_assert-declaration            go to state 116
    storage-class-specifier              go to state 117
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    try-block                            go to state 693
    type-constraint                      go to state 123
    type-name                            go to state 124
    type-specifier                       go to state 125
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    using-declaration                    go to state 130
    using-directive                      go to state 131
    using-enum-declaration               go to state 132
    yield-expression                     go to state 532


State 1962

  941 selection-statement: IF CONSTEXPR OPEN_PAREN init-statement condition CLOSE_PAREN statement •
  945                    | IF CONSTEXPR OPEN_PAREN init-statement condition CLOSE_PAREN statement • ELSE statement

    ELSE  shift, and go to state 1973

    ELSE      [reduce using rule 941 (selection-statement)]
    $default  reduce using rule 941 (selection-statement)


State 1963

  159 compound-requirement: OPEN_BRACE expression CLOSE_BRACE NOEXCEPT return-type-requirement SEMICOLON •

    $default  reduce using rule 159 (compound-requirement)


State 1964

  163 concept-name: IDENTIFIER •
  659 nested-name-specifier: nested-name-specifier IDENTIFIER • SCOPE
  1052 template-name: IDENTIFIER •

    SCOPE  shift, and go to state 722

    LESS      reduce using rule 163 (concept-name)
    LESS      [reduce using rule 1052 (template-name)]
    $default  reduce using rule 163 (concept-name)


State 1965

  384 for-range-declaration: attribute-specifier-seq decl-specifier-seq ref-qualifier OPEN_SQUARE identifier-list CLOSE_SQUARE •
  968 simple-declaration: attribute-specifier-seq decl-specifier-seq ref-qualifier OPEN_SQUARE identifier-list CLOSE_SQUARE • initializer SEMICOLON

    EQ          shift, and go to state 1273
    OPEN_PAREN  shift, and go to state 643
    OPEN_BRACE  shift, and go to state 935

    $default  reduce using rule 384 (for-range-declaration)

    brace-or-equal-initializer  go to state 645
    braced-init-list            go to state 646
    initializer                 go to state 1834


State 1966

  382 for-range-declaration: attribute-specifier-seq decl-specifier-seq OPEN_SQUARE identifier-list CLOSE_SQUARE •

    $default  reduce using rule 382 (for-range-declaration)


State 1967

  384 for-range-declaration: attribute-specifier-seq decl-specifier-seq ref-qualifier OPEN_SQUARE identifier-list • CLOSE_SQUARE
  462 identifier-list: identifier-list • COMMA IDENTIFIER

    COMMA         shift, and go to state 1131
    CLOSE_SQUARE  shift, and go to state 1974


State 1968

  510 iteration-statement: FOR OPEN_PAREN init-statement condition SEMICOLON expression CLOSE_PAREN statement •

    $default  reduce using rule 510 (iteration-statement)


State 1969

  385 for-range-declaration: decl-specifier-seq ref-qualifier OPEN_SQUARE identifier-list CLOSE_SQUARE •

    $default  reduce using rule 385 (for-range-declaration)


State 1970

  512 iteration-statement: FOR OPEN_PAREN init-statement for-range-declaration COLON for-range-initializer CLOSE_PAREN statement •

    $default  reduce using rule 512 (iteration-statement)


State 1971

  944 selection-statement: IF OPEN_PAREN init-statement condition CLOSE_PAREN statement ELSE statement •

    $default  reduce using rule 944 (selection-statement)


State 1972

  943 selection-statement: IF CONSTEXPR OPEN_PAREN condition CLOSE_PAREN statement ELSE statement •

    $default  reduce using rule 943 (selection-statement)


State 1973

  945 selection-statement: IF CONSTEXPR OPEN_PAREN init-statement condition CLOSE_PAREN statement ELSE • statement

    PLUS              shift, and go to state 356
    MINUS             shift, and go to state 357
    USING             shift, and go to state 1
    IDENTIFIER        shift, and go to state 661
    SEMICOLON         shift, and go to state 662
    ALIGNAS           shift, and go to state 4
    OPEN_PAREN        shift, and go to state 358
    AND               shift, and go to state 359
    ASM               shift, and go to state 8
    SCOPE             shift, and go to state 360
    OPEN_SQUARE       shift, and go to state 663
    CO_AWAIT          shift, and go to state 362
    OPEN_BRACE        shift, and go to state 289
    VIRTUAL           shift, and go to state 11
    ZERO_LB           shift, and go to state 363
    ZERO_HB           shift, and go to state 364
    SINGLE_QUOTE      shift, and go to state 365
    FALSE             shift, and go to state 366
    TRUE              shift, and go to state 367
    CLASS             shift, and go to state 12
    STRUCT            shift, and go to state 13
    UNION             shift, and go to state 14
    NOEXCEPT          shift, and go to state 368
    OPERATOR          shift, and go to state 17
    CO_RETURN         shift, and go to state 665
    CONST             shift, and go to state 18
    VOLATILE          shift, and go to state 19
    FRIEND            shift, and go to state 20
    TYPEDEF           shift, and go to state 21
    CONSTEXPR         shift, and go to state 22
    CONSTEVAL         shift, and go to state 23
    CONSTINIT         shift, and go to state 24
    INLINE            shift, and go to state 258
    DECLTYPE          shift, and go to state 26
    DELETE            shift, and go to state 369
    DOT               shift, and go to state 370
    ENUM              shift, and go to state 27
    UNICODE_8         shift, and go to state 184
    EXTERN            shift, and go to state 259
    EXPLICIT          shift, and go to state 29
    MULT              shift, and go to state 371
    DEFAULT           shift, and go to state 666
    TRY               shift, and go to state 667
    DOUBLE_QUOTE      shift, and go to state 199
    ZERO_LX           shift, and go to state 372
    ZERO_HX           shift, and go to state 373
    WHILE             shift, and go to state 668
    DO                shift, and go to state 669
    FOR               shift, and go to state 670
    BREAK             shift, and go to state 671
    CONTINUE          shift, and go to state 672
    RETURN            shift, and go to state 673
    GOTO              shift, and go to state 674
    CASE              shift, and go to state 675
    NAMESPACE         shift, and go to state 676
    REQUIRES          shift, and go to state 374
    NEW               shift, and go to state 375
    COMPL             shift, and go to state 376
    NOT               shift, and go to state 377
    PLUS_PLUS         shift, and go to state 378
    MINUS_MINUS       shift, and go to state 379
    THIS              shift, and go to state 380
    AUTO              shift, and go to state 36
    NULLPTR           shift, and go to state 381
    DYNAMIC_CAST      shift, and go to state 382
    STATIC_CAST       shift, and go to state 383
    REINTERPRET_CAST  shift, and go to state 384
    CONST_CAST        shift, and go to state 385
    TYPEID            shift, and go to state 386
    IF                shift, and go to state 677
    SWITCH            shift, and go to state 678
    CHAR              shift, and go to state 37
    CHAR8_T           shift, and go to state 38
    CHAR16_T          shift, and go to state 39
    CHAR32_T          shift, and go to state 40
    WCHAR_T           shift, and go to state 41
    BOOL              shift, and go to state 42
    SHORT             shift, and go to state 43
    INT               shift, and go to state 44
    LONG              shift, and go to state 45
    SIGNED            shift, and go to state 46
    UNSIGNED          shift, and go to state 47
    FLOAT             shift, and go to state 48
    DOUBLE            shift, and go to state 49
    VOID              shift, and go to state 50
    STATIC_ASSERT     shift, and go to state 51
    STATIC            shift, and go to state 52
    THREAD_LOCAL      shift, and go to state 53
    MUTABLE           shift, and go to state 54
    THROW             shift, and go to state 523
    TYPENAME          shift, and go to state 55
    SIZEOF            shift, and go to state 387
    ALIGNOF           shift, and go to state 388
    CO_YIELD          shift, and go to state 524
    '0'               shift, and go to state 389
    '1'               shift, and go to state 390
    '2'               shift, and go to state 391
    '3'               shift, and go to state 392
    '4'               shift, and go to state 393
    '5'               shift, and go to state 394
    '6'               shift, and go to state 395
    '7'               shift, and go to state 396
    '8'               shift, and go to state 397
    '9'               shift, and go to state 398
    'u'               shift, and go to state 205
    'U'               shift, and go to state 206
    'L'               shift, and go to state 207
    'R'               shift, and go to state 208

    additive-expression                  go to state 399
    alias-declaration                    go to state 56
    alignment-specifier                  go to state 57
    and-expression                       go to state 400
    asm-declaration                      go to state 58
    assignment-expression                go to state 525
    attribute-specifier                  go to state 60
    attribute-specifier-seq              go to state 679
    await-expression                     go to state 401
    binary-literal                       go to state 402
    block-declaration                    go to state 680
    boolean-literal                      go to state 403
    cast-expression                      go to state 404
    character-literal                    go to state 405
    class-head                           go to state 63
    class-key                            go to state 64
    class-name                           go to state 65
    class-specifier                      go to state 66
    compare-expression                   go to state 406
    compound-statement                   go to state 681
    concept-name                         go to state 67
    conditional-expression               go to state 526
    conversion-function-id               go to state 68
    coroutine-return-statement           go to state 682
    cv-qualifier                         go to state 69
    decimal-floating-point-literal       go to state 409
    decimal-literal                      go to state 410
    decl-specifier                       go to state 70
    decl-specifier-seq                   go to state 683
    declaration-statement                go to state 684
    decltype-specifier                   go to state 76
    defining-type-specifier              go to state 78
    delete-expression                    go to state 411
    digit                                go to state 412
    digit-sequence                       go to state 413
    elaborated-enum-specifier            go to state 79
    elaborated-type-specifier            go to state 80
    encoding-prefix                      go to state 414
    enum-head                            go to state 82
    enum-key                             go to state 83
    enum-name                            go to state 84
    enum-specifier                       go to state 85
    equality-expression                  go to state 415
    exclusive-or-expression              go to state 416
    explicit-specifier                   go to state 264
    expression                           go to state 685
    expression-statement                 go to state 686
    floating-point-literal               go to state 417
    fold-expression                      go to state 418
    fractional-constant                  go to state 419
    function-specifier                   go to state 91
    hexadecimal-floating-point-literal   go to state 420
    hexadecimal-literal                  go to state 421
    hexadecimal-prefix                   go to state 422
    id-expression                        go to state 423
    inclusive-or-expression              go to state 424
    integer-literal                      go to state 425
    iteration-statement                  go to state 687
    jump-statement                       go to state 688
    labeled-statement                    go to state 689
    lambda-expression                    go to state 426
    lambda-introducer                    go to state 427
    literal                              go to state 428
    literal-operator-id                  go to state 95
    logical-and-expression               go to state 429
    logical-or-expression                go to state 528
    multiplicative-expression            go to state 431
    namespace-alias                      go to state 99
    namespace-alias-definition           go to state 100
    namespace-name                       go to state 102
    nested-name-specifier                go to state 432
    new-expression                       go to state 433
    noexcept-expression                  go to state 434
    nonzero-digit                        go to state 435
    octal-literal                        go to state 436
    opaque-enum-declaration              go to state 107
    operator-function-id                 go to state 108
    placeholder-type-specifier           go to state 109
    pm-expression                        go to state 437
    pointer-literal                      go to state 438
    postfix-expression                   go to state 439
    primary-expression                   go to state 440
    qualified-id                         go to state 112
    relational-expression                go to state 441
    requires-expression                  go to state 442
    selection-statement                  go to state 690
    shift-expression                     go to state 443
    simple-declaration                   go to state 113
    simple-template-id                   go to state 114
    simple-type-specifier                go to state 444
    statement                            go to state 1975
    static_assert-declaration            go to state 116
    storage-class-specifier              go to state 117
    string-literal                       go to state 445
    template-id                          go to state 120
    template-name                        go to state 215
    throw-expression                     go to state 530
    try-block                            go to state 693
    type-constraint                      go to state 123
    type-name                            go to state 124
    type-specifier                       go to state 125
    typedef-name                         go to state 126
    typename-specifier                   go to state 448
    unary-expression                     go to state 449
    unary-operator                       go to state 450
    unqualified-id                       go to state 129
    user-defined-character-literal       go to state 451
    user-defined-floating-point-literal  go to state 452
    user-defined-integer-literal         go to state 453
    user-defined-literal                 go to state 454
    user-defined-string-literal          go to state 455
    using-declaration                    go to state 130
    using-directive                      go to state 131
    using-enum-declaration               go to state 132
    yield-expression                     go to state 532


State 1974

  384 for-range-declaration: attribute-specifier-seq decl-specifier-seq ref-qualifier OPEN_SQUARE identifier-list CLOSE_SQUARE •

    $default  reduce using rule 384 (for-range-declaration)


State 1975

  945 selection-statement: IF CONSTEXPR OPEN_PAREN init-statement condition CLOSE_PAREN statement ELSE statement •

    $default  reduce using rule 945 (selection-statement)
