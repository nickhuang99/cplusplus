State 1 conflicts: 175 reduce/reduce
State 7 conflicts: 2 shift/reduce
State 16 conflicts: 2 shift/reduce
State 27 conflicts: 3 shift/reduce
State 29 conflicts: 1 shift/reduce
State 32 conflicts: 4 shift/reduce
State 71 conflicts: 5 shift/reduce
State 76 conflicts: 1 shift/reduce
State 77 conflicts: 1 shift/reduce
State 89 conflicts: 1 shift/reduce
State 96 conflicts: 1 shift/reduce
State 107 conflicts: 1 shift/reduce
State 109 conflicts: 1 shift/reduce
State 115 conflicts: 106 reduce/reduce
State 122 conflicts: 1 shift/reduce
State 125 conflicts: 1 shift/reduce
State 134 conflicts: 4 reduce/reduce
State 142 conflicts: 101 reduce/reduce
State 148 conflicts: 6 reduce/reduce
State 150 conflicts: 1 shift/reduce
State 154 conflicts: 2 shift/reduce
State 160 conflicts: 2 shift/reduce
State 161 conflicts: 314 reduce/reduce
State 184 conflicts: 1 shift/reduce
State 204 conflicts: 1 shift/reduce
State 214 conflicts: 1 shift/reduce
State 216 conflicts: 1 shift/reduce
State 217 conflicts: 27 shift/reduce
State 218 conflicts: 6 shift/reduce
State 222 conflicts: 6 reduce/reduce
State 233 conflicts: 4 shift/reduce
State 234 conflicts: 2 shift/reduce
State 237 conflicts: 1 shift/reduce
State 254 conflicts: 203 reduce/reduce
State 258 conflicts: 14 reduce/reduce
State 271 conflicts: 9 reduce/reduce
State 278 conflicts: 5 reduce/reduce
State 280 conflicts: 2 shift/reduce
State 283 conflicts: 1 shift/reduce
State 285 conflicts: 1 shift/reduce
State 306 conflicts: 1 shift/reduce
State 309 conflicts: 4 reduce/reduce
State 325 conflicts: 1 shift/reduce, 177 reduce/reduce
State 327 conflicts: 4 shift/reduce
State 329 conflicts: 1 shift/reduce, 67 reduce/reduce
State 330 conflicts: 1 shift/reduce
State 354 conflicts: 1 shift/reduce, 1 reduce/reduce
State 356 conflicts: 1 shift/reduce
State 368 conflicts: 10 reduce/reduce
State 369 conflicts: 12 reduce/reduce
State 378 conflicts: 12 reduce/reduce
State 379 conflicts: 12 reduce/reduce
State 380 conflicts: 12 reduce/reduce
State 381 conflicts: 12 reduce/reduce
State 382 conflicts: 12 reduce/reduce
State 383 conflicts: 12 reduce/reduce
State 384 conflicts: 12 reduce/reduce
State 385 conflicts: 12 reduce/reduce
State 391 conflicts: 2 shift/reduce
State 407 conflicts: 1 shift/reduce
State 410 conflicts: 1 shift/reduce
State 415 conflicts: 1 shift/reduce
State 424 conflicts: 1 shift/reduce
State 426 conflicts: 1 shift/reduce
State 441 conflicts: 1 shift/reduce
State 446 conflicts: 1 shift/reduce
State 449 conflicts: 1 shift/reduce
State 450 conflicts: 1 shift/reduce
State 452 conflicts: 2 shift/reduce
State 453 conflicts: 1 shift/reduce
State 473 conflicts: 1 reduce/reduce
State 477 conflicts: 1 shift/reduce
State 479 conflicts: 1 shift/reduce
State 513 conflicts: 1 shift/reduce, 311 reduce/reduce
State 515 conflicts: 1 shift/reduce, 101 reduce/reduce
State 517 conflicts: 101 reduce/reduce
State 519 conflicts: 2 shift/reduce
State 523 conflicts: 6 shift/reduce
State 533 conflicts: 1 shift/reduce
State 538 conflicts: 1 shift/reduce, 1 reduce/reduce
State 550 conflicts: 1 shift/reduce
State 576 conflicts: 1 shift/reduce, 1 reduce/reduce
State 578 conflicts: 1 shift/reduce
State 591 conflicts: 3 shift/reduce, 154 reduce/reduce
State 596 conflicts: 55 reduce/reduce
State 604 conflicts: 2 reduce/reduce
State 627 conflicts: 9 reduce/reduce
State 634 conflicts: 1 shift/reduce, 2 reduce/reduce
State 637 conflicts: 1 shift/reduce, 2 reduce/reduce
State 640 conflicts: 3 reduce/reduce
State 660 conflicts: 10 reduce/reduce
State 665 conflicts: 157 reduce/reduce
State 701 conflicts: 1 shift/reduce
State 727 conflicts: 1 reduce/reduce
State 728 conflicts: 1 shift/reduce, 14 reduce/reduce
State 730 conflicts: 4 shift/reduce
State 738 conflicts: 1 shift/reduce
State 751 conflicts: 4 shift/reduce
State 755 conflicts: 1 reduce/reduce
State 761 conflicts: 32 shift/reduce
State 810 conflicts: 1 shift/reduce
State 811 conflicts: 3 shift/reduce
State 842 conflicts: 196 reduce/reduce
State 856 conflicts: 1 shift/reduce
State 865 conflicts: 1 shift/reduce
State 894 conflicts: 1 shift/reduce
State 898 conflicts: 1 shift/reduce
State 948 conflicts: 1 shift/reduce
State 949 conflicts: 1 shift/reduce
State 952 conflicts: 2 shift/reduce
State 956 conflicts: 1 shift/reduce
State 969 conflicts: 1 shift/reduce
State 971 conflicts: 1 shift/reduce
State 977 conflicts: 1 shift/reduce
State 1018 conflicts: 1 shift/reduce, 1 reduce/reduce
State 1019 conflicts: 1 shift/reduce
State 1023 conflicts: 1 shift/reduce
State 1079 conflicts: 1 shift/reduce
State 1099 conflicts: 3 reduce/reduce
State 1102 conflicts: 2 reduce/reduce
State 1104 conflicts: 3 shift/reduce, 4 reduce/reduce
State 1106 conflicts: 2 reduce/reduce
State 1126 conflicts: 8 reduce/reduce
State 1131 conflicts: 1 shift/reduce, 2 reduce/reduce
State 1134 conflicts: 1 shift/reduce
State 1147 conflicts: 3 reduce/reduce
State 1149 conflicts: 1 reduce/reduce
State 1187 conflicts: 152 reduce/reduce
State 1221 conflicts: 1 shift/reduce
State 1224 conflicts: 1 shift/reduce
State 1225 conflicts: 1 shift/reduce
State 1233 conflicts: 1 shift/reduce
State 1279 conflicts: 1 shift/reduce
State 1293 conflicts: 22 shift/reduce
State 1309 conflicts: 1 shift/reduce
State 1316 conflicts: 3 shift/reduce
State 1350 conflicts: 1 shift/reduce
State 1351 conflicts: 1 shift/reduce
State 1360 conflicts: 1 shift/reduce
State 1362 conflicts: 1 shift/reduce
State 1403 conflicts: 1 shift/reduce
State 1407 conflicts: 1 shift/reduce
State 1434 conflicts: 1 shift/reduce
State 1463 conflicts: 1 shift/reduce, 1 reduce/reduce
State 1498 conflicts: 2 reduce/reduce
State 1501 conflicts: 2 reduce/reduce
State 1509 conflicts: 12 reduce/reduce
State 1512 conflicts: 2 reduce/reduce
State 1566 conflicts: 1 shift/reduce
State 1577 conflicts: 1 shift/reduce
State 1587 conflicts: 1 shift/reduce
State 1588 conflicts: 1 shift/reduce
State 1589 conflicts: 1 shift/reduce
State 1590 conflicts: 1 shift/reduce
State 1593 conflicts: 1 shift/reduce
State 1602 conflicts: 22 shift/reduce
State 1605 conflicts: 1 shift/reduce
State 1626 conflicts: 1 shift/reduce
State 1631 conflicts: 1 shift/reduce
State 1673 conflicts: 1 shift/reduce
State 1674 conflicts: 1 shift/reduce
State 1675 conflicts: 1 shift/reduce
State 1678 conflicts: 1 shift/reduce
State 1729 conflicts: 2 reduce/reduce
State 1774 conflicts: 1 shift/reduce
State 1786 conflicts: 1 shift/reduce
State 1787 conflicts: 1 shift/reduce
State 1788 conflicts: 1 shift/reduce
State 1789 conflicts: 1 shift/reduce
State 1790 conflicts: 1 shift/reduce
State 1791 conflicts: 1 shift/reduce
State 1798 conflicts: 1 shift/reduce
State 1805 conflicts: 27 shift/reduce, 10 reduce/reduce
State 1807 conflicts: 2 reduce/reduce
State 1808 conflicts: 1 reduce/reduce
State 1812 conflicts: 1 shift/reduce
State 1814 conflicts: 1 shift/reduce
State 1815 conflicts: 1 shift/reduce
State 1830 conflicts: 2 shift/reduce, 2 reduce/reduce
State 1831 conflicts: 1 shift/reduce
State 1832 conflicts: 1 shift/reduce
State 1833 conflicts: 1 shift/reduce
State 1834 conflicts: 1 shift/reduce
State 1835 conflicts: 1 shift/reduce
State 1885 conflicts: 1 shift/reduce
State 1900 conflicts: 1 shift/reduce
State 1901 conflicts: 1 shift/reduce
State 1902 conflicts: 1 shift/reduce
State 1903 conflicts: 1 shift/reduce
State 1907 conflicts: 1 shift/reduce
State 1914 conflicts: 1 shift/reduce
State 1915 conflicts: 1 shift/reduce
State 1923 conflicts: 1 shift/reduce
State 1924 conflicts: 1 shift/reduce
State 1952 conflicts: 1 shift/reduce
State 1953 conflicts: 1 shift/reduce
State 1961 conflicts: 1 shift/reduce
State 1969 conflicts: 1 shift/reduce
State 1992 conflicts: 1 shift/reduce
State 1994 conflicts: 1 reduce/reduce


Grammar

    0 $accept: translation-unit $end

    1 abstract-declarator: ptr-abstract-declarator
    2                    | noptr-abstract-declarator parameters-and-qualifiers trailing-return-type
    3                    | parameters-and-qualifiers trailing-return-type
    4                    | abstract-pack-declarator

    5 abstract-pack-declarator: noptr-abstract-pack-declarator
    6                         | ptr-operator abstract-pack-declarator

    7 access-specifier: "private"
    8                 | "protected"
    9                 | "public"

   10 additive-expression: multiplicative-expression
   11                    | additive-expression '+' multiplicative-expression
   12                    | additive-expression '-' multiplicative-expression

   13 alias-declaration: "using" IDENTIFIER '=' defining-type-id ';'
   14                  | "using" IDENTIFIER attribute-specifier-seq '=' defining-type-id ';'

   15 alignment-specifier: "alignas" '(' type-id ')'
   16                    | "alignas" '(' type-id "..." ')'
   17                    | "alignas" '(' constant-expression ')'
   18                    | "alignas" '(' constant-expression "..." ')'

   19 and-expression: equality-expression
   20               | and-expression '&' equality-expression

   21 asm-declaration: attribute-specifier-seq "asm" '(' string-literal ')' ';'
   22                | "asm" '(' string-literal ')' ';'

   23 assignment-expression: conditional-expression
   24                      | yield-expression
   25                      | throw-expression
   26                      | logical-or-expression assignment-operator initializer-clause

   27 assignment-operator: '='
   28                    | "*="
   29                    | "/="
   30                    | "%="
   31                    | "+="
   32                    | "-="
   33                    | ">>="
   34                    | "<<="
   35                    | "&="
   36                    | "^="
   37                    | "|="

   38 attribute: attribute-token
   39          | attribute-token attribute-argument-clause

   40 attribute-argument-clause: '(' ')'
   41                          | '(' balanced-token-seq ')'

   42 attribute-declaration: attribute-specifier-seq ';'

   43 attribute-list: attribute
   44               | attribute-list ','
   45               | attribute-list ',' attribute
   46               | attribute "..."
   47               | attribute-list ',' attribute "..."

   48 attribute-namespace: IDENTIFIER

   49 attribute-scoped-token: attribute-namespace "::" IDENTIFIER

   50 attribute-specifier: '[' '[' attribute-list ']' ']'
   51                    | '[' '[' attribute-using-prefix attribute-list ']' ']'
   52                    | alignment-specifier

   53 attribute-specifier-seq: attribute-specifier-seq attribute-specifier
   54                        | attribute-specifier

   55 attribute-token: IDENTIFIER
   56                | attribute-scoped-token

   57 attribute-using-prefix: "using" attribute-namespace ':'

   58 await-expression: "co_await" cast-expression

   59 balanced-token: '(' ')'
   60               | '(' balanced-token-seq ')'
   61               | '[' ']'
   62               | '[' balanced-token-seq ']'
   63               | '{' '}'
   64               | '{' balanced-token-seq '}'
   65               | ANY_TOKEN_OTHER_THAN_PARENTHESIS_BRACKET_BRACE

   66 balanced-token-seq: balanced-token
   67                   | balanced-token-seq balanced-token

   68 base-clause: ':' base-specifier-list

   69 base-specifier: attribute-specifier-seq class-or-decltype
   70               | class-or-decltype
   71               | attribute-specifier-seq "virtual" class-or-decltype
   72               | "virtual" class-or-decltype
   73               | attribute-specifier-seq "virtual" access-specifier class-or-decltype
   74               | "virtual" access-specifier class-or-decltype
   75               | attribute-specifier-seq access-specifier class-or-decltype
   76               | access-specifier class-or-decltype
   77               | attribute-specifier-seq access-specifier "virtual" class-or-decltype
   78               | access-specifier "virtual" class-or-decltype

   79 base-specifier-list: base-specifier
   80                    | base-specifier "..."
   81                    | base-specifier-list ',' base-specifier
   82                    | base-specifier-list ',' base-specifier "..."

   83 basic-c-char: EXCEPT_THE_APOSTROPHE_REVERSE_SOLIDUS_OR_NEW_LINE_CHARACTER

   84 basic-s-char: EXCEPT_THE_QUOTATION_MARK_REVERSE_SOLIDUS_OR_NEW_LINE_CHARACTER

   85 binary-digit: '0'
   86             | '1'

   87 binary-exponent-part: 'p' digit-sequence
   88                     | 'p' sign digit-sequence
   89                     | 'P' digit-sequence
   90                     | 'P' sign digit-sequence

   91 binary-literal: "0b" binary-digit
   92               | "0B" binary-digit
   93               | binary-literal binary-digit
   94               | binary-literal '\'' binary-digit

   95 block-declaration: simple-declaration
   96                  | asm-declaration
   97                  | namespace-alias-definition
   98                  | using-declaration
   99                  | using-enum-declaration
  100                  | using-directive
  101                  | static_assert-declaration
  102                  | alias-declaration
  103                  | opaque-enum-declaration

  104 boolean-literal: "false"
  105                | "true"

  106 brace-or-equal-initializer: '=' initializer-clause
  107                           | braced-init-list

  108 braced-init-list: '{' initializer-list '}'
  109                 | '{' initializer-list ',' '}'
  110                 | '{' designated-initializer-list '}'
  111                 | '{' designated-initializer-list ',' '}'
  112                 | '{' '}'

  113 c-char: basic-c-char
  114       | escape-sequence
  115       | universal-character-name

  116 c-char-sequence: c-char
  117                | c-char-sequence c-char

  118 capture: simple-capture
  119        | init-capture

  120 capture-default: '&'
  121                | '='

  122 capture-list: capture
  123             | capture-list ',' capture

  124 cast-expression: unary-expression
  125                | '(' type-id ')' cast-expression

  126 character-literal: encoding-prefix '\'' c-char-sequence '\''
  127                  | '\'' c-char-sequence '\''

  128 class-head: class-key class-head-name
  129           | class-key attribute-specifier-seq class-head-name
  130           | class-key class-head-name class-virt-specifier
  131           | class-key attribute-specifier-seq class-head-name class-virt-specifier
  132           | class-key class-head-name base-clause
  133           | class-key attribute-specifier-seq class-head-name base-clause
  134           | class-key class-head-name class-virt-specifier base-clause
  135           | class-key attribute-specifier-seq class-head-name class-virt-specifier base-clause
  136           | class-key
  137           | class-key attribute-specifier-seq
  138           | class-key base-clause
  139           | class-key attribute-specifier-seq base-clause

  140 class-head-name: nested-name-specifier class-name
  141                | class-name

  142 class-key: "class"
  143          | "struct"
  144          | "union"

  145 class-name: IDENTIFIER
  146           | simple-template-id

  147 class-or-decltype: nested-name-specifier type-name
  148                  | type-name
  149                  | nested-name-specifier "template" simple-template-id
  150                  | decltype-specifier

  151 class-specifier: class-head '{' '}'
  152                | class-head '{' member-specification '}'

  153 class-virt-specifier: "final"

  154 compare-expression: shift-expression
  155                   | compare-expression "<=>" shift-expression

  156 compound-requirement: '{' expression '}' ';'
  157                     | '{' expression '}' "noexcept" ';'
  158                     | '{' expression '}' return-type-requirement ';'
  159                     | '{' expression '}' "noexcept" return-type-requirement ';'

  160 compound-statement: '{' '}'
  161                   | '{' statement-seq '}'

  162 concept-definition: "concept" concept-name '=' constraint-expression ';'

  163 concept-name: IDENTIFIER

  164 condition: expression
  165          | attribute-specifier-seq decl-specifier-seq declarator brace-or-equal-initializer
  166          | decl-specifier-seq declarator brace-or-equal-initializer

  167 conditional-escape-sequence: '\\' conditional-escape-sequence-char

  168 conditional-escape-sequence-char: NOT_AN_OCTAL_DIGIT_A_SIMPLE_ESCAPE_SEQUENCE_CHAR_OR_THE_CHARACTERS_U_U_OR_X

  169 conditional-expression: logical-or-expression
  170                       | logical-or-expression '?' expression ':' assignment-expression

  171 constant-expression: conditional-expression

  172 constraint-expression: logical-or-expression

  173 constraint-logical-and-expression: primary-expression
  174                                  | constraint-logical-and-expression "&&" primary-expression

  175 constraint-logical-or-expression: constraint-logical-and-expression
  176                                 | constraint-logical-or-expression "||" constraint-logical-and-expression

  177 conversion-declarator: ptr-operator
  178                      | ptr-operator conversion-declarator

  179 conversion-function-id: "operator" conversion-type-id

  180 conversion-type-id: type-specifier-seq
  181                   | type-specifier-seq conversion-declarator

  182 coroutine-return-statement: "co_return" ';'
  183                           | "co_return" expr-or-braced-init-list ';'

  184 ctor-initializer: ':' mem-initializer-list

  185 cv-qualifier: "const"
  186             | "volatile"

  187 cv-qualifier-seq: cv-qualifier
  188                 | cv-qualifier cv-qualifier-seq

  189 d-char: EXCEPT_SPACE_PARENTHESIS_REVERSE_SOLIDUS_TABULATION_LINE_TABULATION_FORM_FEED_AND_NEW_LINE

  190 d-char-sequence: d-char
  191                | d-char-sequence d-char

  192 decimal-floating-point-literal: fractional-constant
  193                               | fractional-constant exponent-part
  194                               | fractional-constant floating-point-suffix
  195                               | fractional-constant exponent-part floating-point-suffix
  196                               | digit-sequence exponent-part
  197                               | digit-sequence exponent-part floating-point-suffix

  198 decimal-literal: nonzero-digit
  199                | decimal-literal digit
  200                | decimal-literal '\'' digit

  201 decl-specifier: storage-class-specifier
  202               | defining-type-specifier
  203               | function-specifier
  204               | "friend"
  205               | "typedef"
  206               | "constexpr"
  207               | "consteval"
  208               | "constinit"
  209               | "inline"

  210 decl-specifier-seq: decl-specifier
  211                   | decl-specifier attribute-specifier-seq
  212                   | decl-specifier decl-specifier-seq

  213 declaration: block-declaration
  214            | nodeclspec-function-declaration
  215            | function-definition
  216            | template-declaration
  217            | deduction-guide
  218            | explicit-instantiation
  219            | explicit-specialization
  220            | export-declaration
  221            | linkage-specification
  222            | namespace-definition
  223            | empty-declaration
  224            | attribute-declaration
  225            | module-import-declaration

  226 declaration-seq: declaration
  227                | declaration-seq declaration

  228 declaration-statement: block-declaration

  229 declarator: ptr-declarator
  230           | noptr-declarator parameters-and-qualifiers trailing-return-type

  231 declarator-id: "..." id-expression
  232              | id-expression

  233 decltype-specifier: "decltype" '(' expression ')'

  234 deduction-guide: explicit-specifier template-name '(' parameter-declaration-clause ')' "->" simple-template-id ';'
  235                | template-name '(' parameter-declaration-clause ')' "->" simple-template-id ';'

  236 defining-type-id: defining-type-specifier-seq
  237                 | defining-type-specifier-seq abstract-declarator

  238 defining-type-specifier: type-specifier
  239                        | class-specifier
  240                        | enum-specifier

  241 defining-type-specifier-seq: defining-type-specifier
  242                            | defining-type-specifier attribute-specifier-seq
  243                            | defining-type-specifier defining-type-specifier-seq

  244 delete-expression: "::" "delete" cast-expression
  245                  | "delete" cast-expression
  246                  | "::" "delete" '[' ']' cast-expression
  247                  | "delete" '[' ']' cast-expression

  248 designated-initializer-clause: designator brace-or-equal-initializer

  249 designated-initializer-list: designated-initializer-clause
  250                            | designated-initializer-list ',' designated-initializer-clause

  251 designator: '.' IDENTIFIER

  252 digit: '0'
  253      | '1'
  254      | '2'
  255      | '3'
  256      | '4'
  257      | '5'
  258      | '6'
  259      | '7'
  260      | '8'
  261      | '9'

  262 digit-sequence: digit
  263               | digit-sequence digit
  264               | digit-sequence '\'' digit

  265 elaborated-enum-specifier: "enum" IDENTIFIER
  266                          | "enum" nested-name-specifier IDENTIFIER

  267 elaborated-type-specifier: class-key IDENTIFIER
  268                          | class-key attribute-specifier-seq IDENTIFIER
  269                          | class-key nested-name-specifier IDENTIFIER
  270                          | class-key attribute-specifier-seq nested-name-specifier IDENTIFIER
  271                          | class-key simple-template-id
  272                          | class-key nested-name-specifier simple-template-id
  273                          | class-key nested-name-specifier "template" simple-template-id
  274                          | elaborated-enum-specifier

  275 empty-declaration: ';'

  276 enclosing-namespace-specifier: IDENTIFIER
  277                              | enclosing-namespace-specifier "::" IDENTIFIER
  278                              | enclosing-namespace-specifier "::" "inline" IDENTIFIER

  279 encoding-prefix: "u8"
  280                | 'u'
  281                | 'U'
  282                | 'L'

  283 enum-base: ':' type-specifier-seq

  284 enum-head: enum-key
  285          | enum-key attribute-specifier-seq
  286          | enum-key enum-head-name
  287          | enum-key attribute-specifier-seq enum-head-name
  288          | enum-key enum-base
  289          | enum-key attribute-specifier-seq enum-base
  290          | enum-key enum-head-name enum-base
  291          | enum-key attribute-specifier-seq enum-head-name enum-base

  292 enum-head-name: nested-name-specifier IDENTIFIER
  293               | IDENTIFIER

  294 enum-key: "enum"
  295         | "enum" "class"
  296         | "enum" "struct"

  297 enum-name: IDENTIFIER

  298 enum-specifier: enum-head '{' '}'
  299               | enum-head '{' enumerator-list '}'
  300               | enum-head '{' enumerator-list ',' '}'

  301 enumerator: IDENTIFIER
  302           | IDENTIFIER attribute-specifier-seq

  303 enumerator-definition: enumerator
  304                      | enumerator '=' constant-expression

  305 enumerator-list: enumerator-definition
  306                | enumerator-list ',' enumerator-definition

  307 equality-expression: relational-expression
  308                    | equality-expression "==" relational-expression
  309                    | equality-expression "!=" relational-expression

  310 escape-sequence: simple-escape-sequence
  311                | numeric-escape-sequence
  312                | conditional-escape-sequence

  313 exception-declaration: attribute-specifier-seq type-specifier-seq declarator
  314                      | type-specifier-seq declarator
  315                      | attribute-specifier-seq type-specifier-seq
  316                      | type-specifier-seq
  317                      | attribute-specifier-seq type-specifier-seq abstract-declarator
  318                      | type-specifier-seq abstract-declarator
  319                      | "..."

  320 exclusive-or-expression: and-expression
  321                        | exclusive-or-expression '^' and-expression

  322 explicit-instantiation: "extern" "template" declaration
  323                       | "template" declaration

  324 explicit-specialization: "template" '<' '>' declaration

  325 explicit-specifier: "explicit" '(' constant-expression ')'
  326                   | "explicit"

  327 exponent-part: 'e' digit-sequence
  328              | 'e' sign digit-sequence
  329              | 'E' digit-sequence
  330              | 'E' sign digit-sequence

  331 export-declaration: "export" declaration
  332                   | "export" '{' '}'
  333                   | "export" '{' declaration-seq '}'
  334                   | "export-keyword" module-import-declaration

  335 expr-or-braced-init-list: expression
  336                         | braced-init-list

  337 expression: assignment-expression
  338           | expression ',' assignment-expression

  339 expression-list: initializer-list

  340 expression-statement: expression ';'
  341                     | ';'

  342 floating-point-literal: decimal-floating-point-literal
  343                       | hexadecimal-floating-point-literal

  344 floating-point-suffix: 'f'
  345                      | 'l'
  346                      | 'F'
  347                      | 'L'

  348 fold-expression: '(' cast-expression fold-operator "..." ')'
  349                | '(' "..." fold-operator cast-expression ')'
  350                | '(' cast-expression fold-operator "..." fold-operator cast-expression ')'

  351 fold-operator: '+'
  352              | '-'
  353              | '*'
  354              | '/'
  355              | '%'
  356              | '^'
  357              | '&'
  358              | '|'
  359              | "<<"
  360              | ">>"
  361              | "+="
  362              | "-="
  363              | "*="
  364              | "/="
  365              | "%="
  366              | "^="
  367              | "&="
  368              | "|="
  369              | "<<="
  370              | ">>="
  371              | '='
  372              | "=="
  373              | "!="
  374              | '<'
  375              | '>'
  376              | "<="
  377              | ">="
  378              | "&&"
  379              | "||"
  380              | ','
  381              | ".*"
  382              | "->*"

  383 for-range-declaration: attribute-specifier-seq decl-specifier-seq declarator
  384                      | decl-specifier-seq declarator
  385                      | attribute-specifier-seq decl-specifier-seq '[' identifier-list ']'
  386                      | decl-specifier-seq '[' identifier-list ']'
  387                      | attribute-specifier-seq decl-specifier-seq ref-qualifier '[' identifier-list ']'
  388                      | decl-specifier-seq ref-qualifier '[' identifier-list ']'

  389 for-range-initializer: expr-or-braced-init-list

  390 fractional-constant: digit-sequence '.' digit-sequence
  391                    | '.' digit-sequence
  392                    | digit-sequence '.'

  393 function-body: ctor-initializer compound-statement
  394              | compound-statement
  395              | function-try-block
  396              | '=' "default" ';'
  397              | '=' "delete" ';'

  398 function-definition: attribute-specifier-seq declarator function-body
  399                    | declarator function-body
  400                    | attribute-specifier-seq decl-specifier-seq declarator function-body
  401                    | decl-specifier-seq declarator function-body
  402                    | attribute-specifier-seq declarator virt-specifier-seq function-body
  403                    | declarator virt-specifier-seq function-body
  404                    | attribute-specifier-seq decl-specifier-seq declarator virt-specifier-seq function-body
  405                    | decl-specifier-seq declarator virt-specifier-seq function-body
  406                    | attribute-specifier-seq declarator requires-clause function-body
  407                    | declarator requires-clause function-body
  408                    | attribute-specifier-seq decl-specifier-seq declarator requires-clause function-body
  409                    | decl-specifier-seq declarator requires-clause function-body

  410 function-specifier: "virtual"
  411                   | explicit-specifier

  412 function-try-block: "try" compound-statement handler-seq
  413                   | "try" ctor-initializer compound-statement handler-seq

  414 global-module-fragment: "module-keyword" ';'
  415                       | "module-keyword" ';' declaration-seq

  416 h-char: EXCEPT_NEW_LINE_AND_GREATER_THAN_SIGN

  417 handler: "catch" '(' exception-declaration ')' compound-statement

  418 handler-seq: handler
  419            | handler handler-seq

  420 header-name: '<' "h-char-sequence" '>'
  421            | '"' q-char-sequence '"'
  422            | "h-char-sequence:"
  423            | h-char
  424            | "h-char-sequence" h-char

  425 hex-quad: hexadecimal-digit hexadecimal-digit hexadecimal-digit hexadecimal-digit

  426 hexadecimal-digit: '0'
  427                  | '1'
  428                  | '2'
  429                  | '3'
  430                  | '4'
  431                  | '5'
  432                  | '6'
  433                  | '7'
  434                  | '8'
  435                  | '9'
  436                  | 'a'
  437                  | 'b'
  438                  | 'c'
  439                  | 'd'
  440                  | 'e'
  441                  | 'f'
  442                  | 'A'
  443                  | 'B'
  444                  | 'C'
  445                  | 'D'
  446                  | 'E'
  447                  | 'F'

  448 hexadecimal-digit-sequence: hexadecimal-digit
  449                           | hexadecimal-digit-sequence hexadecimal-digit
  450                           | hexadecimal-digit-sequence '\'' hexadecimal-digit

  451 hexadecimal-escape-sequence: "\\x" hexadecimal-digit
  452                            | hexadecimal-escape-sequence hexadecimal-digit

  453 hexadecimal-floating-point-literal: hexadecimal-prefix hexadecimal-fractional-constant binary-exponent-part
  454                                   | hexadecimal-prefix hexadecimal-fractional-constant binary-exponent-part floating-point-suffix
  455                                   | hexadecimal-prefix hexadecimal-digit-sequence binary-exponent-part
  456                                   | hexadecimal-prefix hexadecimal-digit-sequence binary-exponent-part floating-point-suffix

  457 hexadecimal-fractional-constant: hexadecimal-digit-sequence '.' hexadecimal-digit-sequence
  458                                | '.' hexadecimal-digit-sequence
  459                                | hexadecimal-digit-sequence '.'

  460 hexadecimal-literal: hexadecimal-prefix hexadecimal-digit-sequence

  461 hexadecimal-prefix: "0x"
  462                   | "0X"

  463 id-expression: unqualified-id
  464              | qualified-id

  465 identifier-list: IDENTIFIER
  466                | identifier-list ',' IDENTIFIER

  467 inclusive-or-expression: exclusive-or-expression
  468                        | inclusive-or-expression '|' exclusive-or-expression

  469 init-capture: "..." IDENTIFIER initializer
  470             | IDENTIFIER initializer
  471             | '&' IDENTIFIER initializer
  472             | '&' "..." IDENTIFIER initializer

  473 init-declarator: declarator
  474                | declarator initializer
  475                | declarator requires-clause

  476 init-declarator-list: init-declarator
  477                     | init-declarator-list ',' init-declarator

  478 init-statement: expression-statement
  479               | simple-declaration
  480               | alias-declaration

  481 initializer: brace-or-equal-initializer
  482            | '(' expression-list ')'

  483 initializer-clause: assignment-expression
  484                   | braced-init-list

  485 initializer-list: initializer-clause
  486                 | initializer-clause "..."
  487                 | initializer-list ',' initializer-clause
  488                 | initializer-list ',' initializer-clause "..."

  489 integer-literal: binary-literal
  490                | binary-literal integer-suffix
  491                | octal-literal
  492                | octal-literal integer-suffix
  493                | decimal-literal
  494                | decimal-literal integer-suffix
  495                | hexadecimal-literal
  496                | hexadecimal-literal integer-suffix

  497 integer-suffix: unsigned-suffix
  498               | unsigned-suffix long-suffix
  499               | unsigned-suffix
  500               | unsigned-suffix long-long-suffix
  501               | unsigned-suffix
  502               | unsigned-suffix size-suffix
  503               | long-suffix
  504               | long-suffix unsigned-suffix
  505               | long-long-suffix
  506               | long-long-suffix unsigned-suffix
  507               | size-suffix
  508               | size-suffix unsigned-suffix

  509 iteration-statement: "while" '(' condition ')' statement
  510                    | "do" statement "while" '(' expression ')' ';'
  511                    | "for" '(' init-statement ';' ')' statement
  512                    | "for" '(' init-statement condition ';' ')' statement
  513                    | "for" '(' init-statement ';' expression ')' statement
  514                    | "for" '(' init-statement condition ';' expression ')' statement
  515                    | "for" '(' for-range-declaration ':' for-range-initializer ')' statement
  516                    | "for" '(' init-statement for-range-declaration ':' for-range-initializer ')' statement

  517 jump-statement: "break" ';'
  518               | "continue" ';'
  519               | "return" ';'
  520               | "return" expr-or-braced-init-list ';'
  521               | coroutine-return-statement
  522               | "goto" IDENTIFIER ';'

  523 labeled-statement: attribute-specifier-seq IDENTIFIER ':' statement
  524                  | IDENTIFIER ':' statement
  525                  | attribute-specifier-seq "case" constant-expression ':' statement
  526                  | "case" constant-expression ':' statement
  527                  | attribute-specifier-seq "default" ':' statement
  528                  | "default" ':' statement

  529 lambda-capture: capture-default
  530               | capture-list
  531               | capture-default ',' capture-list

  532 lambda-declarator: lambda-specifiers
  533                  | '(' parameter-declaration-clause ')' lambda-specifiers
  534                  | '(' parameter-declaration-clause ')' lambda-specifiers requires-clause

  535 lambda-expression: lambda-introducer lambda-declarator compound-statement
  536                  | lambda-introducer '<' template-parameter-list '>' lambda-declarator compound-statement
  537                  | lambda-introducer '<' template-parameter-list '>' requires-clause lambda-declarator compound-statement

  538 lambda-introducer: '[' ']'
  539                  | '[' lambda-capture ']'

  540 lambda-specifiers: decl-specifier-seq
  541                  | decl-specifier-seq noexcept-specifier
  542                  | noexcept-specifier
  543                  | decl-specifier-seq attribute-specifier-seq
  544                  | attribute-specifier-seq
  545                  | decl-specifier-seq noexcept-specifier attribute-specifier-seq
  546                  | noexcept-specifier attribute-specifier-seq
  547                  | decl-specifier-seq trailing-return-type
  548                  | trailing-return-type
  549                  | decl-specifier-seq noexcept-specifier trailing-return-type
  550                  | noexcept-specifier trailing-return-type
  551                  | decl-specifier-seq attribute-specifier-seq trailing-return-type
  552                  | attribute-specifier-seq trailing-return-type
  553                  | decl-specifier-seq noexcept-specifier attribute-specifier-seq trailing-return-type
  554                  | noexcept-specifier attribute-specifier-seq trailing-return-type

  555 linkage-specification: "extern" string-literal '{' '}'
  556                      | "extern" string-literal '{' declaration-seq '}'
  557                      | "extern" string-literal declaration

  558 literal: integer-literal
  559        | character-literal
  560        | floating-point-literal
  561        | string-literal
  562        | boolean-literal
  563        | pointer-literal
  564        | user-defined-literal

  565 literal-operator-id: "operator" string-literal IDENTIFIER
  566                    | "operator" user-defined-string-literal

  567 logical-and-expression: inclusive-or-expression
  568                       | logical-and-expression "&&" inclusive-or-expression

  569 logical-or-expression: logical-and-expression
  570                      | logical-or-expression "||" logical-and-expression

  571 long-long-suffix: "ll"
  572                 | LL

  573 long-suffix: 'l'
  574            | 'L'

  575 mem-initializer: mem-initializer-id '(' ')'
  576                | mem-initializer-id '(' expression-list ')'
  577                | mem-initializer-id braced-init-list

  578 mem-initializer-id: class-or-decltype
  579                   | IDENTIFIER

  580 mem-initializer-list: mem-initializer
  581                     | mem-initializer "..."
  582                     | mem-initializer-list ',' mem-initializer
  583                     | mem-initializer-list ',' mem-initializer "..."

  584 member-declaration: attribute-specifier-seq ';'
  585                   | ';'
  586                   | attribute-specifier-seq decl-specifier-seq ';'
  587                   | decl-specifier-seq ';'
  588                   | attribute-specifier-seq member-declarator-list ';'
  589                   | member-declarator-list ';'
  590                   | attribute-specifier-seq decl-specifier-seq member-declarator-list ';'
  591                   | decl-specifier-seq member-declarator-list ';'
  592                   | function-definition
  593                   | using-declaration
  594                   | using-enum-declaration
  595                   | static_assert-declaration
  596                   | template-declaration
  597                   | explicit-specialization
  598                   | deduction-guide
  599                   | alias-declaration
  600                   | opaque-enum-declaration
  601                   | empty-declaration

  602 member-declarator: declarator
  603                  | declarator virt-specifier-seq
  604                  | declarator pure-specifier
  605                  | declarator virt-specifier-seq pure-specifier
  606                  | declarator requires-clause
  607                  | declarator
  608                  | declarator brace-or-equal-initializer
  609                  | IDENTIFIER ':' constant-expression
  610                  | ':' constant-expression
  611                  | IDENTIFIER attribute-specifier-seq ':' constant-expression
  612                  | attribute-specifier-seq ':' constant-expression
  613                  | IDENTIFIER ':' constant-expression brace-or-equal-initializer
  614                  | ':' constant-expression brace-or-equal-initializer
  615                  | IDENTIFIER attribute-specifier-seq ':' constant-expression brace-or-equal-initializer
  616                  | attribute-specifier-seq ':' constant-expression brace-or-equal-initializer

  617 member-declarator-list: member-declarator
  618                       | member-declarator-list ',' member-declarator

  619 member-specification: member-declaration
  620                     | member-declaration member-specification
  621                     | access-specifier ':'
  622                     | access-specifier ':' member-specification

  623 module-declaration: "export-keyword" "module-keyword" module-name ';'
  624                   | "module-keyword" module-name ';'
  625                   | "export-keyword" "module-keyword" module-name module-partition ';'
  626                   | "module-keyword" module-name module-partition ';'
  627                   | "export-keyword" "module-keyword" module-name attribute-specifier-seq ';'
  628                   | "module-keyword" module-name attribute-specifier-seq ';'
  629                   | "export-keyword" "module-keyword" module-name module-partition attribute-specifier-seq ';'
  630                   | "module-keyword" module-name module-partition attribute-specifier-seq ';'

  631 module-import-declaration: "import-keyword" module-name ';'
  632                          | "import-keyword" module-name attribute-specifier-seq ';'
  633                          | "import-keyword" module-partition ';'
  634                          | "import-keyword" module-partition attribute-specifier-seq ';'
  635                          | "import-keyword" header-name ';'
  636                          | "import-keyword" header-name attribute-specifier-seq ';'

  637 module-name: module-name-qualifier IDENTIFIER
  638            | IDENTIFIER

  639 module-name-qualifier: IDENTIFIER '.'
  640                      | module-name-qualifier IDENTIFIER '.'

  641 module-partition: ':' IDENTIFIER
  642                 | ':' module-name-qualifier IDENTIFIER

  643 multiplicative-expression: pm-expression
  644                          | multiplicative-expression '*' pm-expression
  645                          | multiplicative-expression '/' pm-expression
  646                          | multiplicative-expression '%' pm-expression

  647 named-namespace-definition: "inline" "namespace" IDENTIFIER '{' namespace-body '}'
  648                           | "namespace" IDENTIFIER '{' namespace-body '}'
  649                           | "inline" "namespace" attribute-specifier-seq IDENTIFIER '{' namespace-body '}'
  650                           | "namespace" attribute-specifier-seq IDENTIFIER '{' namespace-body '}'

  651 namespace-alias: IDENTIFIER

  652 namespace-alias-definition: "namespace" IDENTIFIER '=' qualified-namespace-specifier ';'

  653 namespace-body: declaration-seq

  654 namespace-definition: named-namespace-definition
  655                     | unnamed-namespace-definition
  656                     | nested-namespace-definition

  657 namespace-name: IDENTIFIER
  658               | namespace-alias

  659 nested-name-specifier: "::"
  660                      | type-name "::"
  661                      | namespace-name "::"
  662                      | decltype-specifier "::"
  663                      | nested-name-specifier IDENTIFIER "::"
  664                      | nested-name-specifier simple-template-id "::"
  665                      | nested-name-specifier "template" simple-template-id "::"

  666 nested-namespace-definition: "namespace" enclosing-namespace-specifier "::" IDENTIFIER '{' namespace-body '}'
  667                            | "namespace" enclosing-namespace-specifier "::" "inline" IDENTIFIER '{' namespace-body '}'

  668 nested-requirement: "requires" constraint-expression ';'

  669 new-declarator: ptr-operator
  670               | ptr-operator new-declarator
  671               | noptr-new-declarator

  672 new-expression: "::" "new" new-type-id
  673               | "new" new-type-id
  674               | "::" "new" new-placement new-type-id
  675               | "new" new-placement new-type-id
  676               | "::" "new" new-type-id new-initializer
  677               | "new" new-type-id new-initializer
  678               | "::" "new" new-placement new-type-id new-initializer
  679               | "new" new-placement new-type-id new-initializer
  680               | "::" "new" '(' type-id ')'
  681               | "new" '(' type-id ')'
  682               | "::" "new" new-placement '(' type-id ')'
  683               | "new" new-placement '(' type-id ')'
  684               | "::" "new" '(' type-id ')' new-initializer
  685               | "new" '(' type-id ')' new-initializer
  686               | "::" "new" new-placement '(' type-id ')' new-initializer
  687               | "new" new-placement '(' type-id ')' new-initializer

  688 new-initializer: '(' ')'
  689                | '(' expression-list ')'
  690                | braced-init-list

  691 new-placement: '(' expression-list ')'

  692 new-type-id: type-specifier-seq
  693            | type-specifier-seq new-declarator

  694 nodeclspec-function-declaration: attribute-specifier-seq declarator ';'
  695                                | declarator ';'

  696 noexcept-expression: "noexcept" '(' expression ')'

  697 noexcept-specifier: "noexcept" '(' constant-expression ')'
  698                   | "noexcept"

  699 nonzero-digit: '1'
  700              | '2'
  701              | '3'
  702              | '4'
  703              | '5'
  704              | '6'
  705              | '7'
  706              | '8'
  707              | '9'

  708 noptr-abstract-declarator: noptr-abstract-declarator parameters-and-qualifiers
  709                          | parameters-and-qualifiers
  710                          | noptr-abstract-declarator '[' ']'
  711                          | '[' ']'
  712                          | noptr-abstract-declarator '[' constant-expression ']'
  713                          | '[' constant-expression ']'
  714                          | noptr-abstract-declarator '[' ']' attribute-specifier-seq
  715                          | '[' ']' attribute-specifier-seq
  716                          | noptr-abstract-declarator '[' constant-expression ']' attribute-specifier-seq
  717                          | '[' constant-expression ']' attribute-specifier-seq
  718                          | '(' ptr-abstract-declarator ')'

  719 noptr-abstract-pack-declarator: noptr-abstract-pack-declarator parameters-and-qualifiers
  720                               | noptr-abstract-pack-declarator '[' ']'
  721                               | noptr-abstract-pack-declarator '[' constant-expression ']'
  722                               | noptr-abstract-pack-declarator '[' ']' attribute-specifier-seq
  723                               | noptr-abstract-pack-declarator '[' constant-expression ']' attribute-specifier-seq
  724                               | "..."

  725 noptr-declarator: declarator-id
  726                 | declarator-id attribute-specifier-seq
  727                 | noptr-declarator parameters-and-qualifiers
  728                 | noptr-declarator '[' ']'
  729                 | noptr-declarator '[' constant-expression ']'
  730                 | noptr-declarator '[' ']' attribute-specifier-seq
  731                 | noptr-declarator '[' constant-expression ']' attribute-specifier-seq
  732                 | '(' ptr-declarator ')'

  733 noptr-new-declarator: '[' ']'
  734                     | '[' expression ']'
  735                     | '[' ']' attribute-specifier-seq
  736                     | '[' expression ']' attribute-specifier-seq
  737                     | noptr-new-declarator '[' constant-expression ']'
  738                     | noptr-new-declarator '[' constant-expression ']' attribute-specifier-seq

  739 numeric-escape-sequence: octal-escape-sequence
  740                        | hexadecimal-escape-sequence

  741 octal-digit: '0'
  742            | '1'
  743            | '2'
  744            | '3'
  745            | '4'
  746            | '5'
  747            | '6'
  748            | '7'

  749 octal-escape-sequence: '\\' octal-digit
  750                      | '\\' octal-digit octal-digit
  751                      | '\\' octal-digit octal-digit octal-digit

  752 octal-literal: '0'
  753              | octal-literal octal-digit
  754              | octal-literal '\'' octal-digit

  755 opaque-enum-declaration: enum-key enum-head-name ';'
  756                        | enum-key attribute-specifier-seq enum-head-name ';'
  757                        | enum-key enum-head-name enum-base ';'
  758                        | enum-key attribute-specifier-seq enum-head-name enum-base ';'

  759 operator-function-id: "operator" overloadable-operator
  760                     | "operator" overloadable-operator '<' '>'
  761                     | "operator" overloadable-operator '<' template-argument-list '>'

  762 overloadable-operator: "new"
  763                      | "delete"
  764                      | "new" '[' ']'
  765                      | "delete" '[' ']'
  766                      | "co_await"
  767                      | '(' ')'
  768                      | '[' ']'
  769                      | "->"
  770                      | "->*"
  771                      | '~'
  772                      | '!'
  773                      | '+'
  774                      | '-'
  775                      | '*'
  776                      | '/'
  777                      | '%'
  778                      | '^'
  779                      | '&'
  780                      | '|'
  781                      | '='
  782                      | "+="
  783                      | "-="
  784                      | "*="
  785                      | "/="
  786                      | "%="
  787                      | "^="
  788                      | "&="
  789                      | "|="
  790                      | "=="
  791                      | "!="
  792                      | '<'
  793                      | '>'
  794                      | "<="
  795                      | ">="
  796                      | "<=>"
  797                      | "&&"
  798                      | "||"
  799                      | "<<"
  800                      | ">>"
  801                      | "<<="
  802                      | ">>="
  803                      | "++"
  804                      | "--"
  805                      | ','

  806 parameter-declaration: attribute-specifier-seq decl-specifier-seq declarator
  807                      | decl-specifier-seq declarator
  808                      | attribute-specifier-seq "this" decl-specifier-seq declarator
  809                      | "this" decl-specifier-seq declarator
  810                      | attribute-specifier-seq decl-specifier-seq declarator '=' initializer-clause
  811                      | decl-specifier-seq declarator '=' initializer-clause
  812                      | attribute-specifier-seq "this" decl-specifier-seq declarator '=' initializer-clause
  813                      | "this" decl-specifier-seq declarator '=' initializer-clause
  814                      | attribute-specifier-seq decl-specifier-seq
  815                      | decl-specifier-seq
  816                      | attribute-specifier-seq "this" decl-specifier-seq
  817                      | "this" decl-specifier-seq
  818                      | attribute-specifier-seq decl-specifier-seq abstract-declarator
  819                      | decl-specifier-seq abstract-declarator
  820                      | attribute-specifier-seq "this" decl-specifier-seq abstract-declarator
  821                      | "this" decl-specifier-seq abstract-declarator
  822                      | attribute-specifier-seq decl-specifier-seq '=' initializer-clause
  823                      | decl-specifier-seq '=' initializer-clause
  824                      | attribute-specifier-seq "this" decl-specifier-seq '=' initializer-clause
  825                      | "this" decl-specifier-seq '=' initializer-clause
  826                      | attribute-specifier-seq decl-specifier-seq abstract-declarator '=' initializer-clause
  827                      | decl-specifier-seq abstract-declarator '=' initializer-clause
  828                      | attribute-specifier-seq "this" decl-specifier-seq abstract-declarator '=' initializer-clause
  829                      | "this" decl-specifier-seq abstract-declarator '=' initializer-clause

  830 parameter-declaration-clause: parameter-declaration-list
  831                             | parameter-declaration-list "..."
  832                             | "..."
  833                             | parameter-declaration-list ',' "..."

  834 parameter-declaration-list: parameter-declaration
  835                           | parameter-declaration-list ',' parameter-declaration

  836 parameters-and-qualifiers: '(' parameter-declaration-clause ')'
  837                          | '(' parameter-declaration-clause ')' cv-qualifier-seq
  838                          | '(' parameter-declaration-clause ')' ref-qualifier
  839                          | '(' parameter-declaration-clause ')' cv-qualifier-seq ref-qualifier
  840                          | '(' parameter-declaration-clause ')' noexcept-specifier
  841                          | '(' parameter-declaration-clause ')' cv-qualifier-seq noexcept-specifier
  842                          | '(' parameter-declaration-clause ')' ref-qualifier noexcept-specifier
  843                          | '(' parameter-declaration-clause ')' cv-qualifier-seq ref-qualifier noexcept-specifier
  844                          | '(' parameter-declaration-clause ')' attribute-specifier-seq
  845                          | '(' parameter-declaration-clause ')' cv-qualifier-seq attribute-specifier-seq
  846                          | '(' parameter-declaration-clause ')' ref-qualifier attribute-specifier-seq
  847                          | '(' parameter-declaration-clause ')' cv-qualifier-seq ref-qualifier attribute-specifier-seq
  848                          | '(' parameter-declaration-clause ')' noexcept-specifier attribute-specifier-seq
  849                          | '(' parameter-declaration-clause ')' cv-qualifier-seq noexcept-specifier attribute-specifier-seq
  850                          | '(' parameter-declaration-clause ')' ref-qualifier noexcept-specifier attribute-specifier-seq
  851                          | '(' parameter-declaration-clause ')' cv-qualifier-seq ref-qualifier noexcept-specifier attribute-specifier-seq

  852 placeholder-type-specifier: type-constraint "auto"
  853                           | "auto"
  854                           | type-constraint "decltype" '(' "auto" ')'
  855                           | "decltype" '(' "auto" ')'

  856 pm-expression: cast-expression
  857              | pm-expression ".*" cast-expression
  858              | pm-expression "->*" cast-expression

  859 pointer-literal: "nullptr"

  860 postfix-expression: primary-expression
  861                   | postfix-expression '[' ']'
  862                   | postfix-expression '[' expression-list ']'
  863                   | postfix-expression '(' ')'
  864                   | postfix-expression '(' expression-list ')'
  865                   | simple-type-specifier '(' ')'
  866                   | simple-type-specifier '(' expression-list ')'
  867                   | typename-specifier '(' ')'
  868                   | typename-specifier '(' expression-list ')'
  869                   | simple-type-specifier braced-init-list
  870                   | typename-specifier braced-init-list
  871                   | postfix-expression '.' id-expression
  872                   | postfix-expression '.' "template" id-expression
  873                   | postfix-expression "->" id-expression
  874                   | postfix-expression "->" "template" id-expression
  875                   | postfix-expression "++"
  876                   | postfix-expression "--"
  877                   | "dynamic_cast" '<' type-id '>' '(' expression ')'
  878                   | "static_cast" '<' type-id '>' '(' expression ')'
  879                   | "reinterpret_cast" '<' type-id '>' '(' expression ')'
  880                   | "const_cast" '<' type-id '>' '(' expression ')'
  881                   | "typeid" '(' expression ')'
  882                   | "typeid" '(' type-id ')'

  883 primary-expression: literal
  884                   | "this"
  885                   | '(' expression ')'
  886                   | id-expression
  887                   | lambda-expression
  888                   | fold-expression
  889                   | requires-expression

  890 private-module-fragment: "module-keyword" ':' "private" ';'
  891                        | "module-keyword" ':' "private" ';' declaration-seq

  892 ptr-abstract-declarator: noptr-abstract-declarator
  893                        | ptr-operator
  894                        | ptr-operator ptr-abstract-declarator

  895 ptr-declarator: noptr-declarator
  896               | ptr-operator ptr-declarator

  897 ptr-operator: '*'
  898             | '*' attribute-specifier-seq
  899             | '*' cv-qualifier-seq
  900             | '*' attribute-specifier-seq cv-qualifier-seq
  901             | '&'
  902             | '&' attribute-specifier-seq
  903             | "&&"
  904             | "&&" attribute-specifier-seq
  905             | nested-name-specifier '*'
  906             | nested-name-specifier '*' attribute-specifier-seq
  907             | nested-name-specifier '*' cv-qualifier-seq
  908             | nested-name-specifier '*' attribute-specifier-seq cv-qualifier-seq

  909 pure-specifier: '=' '0'

  910 q-char: EXCEPT_NEW_LINE_AND_QUOTATION_MARK

  911 q-char-sequence: q-char
  912                | q-char-sequence q-char

  913 qualified-id: nested-name-specifier unqualified-id
  914             | nested-name-specifier "template" unqualified-id

  915 qualified-namespace-specifier: nested-name-specifier namespace-name
  916                              | namespace-name

  917 r-char: EXCEPT_RIGHT_PARENTHESIS_FOLLOWED_BY_THE_INITIAL_D_CHAR_SEQUENCE_FOLLOWED_BY_QUOTATION_MARK

  918 r-char-sequence: r-char
  919                | r-char-sequence r-char

  920 raw-string: '"' '(' ')' '"'
  921           | '"' d-char-sequence '(' ')' '"'
  922           | '"' '(' r-char-sequence ')' '"'
  923           | '"' d-char-sequence '(' r-char-sequence ')' '"'
  924           | '"' '(' ')' d-char-sequence '"'
  925           | '"' d-char-sequence '(' ')' d-char-sequence '"'
  926           | '"' '(' r-char-sequence ')' d-char-sequence '"'
  927           | '"' d-char-sequence '(' r-char-sequence ')' d-char-sequence '"'

  928 ref-qualifier: '&'
  929              | "&&"

  930 relational-expression: compare-expression
  931                      | relational-expression '<' compare-expression
  932                      | relational-expression '>' compare-expression
  933                      | relational-expression "<=" compare-expression
  934                      | relational-expression ">=" compare-expression

  935 requirement: simple-requirement
  936            | type-requirement
  937            | compound-requirement
  938            | nested-requirement

  939 requirement-body: '{' requirement-seq '}'

  940 requirement-parameter-list: '(' parameter-declaration-clause ')'

  941 requirement-seq: requirement
  942                | requirement-seq requirement

  943 requires-clause: "requires" constraint-logical-or-expression

  944 requires-expression: "requires" requirement-body
  945                    | "requires" requirement-parameter-list requirement-body

  946 return-type-requirement: "->" type-constraint

  947 s-char: basic-s-char
  948       | escape-sequence
  949       | universal-character-name

  950 s-char-sequence: s-char
  951                | s-char-sequence s-char

  952 selection-statement: "if" '(' condition ')' statement
  953                    | "if" "constexpr" '(' condition ')' statement
  954                    | "if" '(' init-statement condition ')' statement
  955                    | "if" "constexpr" '(' init-statement condition ')' statement
  956                    | "if" '(' condition ')' statement "else" statement
  957                    | "if" "constexpr" '(' condition ')' statement "else" statement
  958                    | "if" '(' init-statement condition ')' statement "else" statement
  959                    | "if" "constexpr" '(' init-statement condition ')' statement "else" statement
  960                    | "if" "consteval" compound-statement
  961                    | "if" '!' "consteval" compound-statement
  962                    | "if" "consteval" compound-statement "else" statement
  963                    | "if" '!' "consteval" compound-statement "else" statement
  964                    | "switch" '(' condition ')' statement
  965                    | "switch" '(' init-statement condition ')' statement

  966 shift-expression: additive-expression
  967                 | shift-expression "<<" additive-expression
  968                 | shift-expression ">>" additive-expression

  969 sign: '+'
  970     | '-'

  971 simple-capture: IDENTIFIER
  972               | IDENTIFIER "..."
  973               | '&' IDENTIFIER
  974               | '&' IDENTIFIER "..."
  975               | "this"
  976               | '*' "this"

  977 simple-declaration: decl-specifier-seq ';'
  978                   | decl-specifier-seq init-declarator-list ';'
  979                   | attribute-specifier-seq decl-specifier-seq init-declarator-list ';'
  980                   | attribute-specifier-seq decl-specifier-seq '[' identifier-list ']' initializer ';'
  981                   | decl-specifier-seq '[' identifier-list ']' initializer ';'
  982                   | attribute-specifier-seq decl-specifier-seq ref-qualifier '[' identifier-list ']' initializer ';'
  983                   | decl-specifier-seq ref-qualifier '[' identifier-list ']' initializer ';'

  984 simple-escape-sequence: '\\' simple-escape-sequence-char

  985 simple-escape-sequence-char: '\''
  986                            | '"'
  987                            | '?'
  988                            | '\\'
  989                            | 'a'
  990                            | 'b'
  991                            | 'f'
  992                            | 'n'
  993                            | 'r'
  994                            | 't'
  995                            | 'v'

  996 simple-requirement: expression ';'

  997 simple-template-id: template-name '<' '>'
  998                   | template-name '<' template-argument-list '>'

  999 simple-type-specifier: nested-name-specifier type-name
  1000                      | type-name
  1001                      | nested-name-specifier "template" simple-template-id
  1002                      | decltype-specifier
  1003                      | placeholder-type-specifier
  1004                      | nested-name-specifier template-name
  1005                      | template-name
  1006                      | "char"
  1007                      | "char8_t"
  1008                      | "char16_t"
  1009                      | "char32_t"
  1010                      | "wchar_t"
  1011                      | "bool"
  1012                      | "short"
  1013                      | "int"
  1014                      | "long"
  1015                      | "signed"
  1016                      | "unsigned"
  1017                      | "float"
  1018                      | "double"
  1019                      | "void"

  1020 size-suffix: 'z'
  1021            | 'Z'

  1022 statement: labeled-statement
  1023          | attribute-specifier-seq expression-statement
  1024          | expression-statement
  1025          | attribute-specifier-seq compound-statement
  1026          | compound-statement
  1027          | attribute-specifier-seq selection-statement
  1028          | selection-statement
  1029          | attribute-specifier-seq iteration-statement
  1030          | iteration-statement
  1031          | attribute-specifier-seq jump-statement
  1032          | jump-statement
  1033          | declaration-statement
  1034          | attribute-specifier-seq try-block
  1035          | try-block

  1036 statement-seq: statement
  1037              | statement-seq statement

  1038 static_assert-declaration: "static_assert" '(' constant-expression ')' ';'
  1039                          | "static_assert" '(' constant-expression ',' string-literal ')' ';'

  1040 storage-class-specifier: "static"
  1041                        | "thread_local"
  1042                        | "extern"
  1043                        | "mutable"

  1044 string-literal: encoding-prefix '"' '"'
  1045               | '"' '"'
  1046               | encoding-prefix '"' s-char-sequence '"'
  1047               | '"' s-char-sequence '"'
  1048               | encoding-prefix 'R' raw-string
  1049               | 'R' raw-string

  1050 template-argument: constant-expression
  1051                  | type-id
  1052                  | id-expression

  1053 template-argument-list: template-argument
  1054                       | template-argument "..."
  1055                       | template-argument-list ',' template-argument
  1056                       | template-argument-list ',' template-argument "..."

  1057 template-declaration: template-head declaration
  1058                     | template-head concept-definition

  1059 template-head: "template" '<' template-parameter-list '>'
  1060              | "template" '<' template-parameter-list '>' requires-clause

  1061 template-id: simple-template-id
  1062            | operator-function-id '<' '>'
  1063            | operator-function-id '<' template-argument-list '>'
  1064            | literal-operator-id '<' '>'
  1065            | literal-operator-id '<' template-argument-list '>'

  1066 template-name: IDENTIFIER

  1067 template-parameter: type-parameter
  1068                   | parameter-declaration

  1069 template-parameter-list: template-parameter
  1070                        | template-parameter-list ',' template-parameter

  1071 throw-expression: "throw"
  1072                 | "throw" assignment-expression

  1073 trailing-return-type: "->" type-id

  1074 translation-unit: declaration-seq
  1075                 | global-module-fragment module-declaration
  1076                 | module-declaration
  1077                 | global-module-fragment module-declaration declaration-seq
  1078                 | module-declaration declaration-seq
  1079                 | global-module-fragment module-declaration private-module-fragment
  1080                 | module-declaration private-module-fragment
  1081                 | global-module-fragment module-declaration declaration-seq private-module-fragment
  1082                 | module-declaration declaration-seq private-module-fragment

  1083 try-block: "try" compound-statement handler-seq

  1084 type-constraint: nested-name-specifier concept-name
  1085                | concept-name
  1086                | nested-name-specifier concept-name '<' '>'
  1087                | concept-name '<' '>'
  1088                | nested-name-specifier concept-name '<' template-argument-list '>'
  1089                | concept-name '<' template-argument-list '>'

  1090 type-id: type-specifier-seq
  1091        | type-specifier-seq abstract-declarator

  1092 type-name: class-name
  1093          | enum-name
  1094          | typedef-name

  1095 type-parameter: type-parameter-key
  1096               | type-parameter-key "..."
  1097               | type-parameter-key IDENTIFIER
  1098               | type-parameter-key "..." IDENTIFIER
  1099               | type-parameter-key '=' type-id
  1100               | type-parameter-key IDENTIFIER '=' type-id
  1101               | type-constraint
  1102               | type-constraint "..."
  1103               | type-constraint IDENTIFIER
  1104               | type-constraint "..." IDENTIFIER
  1105               | type-constraint '=' type-id
  1106               | type-constraint IDENTIFIER '=' type-id
  1107               | template-head type-parameter-key
  1108               | template-head type-parameter-key "..."
  1109               | template-head type-parameter-key IDENTIFIER
  1110               | template-head type-parameter-key "..." IDENTIFIER
  1111               | template-head type-parameter-key '=' id-expression
  1112               | template-head type-parameter-key IDENTIFIER '=' id-expression

  1113 type-parameter-key: "class"
  1114                   | "typename"

  1115 type-requirement: "typename" type-name ';'
  1116                 | "typename" nested-name-specifier type-name ';'

  1117 type-specifier: simple-type-specifier
  1118               | elaborated-type-specifier
  1119               | typename-specifier
  1120               | cv-qualifier

  1121 type-specifier-seq: type-specifier
  1122                   | type-specifier attribute-specifier-seq
  1123                   | type-specifier type-specifier-seq

  1124 typedef-name: IDENTIFIER
  1125             | simple-template-id

  1126 typename-specifier: "typename" nested-name-specifier IDENTIFIER
  1127                   | "typename" nested-name-specifier simple-template-id
  1128                   | "typename" nested-name-specifier "template" simple-template-id

  1129 ud-suffix: IDENTIFIER

  1130 unary-expression: postfix-expression
  1131                 | unary-operator cast-expression
  1132                 | "++" cast-expression
  1133                 | "--" cast-expression
  1134                 | await-expression
  1135                 | "sizeof" unary-expression
  1136                 | "sizeof" '(' type-id ')'
  1137                 | "sizeof" "..." '(' IDENTIFIER ')'
  1138                 | "alignof" '(' type-id ')'
  1139                 | noexcept-expression
  1140                 | new-expression
  1141                 | delete-expression

  1142 unary-operator: '*'
  1143               | '&'
  1144               | '+'
  1145               | '-'
  1146               | '!'
  1147               | '~'

  1148 universal-character-name: "\\u" hex-quad
  1149                         | "\\U" hex-quad hex-quad

  1150 unnamed-namespace-definition: "inline" "namespace" '{' namespace-body '}'
  1151                             | "namespace" '{' namespace-body '}'
  1152                             | "inline" "namespace" attribute-specifier-seq '{' namespace-body '}'
  1153                             | "namespace" attribute-specifier-seq '{' namespace-body '}'

  1154 unqualified-id: IDENTIFIER
  1155               | operator-function-id
  1156               | conversion-function-id
  1157               | literal-operator-id
  1158               | '~' type-name
  1159               | '~' decltype-specifier
  1160               | template-id

  1161 unsigned-suffix: 'u'
  1162                | 'U'

  1163 user-defined-character-literal: character-literal ud-suffix

  1164 user-defined-floating-point-literal: fractional-constant ud-suffix
  1165                                    | fractional-constant exponent-part ud-suffix
  1166                                    | digit-sequence exponent-part ud-suffix
  1167                                    | hexadecimal-prefix hexadecimal-fractional-constant binary-exponent-part ud-suffix
  1168                                    | hexadecimal-prefix hexadecimal-digit-sequence binary-exponent-part ud-suffix

  1169 user-defined-integer-literal: decimal-literal ud-suffix
  1170                             | octal-literal ud-suffix
  1171                             | hexadecimal-literal ud-suffix
  1172                             | binary-literal ud-suffix

  1173 user-defined-literal: user-defined-integer-literal
  1174                     | user-defined-floating-point-literal
  1175                     | user-defined-string-literal
  1176                     | user-defined-character-literal

  1177 user-defined-string-literal: string-literal ud-suffix

  1178 using-declaration: "using" using-declarator-list ';'

  1179 using-declarator: "typename" nested-name-specifier unqualified-id
  1180                 | nested-name-specifier unqualified-id

  1181 using-declarator-list: using-declarator
  1182                      | using-declarator "..."
  1183                      | using-declarator-list ',' using-declarator
  1184                      | using-declarator-list ',' using-declarator "..."

  1185 using-directive: attribute-specifier-seq "using" "namespace" namespace-name ';'
  1186                | "using" "namespace" namespace-name ';'
  1187                | attribute-specifier-seq "using" "namespace" nested-name-specifier namespace-name ';'
  1188                | "using" "namespace" nested-name-specifier namespace-name ';'

  1189 using-enum-declaration: "using" elaborated-enum-specifier ';'

  1190 virt-specifier: "override"
  1191               | "final"

  1192 virt-specifier-seq: virt-specifier
  1193                   | virt-specifier-seq virt-specifier

  1194 yield-expression: "co_yield" assignment-expression
  1195                 | "co_yield" braced-init-list


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 772 961 963 1146
    '"' (34) 421 920 921 922 923 924 925 926 927 986 1044 1045 1046 1047
    '%' (37) 355 646 777
    '&' (38) 20 120 357 471 472 779 901 902 928 973 974 1143
    '\'' (39) 94 126 127 200 264 450 754 985
    '(' (40) 15 16 17 18 21 22 40 41 59 60 125 233 234 235 325 348 349 350 417 482 509 510 511 512 513 514 515 516 533 534 575 576 680 681 682 683 684 685 686 687 688 689 691 696 697 718 732 767 836 837 838 839 840 841 842 843 844 845 846 847 848 849 850 851 854 855 863 864 865 866 867 868 877 878 879 880 881 882 885 920 921 922 923 924 925 926 927 940 952 953 954 955 956 957 958 959 964 965 1038 1039 1136 1137 1138
    ')' (41) 15 16 17 18 21 22 40 41 59 60 125 233 234 235 325 348 349 350 417 482 509 510 511 512 513 514 515 516 533 534 575 576 680 681 682 683 684 685 686 687 688 689 691 696 697 718 732 767 836 837 838 839 840 841 842 843 844 845 846 847 848 849 850 851 854 855 863 864 865 866 867 868 877 878 879 880 881 882 885 920 921 922 923 924 925 926 927 940 952 953 954 955 956 957 958 959 964 965 1038 1039 1136 1137 1138
    '*' (42) 353 644 775 897 898 899 900 905 906 907 908 976 1142
    '+' (43) 11 351 773 969 1144
    ',' (44) 44 45 47 81 82 109 111 123 250 300 306 338 380 466 477 487 488 531 582 583 618 805 833 835 1039 1055 1056 1070 1183 1184
    '-' (45) 12 352 774 970 1145
    '.' (46) 251 390 391 392 457 458 459 639 640 871 872
    '/' (47) 354 645 776
    '0' (48) 85 252 426 741 752 909
    '1' (49) 86 253 427 699 742
    '2' (50) 254 428 700 743
    '3' (51) 255 429 701 744
    '4' (52) 256 430 702 745
    '5' (53) 257 431 703 746
    '6' (54) 258 432 704 747
    '7' (55) 259 433 705 748
    '8' (56) 260 434 706
    '9' (57) 261 435 707
    ':' (58) 57 68 170 184 283 515 516 523 524 525 526 527 528 609 610 611 612 613 614 615 616 621 622 641 642 890 891
    ';' (59) 13 14 21 22 42 156 157 158 159 162 182 183 234 235 275 340 341 396 397 414 415 510 511 512 513 514 517 518 519 520 522 584 585 586 587 588 589 590 591 623 624 625 626 627 628 629 630 631 632 633 634 635 636 652 668 694 695 755 756 757 758 890 891 977 978 979 980 981 982 983 996 1038 1039 1115 1116 1178 1185 1186 1187 1188 1189
    '<' (60) 324 374 420 536 537 760 761 792 877 878 879 880 931 997 998 1059 1060 1062 1063 1064 1065 1086 1087 1088 1089
    '=' (61) 13 14 27 106 121 162 304 371 396 397 652 781 810 811 812 813 822 823 824 825 826 827 828 829 909 1099 1100 1105 1106 1111 1112
    '>' (62) 324 375 420 536 537 760 761 793 877 878 879 880 932 997 998 1059 1060 1062 1063 1064 1065 1086 1087 1088 1089
    '?' (63) 170 987
    'A' (65) 442
    'B' (66) 443
    'C' (67) 444
    'D' (68) 445
    'E' (69) 329 330 446
    'F' (70) 346 447
    'L' (76) 282 347 574
    'P' (80) 89 90
    'R' (82) 1048 1049
    'U' (85) 281 1162
    'Z' (90) 1021
    '[' (91) 50 51 61 62 246 247 385 386 387 388 538 539 710 711 712 713 714 715 716 717 720 721 722 723 728 729 730 731 733 734 735 736 737 738 764 765 768 861 862 980 981 982 983
    '\\' (92) 167 749 750 751 984 988
    ']' (93) 50 51 61 62 246 247 385 386 387 388 538 539 710 711 712 713 714 715 716 717 720 721 722 723 728 729 730 731 733 734 735 736 737 738 764 765 768 861 862 980 981 982 983
    '^' (94) 321 356 778
    'a' (97) 436 989
    'b' (98) 437 990
    'c' (99) 438
    'd' (100) 439
    'e' (101) 327 328 440
    'f' (102) 344 441 991
    'l' (108) 345 573
    'n' (110) 992
    'p' (112) 87 88
    'r' (114) 993
    't' (116) 994
    'u' (117) 280 1161
    'v' (118) 995
    'z' (122) 1020
    '{' (123) 63 64 108 109 110 111 112 151 152 156 157 158 159 160 161 298 299 300 332 333 555 556 647 648 649 650 666 667 939 1150 1151 1152 1153
    '|' (124) 358 468 780
    '}' (125) 63 64 108 109 110 111 112 151 152 156 157 158 159 160 161 298 299 300 332 333 555 556 647 648 649 650 666 667 939 1150 1151 1152 1153
    '~' (126) 771 1147 1158 1159
    error (256)
    IDENTIFIER (258) 13 14 48 49 55 145 163 251 265 266 267 268 269 270 276 277 278 292 293 297 301 302 465 466 469 470 471 472 522 523 524 565 579 609 611 613 615 637 638 639 640 641 642 647 648 649 650 651 652 657 663 666 667 971 972 973 974 1066 1097 1098 1100 1103 1104 1106 1109 1110 1112 1124 1126 1129 1137 1154
    ANY_TOKEN_OTHER_THAN_PARENTHESIS_BRACKET_BRACE (259) 65
    EXCEPT_THE_APOSTROPHE_REVERSE_SOLIDUS_OR_NEW_LINE_CHARACTER (260) 83
    EXCEPT_THE_QUOTATION_MARK_REVERSE_SOLIDUS_OR_NEW_LINE_CHARACTER (261) 84
    NOT_AN_OCTAL_DIGIT_A_SIMPLE_ESCAPE_SEQUENCE_CHAR_OR_THE_CHARACTERS_U_U_OR_X (262) 168
    EXCEPT_SPACE_PARENTHESIS_REVERSE_SOLIDUS_TABULATION_LINE_TABULATION_FORM_FEED_AND_NEW_LINE (263) 189
    EXCEPT_NEW_LINE_AND_GREATER_THAN_SIGN (264) 416
    LL (265) 572
    EXCEPT_NEW_LINE_AND_QUOTATION_MARK (266) 910
    EXCEPT_RIGHT_PARENTHESIS_FOLLOWED_BY_THE_INITIAL_D_CHAR_SEQUENCE_FOLLOWED_BY_QUOTATION_MARK (267) 917
    "private" (268) 7 890 891
    "protected" (269) 8
    "public" (270) 9
    "using" (271) 13 14 57 1178 1185 1186 1187 1188 1189
    "alignas" (272) 15 16 17 18
    "..." (273) 16 18 46 47 80 82 231 319 348 349 350 469 472 486 488 581 583 724 831 832 833 972 974 1054 1056 1096 1098 1102 1104 1108 1110 1137 1182 1184
    "asm" (274) 21 22
    "*=" (275) 28 363 784
    "/=" (276) 29 364 785
    "%=" (277) 30 365 786
    "+=" (278) 31 361 782
    "-=" (279) 32 362 783
    ">>=" (280) 33 370 802
    "<<=" (281) 34 369 801
    "&=" (282) 35 367 788
    "^=" (283) 36 366 787
    "|=" (284) 37 368 789
    "::" (285) 49 244 246 277 278 659 660 661 662 663 664 665 666 667 672 674 676 678 680 682 684 686
    "co_await" (286) 58 766
    "virtual" (287) 71 72 73 74 77 78 410
    "0b" (288) 91
    "0B" (289) 92
    "false" (290) 104
    "true" (291) 105
    "class" (292) 142 295 1113
    "struct" (293) 143 296
    "union" (294) 144
    "template" (295) 149 273 322 323 324 665 872 874 914 1001 1059 1060 1128
    "final" (296) 153 1191
    "<=>" (297) 155 796
    "noexcept" (298) 157 159 696 697 698
    "concept" (299) 162
    "&&" (300) 174 378 568 797 903 904 929
    "||" (301) 176 379 570 798
    "operator" (302) 179 565 566 759 760 761
    "co_return" (303) 182 183
    "const" (304) 185
    "volatile" (305) 186
    "friend" (306) 204
    "typedef" (307) 205
    "constexpr" (308) 206 953 955 957 959
    "consteval" (309) 207 960 961 962 963
    "constinit" (310) 208
    "inline" (311) 209 278 647 649 667 1150 1152
    "decltype" (312) 233 854 855
    "->" (313) 234 235 769 873 874 946 1073
    "delete" (314) 244 245 246 247 397 763 765
    "enum" (315) 265 266 294 295 296
    "u8" (316) 279
    "==" (317) 308 372 790
    "!=" (318) 309 373 791
    "extern" (319) 322 555 556 557 1042
    "explicit" (320) 325 326
    "export" (321) 331 332 333
    "export-keyword" (322) 334 623 625 627 629
    "<<" (323) 359 799 967
    ">>" (324) 360 800 968
    "<=" (325) 376 794 933
    ">=" (326) 377 795 934
    ".*" (327) 381 857
    "->*" (328) 382 770 858
    "default" (329) 396 527 528
    "try" (330) 412 413 1083
    "module-keyword" (331) 414 415 623 624 625 626 627 628 629 630 890 891
    "catch" (332) 417
    "h-char-sequence" (333) 420 424
    "h-char-sequence:" (334) 422
    "\\x" (335) 451
    "0x" (336) 461
    "0X" (337) 462
    "while" (338) 509 510
    "do" (339) 510
    "for" (340) 511 512 513 514 515 516
    "break" (341) 517
    "continue" (342) 518
    "return" (343) 519 520
    "goto" (344) 522
    "case" (345) 525 526
    "ll" (346) 571
    "import-keyword" (347) 631 632 633 634 635 636
    "namespace" (348) 647 648 649 650 652 666 667 1150 1151 1152 1153 1185 1186 1187 1188
    "requires" (349) 668 943 944 945
    "new" (350) 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 762 764
    "++" (351) 803 875 1132
    "--" (352) 804 876 1133
    "this" (353) 808 809 812 813 816 817 820 821 824 825 828 829 884 975 976
    "auto" (354) 852 853 854 855
    "nullptr" (355) 859
    "dynamic_cast" (356) 877
    "static_cast" (357) 878
    "reinterpret_cast" (358) 879
    "const_cast" (359) 880
    "typeid" (360) 881 882
    "if" (361) 952 953 954 955 956 957 958 959 960 961 962 963
    "else" (362) 956 957 958 959 962 963
    "switch" (363) 964 965
    "char" (364) 1006
    "char8_t" (365) 1007
    "char16_t" (366) 1008
    "char32_t" (367) 1009
    "wchar_t" (368) 1010
    "bool" (369) 1011
    "short" (370) 1012
    "int" (371) 1013
    "long" (372) 1014
    "signed" (373) 1015
    "unsigned" (374) 1016
    "float" (375) 1017
    "double" (376) 1018
    "void" (377) 1019
    "static_assert" (378) 1038 1039
    "static" (379) 1040
    "thread_local" (380) 1041
    "mutable" (381) 1043
    "throw" (382) 1071 1072
    "typename" (383) 1114 1115 1116 1126 1127 1128 1179
    "sizeof" (384) 1135 1136 1137
    "alignof" (385) 1138
    "\\u" (386) 1148
    "\\U" (387) 1149
    "override" (388) 1190
    "co_yield" (389) 1194 1195


Nonterminals, with rules where they appear

    $accept (197)
        on left: 0
    abstract-declarator (198)
        on left: 1 2 3 4
        on right: 237 317 318 818 819 820 821 826 827 828 829 1091
    abstract-pack-declarator (199)
        on left: 5 6
        on right: 4 6
    access-specifier (200)
        on left: 7 8 9
        on right: 73 74 75 76 77 78 621 622
    additive-expression (201)
        on left: 10 11 12
        on right: 11 12 966 967 968
    alias-declaration (202)
        on left: 13 14
        on right: 102 480 599
    alignment-specifier (203)
        on left: 15 16 17 18
        on right: 52
    and-expression (204)
        on left: 19 20
        on right: 20 320 321
    asm-declaration (205)
        on left: 21 22
        on right: 96
    assignment-expression (206)
        on left: 23 24 25 26
        on right: 170 337 338 483 1072 1194
    assignment-operator (207)
        on left: 27 28 29 30 31 32 33 34 35 36 37
        on right: 26
    attribute (208)
        on left: 38 39
        on right: 43 45 46 47
    attribute-argument-clause (209)
        on left: 40 41
        on right: 39
    attribute-declaration (210)
        on left: 42
        on right: 224
    attribute-list (211)
        on left: 43 44 45 46 47
        on right: 44 45 47 50 51
    attribute-namespace (212)
        on left: 48
        on right: 49 57
    attribute-scoped-token (213)
        on left: 49
        on right: 56
    attribute-specifier (214)
        on left: 50 51 52
        on right: 53 54
    attribute-specifier-seq (215)
        on left: 53 54
        on right: 14 21 42 53 69 71 73 75 77 129 131 133 135 137 139 165 211 242 268 270 285 287 289 291 302 313 315 317 383 385 387 398 400 402 404 406 408 523 525 527 543 544 545 546 551 552 553 554 584 586 588 590 611 612 615 616 627 628 629 630 632 634 636 649 650 694 714 715 716 717 722 723 726 730 731 735 736 738 756 758 806 808 810 812 814 816 818 820 822 824 826 828 844 845 846 847 848 849 850 851 898 900 902 904 906 908 979 980 982 1023 1025 1027 1029 1031 1034 1122 1152 1153 1185 1187
    attribute-token (216)
        on left: 55 56
        on right: 38 39
    attribute-using-prefix (217)
        on left: 57
        on right: 51
    await-expression (218)
        on left: 58
        on right: 1134
    balanced-token (219)
        on left: 59 60 61 62 63 64 65
        on right: 66 67
    balanced-token-seq (220)
        on left: 66 67
        on right: 41 60 62 64 67
    base-clause (221)
        on left: 68
        on right: 132 133 134 135 138 139
    base-specifier (222)
        on left: 69 70 71 72 73 74 75 76 77 78
        on right: 79 80 81 82
    base-specifier-list (223)
        on left: 79 80 81 82
        on right: 68 81 82
    basic-c-char (224)
        on left: 83
        on right: 113
    basic-s-char (225)
        on left: 84
        on right: 947
    binary-digit (226)
        on left: 85 86
        on right: 91 92 93 94
    binary-exponent-part (227)
        on left: 87 88 89 90
        on right: 453 454 455 456 1167 1168
    binary-literal (228)
        on left: 91 92 93 94
        on right: 93 94 489 490 1172
    block-declaration (229)
        on left: 95 96 97 98 99 100 101 102 103
        on right: 213 228
    boolean-literal (230)
        on left: 104 105
        on right: 562
    brace-or-equal-initializer (231)
        on left: 106 107
        on right: 165 166 248 481 608 613 614 615 616
    braced-init-list (232)
        on left: 108 109 110 111 112
        on right: 107 336 484 577 690 869 870 1195
    c-char (233)
        on left: 113 114 115
        on right: 116 117
    c-char-sequence (234)
        on left: 116 117
        on right: 117 126 127
    capture (235)
        on left: 118 119
        on right: 122 123
    capture-default (236)
        on left: 120 121
        on right: 529 531
    capture-list (237)
        on left: 122 123
        on right: 123 530 531
    cast-expression (238)
        on left: 124 125
        on right: 58 125 244 245 246 247 348 349 350 856 857 858 1131 1132 1133
    character-literal (239)
        on left: 126 127
        on right: 559 1163
    class-head (240)
        on left: 128 129 130 131 132 133 134 135 136 137 138 139
        on right: 151 152
    class-head-name (241)
        on left: 140 141
        on right: 128 129 130 131 132 133 134 135
    class-key (242)
        on left: 142 143 144
        on right: 128 129 130 131 132 133 134 135 136 137 138 139 267 268 269 270 271 272 273
    class-name (243)
        on left: 145 146
        on right: 140 141 1092
    class-or-decltype (244)
        on left: 147 148 149 150
        on right: 69 70 71 72 73 74 75 76 77 78 578
    class-specifier (245)
        on left: 151 152
        on right: 239
    class-virt-specifier (246)
        on left: 153
        on right: 130 131 134 135
    compare-expression (247)
        on left: 154 155
        on right: 155 930 931 932 933 934
    compound-requirement (248)
        on left: 156 157 158 159
        on right: 937
    compound-statement (249)
        on left: 160 161
        on right: 393 394 412 413 417 535 536 537 960 961 962 963 1025 1026 1083
    concept-definition (250)
        on left: 162
        on right: 1058
    concept-name (251)
        on left: 163
        on right: 162 1084 1085 1086 1087 1088 1089
    condition (252)
        on left: 164 165 166
        on right: 509 512 514 952 953 954 955 956 957 958 959 964 965
    conditional-escape-sequence (253)
        on left: 167
        on right: 312
    conditional-escape-sequence-char (254)
        on left: 168
        on right: 167
    conditional-expression (255)
        on left: 169 170
        on right: 23 171
    constant-expression (256)
        on left: 171
        on right: 17 18 304 325 525 526 609 610 611 612 613 614 615 616 697 712 713 716 717 721 723 729 731 737 738 1038 1039 1050
    constraint-expression (257)
        on left: 172
        on right: 162 668
    constraint-logical-and-expression (258)
        on left: 173 174
        on right: 174 175 176
    constraint-logical-or-expression (259)
        on left: 175 176
        on right: 176 943
    conversion-declarator (260)
        on left: 177 178
        on right: 178 181
    conversion-function-id (261)
        on left: 179
        on right: 1156
    conversion-type-id (262)
        on left: 180 181
        on right: 179
    coroutine-return-statement (263)
        on left: 182 183
        on right: 521
    ctor-initializer (264)
        on left: 184
        on right: 393 413
    cv-qualifier (265)
        on left: 185 186
        on right: 187 188 1120
    cv-qualifier-seq (266)
        on left: 187 188
        on right: 188 837 839 841 843 845 847 849 851 899 900 907 908
    d-char (267)
        on left: 189
        on right: 190 191
    d-char-sequence (268)
        on left: 190 191
        on right: 191 921 923 924 925 926 927
    decimal-floating-point-literal (269)
        on left: 192 193 194 195 196 197
        on right: 342
    decimal-literal (270)
        on left: 198 199 200
        on right: 199 200 493 494 1169
    decl-specifier (271)
        on left: 201 202 203 204 205 206 207 208 209
        on right: 210 211 212
    decl-specifier-seq (272)
        on left: 210 211 212
        on right: 165 166 212 383 384 385 386 387 388 400 401 404 405 408 409 540 541 543 545 547 549 551 553 586 587 590 591 806 807 808 809 810 811 812 813 814 815 816 817 818 819 820 821 822 823 824 825 826 827 828 829 977 978 979 980 981 982 983
    declaration (273)
        on left: 213 214 215 216 217 218 219 220 221 222 223 224 225
        on right: 226 227 322 323 324 331 557 1057
    declaration-seq (274)
        on left: 226 227
        on right: 227 333 415 556 653 891 1074 1077 1078 1081 1082
    declaration-statement (275)
        on left: 228
        on right: 1033
    declarator (276)
        on left: 229 230
        on right: 165 166 313 314 383 384 398 399 400 401 402 403 404 405 406 407 408 409 473 474 475 602 603 604 605 606 607 608 694 695 806 807 808 809 810 811 812 813
    declarator-id (277)
        on left: 231 232
        on right: 725 726
    decltype-specifier (278)
        on left: 233
        on right: 150 662 1002 1159
    deduction-guide (279)
        on left: 234 235
        on right: 217 598
    defining-type-id (280)
        on left: 236 237
        on right: 13 14
    defining-type-specifier (281)
        on left: 238 239 240
        on right: 202 241 242 243
    defining-type-specifier-seq (282)
        on left: 241 242 243
        on right: 236 237 243
    delete-expression (283)
        on left: 244 245 246 247
        on right: 1141
    designated-initializer-clause (284)
        on left: 248
        on right: 249 250
    designated-initializer-list (285)
        on left: 249 250
        on right: 110 111 250
    designator (286)
        on left: 251
        on right: 248
    digit (287)
        on left: 252 253 254 255 256 257 258 259 260 261
        on right: 199 200 262 263 264
    digit-sequence (288)
        on left: 262 263 264
        on right: 87 88 89 90 196 197 263 264 327 328 329 330 390 391 392 1166
    elaborated-enum-specifier (289)
        on left: 265 266
        on right: 274 1189
    elaborated-type-specifier (290)
        on left: 267 268 269 270 271 272 273 274
        on right: 1118
    empty-declaration (291)
        on left: 275
        on right: 223 601
    enclosing-namespace-specifier (292)
        on left: 276 277 278
        on right: 277 278 666 667
    encoding-prefix (293)
        on left: 279 280 281 282
        on right: 126 1044 1046 1048
    enum-base (294)
        on left: 283
        on right: 288 289 290 291 757 758
    enum-head (295)
        on left: 284 285 286 287 288 289 290 291
        on right: 298 299 300
    enum-head-name (296)
        on left: 292 293
        on right: 286 287 290 291 755 756 757 758
    enum-key (297)
        on left: 294 295 296
        on right: 284 285 286 287 288 289 290 291 755 756 757 758
    enum-name (298)
        on left: 297
        on right: 1093
    enum-specifier (299)
        on left: 298 299 300
        on right: 240
    enumerator (300)
        on left: 301 302
        on right: 303 304
    enumerator-definition (301)
        on left: 303 304
        on right: 305 306
    enumerator-list (302)
        on left: 305 306
        on right: 299 300 306
    equality-expression (303)
        on left: 307 308 309
        on right: 19 20 308 309
    escape-sequence (304)
        on left: 310 311 312
        on right: 114 948
    exception-declaration (305)
        on left: 313 314 315 316 317 318 319
        on right: 417
    exclusive-or-expression (306)
        on left: 320 321
        on right: 321 467 468
    explicit-instantiation (307)
        on left: 322 323
        on right: 218
    explicit-specialization (308)
        on left: 324
        on right: 219 597
    explicit-specifier (309)
        on left: 325 326
        on right: 234 411
    exponent-part (310)
        on left: 327 328 329 330
        on right: 193 195 196 197 1165 1166
    export-declaration (311)
        on left: 331 332 333 334
        on right: 220
    expr-or-braced-init-list (312)
        on left: 335 336
        on right: 183 389 520
    expression (313)
        on left: 337 338
        on right: 156 157 158 159 164 170 233 335 338 340 510 513 514 696 734 736 877 878 879 880 881 885 996
    expression-list (314)
        on left: 339
        on right: 482 576 689 691 862 864 866 868
    expression-statement (315)
        on left: 340 341
        on right: 478 1023 1024
    floating-point-literal (316)
        on left: 342 343
        on right: 560
    floating-point-suffix (317)
        on left: 344 345 346 347
        on right: 194 195 197 454 456
    fold-expression (318)
        on left: 348 349 350
        on right: 888
    fold-operator (319)
        on left: 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382
        on right: 348 349 350
    for-range-declaration (320)
        on left: 383 384 385 386 387 388
        on right: 515 516
    for-range-initializer (321)
        on left: 389
        on right: 515 516
    fractional-constant (322)
        on left: 390 391 392
        on right: 192 193 194 195 1164 1165
    function-body (323)
        on left: 393 394 395 396 397
        on right: 398 399 400 401 402 403 404 405 406 407 408 409
    function-definition (324)
        on left: 398 399 400 401 402 403 404 405 406 407 408 409
        on right: 215 592
    function-specifier (325)
        on left: 410 411
        on right: 203
    function-try-block (326)
        on left: 412 413
        on right: 395
    global-module-fragment (327)
        on left: 414 415
        on right: 1075 1077 1079 1081
    h-char (328)
        on left: 416
        on right: 423 424
    handler (329)
        on left: 417
        on right: 418 419
    handler-seq (330)
        on left: 418 419
        on right: 412 413 419 1083
    header-name (331)
        on left: 420 421 422 423 424
        on right: 635 636
    hex-quad (332)
        on left: 425
        on right: 1148 1149
    hexadecimal-digit (333)
        on left: 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447
        on right: 425 448 449 450 451 452
    hexadecimal-digit-sequence (334)
        on left: 448 449 450
        on right: 449 450 455 456 457 458 459 460 1168
    hexadecimal-escape-sequence (335)
        on left: 451 452
        on right: 452 740
    hexadecimal-floating-point-literal (336)
        on left: 453 454 455 456
        on right: 343
    hexadecimal-fractional-constant (337)
        on left: 457 458 459
        on right: 453 454 1167
    hexadecimal-literal (338)
        on left: 460
        on right: 495 496 1171
    hexadecimal-prefix (339)
        on left: 461 462
        on right: 453 454 455 456 460 1167 1168
    id-expression (340)
        on left: 463 464
        on right: 231 232 871 872 873 874 886 1052 1111 1112
    identifier-list (341)
        on left: 465 466
        on right: 385 386 387 388 466 980 981 982 983
    inclusive-or-expression (342)
        on left: 467 468
        on right: 468 567 568
    init-capture (343)
        on left: 469 470 471 472
        on right: 119
    init-declarator (344)
        on left: 473 474 475
        on right: 476 477
    init-declarator-list (345)
        on left: 476 477
        on right: 477 978 979
    init-statement (346)
        on left: 478 479 480
        on right: 511 512 513 514 516 954 955 958 959 965
    initializer (347)
        on left: 481 482
        on right: 469 470 471 472 474 980 981 982 983
    initializer-clause (348)
        on left: 483 484
        on right: 26 106 485 486 487 488 810 811 812 813 822 823 824 825 826 827 828 829
    initializer-list (349)
        on left: 485 486 487 488
        on right: 108 109 339 487 488
    integer-literal (350)
        on left: 489 490 491 492 493 494 495 496
        on right: 558
    integer-suffix (351)
        on left: 497 498 499 500 501 502 503 504 505 506 507 508
        on right: 490 492 494 496
    iteration-statement (352)
        on left: 509 510 511 512 513 514 515 516
        on right: 1029 1030
    jump-statement (353)
        on left: 517 518 519 520 521 522
        on right: 1031 1032
    labeled-statement (354)
        on left: 523 524 525 526 527 528
        on right: 1022
    lambda-capture (355)
        on left: 529 530 531
        on right: 539
    lambda-declarator (356)
        on left: 532 533 534
        on right: 535 536 537
    lambda-expression (357)
        on left: 535 536 537
        on right: 887
    lambda-introducer (358)
        on left: 538 539
        on right: 535 536 537
    lambda-specifiers (359)
        on left: 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554
        on right: 532 533 534
    linkage-specification (360)
        on left: 555 556 557
        on right: 221
    literal (361)
        on left: 558 559 560 561 562 563 564
        on right: 883
    literal-operator-id (362)
        on left: 565 566
        on right: 1064 1065 1157
    logical-and-expression (363)
        on left: 567 568
        on right: 568 569 570
    logical-or-expression (364)
        on left: 569 570
        on right: 26 169 170 172 570
    long-long-suffix (365)
        on left: 571 572
        on right: 500 505 506
    long-suffix (366)
        on left: 573 574
        on right: 498 503 504
    mem-initializer (367)
        on left: 575 576 577
        on right: 580 581 582 583
    mem-initializer-id (368)
        on left: 578 579
        on right: 575 576 577
    mem-initializer-list (369)
        on left: 580 581 582 583
        on right: 184 582 583
    member-declaration (370)
        on left: 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601
        on right: 619 620
    member-declarator (371)
        on left: 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616
        on right: 617 618
    member-declarator-list (372)
        on left: 617 618
        on right: 588 589 590 591 618
    member-specification (373)
        on left: 619 620 621 622
        on right: 152 620 622
    module-declaration (374)
        on left: 623 624 625 626 627 628 629 630
        on right: 1075 1076 1077 1078 1079 1080 1081 1082
    module-import-declaration (375)
        on left: 631 632 633 634 635 636
        on right: 225 334
    module-name (376)
        on left: 637 638
        on right: 623 624 625 626 627 628 629 630 631 632
    module-name-qualifier (377)
        on left: 639 640
        on right: 637 640 642
    module-partition (378)
        on left: 641 642
        on right: 625 626 629 630 633 634
    multiplicative-expression (379)
        on left: 643 644 645 646
        on right: 10 11 12 644 645 646
    named-namespace-definition (380)
        on left: 647 648 649 650
        on right: 654
    namespace-alias (381)
        on left: 651
        on right: 658
    namespace-alias-definition (382)
        on left: 652
        on right: 97
    namespace-body (383)
        on left: 653
        on right: 647 648 649 650 666 667 1150 1151 1152 1153
    namespace-definition (384)
        on left: 654 655 656
        on right: 222
    namespace-name (385)
        on left: 657 658
        on right: 661 915 916 1185 1186 1187 1188
    nested-name-specifier (386)
        on left: 659 660 661 662 663 664 665
        on right: 140 147 149 266 269 270 272 273 292 663 664 665 905 906 907 908 913 914 915 999 1001 1004 1084 1086 1088 1116 1126 1127 1128 1179 1180 1187 1188
    nested-namespace-definition (387)
        on left: 666 667
        on right: 656
    nested-requirement (388)
        on left: 668
        on right: 938
    new-declarator (389)
        on left: 669 670 671
        on right: 670 693
    new-expression (390)
        on left: 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687
        on right: 1140
    new-initializer (391)
        on left: 688 689 690
        on right: 676 677 678 679 684 685 686 687
    new-placement (392)
        on left: 691
        on right: 674 675 678 679 682 683 686 687
    new-type-id (393)
        on left: 692 693
        on right: 672 673 674 675 676 677 678 679
    nodeclspec-function-declaration (394)
        on left: 694 695
        on right: 214
    noexcept-expression (395)
        on left: 696
        on right: 1139
    noexcept-specifier (396)
        on left: 697 698
        on right: 541 542 545 546 549 550 553 554 840 841 842 843 848 849 850 851
    nonzero-digit (397)
        on left: 699 700 701 702 703 704 705 706 707
        on right: 198
    noptr-abstract-declarator (398)
        on left: 708 709 710 711 712 713 714 715 716 717 718
        on right: 2 708 710 712 714 716 892
    noptr-abstract-pack-declarator (399)
        on left: 719 720 721 722 723 724
        on right: 5 719 720 721 722 723
    noptr-declarator (400)
        on left: 725 726 727 728 729 730 731 732
        on right: 230 727 728 729 730 731 895
    noptr-new-declarator (401)
        on left: 733 734 735 736 737 738
        on right: 671 737 738
    numeric-escape-sequence (402)
        on left: 739 740
        on right: 311
    octal-digit (403)
        on left: 741 742 743 744 745 746 747 748
        on right: 749 750 751 753 754
    octal-escape-sequence (404)
        on left: 749 750 751
        on right: 739
    octal-literal (405)
        on left: 752 753 754
        on right: 491 492 753 754 1170
    opaque-enum-declaration (406)
        on left: 755 756 757 758
        on right: 103 600
    operator-function-id (407)
        on left: 759 760 761
        on right: 1062 1063 1155
    overloadable-operator (408)
        on left: 762 763 764 765 766 767 768 769 770 771 772 773 774 775 776 777 778 779 780 781 782 783 784 785 786 787 788 789 790 791 792 793 794 795 796 797 798 799 800 801 802 803 804 805
        on right: 759 760 761
    parameter-declaration (409)
        on left: 806 807 808 809 810 811 812 813 814 815 816 817 818 819 820 821 822 823 824 825 826 827 828 829
        on right: 834 835 1068
    parameter-declaration-clause (410)
        on left: 830 831 832 833
        on right: 234 235 533 534 836 837 838 839 840 841 842 843 844 845 846 847 848 849 850 851 940
    parameter-declaration-list (411)
        on left: 834 835
        on right: 830 831 833 835
    parameters-and-qualifiers (412)
        on left: 836 837 838 839 840 841 842 843 844 845 846 847 848 849 850 851
        on right: 2 3 230 708 709 719 727
    placeholder-type-specifier (413)
        on left: 852 853 854 855
        on right: 1003
    pm-expression (414)
        on left: 856 857 858
        on right: 643 644 645 646 857 858
    pointer-literal (415)
        on left: 859
        on right: 563
    postfix-expression (416)
        on left: 860 861 862 863 864 865 866 867 868 869 870 871 872 873 874 875 876 877 878 879 880 881 882
        on right: 861 862 863 864 871 872 873 874 875 876 1130
    primary-expression (417)
        on left: 883 884 885 886 887 888 889
        on right: 173 174 860
    private-module-fragment (418)
        on left: 890 891
        on right: 1079 1080 1081 1082
    ptr-abstract-declarator (419)
        on left: 892 893 894
        on right: 1 718 894
    ptr-declarator (420)
        on left: 895 896
        on right: 229 732 896
    ptr-operator (421)
        on left: 897 898 899 900 901 902 903 904 905 906 907 908
        on right: 6 177 178 669 670 893 894 896
    pure-specifier (422)
        on left: 909
        on right: 604 605
    q-char (423)
        on left: 910
        on right: 911 912
    q-char-sequence (424)
        on left: 911 912
        on right: 421 912
    qualified-id (425)
        on left: 913 914
        on right: 464
    qualified-namespace-specifier (426)
        on left: 915 916
        on right: 652
    r-char (427)
        on left: 917
        on right: 918 919
    r-char-sequence (428)
        on left: 918 919
        on right: 919 922 923 926 927
    raw-string (429)
        on left: 920 921 922 923 924 925 926 927
        on right: 1048 1049
    ref-qualifier (430)
        on left: 928 929
        on right: 387 388 838 839 842 843 846 847 850 851 982 983
    relational-expression (431)
        on left: 930 931 932 933 934
        on right: 307 308 309 931 932 933 934
    requirement (432)
        on left: 935 936 937 938
        on right: 941 942
    requirement-body (433)
        on left: 939
        on right: 944 945
    requirement-parameter-list (434)
        on left: 940
        on right: 945
    requirement-seq (435)
        on left: 941 942
        on right: 939 942
    requires-clause (436)
        on left: 943
        on right: 406 407 408 409 475 534 537 606 1060
    requires-expression (437)
        on left: 944 945
        on right: 889
    return-type-requirement (438)
        on left: 946
        on right: 158 159
    s-char (439)
        on left: 947 948 949
        on right: 950 951
    s-char-sequence (440)
        on left: 950 951
        on right: 951 1046 1047
    selection-statement (441)
        on left: 952 953 954 955 956 957 958 959 960 961 962 963 964 965
        on right: 1027 1028
    shift-expression (442)
        on left: 966 967 968
        on right: 154 155 967 968
    sign (443)
        on left: 969 970
        on right: 88 90 328 330
    simple-capture (444)
        on left: 971 972 973 974 975 976
        on right: 118
    simple-declaration (445)
        on left: 977 978 979 980 981 982 983
        on right: 95 479
    simple-escape-sequence (446)
        on left: 984
        on right: 310
    simple-escape-sequence-char (447)
        on left: 985 986 987 988 989 990 991 992 993 994 995
        on right: 984
    simple-requirement (448)
        on left: 996
        on right: 935
    simple-template-id (449)
        on left: 997 998
        on right: 146 149 234 235 271 272 273 664 665 1001 1061 1125 1127 1128
    simple-type-specifier (450)
        on left: 999 1000 1001 1002 1003 1004 1005 1006 1007 1008 1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019
        on right: 865 866 869 1117
    size-suffix (451)
        on left: 1020 1021
        on right: 502 507 508
    statement (452)
        on left: 1022 1023 1024 1025 1026 1027 1028 1029 1030 1031 1032 1033 1034 1035
        on right: 509 510 511 512 513 514 515 516 523 524 525 526 527 528 952 953 954 955 956 957 958 959 962 963 964 965 1036 1037
    statement-seq (453)
        on left: 1036 1037
        on right: 161 1037
    static_assert-declaration (454)
        on left: 1038 1039
        on right: 101 595
    storage-class-specifier (455)
        on left: 1040 1041 1042 1043
        on right: 201
    string-literal (456)
        on left: 1044 1045 1046 1047 1048 1049
        on right: 21 22 555 556 557 561 565 1039 1177
    template-argument (457)
        on left: 1050 1051 1052
        on right: 1053 1054 1055 1056
    template-argument-list (458)
        on left: 1053 1054 1055 1056
        on right: 761 998 1055 1056 1063 1065 1088 1089
    template-declaration (459)
        on left: 1057 1058
        on right: 216 596
    template-head (460)
        on left: 1059 1060
        on right: 1057 1058 1107 1108 1109 1110 1111 1112
    template-id (461)
        on left: 1061 1062 1063 1064 1065
        on right: 1160
    template-name (462)
        on left: 1066
        on right: 234 235 997 998 1004 1005
    template-parameter (463)
        on left: 1067 1068
        on right: 1069 1070
    template-parameter-list (464)
        on left: 1069 1070
        on right: 536 537 1059 1060 1070
    throw-expression (465)
        on left: 1071 1072
        on right: 25
    trailing-return-type (466)
        on left: 1073
        on right: 2 3 230 547 548 549 550 551 552 553 554
    translation-unit (467)
        on left: 1074 1075 1076 1077 1078 1079 1080 1081 1082
        on right: 0
    try-block (468)
        on left: 1083
        on right: 1034 1035
    type-constraint (469)
        on left: 1084 1085 1086 1087 1088 1089
        on right: 852 854 946 1101 1102 1103 1104 1105 1106
    type-id (470)
        on left: 1090 1091
        on right: 15 16 125 680 681 682 683 684 685 686 687 877 878 879 880 882 1051 1073 1099 1100 1105 1106 1136 1138
    type-name (471)
        on left: 1092 1093 1094
        on right: 147 148 660 999 1000 1115 1116 1158
    type-parameter (472)
        on left: 1095 1096 1097 1098 1099 1100 1101 1102 1103 1104 1105 1106 1107 1108 1109 1110 1111 1112
        on right: 1067
    type-parameter-key (473)
        on left: 1113 1114
        on right: 1095 1096 1097 1098 1099 1100 1107 1108 1109 1110 1111 1112
    type-requirement (474)
        on left: 1115 1116
        on right: 936
    type-specifier (475)
        on left: 1117 1118 1119 1120
        on right: 238 1121 1122 1123
    type-specifier-seq (476)
        on left: 1121 1122 1123
        on right: 180 181 283 313 314 315 316 317 318 692 693 1090 1091 1123
    typedef-name (477)
        on left: 1124 1125
        on right: 1094
    typename-specifier (478)
        on left: 1126 1127 1128
        on right: 867 868 870 1119
    ud-suffix (479)
        on left: 1129
        on right: 1163 1164 1165 1166 1167 1168 1169 1170 1171 1172 1177
    unary-expression (480)
        on left: 1130 1131 1132 1133 1134 1135 1136 1137 1138 1139 1140 1141
        on right: 124 1135
    unary-operator (481)
        on left: 1142 1143 1144 1145 1146 1147
        on right: 1131
    universal-character-name (482)
        on left: 1148 1149
        on right: 115 949
    unnamed-namespace-definition (483)
        on left: 1150 1151 1152 1153
        on right: 655
    unqualified-id (484)
        on left: 1154 1155 1156 1157 1158 1159 1160
        on right: 463 913 914 1179 1180
    unsigned-suffix (485)
        on left: 1161 1162
        on right: 497 498 499 500 501 502 504 506 508
    user-defined-character-literal (486)
        on left: 1163
        on right: 1176
    user-defined-floating-point-literal (487)
        on left: 1164 1165 1166 1167 1168
        on right: 1174
    user-defined-integer-literal (488)
        on left: 1169 1170 1171 1172
        on right: 1173
    user-defined-literal (489)
        on left: 1173 1174 1175 1176
        on right: 564
    user-defined-string-literal (490)
        on left: 1177
        on right: 566 1175
    using-declaration (491)
        on left: 1178
        on right: 98 593
    using-declarator (492)
        on left: 1179 1180
        on right: 1181 1182 1183 1184
    using-declarator-list (493)
        on left: 1181 1182 1183 1184
        on right: 1178 1183 1184
    using-directive (494)
        on left: 1185 1186 1187 1188
        on right: 100
    using-enum-declaration (495)
        on left: 1189
        on right: 99 594
    virt-specifier (496)
        on left: 1190 1191
        on right: 1192 1193
    virt-specifier-seq (497)
        on left: 1192 1193
        on right: 402 403 404 405 603 605 1193
    yield-expression (498)
        on left: 1194 1195
        on right: 24


State 0

    0 $accept: • translation-unit $end

    IDENTIFIER        shift, and go to state 1
    "using"           shift, and go to state 2
    ';'               shift, and go to state 3
    "alignas"         shift, and go to state 4
    '('               shift, and go to state 5
    "..."             shift, and go to state 6
    '&'               shift, and go to state 7
    "asm"             shift, and go to state 8
    "::"              shift, and go to state 9
    '['               shift, and go to state 10
    "virtual"         shift, and go to state 11
    "class"           shift, and go to state 12
    "struct"          shift, and go to state 13
    "union"           shift, and go to state 14
    "template"        shift, and go to state 15
    "&&"              shift, and go to state 16
    "operator"        shift, and go to state 17
    "const"           shift, and go to state 18
    "volatile"        shift, and go to state 19
    "friend"          shift, and go to state 20
    "typedef"         shift, and go to state 21
    "constexpr"       shift, and go to state 22
    "consteval"       shift, and go to state 23
    "constinit"       shift, and go to state 24
    "inline"          shift, and go to state 25
    "decltype"        shift, and go to state 26
    "enum"            shift, and go to state 27
    "extern"          shift, and go to state 28
    "explicit"        shift, and go to state 29
    "export"          shift, and go to state 30
    "export-keyword"  shift, and go to state 31
    '*'               shift, and go to state 32
    "module-keyword"  shift, and go to state 33
    "import-keyword"  shift, and go to state 34
    "namespace"       shift, and go to state 35
    '~'               shift, and go to state 36
    "auto"            shift, and go to state 37
    "char"            shift, and go to state 38
    "char8_t"         shift, and go to state 39
    "char16_t"        shift, and go to state 40
    "char32_t"        shift, and go to state 41
    "wchar_t"         shift, and go to state 42
    "bool"            shift, and go to state 43
    "short"           shift, and go to state 44
    "int"             shift, and go to state 45
    "long"            shift, and go to state 46
    "signed"          shift, and go to state 47
    "unsigned"        shift, and go to state 48
    "float"           shift, and go to state 49
    "double"          shift, and go to state 50
    "void"            shift, and go to state 51
    "static_assert"   shift, and go to state 52
    "static"          shift, and go to state 53
    "thread_local"    shift, and go to state 54
    "mutable"         shift, and go to state 55
    "typename"        shift, and go to state 56

    alias-declaration                go to state 57
    alignment-specifier              go to state 58
    asm-declaration                  go to state 59
    attribute-declaration            go to state 60
    attribute-specifier              go to state 61
    attribute-specifier-seq          go to state 62
    block-declaration                go to state 63
    class-head                       go to state 64
    class-key                        go to state 65
    class-name                       go to state 66
    class-specifier                  go to state 67
    concept-name                     go to state 68
    conversion-function-id           go to state 69
    cv-qualifier                     go to state 70
    decl-specifier                   go to state 71
    decl-specifier-seq               go to state 72
    declaration                      go to state 73
    declaration-seq                  go to state 74
    declarator                       go to state 75
    declarator-id                    go to state 76
    decltype-specifier               go to state 77
    deduction-guide                  go to state 78
    defining-type-specifier          go to state 79
    elaborated-enum-specifier        go to state 80
    elaborated-type-specifier        go to state 81
    empty-declaration                go to state 82
    enum-head                        go to state 83
    enum-key                         go to state 84
    enum-name                        go to state 85
    enum-specifier                   go to state 86
    explicit-instantiation           go to state 87
    explicit-specialization          go to state 88
    explicit-specifier               go to state 89
    export-declaration               go to state 90
    function-definition              go to state 91
    function-specifier               go to state 92
    global-module-fragment           go to state 93
    id-expression                    go to state 94
    linkage-specification            go to state 95
    literal-operator-id              go to state 96
    module-declaration               go to state 97
    module-import-declaration        go to state 98
    named-namespace-definition       go to state 99
    namespace-alias                  go to state 100
    namespace-alias-definition       go to state 101
    namespace-definition             go to state 102
    namespace-name                   go to state 103
    nested-name-specifier            go to state 104
    nested-namespace-definition      go to state 105
    nodeclspec-function-declaration  go to state 106
    noptr-declarator                 go to state 107
    opaque-enum-declaration          go to state 108
    operator-function-id             go to state 109
    placeholder-type-specifier       go to state 110
    ptr-declarator                   go to state 111
    ptr-operator                     go to state 112
    qualified-id                     go to state 113
    simple-declaration               go to state 114
    simple-template-id               go to state 115
    simple-type-specifier            go to state 116
    static_assert-declaration        go to state 117
    storage-class-specifier          go to state 118
    template-declaration             go to state 119
    template-head                    go to state 120
    template-id                      go to state 121
    template-name                    go to state 122
    translation-unit                 go to state 123
    type-constraint                  go to state 124
    type-name                        go to state 125
    type-specifier                   go to state 126
    typedef-name                     go to state 127
    typename-specifier               go to state 128
    unnamed-namespace-definition     go to state 129
    unqualified-id                   go to state 130
    using-declaration                go to state 131
    using-directive                  go to state 132
    using-enum-declaration           go to state 133


State 1

  145 class-name: IDENTIFIER •
  163 concept-name: IDENTIFIER •
  297 enum-name: IDENTIFIER •
  651 namespace-alias: IDENTIFIER •
  657 namespace-name: IDENTIFIER •
  1066 template-name: IDENTIFIER •
  1124 typedef-name: IDENTIFIER •
  1154 unqualified-id: IDENTIFIER •

    IDENTIFIER      reduce using rule 145 (class-name)
    IDENTIFIER      [reduce using rule 297 (enum-name)]
    IDENTIFIER      [reduce using rule 1066 (template-name)]
    IDENTIFIER      [reduce using rule 1124 (typedef-name)]
    '+'             reduce using rule 1154 (unqualified-id)
    '-'             reduce using rule 1154 (unqualified-id)
    '='             reduce using rule 145 (class-name)
    '='             [reduce using rule 297 (enum-name)]
    '='             [reduce using rule 1066 (template-name)]
    '='             [reduce using rule 1124 (typedef-name)]
    '='             [reduce using rule 1154 (unqualified-id)]
    ';'             reduce using rule 145 (class-name)
    ';'             [reduce using rule 297 (enum-name)]
    ';'             [reduce using rule 1066 (template-name)]
    ';'             [reduce using rule 1124 (typedef-name)]
    ';'             [reduce using rule 1154 (unqualified-id)]
    "alignas"       reduce using rule 145 (class-name)
    "alignas"       [reduce using rule 297 (enum-name)]
    "alignas"       [reduce using rule 1066 (template-name)]
    "alignas"       [reduce using rule 1124 (typedef-name)]
    "alignas"       [reduce using rule 1154 (unqualified-id)]
    '('             reduce using rule 145 (class-name)
    '('             [reduce using rule 297 (enum-name)]
    '('             [reduce using rule 1066 (template-name)]
    '('             [reduce using rule 1124 (typedef-name)]
    '('             [reduce using rule 1154 (unqualified-id)]
    ')'             reduce using rule 145 (class-name)
    ')'             [reduce using rule 297 (enum-name)]
    ')'             [reduce using rule 1066 (template-name)]
    ')'             [reduce using rule 1124 (typedef-name)]
    ')'             [reduce using rule 1154 (unqualified-id)]
    "..."           reduce using rule 145 (class-name)
    "..."           [reduce using rule 297 (enum-name)]
    "..."           [reduce using rule 1066 (template-name)]
    "..."           [reduce using rule 1124 (typedef-name)]
    "..."           [reduce using rule 1154 (unqualified-id)]
    '&'             reduce using rule 145 (class-name)
    '&'             [reduce using rule 297 (enum-name)]
    '&'             [reduce using rule 1066 (template-name)]
    '&'             [reduce using rule 1124 (typedef-name)]
    '&'             [reduce using rule 1154 (unqualified-id)]
    "*="            reduce using rule 1154 (unqualified-id)
    "/="            reduce using rule 1154 (unqualified-id)
    "%="            reduce using rule 1154 (unqualified-id)
    "+="            reduce using rule 1154 (unqualified-id)
    "-="            reduce using rule 1154 (unqualified-id)
    ">>="           reduce using rule 1154 (unqualified-id)
    "<<="           reduce using rule 1154 (unqualified-id)
    "&="            reduce using rule 1154 (unqualified-id)
    "^="            reduce using rule 1154 (unqualified-id)
    "|="            reduce using rule 1154 (unqualified-id)
    ','             reduce using rule 145 (class-name)
    ','             [reduce using rule 297 (enum-name)]
    ','             [reduce using rule 1066 (template-name)]
    ','             [reduce using rule 1124 (typedef-name)]
    ','             [reduce using rule 1154 (unqualified-id)]
    "::"            reduce using rule 145 (class-name)
    "::"            [reduce using rule 297 (enum-name)]
    "::"            [reduce using rule 651 (namespace-alias)]
    "::"            [reduce using rule 657 (namespace-name)]
    "::"            [reduce using rule 1066 (template-name)]
    "::"            [reduce using rule 1124 (typedef-name)]
    '['             reduce using rule 145 (class-name)
    '['             [reduce using rule 297 (enum-name)]
    '['             [reduce using rule 1066 (template-name)]
    '['             [reduce using rule 1124 (typedef-name)]
    '['             [reduce using rule 1154 (unqualified-id)]
    ']'             reduce using rule 1154 (unqualified-id)
    ':'             reduce using rule 1154 (unqualified-id)
    '{'             reduce using rule 145 (class-name)
    '{'             [reduce using rule 297 (enum-name)]
    '{'             [reduce using rule 1066 (template-name)]
    '{'             [reduce using rule 1124 (typedef-name)]
    '{'             [reduce using rule 1154 (unqualified-id)]
    '}'             reduce using rule 1154 (unqualified-id)
    "virtual"       reduce using rule 145 (class-name)
    "virtual"       [reduce using rule 297 (enum-name)]
    "virtual"       [reduce using rule 1066 (template-name)]
    "virtual"       [reduce using rule 1124 (typedef-name)]
    "class"         reduce using rule 145 (class-name)
    "class"         [reduce using rule 297 (enum-name)]
    "class"         [reduce using rule 1066 (template-name)]
    "class"         [reduce using rule 1124 (typedef-name)]
    "struct"        reduce using rule 145 (class-name)
    "struct"        [reduce using rule 297 (enum-name)]
    "struct"        [reduce using rule 1066 (template-name)]
    "struct"        [reduce using rule 1124 (typedef-name)]
    "union"         reduce using rule 145 (class-name)
    "union"         [reduce using rule 297 (enum-name)]
    "union"         [reduce using rule 1066 (template-name)]
    "union"         [reduce using rule 1124 (typedef-name)]
    "final"         reduce using rule 1154 (unqualified-id)
    "<=>"           reduce using rule 1154 (unqualified-id)
    '?'             reduce using rule 1154 (unqualified-id)
    "&&"            reduce using rule 145 (class-name)
    "&&"            [reduce using rule 297 (enum-name)]
    "&&"            [reduce using rule 1066 (template-name)]
    "&&"            [reduce using rule 1124 (typedef-name)]
    "&&"            [reduce using rule 1154 (unqualified-id)]
    "||"            reduce using rule 1154 (unqualified-id)
    "operator"      reduce using rule 145 (class-name)
    "operator"      [reduce using rule 297 (enum-name)]
    "operator"      [reduce using rule 1066 (template-name)]
    "operator"      [reduce using rule 1124 (typedef-name)]
    "const"         reduce using rule 145 (class-name)
    "const"         [reduce using rule 297 (enum-name)]
    "const"         [reduce using rule 1066 (template-name)]
    "const"         [reduce using rule 1124 (typedef-name)]
    "volatile"      reduce using rule 145 (class-name)
    "volatile"      [reduce using rule 297 (enum-name)]
    "volatile"      [reduce using rule 1066 (template-name)]
    "volatile"      [reduce using rule 1124 (typedef-name)]
    "friend"        reduce using rule 145 (class-name)
    "friend"        [reduce using rule 297 (enum-name)]
    "friend"        [reduce using rule 1066 (template-name)]
    "friend"        [reduce using rule 1124 (typedef-name)]
    "typedef"       reduce using rule 145 (class-name)
    "typedef"       [reduce using rule 297 (enum-name)]
    "typedef"       [reduce using rule 1066 (template-name)]
    "typedef"       [reduce using rule 1124 (typedef-name)]
    "constexpr"     reduce using rule 145 (class-name)
    "constexpr"     [reduce using rule 297 (enum-name)]
    "constexpr"     [reduce using rule 1066 (template-name)]
    "constexpr"     [reduce using rule 1124 (typedef-name)]
    "consteval"     reduce using rule 145 (class-name)
    "consteval"     [reduce using rule 297 (enum-name)]
    "consteval"     [reduce using rule 1066 (template-name)]
    "consteval"     [reduce using rule 1124 (typedef-name)]
    "constinit"     reduce using rule 145 (class-name)
    "constinit"     [reduce using rule 297 (enum-name)]
    "constinit"     [reduce using rule 1066 (template-name)]
    "constinit"     [reduce using rule 1124 (typedef-name)]
    "inline"        reduce using rule 145 (class-name)
    "inline"        [reduce using rule 297 (enum-name)]
    "inline"        [reduce using rule 1066 (template-name)]
    "inline"        [reduce using rule 1124 (typedef-name)]
    "decltype"      reduce using rule 145 (class-name)
    "decltype"      [reduce using rule 163 (concept-name)]
    "decltype"      [reduce using rule 297 (enum-name)]
    "decltype"      [reduce using rule 1066 (template-name)]
    "decltype"      [reduce using rule 1124 (typedef-name)]
    "->"            reduce using rule 1154 (unqualified-id)
    '.'             reduce using rule 1154 (unqualified-id)
    "enum"          reduce using rule 145 (class-name)
    "enum"          [reduce using rule 297 (enum-name)]
    "enum"          [reduce using rule 1066 (template-name)]
    "enum"          [reduce using rule 1124 (typedef-name)]
    "=="            reduce using rule 1154 (unqualified-id)
    "!="            reduce using rule 1154 (unqualified-id)
    '^'             reduce using rule 1154 (unqualified-id)
    "extern"        reduce using rule 145 (class-name)
    "extern"        [reduce using rule 297 (enum-name)]
    "extern"        [reduce using rule 1066 (template-name)]
    "extern"        [reduce using rule 1124 (typedef-name)]
    '<'             reduce using rule 163 (concept-name)
    '<'             [reduce using rule 1066 (template-name)]
    '<'             [reduce using rule 1154 (unqualified-id)]
    '>'             reduce using rule 145 (class-name)
    '>'             [reduce using rule 297 (enum-name)]
    '>'             [reduce using rule 1066 (template-name)]
    '>'             [reduce using rule 1124 (typedef-name)]
    '>'             [reduce using rule 1154 (unqualified-id)]
    "explicit"      reduce using rule 145 (class-name)
    "explicit"      [reduce using rule 297 (enum-name)]
    "explicit"      [reduce using rule 1066 (template-name)]
    "explicit"      [reduce using rule 1124 (typedef-name)]
    '*'             reduce using rule 145 (class-name)
    '*'             [reduce using rule 297 (enum-name)]
    '*'             [reduce using rule 1066 (template-name)]
    '*'             [reduce using rule 1124 (typedef-name)]
    '*'             [reduce using rule 1154 (unqualified-id)]
    '/'             reduce using rule 1154 (unqualified-id)
    '%'             reduce using rule 1154 (unqualified-id)
    '|'             reduce using rule 1154 (unqualified-id)
    "<<"            reduce using rule 1154 (unqualified-id)
    ">>"            reduce using rule 1154 (unqualified-id)
    "<="            reduce using rule 1154 (unqualified-id)
    ">="            reduce using rule 1154 (unqualified-id)
    ".*"            reduce using rule 1154 (unqualified-id)
    "->*"           reduce using rule 1154 (unqualified-id)
    "try"           reduce using rule 1154 (unqualified-id)
    "requires"      reduce using rule 1154 (unqualified-id)
    '~'             reduce using rule 145 (class-name)
    '~'             [reduce using rule 297 (enum-name)]
    '~'             [reduce using rule 1066 (template-name)]
    '~'             [reduce using rule 1124 (typedef-name)]
    "++"            reduce using rule 1154 (unqualified-id)
    "--"            reduce using rule 1154 (unqualified-id)
    "auto"          reduce using rule 145 (class-name)
    "auto"          [reduce using rule 163 (concept-name)]
    "auto"          [reduce using rule 297 (enum-name)]
    "auto"          [reduce using rule 1066 (template-name)]
    "auto"          [reduce using rule 1124 (typedef-name)]
    "char"          reduce using rule 145 (class-name)
    "char"          [reduce using rule 297 (enum-name)]
    "char"          [reduce using rule 1066 (template-name)]
    "char"          [reduce using rule 1124 (typedef-name)]
    "char8_t"       reduce using rule 145 (class-name)
    "char8_t"       [reduce using rule 297 (enum-name)]
    "char8_t"       [reduce using rule 1066 (template-name)]
    "char8_t"       [reduce using rule 1124 (typedef-name)]
    "char16_t"      reduce using rule 145 (class-name)
    "char16_t"      [reduce using rule 297 (enum-name)]
    "char16_t"      [reduce using rule 1066 (template-name)]
    "char16_t"      [reduce using rule 1124 (typedef-name)]
    "char32_t"      reduce using rule 145 (class-name)
    "char32_t"      [reduce using rule 297 (enum-name)]
    "char32_t"      [reduce using rule 1066 (template-name)]
    "char32_t"      [reduce using rule 1124 (typedef-name)]
    "wchar_t"       reduce using rule 145 (class-name)
    "wchar_t"       [reduce using rule 297 (enum-name)]
    "wchar_t"       [reduce using rule 1066 (template-name)]
    "wchar_t"       [reduce using rule 1124 (typedef-name)]
    "bool"          reduce using rule 145 (class-name)
    "bool"          [reduce using rule 297 (enum-name)]
    "bool"          [reduce using rule 1066 (template-name)]
    "bool"          [reduce using rule 1124 (typedef-name)]
    "short"         reduce using rule 145 (class-name)
    "short"         [reduce using rule 297 (enum-name)]
    "short"         [reduce using rule 1066 (template-name)]
    "short"         [reduce using rule 1124 (typedef-name)]
    "int"           reduce using rule 145 (class-name)
    "int"           [reduce using rule 297 (enum-name)]
    "int"           [reduce using rule 1066 (template-name)]
    "int"           [reduce using rule 1124 (typedef-name)]
    "long"          reduce using rule 145 (class-name)
    "long"          [reduce using rule 297 (enum-name)]
    "long"          [reduce using rule 1066 (template-name)]
    "long"          [reduce using rule 1124 (typedef-name)]
    "signed"        reduce using rule 145 (class-name)
    "signed"        [reduce using rule 297 (enum-name)]
    "signed"        [reduce using rule 1066 (template-name)]
    "signed"        [reduce using rule 1124 (typedef-name)]
    "unsigned"      reduce using rule 145 (class-name)
    "unsigned"      [reduce using rule 297 (enum-name)]
    "unsigned"      [reduce using rule 1066 (template-name)]
    "unsigned"      [reduce using rule 1124 (typedef-name)]
    "float"         reduce using rule 145 (class-name)
    "float"         [reduce using rule 297 (enum-name)]
    "float"         [reduce using rule 1066 (template-name)]
    "float"         [reduce using rule 1124 (typedef-name)]
    "double"        reduce using rule 145 (class-name)
    "double"        [reduce using rule 297 (enum-name)]
    "double"        [reduce using rule 1066 (template-name)]
    "double"        [reduce using rule 1124 (typedef-name)]
    "void"          reduce using rule 145 (class-name)
    "void"          [reduce using rule 297 (enum-name)]
    "void"          [reduce using rule 1066 (template-name)]
    "void"          [reduce using rule 1124 (typedef-name)]
    "static"        reduce using rule 145 (class-name)
    "static"        [reduce using rule 297 (enum-name)]
    "static"        [reduce using rule 1066 (template-name)]
    "static"        [reduce using rule 1124 (typedef-name)]
    "thread_local"  reduce using rule 145 (class-name)
    "thread_local"  [reduce using rule 297 (enum-name)]
    "thread_local"  [reduce using rule 1066 (template-name)]
    "thread_local"  [reduce using rule 1124 (typedef-name)]
    "mutable"       reduce using rule 145 (class-name)
    "mutable"       [reduce using rule 297 (enum-name)]
    "mutable"       [reduce using rule 1066 (template-name)]
    "mutable"       [reduce using rule 1124 (typedef-name)]
    "typename"      reduce using rule 145 (class-name)
    "typename"      [reduce using rule 297 (enum-name)]
    "typename"      [reduce using rule 1066 (template-name)]
    "typename"      [reduce using rule 1124 (typedef-name)]
    "override"      reduce using rule 1154 (unqualified-id)
    $default        reduce using rule 145 (class-name)


State 2

   13 alias-declaration: "using" • IDENTIFIER '=' defining-type-id ';'
   14                  | "using" • IDENTIFIER attribute-specifier-seq '=' defining-type-id ';'
  1178 using-declaration: "using" • using-declarator-list ';'
  1186 using-directive: "using" • "namespace" namespace-name ';'
  1188                | "using" • "namespace" nested-name-specifier namespace-name ';'
  1189 using-enum-declaration: "using" • elaborated-enum-specifier ';'

    IDENTIFIER   shift, and go to state 134
    "::"         shift, and go to state 9
    "decltype"   shift, and go to state 135
    "enum"       shift, and go to state 136
    "namespace"  shift, and go to state 137
    "typename"   shift, and go to state 138

    class-name                 go to state 66
    decltype-specifier         go to state 139
    elaborated-enum-specifier  go to state 140
    enum-name                  go to state 85
    namespace-alias            go to state 100
    namespace-name             go to state 103
    nested-name-specifier      go to state 141
    simple-template-id         go to state 142
    template-name              go to state 143
    type-name                  go to state 144
    typedef-name               go to state 127
    using-declarator           go to state 145
    using-declarator-list      go to state 146


State 3

  275 empty-declaration: ';' •

    $default  reduce using rule 275 (empty-declaration)


State 4

   15 alignment-specifier: "alignas" • '(' type-id ')'
   16                    | "alignas" • '(' type-id "..." ')'
   17                    | "alignas" • '(' constant-expression ')'
   18                    | "alignas" • '(' constant-expression "..." ')'

    '('  shift, and go to state 147


State 5

  732 noptr-declarator: '(' • ptr-declarator ')'

    IDENTIFIER  shift, and go to state 148
    '('         shift, and go to state 5
    "..."       shift, and go to state 6
    '&'         shift, and go to state 7
    "::"        shift, and go to state 9
    "&&"        shift, and go to state 16
    "operator"  shift, and go to state 17
    "decltype"  shift, and go to state 135
    '*'         shift, and go to state 32
    '~'         shift, and go to state 36

    class-name              go to state 66
    conversion-function-id  go to state 69
    declarator-id           go to state 76
    decltype-specifier      go to state 139
    enum-name               go to state 85
    id-expression           go to state 94
    literal-operator-id     go to state 96
    namespace-alias         go to state 100
    namespace-name          go to state 103
    nested-name-specifier   go to state 149
    noptr-declarator        go to state 150
    operator-function-id    go to state 109
    ptr-declarator          go to state 151
    ptr-operator            go to state 112
    qualified-id            go to state 113
    simple-template-id      go to state 115
    template-id             go to state 121
    template-name           go to state 143
    type-name               go to state 144
    typedef-name            go to state 127
    unqualified-id          go to state 130


State 6

  231 declarator-id: "..." • id-expression

    IDENTIFIER  shift, and go to state 148
    "::"        shift, and go to state 9
    "operator"  shift, and go to state 17
    "decltype"  shift, and go to state 135
    '~'         shift, and go to state 36

    class-name              go to state 66
    conversion-function-id  go to state 69
    decltype-specifier      go to state 139
    enum-name               go to state 85
    id-expression           go to state 152
    literal-operator-id     go to state 96
    namespace-alias         go to state 100
    namespace-name          go to state 103
    nested-name-specifier   go to state 153
    operator-function-id    go to state 109
    qualified-id            go to state 113
    simple-template-id      go to state 115
    template-id             go to state 121
    template-name           go to state 143
    type-name               go to state 144
    typedef-name            go to state 127
    unqualified-id          go to state 130


State 7

  901 ptr-operator: '&' •
  902             | '&' • attribute-specifier-seq

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    "alignas"  [reduce using rule 901 (ptr-operator)]
    '['        [reduce using rule 901 (ptr-operator)]
    $default   reduce using rule 901 (ptr-operator)

    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 154


State 8

   22 asm-declaration: "asm" • '(' string-literal ')' ';'

    '('  shift, and go to state 155


State 9

  659 nested-name-specifier: "::" •

    $default  reduce using rule 659 (nested-name-specifier)


State 10

   50 attribute-specifier: '[' • '[' attribute-list ']' ']'
   51                    | '[' • '[' attribute-using-prefix attribute-list ']' ']'

    '['  shift, and go to state 156


State 11

  410 function-specifier: "virtual" •

    $default  reduce using rule 410 (function-specifier)


State 12

  142 class-key: "class" •

    $default  reduce using rule 142 (class-key)


State 13

  143 class-key: "struct" •

    $default  reduce using rule 143 (class-key)


State 14

  144 class-key: "union" •

    $default  reduce using rule 144 (class-key)


State 15

  323 explicit-instantiation: "template" • declaration
  324 explicit-specialization: "template" • '<' '>' declaration
  1059 template-head: "template" • '<' template-parameter-list '>'
  1060              | "template" • '<' template-parameter-list '>' requires-clause

    IDENTIFIER        shift, and go to state 1
    "using"           shift, and go to state 2
    ';'               shift, and go to state 3
    "alignas"         shift, and go to state 4
    '('               shift, and go to state 5
    "..."             shift, and go to state 6
    '&'               shift, and go to state 7
    "asm"             shift, and go to state 8
    "::"              shift, and go to state 9
    '['               shift, and go to state 10
    "virtual"         shift, and go to state 11
    "class"           shift, and go to state 12
    "struct"          shift, and go to state 13
    "union"           shift, and go to state 14
    "template"        shift, and go to state 15
    "&&"              shift, and go to state 16
    "operator"        shift, and go to state 17
    "const"           shift, and go to state 18
    "volatile"        shift, and go to state 19
    "friend"          shift, and go to state 20
    "typedef"         shift, and go to state 21
    "constexpr"       shift, and go to state 22
    "consteval"       shift, and go to state 23
    "constinit"       shift, and go to state 24
    "inline"          shift, and go to state 25
    "decltype"        shift, and go to state 26
    "enum"            shift, and go to state 27
    "extern"          shift, and go to state 28
    '<'               shift, and go to state 157
    "explicit"        shift, and go to state 29
    "export"          shift, and go to state 30
    "export-keyword"  shift, and go to state 158
    '*'               shift, and go to state 32
    "import-keyword"  shift, and go to state 34
    "namespace"       shift, and go to state 35
    '~'               shift, and go to state 36
    "auto"            shift, and go to state 37
    "char"            shift, and go to state 38
    "char8_t"         shift, and go to state 39
    "char16_t"        shift, and go to state 40
    "char32_t"        shift, and go to state 41
    "wchar_t"         shift, and go to state 42
    "bool"            shift, and go to state 43
    "short"           shift, and go to state 44
    "int"             shift, and go to state 45
    "long"            shift, and go to state 46
    "signed"          shift, and go to state 47
    "unsigned"        shift, and go to state 48
    "float"           shift, and go to state 49
    "double"          shift, and go to state 50
    "void"            shift, and go to state 51
    "static_assert"   shift, and go to state 52
    "static"          shift, and go to state 53
    "thread_local"    shift, and go to state 54
    "mutable"         shift, and go to state 55
    "typename"        shift, and go to state 56

    alias-declaration                go to state 57
    alignment-specifier              go to state 58
    asm-declaration                  go to state 59
    attribute-declaration            go to state 60
    attribute-specifier              go to state 61
    attribute-specifier-seq          go to state 62
    block-declaration                go to state 63
    class-head                       go to state 64
    class-key                        go to state 65
    class-name                       go to state 66
    class-specifier                  go to state 67
    concept-name                     go to state 68
    conversion-function-id           go to state 69
    cv-qualifier                     go to state 70
    decl-specifier                   go to state 71
    decl-specifier-seq               go to state 72
    declaration                      go to state 159
    declarator                       go to state 75
    declarator-id                    go to state 76
    decltype-specifier               go to state 77
    deduction-guide                  go to state 78
    defining-type-specifier          go to state 79
    elaborated-enum-specifier        go to state 80
    elaborated-type-specifier        go to state 81
    empty-declaration                go to state 82
    enum-head                        go to state 83
    enum-key                         go to state 84
    enum-name                        go to state 85
    enum-specifier                   go to state 86
    explicit-instantiation           go to state 87
    explicit-specialization          go to state 88
    explicit-specifier               go to state 89
    export-declaration               go to state 90
    function-definition              go to state 91
    function-specifier               go to state 92
    id-expression                    go to state 94
    linkage-specification            go to state 95
    literal-operator-id              go to state 96
    module-import-declaration        go to state 98
    named-namespace-definition       go to state 99
    namespace-alias                  go to state 100
    namespace-alias-definition       go to state 101
    namespace-definition             go to state 102
    namespace-name                   go to state 103
    nested-name-specifier            go to state 104
    nested-namespace-definition      go to state 105
    nodeclspec-function-declaration  go to state 106
    noptr-declarator                 go to state 107
    opaque-enum-declaration          go to state 108
    operator-function-id             go to state 109
    placeholder-type-specifier       go to state 110
    ptr-declarator                   go to state 111
    ptr-operator                     go to state 112
    qualified-id                     go to state 113
    simple-declaration               go to state 114
    simple-template-id               go to state 115
    simple-type-specifier            go to state 116
    static_assert-declaration        go to state 117
    storage-class-specifier          go to state 118
    template-declaration             go to state 119
    template-head                    go to state 120
    template-id                      go to state 121
    template-name                    go to state 122
    type-constraint                  go to state 124
    type-name                        go to state 125
    type-specifier                   go to state 126
    typedef-name                     go to state 127
    typename-specifier               go to state 128
    unnamed-namespace-definition     go to state 129
    unqualified-id                   go to state 130
    using-declaration                go to state 131
    using-directive                  go to state 132
    using-enum-declaration           go to state 133


State 16

  903 ptr-operator: "&&" •
  904             | "&&" • attribute-specifier-seq

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    "alignas"  [reduce using rule 903 (ptr-operator)]
    '['        [reduce using rule 903 (ptr-operator)]
    $default   reduce using rule 903 (ptr-operator)

    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 160


State 17

  179 conversion-function-id: "operator" • conversion-type-id
  565 literal-operator-id: "operator" • string-literal IDENTIFIER
  566                    | "operator" • user-defined-string-literal
  759 operator-function-id: "operator" • overloadable-operator
  760                     | "operator" • overloadable-operator '<' '>'
  761                     | "operator" • overloadable-operator '<' template-argument-list '>'

    IDENTIFIER  shift, and go to state 161
    '+'         shift, and go to state 162
    '-'         shift, and go to state 163
    '='         shift, and go to state 164
    '('         shift, and go to state 165
    '&'         shift, and go to state 166
    "*="        shift, and go to state 167
    "/="        shift, and go to state 168
    "%="        shift, and go to state 169
    "+="        shift, and go to state 170
    "-="        shift, and go to state 171
    ">>="       shift, and go to state 172
    "<<="       shift, and go to state 173
    "&="        shift, and go to state 174
    "^="        shift, and go to state 175
    "|="        shift, and go to state 176
    ','         shift, and go to state 177
    "::"        shift, and go to state 9
    '['         shift, and go to state 178
    "co_await"  shift, and go to state 179
    "class"     shift, and go to state 12
    "struct"    shift, and go to state 13
    "union"     shift, and go to state 14
    "<=>"       shift, and go to state 180
    "&&"        shift, and go to state 181
    "||"        shift, and go to state 182
    "const"     shift, and go to state 18
    "volatile"  shift, and go to state 19
    "decltype"  shift, and go to state 26
    "->"        shift, and go to state 183
    "delete"    shift, and go to state 184
    "enum"      shift, and go to state 136
    "u8"        shift, and go to state 185
    'u'         shift, and go to state 186
    'U'         shift, and go to state 187
    'L'         shift, and go to state 188
    "=="        shift, and go to state 189
    "!="        shift, and go to state 190
    '^'         shift, and go to state 191
    '<'         shift, and go to state 192
    '>'         shift, and go to state 193
    '*'         shift, and go to state 194
    '/'         shift, and go to state 195
    '%'         shift, and go to state 196
    '|'         shift, and go to state 197
    "<<"        shift, and go to state 198
    ">>"        shift, and go to state 199
    "<="        shift, and go to state 200
    ">="        shift, and go to state 201
    "->*"       shift, and go to state 202
    '"'         shift, and go to state 203
    "new"       shift, and go to state 204
    '~'         shift, and go to state 205
    '!'         shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "auto"      shift, and go to state 37
    "char"      shift, and go to state 38
    "char8_t"   shift, and go to state 39
    "char16_t"  shift, and go to state 40
    "char32_t"  shift, and go to state 41
    "wchar_t"   shift, and go to state 42
    "bool"      shift, and go to state 43
    "short"     shift, and go to state 44
    "int"       shift, and go to state 45
    "long"      shift, and go to state 46
    "signed"    shift, and go to state 47
    "unsigned"  shift, and go to state 48
    "float"     shift, and go to state 49
    "double"    shift, and go to state 50
    "void"      shift, and go to state 51
    'R'         shift, and go to state 209
    "typename"  shift, and go to state 56

    class-key                    go to state 210
    class-name                   go to state 66
    concept-name                 go to state 68
    conversion-type-id           go to state 211
    cv-qualifier                 go to state 70
    decltype-specifier           go to state 77
    elaborated-enum-specifier    go to state 80
    elaborated-type-specifier    go to state 81
    encoding-prefix              go to state 212
    enum-name                    go to state 85
    namespace-alias              go to state 100
    namespace-name               go to state 103
    nested-name-specifier        go to state 213
    overloadable-operator        go to state 214
    placeholder-type-specifier   go to state 110
    simple-template-id           go to state 142
    simple-type-specifier        go to state 116
    string-literal               go to state 215
    template-name                go to state 216
    type-constraint              go to state 124
    type-name                    go to state 125
    type-specifier               go to state 217
    type-specifier-seq           go to state 218
    typedef-name                 go to state 127
    typename-specifier           go to state 128
    user-defined-string-literal  go to state 219


State 18

  185 cv-qualifier: "const" •

    $default  reduce using rule 185 (cv-qualifier)


State 19

  186 cv-qualifier: "volatile" •

    $default  reduce using rule 186 (cv-qualifier)


State 20

  204 decl-specifier: "friend" •

    $default  reduce using rule 204 (decl-specifier)


State 21

  205 decl-specifier: "typedef" •

    $default  reduce using rule 205 (decl-specifier)


State 22

  206 decl-specifier: "constexpr" •

    $default  reduce using rule 206 (decl-specifier)


State 23

  207 decl-specifier: "consteval" •

    $default  reduce using rule 207 (decl-specifier)


State 24

  208 decl-specifier: "constinit" •

    $default  reduce using rule 208 (decl-specifier)


State 25

  209 decl-specifier: "inline" •
  647 named-namespace-definition: "inline" • "namespace" IDENTIFIER '{' namespace-body '}'
  649                           | "inline" • "namespace" attribute-specifier-seq IDENTIFIER '{' namespace-body '}'
  1150 unnamed-namespace-definition: "inline" • "namespace" '{' namespace-body '}'
  1152                             | "inline" • "namespace" attribute-specifier-seq '{' namespace-body '}'

    "namespace"  shift, and go to state 220

    $default  reduce using rule 209 (decl-specifier)


State 26

  233 decltype-specifier: "decltype" • '(' expression ')'
  855 placeholder-type-specifier: "decltype" • '(' "auto" ')'

    '('  shift, and go to state 221


State 27

  265 elaborated-enum-specifier: "enum" • IDENTIFIER
  266                          | "enum" • nested-name-specifier IDENTIFIER
  294 enum-key: "enum" •
  295         | "enum" • "class"
  296         | "enum" • "struct"

    IDENTIFIER  shift, and go to state 222
    "::"        shift, and go to state 9
    "class"     shift, and go to state 223
    "struct"    shift, and go to state 224
    "decltype"  shift, and go to state 135

    IDENTIFIER  [reduce using rule 294 (enum-key)]
    "::"        [reduce using rule 294 (enum-key)]
    "decltype"  [reduce using rule 294 (enum-key)]
    $default    reduce using rule 294 (enum-key)

    class-name             go to state 66
    decltype-specifier     go to state 139
    enum-name              go to state 85
    namespace-alias        go to state 100
    namespace-name         go to state 103
    nested-name-specifier  go to state 225
    simple-template-id     go to state 142
    template-name          go to state 143
    type-name              go to state 144
    typedef-name           go to state 127


State 28

  322 explicit-instantiation: "extern" • "template" declaration
  555 linkage-specification: "extern" • string-literal '{' '}'
  556                      | "extern" • string-literal '{' declaration-seq '}'
  557                      | "extern" • string-literal declaration
  1042 storage-class-specifier: "extern" •

    "template"  shift, and go to state 226
    "u8"        shift, and go to state 185
    'u'         shift, and go to state 186
    'U'         shift, and go to state 187
    'L'         shift, and go to state 188
    '"'         shift, and go to state 203
    'R'         shift, and go to state 209

    $default  reduce using rule 1042 (storage-class-specifier)

    encoding-prefix  go to state 212
    string-literal   go to state 227


State 29

  325 explicit-specifier: "explicit" • '(' constant-expression ')'
  326                   | "explicit" •

    '('  shift, and go to state 228

    '('       [reduce using rule 326 (explicit-specifier)]
    $default  reduce using rule 326 (explicit-specifier)


State 30

  331 export-declaration: "export" • declaration
  332                   | "export" • '{' '}'
  333                   | "export" • '{' declaration-seq '}'

    IDENTIFIER        shift, and go to state 1
    "using"           shift, and go to state 2
    ';'               shift, and go to state 3
    "alignas"         shift, and go to state 4
    '('               shift, and go to state 5
    "..."             shift, and go to state 6
    '&'               shift, and go to state 7
    "asm"             shift, and go to state 8
    "::"              shift, and go to state 9
    '['               shift, and go to state 10
    '{'               shift, and go to state 229
    "virtual"         shift, and go to state 11
    "class"           shift, and go to state 12
    "struct"          shift, and go to state 13
    "union"           shift, and go to state 14
    "template"        shift, and go to state 15
    "&&"              shift, and go to state 16
    "operator"        shift, and go to state 17
    "const"           shift, and go to state 18
    "volatile"        shift, and go to state 19
    "friend"          shift, and go to state 20
    "typedef"         shift, and go to state 21
    "constexpr"       shift, and go to state 22
    "consteval"       shift, and go to state 23
    "constinit"       shift, and go to state 24
    "inline"          shift, and go to state 25
    "decltype"        shift, and go to state 26
    "enum"            shift, and go to state 27
    "extern"          shift, and go to state 28
    "explicit"        shift, and go to state 29
    "export"          shift, and go to state 30
    "export-keyword"  shift, and go to state 158
    '*'               shift, and go to state 32
    "import-keyword"  shift, and go to state 34
    "namespace"       shift, and go to state 35
    '~'               shift, and go to state 36
    "auto"            shift, and go to state 37
    "char"            shift, and go to state 38
    "char8_t"         shift, and go to state 39
    "char16_t"        shift, and go to state 40
    "char32_t"        shift, and go to state 41
    "wchar_t"         shift, and go to state 42
    "bool"            shift, and go to state 43
    "short"           shift, and go to state 44
    "int"             shift, and go to state 45
    "long"            shift, and go to state 46
    "signed"          shift, and go to state 47
    "unsigned"        shift, and go to state 48
    "float"           shift, and go to state 49
    "double"          shift, and go to state 50
    "void"            shift, and go to state 51
    "static_assert"   shift, and go to state 52
    "static"          shift, and go to state 53
    "thread_local"    shift, and go to state 54
    "mutable"         shift, and go to state 55
    "typename"        shift, and go to state 56

    alias-declaration                go to state 57
    alignment-specifier              go to state 58
    asm-declaration                  go to state 59
    attribute-declaration            go to state 60
    attribute-specifier              go to state 61
    attribute-specifier-seq          go to state 62
    block-declaration                go to state 63
    class-head                       go to state 64
    class-key                        go to state 65
    class-name                       go to state 66
    class-specifier                  go to state 67
    concept-name                     go to state 68
    conversion-function-id           go to state 69
    cv-qualifier                     go to state 70
    decl-specifier                   go to state 71
    decl-specifier-seq               go to state 72
    declaration                      go to state 230
    declarator                       go to state 75
    declarator-id                    go to state 76
    decltype-specifier               go to state 77
    deduction-guide                  go to state 78
    defining-type-specifier          go to state 79
    elaborated-enum-specifier        go to state 80
    elaborated-type-specifier        go to state 81
    empty-declaration                go to state 82
    enum-head                        go to state 83
    enum-key                         go to state 84
    enum-name                        go to state 85
    enum-specifier                   go to state 86
    explicit-instantiation           go to state 87
    explicit-specialization          go to state 88
    explicit-specifier               go to state 89
    export-declaration               go to state 90
    function-definition              go to state 91
    function-specifier               go to state 92
    id-expression                    go to state 94
    linkage-specification            go to state 95
    literal-operator-id              go to state 96
    module-import-declaration        go to state 98
    named-namespace-definition       go to state 99
    namespace-alias                  go to state 100
    namespace-alias-definition       go to state 101
    namespace-definition             go to state 102
    namespace-name                   go to state 103
    nested-name-specifier            go to state 104
    nested-namespace-definition      go to state 105
    nodeclspec-function-declaration  go to state 106
    noptr-declarator                 go to state 107
    opaque-enum-declaration          go to state 108
    operator-function-id             go to state 109
    placeholder-type-specifier       go to state 110
    ptr-declarator                   go to state 111
    ptr-operator                     go to state 112
    qualified-id                     go to state 113
    simple-declaration               go to state 114
    simple-template-id               go to state 115
    simple-type-specifier            go to state 116
    static_assert-declaration        go to state 117
    storage-class-specifier          go to state 118
    template-declaration             go to state 119
    template-head                    go to state 120
    template-id                      go to state 121
    template-name                    go to state 122
    type-constraint                  go to state 124
    type-name                        go to state 125
    type-specifier                   go to state 126
    typedef-name                     go to state 127
    typename-specifier               go to state 128
    unnamed-namespace-definition     go to state 129
    unqualified-id                   go to state 130
    using-declaration                go to state 131
    using-directive                  go to state 132
    using-enum-declaration           go to state 133


State 31

  334 export-declaration: "export-keyword" • module-import-declaration
  623 module-declaration: "export-keyword" • "module-keyword" module-name ';'
  625                   | "export-keyword" • "module-keyword" module-name module-partition ';'
  627                   | "export-keyword" • "module-keyword" module-name attribute-specifier-seq ';'
  629                   | "export-keyword" • "module-keyword" module-name module-partition attribute-specifier-seq ';'

    "module-keyword"  shift, and go to state 231
    "import-keyword"  shift, and go to state 34

    module-import-declaration  go to state 232


State 32

  897 ptr-operator: '*' •
  898             | '*' • attribute-specifier-seq
  899             | '*' • cv-qualifier-seq
  900             | '*' • attribute-specifier-seq cv-qualifier-seq

    "alignas"   shift, and go to state 4
    '['         shift, and go to state 10
    "const"     shift, and go to state 18
    "volatile"  shift, and go to state 19

    "alignas"   [reduce using rule 897 (ptr-operator)]
    '['         [reduce using rule 897 (ptr-operator)]
    "const"     [reduce using rule 897 (ptr-operator)]
    "volatile"  [reduce using rule 897 (ptr-operator)]
    $default    reduce using rule 897 (ptr-operator)

    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 233
    cv-qualifier             go to state 234
    cv-qualifier-seq         go to state 235


State 33

  414 global-module-fragment: "module-keyword" • ';'
  415                       | "module-keyword" • ';' declaration-seq
  624 module-declaration: "module-keyword" • module-name ';'
  626                   | "module-keyword" • module-name module-partition ';'
  628                   | "module-keyword" • module-name attribute-specifier-seq ';'
  630                   | "module-keyword" • module-name module-partition attribute-specifier-seq ';'

    IDENTIFIER  shift, and go to state 236
    ';'         shift, and go to state 237

    module-name            go to state 238
    module-name-qualifier  go to state 239


State 34

  631 module-import-declaration: "import-keyword" • module-name ';'
  632                          | "import-keyword" • module-name attribute-specifier-seq ';'
  633                          | "import-keyword" • module-partition ';'
  634                          | "import-keyword" • module-partition attribute-specifier-seq ';'
  635                          | "import-keyword" • header-name ';'
  636                          | "import-keyword" • header-name attribute-specifier-seq ';'

    IDENTIFIER                             shift, and go to state 236
    EXCEPT_NEW_LINE_AND_GREATER_THAN_SIGN  shift, and go to state 240
    ':'                                    shift, and go to state 241
    '<'                                    shift, and go to state 242
    "h-char-sequence"                      shift, and go to state 243
    '"'                                    shift, and go to state 244
    "h-char-sequence:"                     shift, and go to state 245

    h-char                 go to state 246
    header-name            go to state 247
    module-name            go to state 248
    module-name-qualifier  go to state 239
    module-partition       go to state 249


State 35

  648 named-namespace-definition: "namespace" • IDENTIFIER '{' namespace-body '}'
  650                           | "namespace" • attribute-specifier-seq IDENTIFIER '{' namespace-body '}'
  652 namespace-alias-definition: "namespace" • IDENTIFIER '=' qualified-namespace-specifier ';'
  666 nested-namespace-definition: "namespace" • enclosing-namespace-specifier "::" IDENTIFIER '{' namespace-body '}'
  667                            | "namespace" • enclosing-namespace-specifier "::" "inline" IDENTIFIER '{' namespace-body '}'
  1151 unnamed-namespace-definition: "namespace" • '{' namespace-body '}'
  1153                             | "namespace" • attribute-specifier-seq '{' namespace-body '}'

    IDENTIFIER  shift, and go to state 250
    "alignas"   shift, and go to state 4
    '['         shift, and go to state 10
    '{'         shift, and go to state 251

    alignment-specifier            go to state 58
    attribute-specifier            go to state 61
    attribute-specifier-seq        go to state 252
    enclosing-namespace-specifier  go to state 253


State 36

  1158 unqualified-id: '~' • type-name
  1159               | '~' • decltype-specifier

    IDENTIFIER  shift, and go to state 254
    "decltype"  shift, and go to state 135

    class-name          go to state 66
    decltype-specifier  go to state 255
    enum-name           go to state 85
    simple-template-id  go to state 142
    template-name       go to state 143
    type-name           go to state 256
    typedef-name        go to state 127


State 37

  853 placeholder-type-specifier: "auto" •

    $default  reduce using rule 853 (placeholder-type-specifier)


State 38

  1006 simple-type-specifier: "char" •

    $default  reduce using rule 1006 (simple-type-specifier)


State 39

  1007 simple-type-specifier: "char8_t" •

    $default  reduce using rule 1007 (simple-type-specifier)


State 40

  1008 simple-type-specifier: "char16_t" •

    $default  reduce using rule 1008 (simple-type-specifier)


State 41

  1009 simple-type-specifier: "char32_t" •

    $default  reduce using rule 1009 (simple-type-specifier)


State 42

  1010 simple-type-specifier: "wchar_t" •

    $default  reduce using rule 1010 (simple-type-specifier)


State 43

  1011 simple-type-specifier: "bool" •

    $default  reduce using rule 1011 (simple-type-specifier)


State 44

  1012 simple-type-specifier: "short" •

    $default  reduce using rule 1012 (simple-type-specifier)


State 45

  1013 simple-type-specifier: "int" •

    $default  reduce using rule 1013 (simple-type-specifier)


State 46

  1014 simple-type-specifier: "long" •

    $default  reduce using rule 1014 (simple-type-specifier)


State 47

  1015 simple-type-specifier: "signed" •

    $default  reduce using rule 1015 (simple-type-specifier)


State 48

  1016 simple-type-specifier: "unsigned" •

    $default  reduce using rule 1016 (simple-type-specifier)


State 49

  1017 simple-type-specifier: "float" •

    $default  reduce using rule 1017 (simple-type-specifier)


State 50

  1018 simple-type-specifier: "double" •

    $default  reduce using rule 1018 (simple-type-specifier)


State 51

  1019 simple-type-specifier: "void" •

    $default  reduce using rule 1019 (simple-type-specifier)


State 52

  1038 static_assert-declaration: "static_assert" • '(' constant-expression ')' ';'
  1039                          | "static_assert" • '(' constant-expression ',' string-literal ')' ';'

    '('  shift, and go to state 257


State 53

  1040 storage-class-specifier: "static" •

    $default  reduce using rule 1040 (storage-class-specifier)


State 54

  1041 storage-class-specifier: "thread_local" •

    $default  reduce using rule 1041 (storage-class-specifier)


State 55

  1043 storage-class-specifier: "mutable" •

    $default  reduce using rule 1043 (storage-class-specifier)


State 56

  1126 typename-specifier: "typename" • nested-name-specifier IDENTIFIER
  1127                   | "typename" • nested-name-specifier simple-template-id
  1128                   | "typename" • nested-name-specifier "template" simple-template-id

    IDENTIFIER  shift, and go to state 258
    "::"        shift, and go to state 9
    "decltype"  shift, and go to state 135

    class-name             go to state 66
    decltype-specifier     go to state 139
    enum-name              go to state 85
    namespace-alias        go to state 100
    namespace-name         go to state 103
    nested-name-specifier  go to state 259
    simple-template-id     go to state 142
    template-name          go to state 143
    type-name              go to state 144
    typedef-name           go to state 127


State 57

  102 block-declaration: alias-declaration •

    $default  reduce using rule 102 (block-declaration)


State 58

   52 attribute-specifier: alignment-specifier •

    $default  reduce using rule 52 (attribute-specifier)


State 59

   96 block-declaration: asm-declaration •

    $default  reduce using rule 96 (block-declaration)


State 60

  224 declaration: attribute-declaration •

    $default  reduce using rule 224 (declaration)


State 61

   54 attribute-specifier-seq: attribute-specifier •

    $default  reduce using rule 54 (attribute-specifier-seq)


State 62

   21 asm-declaration: attribute-specifier-seq • "asm" '(' string-literal ')' ';'
   42 attribute-declaration: attribute-specifier-seq • ';'
   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  398 function-definition: attribute-specifier-seq • declarator function-body
  400                    | attribute-specifier-seq • decl-specifier-seq declarator function-body
  402                    | attribute-specifier-seq • declarator virt-specifier-seq function-body
  404                    | attribute-specifier-seq • decl-specifier-seq declarator virt-specifier-seq function-body
  406                    | attribute-specifier-seq • declarator requires-clause function-body
  408                    | attribute-specifier-seq • decl-specifier-seq declarator requires-clause function-body
  694 nodeclspec-function-declaration: attribute-specifier-seq • declarator ';'
  979 simple-declaration: attribute-specifier-seq • decl-specifier-seq init-declarator-list ';'
  980                   | attribute-specifier-seq • decl-specifier-seq '[' identifier-list ']' initializer ';'
  982                   | attribute-specifier-seq • decl-specifier-seq ref-qualifier '[' identifier-list ']' initializer ';'
  1185 using-directive: attribute-specifier-seq • "using" "namespace" namespace-name ';'
  1187                | attribute-specifier-seq • "using" "namespace" nested-name-specifier namespace-name ';'

    IDENTIFIER      shift, and go to state 1
    "using"         shift, and go to state 260
    ';'             shift, and go to state 261
    "alignas"       shift, and go to state 4
    '('             shift, and go to state 5
    "..."           shift, and go to state 6
    '&'             shift, and go to state 7
    "asm"           shift, and go to state 262
    "::"            shift, and go to state 9
    '['             shift, and go to state 10
    "virtual"       shift, and go to state 11
    "class"         shift, and go to state 12
    "struct"        shift, and go to state 13
    "union"         shift, and go to state 14
    "&&"            shift, and go to state 16
    "operator"      shift, and go to state 17
    "const"         shift, and go to state 18
    "volatile"      shift, and go to state 19
    "friend"        shift, and go to state 20
    "typedef"       shift, and go to state 21
    "constexpr"     shift, and go to state 22
    "consteval"     shift, and go to state 23
    "constinit"     shift, and go to state 24
    "inline"        shift, and go to state 263
    "decltype"      shift, and go to state 26
    "enum"          shift, and go to state 27
    "extern"        shift, and go to state 264
    "explicit"      shift, and go to state 29
    '*'             shift, and go to state 32
    '~'             shift, and go to state 36
    "auto"          shift, and go to state 37
    "char"          shift, and go to state 38
    "char8_t"       shift, and go to state 39
    "char16_t"      shift, and go to state 40
    "char32_t"      shift, and go to state 41
    "wchar_t"       shift, and go to state 42
    "bool"          shift, and go to state 43
    "short"         shift, and go to state 44
    "int"           shift, and go to state 45
    "long"          shift, and go to state 46
    "signed"        shift, and go to state 47
    "unsigned"      shift, and go to state 48
    "float"         shift, and go to state 49
    "double"        shift, and go to state 50
    "void"          shift, and go to state 51
    "static"        shift, and go to state 53
    "thread_local"  shift, and go to state 54
    "mutable"       shift, and go to state 55
    "typename"      shift, and go to state 56

    alignment-specifier         go to state 58
    attribute-specifier         go to state 265
    class-head                  go to state 64
    class-key                   go to state 65
    class-name                  go to state 66
    class-specifier             go to state 67
    concept-name                go to state 68
    conversion-function-id      go to state 69
    cv-qualifier                go to state 70
    decl-specifier              go to state 71
    decl-specifier-seq          go to state 266
    declarator                  go to state 267
    declarator-id               go to state 76
    decltype-specifier          go to state 77
    defining-type-specifier     go to state 79
    elaborated-enum-specifier   go to state 80
    elaborated-type-specifier   go to state 81
    enum-head                   go to state 83
    enum-key                    go to state 268
    enum-name                   go to state 85
    enum-specifier              go to state 86
    explicit-specifier          go to state 269
    function-specifier          go to state 92
    id-expression               go to state 94
    literal-operator-id         go to state 96
    namespace-alias             go to state 100
    namespace-name              go to state 103
    nested-name-specifier       go to state 104
    noptr-declarator            go to state 107
    operator-function-id        go to state 109
    placeholder-type-specifier  go to state 110
    ptr-declarator              go to state 111
    ptr-operator                go to state 112
    qualified-id                go to state 113
    simple-template-id          go to state 115
    simple-type-specifier       go to state 116
    storage-class-specifier     go to state 118
    template-id                 go to state 121
    template-name               go to state 216
    type-constraint             go to state 124
    type-name                   go to state 125
    type-specifier              go to state 126
    typedef-name                go to state 127
    typename-specifier          go to state 128
    unqualified-id              go to state 130


State 63

  213 declaration: block-declaration •

    $default  reduce using rule 213 (declaration)


State 64

  151 class-specifier: class-head • '{' '}'
  152                | class-head • '{' member-specification '}'

    '{'  shift, and go to state 270


State 65

  128 class-head: class-key • class-head-name
  129           | class-key • attribute-specifier-seq class-head-name
  130           | class-key • class-head-name class-virt-specifier
  131           | class-key • attribute-specifier-seq class-head-name class-virt-specifier
  132           | class-key • class-head-name base-clause
  133           | class-key • attribute-specifier-seq class-head-name base-clause
  134           | class-key • class-head-name class-virt-specifier base-clause
  135           | class-key • attribute-specifier-seq class-head-name class-virt-specifier base-clause
  136           | class-key •
  137           | class-key • attribute-specifier-seq
  138           | class-key • base-clause
  139           | class-key • attribute-specifier-seq base-clause
  267 elaborated-type-specifier: class-key • IDENTIFIER
  268                          | class-key • attribute-specifier-seq IDENTIFIER
  269                          | class-key • nested-name-specifier IDENTIFIER
  270                          | class-key • attribute-specifier-seq nested-name-specifier IDENTIFIER
  271                          | class-key • simple-template-id
  272                          | class-key • nested-name-specifier simple-template-id
  273                          | class-key • nested-name-specifier "template" simple-template-id

    IDENTIFIER  shift, and go to state 271
    "alignas"   shift, and go to state 4
    "::"        shift, and go to state 9
    '['         shift, and go to state 10
    ':'         shift, and go to state 272
    "decltype"  shift, and go to state 135

    $default  reduce using rule 136 (class-head)

    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 273
    base-clause              go to state 274
    class-head-name          go to state 275
    class-name               go to state 276
    decltype-specifier       go to state 139
    enum-name                go to state 85
    namespace-alias          go to state 100
    namespace-name           go to state 103
    nested-name-specifier    go to state 277
    simple-template-id       go to state 278
    template-name            go to state 143
    type-name                go to state 144
    typedef-name             go to state 127


State 66

  1092 type-name: class-name •

    $default  reduce using rule 1092 (type-name)


State 67

  239 defining-type-specifier: class-specifier •

    $default  reduce using rule 239 (defining-type-specifier)


State 68

  1085 type-constraint: concept-name •
  1087                | concept-name • '<' '>'
  1089                | concept-name • '<' template-argument-list '>'

    '<'  shift, and go to state 279

    $default  reduce using rule 1085 (type-constraint)


State 69

  1156 unqualified-id: conversion-function-id •

    $default  reduce using rule 1156 (unqualified-id)


State 70

  1120 type-specifier: cv-qualifier •

    $default  reduce using rule 1120 (type-specifier)


State 71

  210 decl-specifier-seq: decl-specifier •
  211                   | decl-specifier • attribute-specifier-seq
  212                   | decl-specifier • decl-specifier-seq

    IDENTIFIER      shift, and go to state 161
    "alignas"       shift, and go to state 4
    "::"            shift, and go to state 9
    '['             shift, and go to state 10
    "virtual"       shift, and go to state 11
    "class"         shift, and go to state 12
    "struct"        shift, and go to state 13
    "union"         shift, and go to state 14
    "const"         shift, and go to state 18
    "volatile"      shift, and go to state 19
    "friend"        shift, and go to state 20
    "typedef"       shift, and go to state 21
    "constexpr"     shift, and go to state 22
    "consteval"     shift, and go to state 23
    "constinit"     shift, and go to state 24
    "inline"        shift, and go to state 263
    "decltype"      shift, and go to state 26
    "enum"          shift, and go to state 27
    "extern"        shift, and go to state 264
    "explicit"      shift, and go to state 29
    "auto"          shift, and go to state 37
    "char"          shift, and go to state 38
    "char8_t"       shift, and go to state 39
    "char16_t"      shift, and go to state 40
    "char32_t"      shift, and go to state 41
    "wchar_t"       shift, and go to state 42
    "bool"          shift, and go to state 43
    "short"         shift, and go to state 44
    "int"           shift, and go to state 45
    "long"          shift, and go to state 46
    "signed"        shift, and go to state 47
    "unsigned"      shift, and go to state 48
    "float"         shift, and go to state 49
    "double"        shift, and go to state 50
    "void"          shift, and go to state 51
    "static"        shift, and go to state 53
    "thread_local"  shift, and go to state 54
    "mutable"       shift, and go to state 55
    "typename"      shift, and go to state 56

    IDENTIFIER  [reduce using rule 210 (decl-specifier-seq)]
    "alignas"   [reduce using rule 210 (decl-specifier-seq)]
    "::"        [reduce using rule 210 (decl-specifier-seq)]
    '['         [reduce using rule 210 (decl-specifier-seq)]
    "decltype"  [reduce using rule 210 (decl-specifier-seq)]
    $default    reduce using rule 210 (decl-specifier-seq)

    alignment-specifier         go to state 58
    attribute-specifier         go to state 61
    attribute-specifier-seq     go to state 280
    class-head                  go to state 64
    class-key                   go to state 65
    class-name                  go to state 66
    class-specifier             go to state 67
    concept-name                go to state 68
    cv-qualifier                go to state 70
    decl-specifier              go to state 71
    decl-specifier-seq          go to state 281
    decltype-specifier          go to state 77
    defining-type-specifier     go to state 79
    elaborated-enum-specifier   go to state 80
    elaborated-type-specifier   go to state 81
    enum-head                   go to state 83
    enum-key                    go to state 268
    enum-name                   go to state 85
    enum-specifier              go to state 86
    explicit-specifier          go to state 269
    function-specifier          go to state 92
    namespace-alias             go to state 100
    namespace-name              go to state 103
    nested-name-specifier       go to state 213
    placeholder-type-specifier  go to state 110
    simple-template-id          go to state 142
    simple-type-specifier       go to state 116
    storage-class-specifier     go to state 118
    template-name               go to state 216
    type-constraint             go to state 124
    type-name                   go to state 125
    type-specifier              go to state 126
    typedef-name                go to state 127
    typename-specifier          go to state 128


State 72

  401 function-definition: decl-specifier-seq • declarator function-body
  405                    | decl-specifier-seq • declarator virt-specifier-seq function-body
  409                    | decl-specifier-seq • declarator requires-clause function-body
  977 simple-declaration: decl-specifier-seq • ';'
  978                   | decl-specifier-seq • init-declarator-list ';'
  981                   | decl-specifier-seq • '[' identifier-list ']' initializer ';'
  983                   | decl-specifier-seq • ref-qualifier '[' identifier-list ']' initializer ';'

    IDENTIFIER  shift, and go to state 148
    ';'         shift, and go to state 282
    '('         shift, and go to state 5
    "..."       shift, and go to state 6
    '&'         shift, and go to state 283
    "::"        shift, and go to state 9
    '['         shift, and go to state 284
    "&&"        shift, and go to state 285
    "operator"  shift, and go to state 17
    "decltype"  shift, and go to state 135
    '*'         shift, and go to state 32
    '~'         shift, and go to state 36

    class-name              go to state 66
    conversion-function-id  go to state 69
    declarator              go to state 286
    declarator-id           go to state 76
    decltype-specifier      go to state 139
    enum-name               go to state 85
    id-expression           go to state 94
    init-declarator         go to state 287
    init-declarator-list    go to state 288
    literal-operator-id     go to state 96
    namespace-alias         go to state 100
    namespace-name          go to state 103
    nested-name-specifier   go to state 149
    noptr-declarator        go to state 107
    operator-function-id    go to state 109
    ptr-declarator          go to state 111
    ptr-operator            go to state 112
    qualified-id            go to state 113
    ref-qualifier           go to state 289
    simple-template-id      go to state 115
    template-id             go to state 121
    template-name           go to state 143
    type-name               go to state 144
    typedef-name            go to state 127
    unqualified-id          go to state 130


State 73

  226 declaration-seq: declaration •

    $default  reduce using rule 226 (declaration-seq)


State 74

  227 declaration-seq: declaration-seq • declaration
  1074 translation-unit: declaration-seq •

    IDENTIFIER        shift, and go to state 1
    "using"           shift, and go to state 2
    ';'               shift, and go to state 3
    "alignas"         shift, and go to state 4
    '('               shift, and go to state 5
    "..."             shift, and go to state 6
    '&'               shift, and go to state 7
    "asm"             shift, and go to state 8
    "::"              shift, and go to state 9
    '['               shift, and go to state 10
    "virtual"         shift, and go to state 11
    "class"           shift, and go to state 12
    "struct"          shift, and go to state 13
    "union"           shift, and go to state 14
    "template"        shift, and go to state 15
    "&&"              shift, and go to state 16
    "operator"        shift, and go to state 17
    "const"           shift, and go to state 18
    "volatile"        shift, and go to state 19
    "friend"          shift, and go to state 20
    "typedef"         shift, and go to state 21
    "constexpr"       shift, and go to state 22
    "consteval"       shift, and go to state 23
    "constinit"       shift, and go to state 24
    "inline"          shift, and go to state 25
    "decltype"        shift, and go to state 26
    "enum"            shift, and go to state 27
    "extern"          shift, and go to state 28
    "explicit"        shift, and go to state 29
    "export"          shift, and go to state 30
    "export-keyword"  shift, and go to state 158
    '*'               shift, and go to state 32
    "import-keyword"  shift, and go to state 34
    "namespace"       shift, and go to state 35
    '~'               shift, and go to state 36
    "auto"            shift, and go to state 37
    "char"            shift, and go to state 38
    "char8_t"         shift, and go to state 39
    "char16_t"        shift, and go to state 40
    "char32_t"        shift, and go to state 41
    "wchar_t"         shift, and go to state 42
    "bool"            shift, and go to state 43
    "short"           shift, and go to state 44
    "int"             shift, and go to state 45
    "long"            shift, and go to state 46
    "signed"          shift, and go to state 47
    "unsigned"        shift, and go to state 48
    "float"           shift, and go to state 49
    "double"          shift, and go to state 50
    "void"            shift, and go to state 51
    "static_assert"   shift, and go to state 52
    "static"          shift, and go to state 53
    "thread_local"    shift, and go to state 54
    "mutable"         shift, and go to state 55
    "typename"        shift, and go to state 56

    $default  reduce using rule 1074 (translation-unit)

    alias-declaration                go to state 57
    alignment-specifier              go to state 58
    asm-declaration                  go to state 59
    attribute-declaration            go to state 60
    attribute-specifier              go to state 61
    attribute-specifier-seq          go to state 62
    block-declaration                go to state 63
    class-head                       go to state 64
    class-key                        go to state 65
    class-name                       go to state 66
    class-specifier                  go to state 67
    concept-name                     go to state 68
    conversion-function-id           go to state 69
    cv-qualifier                     go to state 70
    decl-specifier                   go to state 71
    decl-specifier-seq               go to state 72
    declaration                      go to state 290
    declarator                       go to state 75
    declarator-id                    go to state 76
    decltype-specifier               go to state 77
    deduction-guide                  go to state 78
    defining-type-specifier          go to state 79
    elaborated-enum-specifier        go to state 80
    elaborated-type-specifier        go to state 81
    empty-declaration                go to state 82
    enum-head                        go to state 83
    enum-key                         go to state 84
    enum-name                        go to state 85
    enum-specifier                   go to state 86
    explicit-instantiation           go to state 87
    explicit-specialization          go to state 88
    explicit-specifier               go to state 89
    export-declaration               go to state 90
    function-definition              go to state 91
    function-specifier               go to state 92
    id-expression                    go to state 94
    linkage-specification            go to state 95
    literal-operator-id              go to state 96
    module-import-declaration        go to state 98
    named-namespace-definition       go to state 99
    namespace-alias                  go to state 100
    namespace-alias-definition       go to state 101
    namespace-definition             go to state 102
    namespace-name                   go to state 103
    nested-name-specifier            go to state 104
    nested-namespace-definition      go to state 105
    nodeclspec-function-declaration  go to state 106
    noptr-declarator                 go to state 107
    opaque-enum-declaration          go to state 108
    operator-function-id             go to state 109
    placeholder-type-specifier       go to state 110
    ptr-declarator                   go to state 111
    ptr-operator                     go to state 112
    qualified-id                     go to state 113
    simple-declaration               go to state 114
    simple-template-id               go to state 115
    simple-type-specifier            go to state 116
    static_assert-declaration        go to state 117
    storage-class-specifier          go to state 118
    template-declaration             go to state 119
    template-head                    go to state 120
    template-id                      go to state 121
    template-name                    go to state 122
    type-constraint                  go to state 124
    type-name                        go to state 125
    type-specifier                   go to state 126
    typedef-name                     go to state 127
    typename-specifier               go to state 128
    unnamed-namespace-definition     go to state 129
    unqualified-id                   go to state 130
    using-declaration                go to state 131
    using-directive                  go to state 132
    using-enum-declaration           go to state 133


State 75

  399 function-definition: declarator • function-body
  403                    | declarator • virt-specifier-seq function-body
  407                    | declarator • requires-clause function-body
  695 nodeclspec-function-declaration: declarator • ';'

    '='         shift, and go to state 291
    ';'         shift, and go to state 292
    ':'         shift, and go to state 293
    '{'         shift, and go to state 294
    "final"     shift, and go to state 295
    "try"       shift, and go to state 296
    "requires"  shift, and go to state 297
    "override"  shift, and go to state 298

    compound-statement  go to state 299
    ctor-initializer    go to state 300
    function-body       go to state 301
    function-try-block  go to state 302
    requires-clause     go to state 303
    virt-specifier      go to state 304
    virt-specifier-seq  go to state 305


State 76

  725 noptr-declarator: declarator-id •
  726                 | declarator-id • attribute-specifier-seq

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    '['       [reduce using rule 725 (noptr-declarator)]
    $default  reduce using rule 725 (noptr-declarator)

    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 306


State 77

  662 nested-name-specifier: decltype-specifier • "::"
  1002 simple-type-specifier: decltype-specifier •

    "::"  shift, and go to state 307

    "::"      [reduce using rule 1002 (simple-type-specifier)]
    $default  reduce using rule 1002 (simple-type-specifier)


State 78

  217 declaration: deduction-guide •

    $default  reduce using rule 217 (declaration)


State 79

  202 decl-specifier: defining-type-specifier •

    $default  reduce using rule 202 (decl-specifier)


State 80

  274 elaborated-type-specifier: elaborated-enum-specifier •

    $default  reduce using rule 274 (elaborated-type-specifier)


State 81

  1118 type-specifier: elaborated-type-specifier •

    $default  reduce using rule 1118 (type-specifier)


State 82

  223 declaration: empty-declaration •

    $default  reduce using rule 223 (declaration)


State 83

  298 enum-specifier: enum-head • '{' '}'
  299               | enum-head • '{' enumerator-list '}'
  300               | enum-head • '{' enumerator-list ',' '}'

    '{'  shift, and go to state 308


State 84

  284 enum-head: enum-key •
  285          | enum-key • attribute-specifier-seq
  286          | enum-key • enum-head-name
  287          | enum-key • attribute-specifier-seq enum-head-name
  288          | enum-key • enum-base
  289          | enum-key • attribute-specifier-seq enum-base
  290          | enum-key • enum-head-name enum-base
  291          | enum-key • attribute-specifier-seq enum-head-name enum-base
  755 opaque-enum-declaration: enum-key • enum-head-name ';'
  756                        | enum-key • attribute-specifier-seq enum-head-name ';'
  757                        | enum-key • enum-head-name enum-base ';'
  758                        | enum-key • attribute-specifier-seq enum-head-name enum-base ';'

    IDENTIFIER  shift, and go to state 309
    "alignas"   shift, and go to state 4
    "::"        shift, and go to state 9
    '['         shift, and go to state 10
    ':'         shift, and go to state 310
    "decltype"  shift, and go to state 135

    $default  reduce using rule 284 (enum-head)

    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 311
    class-name               go to state 66
    decltype-specifier       go to state 139
    enum-base                go to state 312
    enum-head-name           go to state 313
    enum-name                go to state 85
    namespace-alias          go to state 100
    namespace-name           go to state 103
    nested-name-specifier    go to state 314
    simple-template-id       go to state 142
    template-name            go to state 143
    type-name                go to state 144
    typedef-name             go to state 127


State 85

  1093 type-name: enum-name •

    $default  reduce using rule 1093 (type-name)


State 86

  240 defining-type-specifier: enum-specifier •

    $default  reduce using rule 240 (defining-type-specifier)


State 87

  218 declaration: explicit-instantiation •

    $default  reduce using rule 218 (declaration)


State 88

  219 declaration: explicit-specialization •

    $default  reduce using rule 219 (declaration)


State 89

  234 deduction-guide: explicit-specifier • template-name '(' parameter-declaration-clause ')' "->" simple-template-id ';'
  411 function-specifier: explicit-specifier •

    IDENTIFIER  shift, and go to state 315

    IDENTIFIER  [reduce using rule 411 (function-specifier)]
    $default    reduce using rule 411 (function-specifier)

    template-name  go to state 316


State 90

  220 declaration: export-declaration •

    $default  reduce using rule 220 (declaration)


State 91

  215 declaration: function-definition •

    $default  reduce using rule 215 (declaration)


State 92

  203 decl-specifier: function-specifier •

    $default  reduce using rule 203 (decl-specifier)


State 93

  1075 translation-unit: global-module-fragment • module-declaration
  1077                 | global-module-fragment • module-declaration declaration-seq
  1079                 | global-module-fragment • module-declaration private-module-fragment
  1081                 | global-module-fragment • module-declaration declaration-seq private-module-fragment

    "export-keyword"  shift, and go to state 317
    "module-keyword"  shift, and go to state 318

    module-declaration  go to state 319


State 94

  232 declarator-id: id-expression •

    $default  reduce using rule 232 (declarator-id)


State 95

  221 declaration: linkage-specification •

    $default  reduce using rule 221 (declaration)


State 96

  1064 template-id: literal-operator-id • '<' '>'
  1065            | literal-operator-id • '<' template-argument-list '>'
  1157 unqualified-id: literal-operator-id •

    '<'  shift, and go to state 320

    '<'       [reduce using rule 1157 (unqualified-id)]
    $default  reduce using rule 1157 (unqualified-id)


State 97

  1076 translation-unit: module-declaration •
  1078                 | module-declaration • declaration-seq
  1080                 | module-declaration • private-module-fragment
  1082                 | module-declaration • declaration-seq private-module-fragment

    IDENTIFIER        shift, and go to state 1
    "using"           shift, and go to state 2
    ';'               shift, and go to state 3
    "alignas"         shift, and go to state 4
    '('               shift, and go to state 5
    "..."             shift, and go to state 6
    '&'               shift, and go to state 7
    "asm"             shift, and go to state 8
    "::"              shift, and go to state 9
    '['               shift, and go to state 10
    "virtual"         shift, and go to state 11
    "class"           shift, and go to state 12
    "struct"          shift, and go to state 13
    "union"           shift, and go to state 14
    "template"        shift, and go to state 15
    "&&"              shift, and go to state 16
    "operator"        shift, and go to state 17
    "const"           shift, and go to state 18
    "volatile"        shift, and go to state 19
    "friend"          shift, and go to state 20
    "typedef"         shift, and go to state 21
    "constexpr"       shift, and go to state 22
    "consteval"       shift, and go to state 23
    "constinit"       shift, and go to state 24
    "inline"          shift, and go to state 25
    "decltype"        shift, and go to state 26
    "enum"            shift, and go to state 27
    "extern"          shift, and go to state 28
    "explicit"        shift, and go to state 29
    "export"          shift, and go to state 30
    "export-keyword"  shift, and go to state 158
    '*'               shift, and go to state 32
    "module-keyword"  shift, and go to state 321
    "import-keyword"  shift, and go to state 34
    "namespace"       shift, and go to state 35
    '~'               shift, and go to state 36
    "auto"            shift, and go to state 37
    "char"            shift, and go to state 38
    "char8_t"         shift, and go to state 39
    "char16_t"        shift, and go to state 40
    "char32_t"        shift, and go to state 41
    "wchar_t"         shift, and go to state 42
    "bool"            shift, and go to state 43
    "short"           shift, and go to state 44
    "int"             shift, and go to state 45
    "long"            shift, and go to state 46
    "signed"          shift, and go to state 47
    "unsigned"        shift, and go to state 48
    "float"           shift, and go to state 49
    "double"          shift, and go to state 50
    "void"            shift, and go to state 51
    "static_assert"   shift, and go to state 52
    "static"          shift, and go to state 53
    "thread_local"    shift, and go to state 54
    "mutable"         shift, and go to state 55
    "typename"        shift, and go to state 56

    $default  reduce using rule 1076 (translation-unit)

    alias-declaration                go to state 57
    alignment-specifier              go to state 58
    asm-declaration                  go to state 59
    attribute-declaration            go to state 60
    attribute-specifier              go to state 61
    attribute-specifier-seq          go to state 62
    block-declaration                go to state 63
    class-head                       go to state 64
    class-key                        go to state 65
    class-name                       go to state 66
    class-specifier                  go to state 67
    concept-name                     go to state 68
    conversion-function-id           go to state 69
    cv-qualifier                     go to state 70
    decl-specifier                   go to state 71
    decl-specifier-seq               go to state 72
    declaration                      go to state 73
    declaration-seq                  go to state 322
    declarator                       go to state 75
    declarator-id                    go to state 76
    decltype-specifier               go to state 77
    deduction-guide                  go to state 78
    defining-type-specifier          go to state 79
    elaborated-enum-specifier        go to state 80
    elaborated-type-specifier        go to state 81
    empty-declaration                go to state 82
    enum-head                        go to state 83
    enum-key                         go to state 84
    enum-name                        go to state 85
    enum-specifier                   go to state 86
    explicit-instantiation           go to state 87
    explicit-specialization          go to state 88
    explicit-specifier               go to state 89
    export-declaration               go to state 90
    function-definition              go to state 91
    function-specifier               go to state 92
    id-expression                    go to state 94
    linkage-specification            go to state 95
    literal-operator-id              go to state 96
    module-import-declaration        go to state 98
    named-namespace-definition       go to state 99
    namespace-alias                  go to state 100
    namespace-alias-definition       go to state 101
    namespace-definition             go to state 102
    namespace-name                   go to state 103
    nested-name-specifier            go to state 104
    nested-namespace-definition      go to state 105
    nodeclspec-function-declaration  go to state 106
    noptr-declarator                 go to state 107
    opaque-enum-declaration          go to state 108
    operator-function-id             go to state 109
    placeholder-type-specifier       go to state 110
    private-module-fragment          go to state 323
    ptr-declarator                   go to state 111
    ptr-operator                     go to state 112
    qualified-id                     go to state 113
    simple-declaration               go to state 114
    simple-template-id               go to state 115
    simple-type-specifier            go to state 116
    static_assert-declaration        go to state 117
    storage-class-specifier          go to state 118
    template-declaration             go to state 119
    template-head                    go to state 120
    template-id                      go to state 121
    template-name                    go to state 122
    type-constraint                  go to state 124
    type-name                        go to state 125
    type-specifier                   go to state 126
    typedef-name                     go to state 127
    typename-specifier               go to state 128
    unnamed-namespace-definition     go to state 129
    unqualified-id                   go to state 130
    using-declaration                go to state 131
    using-directive                  go to state 132
    using-enum-declaration           go to state 133


State 98

  225 declaration: module-import-declaration •

    $default  reduce using rule 225 (declaration)


State 99

  654 namespace-definition: named-namespace-definition •

    $default  reduce using rule 654 (namespace-definition)


State 100

  658 namespace-name: namespace-alias •

    $default  reduce using rule 658 (namespace-name)


State 101

   97 block-declaration: namespace-alias-definition •

    $default  reduce using rule 97 (block-declaration)


State 102

  222 declaration: namespace-definition •

    $default  reduce using rule 222 (declaration)


State 103

  661 nested-name-specifier: namespace-name • "::"

    "::"  shift, and go to state 324


State 104

  663 nested-name-specifier: nested-name-specifier • IDENTIFIER "::"
  664                      | nested-name-specifier • simple-template-id "::"
  665                      | nested-name-specifier • "template" simple-template-id "::"
  905 ptr-operator: nested-name-specifier • '*'
  906             | nested-name-specifier • '*' attribute-specifier-seq
  907             | nested-name-specifier • '*' cv-qualifier-seq
  908             | nested-name-specifier • '*' attribute-specifier-seq cv-qualifier-seq
  913 qualified-id: nested-name-specifier • unqualified-id
  914             | nested-name-specifier • "template" unqualified-id
  999 simple-type-specifier: nested-name-specifier • type-name
  1001                      | nested-name-specifier • "template" simple-template-id
  1004                      | nested-name-specifier • template-name
  1084 type-constraint: nested-name-specifier • concept-name
  1086                | nested-name-specifier • concept-name '<' '>'
  1088                | nested-name-specifier • concept-name '<' template-argument-list '>'

    IDENTIFIER  shift, and go to state 325
    "template"  shift, and go to state 326
    "operator"  shift, and go to state 17
    '*'         shift, and go to state 327
    '~'         shift, and go to state 36

    class-name              go to state 66
    concept-name            go to state 328
    conversion-function-id  go to state 69
    enum-name               go to state 85
    literal-operator-id     go to state 96
    operator-function-id    go to state 109
    simple-template-id      go to state 329
    template-id             go to state 121
    template-name           go to state 330
    type-name               go to state 331
    typedef-name            go to state 127
    unqualified-id          go to state 332


State 105

  656 namespace-definition: nested-namespace-definition •

    $default  reduce using rule 656 (namespace-definition)


State 106

  214 declaration: nodeclspec-function-declaration •

    $default  reduce using rule 214 (declaration)


State 107

  230 declarator: noptr-declarator • parameters-and-qualifiers trailing-return-type
  727 noptr-declarator: noptr-declarator • parameters-and-qualifiers
  728                 | noptr-declarator • '[' ']'
  729                 | noptr-declarator • '[' constant-expression ']'
  730                 | noptr-declarator • '[' ']' attribute-specifier-seq
  731                 | noptr-declarator • '[' constant-expression ']' attribute-specifier-seq
  895 ptr-declarator: noptr-declarator •

    '('  shift, and go to state 333
    '['  shift, and go to state 334

    '('       [reduce using rule 895 (ptr-declarator)]
    $default  reduce using rule 895 (ptr-declarator)

    parameters-and-qualifiers  go to state 335


State 108

  103 block-declaration: opaque-enum-declaration •

    $default  reduce using rule 103 (block-declaration)


State 109

  1062 template-id: operator-function-id • '<' '>'
  1063            | operator-function-id • '<' template-argument-list '>'
  1155 unqualified-id: operator-function-id •

    '<'  shift, and go to state 336

    '<'       [reduce using rule 1155 (unqualified-id)]
    $default  reduce using rule 1155 (unqualified-id)


State 110

  1003 simple-type-specifier: placeholder-type-specifier •

    $default  reduce using rule 1003 (simple-type-specifier)


State 111

  229 declarator: ptr-declarator •

    $default  reduce using rule 229 (declarator)


State 112

  896 ptr-declarator: ptr-operator • ptr-declarator

    IDENTIFIER  shift, and go to state 148
    '('         shift, and go to state 5
    "..."       shift, and go to state 6
    '&'         shift, and go to state 7
    "::"        shift, and go to state 9
    "&&"        shift, and go to state 16
    "operator"  shift, and go to state 17
    "decltype"  shift, and go to state 135
    '*'         shift, and go to state 32
    '~'         shift, and go to state 36

    class-name              go to state 66
    conversion-function-id  go to state 69
    declarator-id           go to state 76
    decltype-specifier      go to state 139
    enum-name               go to state 85
    id-expression           go to state 94
    literal-operator-id     go to state 96
    namespace-alias         go to state 100
    namespace-name          go to state 103
    nested-name-specifier   go to state 149
    noptr-declarator        go to state 150
    operator-function-id    go to state 109
    ptr-declarator          go to state 337
    ptr-operator            go to state 112
    qualified-id            go to state 113
    simple-template-id      go to state 115
    template-id             go to state 121
    template-name           go to state 143
    type-name               go to state 144
    typedef-name            go to state 127
    unqualified-id          go to state 130


State 113

  464 id-expression: qualified-id •

    $default  reduce using rule 464 (id-expression)


State 114

   95 block-declaration: simple-declaration •

    $default  reduce using rule 95 (block-declaration)


State 115

  146 class-name: simple-template-id •
  1061 template-id: simple-template-id •
  1125 typedef-name: simple-template-id •

    IDENTIFIER        reduce using rule 146 (class-name)
    IDENTIFIER        [reduce using rule 1061 (template-id)]
    IDENTIFIER        [reduce using rule 1125 (typedef-name)]
    '+'               reduce using rule 1061 (template-id)
    '-'               reduce using rule 1061 (template-id)
    "using"           reduce using rule 1061 (template-id)
    '='               reduce using rule 146 (class-name)
    '='               [reduce using rule 1061 (template-id)]
    '='               [reduce using rule 1125 (typedef-name)]
    ';'               reduce using rule 146 (class-name)
    ';'               [reduce using rule 1061 (template-id)]
    ';'               [reduce using rule 1125 (typedef-name)]
    "alignas"         reduce using rule 146 (class-name)
    "alignas"         [reduce using rule 1061 (template-id)]
    "alignas"         [reduce using rule 1125 (typedef-name)]
    '('               reduce using rule 146 (class-name)
    '('               [reduce using rule 1061 (template-id)]
    '('               [reduce using rule 1125 (typedef-name)]
    ')'               reduce using rule 146 (class-name)
    ')'               [reduce using rule 1061 (template-id)]
    ')'               [reduce using rule 1125 (typedef-name)]
    "..."             reduce using rule 146 (class-name)
    "..."             [reduce using rule 1061 (template-id)]
    "..."             [reduce using rule 1125 (typedef-name)]
    '&'               reduce using rule 146 (class-name)
    '&'               [reduce using rule 1061 (template-id)]
    '&'               [reduce using rule 1125 (typedef-name)]
    "asm"             reduce using rule 1061 (template-id)
    "*="              reduce using rule 1061 (template-id)
    "/="              reduce using rule 1061 (template-id)
    "%="              reduce using rule 1061 (template-id)
    "+="              reduce using rule 1061 (template-id)
    "-="              reduce using rule 1061 (template-id)
    ">>="             reduce using rule 1061 (template-id)
    "<<="             reduce using rule 1061 (template-id)
    "&="              reduce using rule 1061 (template-id)
    "^="              reduce using rule 1061 (template-id)
    "|="              reduce using rule 1061 (template-id)
    ','               reduce using rule 146 (class-name)
    ','               [reduce using rule 1061 (template-id)]
    ','               [reduce using rule 1125 (typedef-name)]
    "::"              reduce using rule 146 (class-name)
    "::"              [reduce using rule 1061 (template-id)]
    "::"              [reduce using rule 1125 (typedef-name)]
    '['               reduce using rule 146 (class-name)
    '['               [reduce using rule 1061 (template-id)]
    '['               [reduce using rule 1125 (typedef-name)]
    ']'               reduce using rule 1061 (template-id)
    ':'               reduce using rule 146 (class-name)
    ':'               [reduce using rule 1061 (template-id)]
    ':'               [reduce using rule 1125 (typedef-name)]
    '{'               reduce using rule 146 (class-name)
    '{'               [reduce using rule 1061 (template-id)]
    '{'               [reduce using rule 1125 (typedef-name)]
    '}'               reduce using rule 1061 (template-id)
    "virtual"         reduce using rule 146 (class-name)
    "virtual"         [reduce using rule 1061 (template-id)]
    "virtual"         [reduce using rule 1125 (typedef-name)]
    "class"           reduce using rule 146 (class-name)
    "class"           [reduce using rule 1061 (template-id)]
    "class"           [reduce using rule 1125 (typedef-name)]
    "struct"          reduce using rule 146 (class-name)
    "struct"          [reduce using rule 1061 (template-id)]
    "struct"          [reduce using rule 1125 (typedef-name)]
    "union"           reduce using rule 146 (class-name)
    "union"           [reduce using rule 1061 (template-id)]
    "union"           [reduce using rule 1125 (typedef-name)]
    "template"        reduce using rule 1061 (template-id)
    "final"           reduce using rule 1061 (template-id)
    "<=>"             reduce using rule 1061 (template-id)
    "noexcept"        reduce using rule 1061 (template-id)
    "concept"         reduce using rule 1061 (template-id)
    '?'               reduce using rule 1061 (template-id)
    "&&"              reduce using rule 146 (class-name)
    "&&"              [reduce using rule 1061 (template-id)]
    "&&"              [reduce using rule 1125 (typedef-name)]
    "||"              reduce using rule 1061 (template-id)
    "operator"        reduce using rule 146 (class-name)
    "operator"        [reduce using rule 1061 (template-id)]
    "operator"        [reduce using rule 1125 (typedef-name)]
    "const"           reduce using rule 146 (class-name)
    "const"           [reduce using rule 1061 (template-id)]
    "const"           [reduce using rule 1125 (typedef-name)]
    "volatile"        reduce using rule 146 (class-name)
    "volatile"        [reduce using rule 1061 (template-id)]
    "volatile"        [reduce using rule 1125 (typedef-name)]
    "friend"          reduce using rule 146 (class-name)
    "friend"          [reduce using rule 1061 (template-id)]
    "friend"          [reduce using rule 1125 (typedef-name)]
    "typedef"         reduce using rule 146 (class-name)
    "typedef"         [reduce using rule 1061 (template-id)]
    "typedef"         [reduce using rule 1125 (typedef-name)]
    "constexpr"       reduce using rule 146 (class-name)
    "constexpr"       [reduce using rule 1061 (template-id)]
    "constexpr"       [reduce using rule 1125 (typedef-name)]
    "consteval"       reduce using rule 146 (class-name)
    "consteval"       [reduce using rule 1061 (template-id)]
    "consteval"       [reduce using rule 1125 (typedef-name)]
    "constinit"       reduce using rule 146 (class-name)
    "constinit"       [reduce using rule 1061 (template-id)]
    "constinit"       [reduce using rule 1125 (typedef-name)]
    "inline"          reduce using rule 146 (class-name)
    "inline"          [reduce using rule 1061 (template-id)]
    "inline"          [reduce using rule 1125 (typedef-name)]
    "decltype"        reduce using rule 146 (class-name)
    "decltype"        [reduce using rule 1061 (template-id)]
    "decltype"        [reduce using rule 1125 (typedef-name)]
    "->"              reduce using rule 1061 (template-id)
    '.'               reduce using rule 1061 (template-id)
    "enum"            reduce using rule 146 (class-name)
    "enum"            [reduce using rule 1061 (template-id)]
    "enum"            [reduce using rule 1125 (typedef-name)]
    "=="              reduce using rule 1061 (template-id)
    "!="              reduce using rule 1061 (template-id)
    '^'               reduce using rule 1061 (template-id)
    "extern"          reduce using rule 146 (class-name)
    "extern"          [reduce using rule 1061 (template-id)]
    "extern"          [reduce using rule 1125 (typedef-name)]
    '<'               reduce using rule 1061 (template-id)
    '>'               reduce using rule 146 (class-name)
    '>'               [reduce using rule 1061 (template-id)]
    '>'               [reduce using rule 1125 (typedef-name)]
    "explicit"        reduce using rule 146 (class-name)
    "explicit"        [reduce using rule 1061 (template-id)]
    "explicit"        [reduce using rule 1125 (typedef-name)]
    "export"          reduce using rule 1061 (template-id)
    "export-keyword"  reduce using rule 1061 (template-id)
    '*'               reduce using rule 146 (class-name)
    '*'               [reduce using rule 1061 (template-id)]
    '*'               [reduce using rule 1125 (typedef-name)]
    '/'               reduce using rule 1061 (template-id)
    '%'               reduce using rule 1061 (template-id)
    '|'               reduce using rule 1061 (template-id)
    "<<"              reduce using rule 1061 (template-id)
    ">>"              reduce using rule 1061 (template-id)
    "<="              reduce using rule 1061 (template-id)
    ">="              reduce using rule 1061 (template-id)
    ".*"              reduce using rule 1061 (template-id)
    "->*"             reduce using rule 1061 (template-id)
    "try"             reduce using rule 1061 (template-id)
    "import-keyword"  reduce using rule 1061 (template-id)
    "namespace"       reduce using rule 1061 (template-id)
    "requires"        reduce using rule 1061 (template-id)
    '~'               reduce using rule 146 (class-name)
    '~'               [reduce using rule 1061 (template-id)]
    '~'               [reduce using rule 1125 (typedef-name)]
    "++"              reduce using rule 1061 (template-id)
    "--"              reduce using rule 1061 (template-id)
    "auto"            reduce using rule 146 (class-name)
    "auto"            [reduce using rule 1061 (template-id)]
    "auto"            [reduce using rule 1125 (typedef-name)]
    "char"            reduce using rule 146 (class-name)
    "char"            [reduce using rule 1061 (template-id)]
    "char"            [reduce using rule 1125 (typedef-name)]
    "char8_t"         reduce using rule 146 (class-name)
    "char8_t"         [reduce using rule 1061 (template-id)]
    "char8_t"         [reduce using rule 1125 (typedef-name)]
    "char16_t"        reduce using rule 146 (class-name)
    "char16_t"        [reduce using rule 1061 (template-id)]
    "char16_t"        [reduce using rule 1125 (typedef-name)]
    "char32_t"        reduce using rule 146 (class-name)
    "char32_t"        [reduce using rule 1061 (template-id)]
    "char32_t"        [reduce using rule 1125 (typedef-name)]
    "wchar_t"         reduce using rule 146 (class-name)
    "wchar_t"         [reduce using rule 1061 (template-id)]
    "wchar_t"         [reduce using rule 1125 (typedef-name)]
    "bool"            reduce using rule 146 (class-name)
    "bool"            [reduce using rule 1061 (template-id)]
    "bool"            [reduce using rule 1125 (typedef-name)]
    "short"           reduce using rule 146 (class-name)
    "short"           [reduce using rule 1061 (template-id)]
    "short"           [reduce using rule 1125 (typedef-name)]
    "int"             reduce using rule 146 (class-name)
    "int"             [reduce using rule 1061 (template-id)]
    "int"             [reduce using rule 1125 (typedef-name)]
    "long"            reduce using rule 146 (class-name)
    "long"            [reduce using rule 1061 (template-id)]
    "long"            [reduce using rule 1125 (typedef-name)]
    "signed"          reduce using rule 146 (class-name)
    "signed"          [reduce using rule 1061 (template-id)]
    "signed"          [reduce using rule 1125 (typedef-name)]
    "unsigned"        reduce using rule 146 (class-name)
    "unsigned"        [reduce using rule 1061 (template-id)]
    "unsigned"        [reduce using rule 1125 (typedef-name)]
    "float"           reduce using rule 146 (class-name)
    "float"           [reduce using rule 1061 (template-id)]
    "float"           [reduce using rule 1125 (typedef-name)]
    "double"          reduce using rule 146 (class-name)
    "double"          [reduce using rule 1061 (template-id)]
    "double"          [reduce using rule 1125 (typedef-name)]
    "void"            reduce using rule 146 (class-name)
    "void"            [reduce using rule 1061 (template-id)]
    "void"            [reduce using rule 1125 (typedef-name)]
    "static_assert"   reduce using rule 1061 (template-id)
    "static"          reduce using rule 146 (class-name)
    "static"          [reduce using rule 1061 (template-id)]
    "static"          [reduce using rule 1125 (typedef-name)]
    "thread_local"    reduce using rule 146 (class-name)
    "thread_local"    [reduce using rule 1061 (template-id)]
    "thread_local"    [reduce using rule 1125 (typedef-name)]
    "mutable"         reduce using rule 146 (class-name)
    "mutable"         [reduce using rule 1061 (template-id)]
    "mutable"         [reduce using rule 1125 (typedef-name)]
    "typename"        reduce using rule 146 (class-name)
    "typename"        [reduce using rule 1061 (template-id)]
    "typename"        [reduce using rule 1125 (typedef-name)]
    "override"        reduce using rule 1061 (template-id)
    $default          reduce using rule 146 (class-name)


State 116

  1117 type-specifier: simple-type-specifier •

    $default  reduce using rule 1117 (type-specifier)


State 117

  101 block-declaration: static_assert-declaration •

    $default  reduce using rule 101 (block-declaration)


State 118

  201 decl-specifier: storage-class-specifier •

    $default  reduce using rule 201 (decl-specifier)


State 119

  216 declaration: template-declaration •

    $default  reduce using rule 216 (declaration)


State 120

  1057 template-declaration: template-head • declaration
  1058                     | template-head • concept-definition

    IDENTIFIER        shift, and go to state 1
    "using"           shift, and go to state 2
    ';'               shift, and go to state 3
    "alignas"         shift, and go to state 4
    '('               shift, and go to state 5
    "..."             shift, and go to state 6
    '&'               shift, and go to state 7
    "asm"             shift, and go to state 8
    "::"              shift, and go to state 9
    '['               shift, and go to state 10
    "virtual"         shift, and go to state 11
    "class"           shift, and go to state 12
    "struct"          shift, and go to state 13
    "union"           shift, and go to state 14
    "template"        shift, and go to state 15
    "concept"         shift, and go to state 338
    "&&"              shift, and go to state 16
    "operator"        shift, and go to state 17
    "const"           shift, and go to state 18
    "volatile"        shift, and go to state 19
    "friend"          shift, and go to state 20
    "typedef"         shift, and go to state 21
    "constexpr"       shift, and go to state 22
    "consteval"       shift, and go to state 23
    "constinit"       shift, and go to state 24
    "inline"          shift, and go to state 25
    "decltype"        shift, and go to state 26
    "enum"            shift, and go to state 27
    "extern"          shift, and go to state 28
    "explicit"        shift, and go to state 29
    "export"          shift, and go to state 30
    "export-keyword"  shift, and go to state 158
    '*'               shift, and go to state 32
    "import-keyword"  shift, and go to state 34
    "namespace"       shift, and go to state 35
    '~'               shift, and go to state 36
    "auto"            shift, and go to state 37
    "char"            shift, and go to state 38
    "char8_t"         shift, and go to state 39
    "char16_t"        shift, and go to state 40
    "char32_t"        shift, and go to state 41
    "wchar_t"         shift, and go to state 42
    "bool"            shift, and go to state 43
    "short"           shift, and go to state 44
    "int"             shift, and go to state 45
    "long"            shift, and go to state 46
    "signed"          shift, and go to state 47
    "unsigned"        shift, and go to state 48
    "float"           shift, and go to state 49
    "double"          shift, and go to state 50
    "void"            shift, and go to state 51
    "static_assert"   shift, and go to state 52
    "static"          shift, and go to state 53
    "thread_local"    shift, and go to state 54
    "mutable"         shift, and go to state 55
    "typename"        shift, and go to state 56

    alias-declaration                go to state 57
    alignment-specifier              go to state 58
    asm-declaration                  go to state 59
    attribute-declaration            go to state 60
    attribute-specifier              go to state 61
    attribute-specifier-seq          go to state 62
    block-declaration                go to state 63
    class-head                       go to state 64
    class-key                        go to state 65
    class-name                       go to state 66
    class-specifier                  go to state 67
    concept-definition               go to state 339
    concept-name                     go to state 68
    conversion-function-id           go to state 69
    cv-qualifier                     go to state 70
    decl-specifier                   go to state 71
    decl-specifier-seq               go to state 72
    declaration                      go to state 340
    declarator                       go to state 75
    declarator-id                    go to state 76
    decltype-specifier               go to state 77
    deduction-guide                  go to state 78
    defining-type-specifier          go to state 79
    elaborated-enum-specifier        go to state 80
    elaborated-type-specifier        go to state 81
    empty-declaration                go to state 82
    enum-head                        go to state 83
    enum-key                         go to state 84
    enum-name                        go to state 85
    enum-specifier                   go to state 86
    explicit-instantiation           go to state 87
    explicit-specialization          go to state 88
    explicit-specifier               go to state 89
    export-declaration               go to state 90
    function-definition              go to state 91
    function-specifier               go to state 92
    id-expression                    go to state 94
    linkage-specification            go to state 95
    literal-operator-id              go to state 96
    module-import-declaration        go to state 98
    named-namespace-definition       go to state 99
    namespace-alias                  go to state 100
    namespace-alias-definition       go to state 101
    namespace-definition             go to state 102
    namespace-name                   go to state 103
    nested-name-specifier            go to state 104
    nested-namespace-definition      go to state 105
    nodeclspec-function-declaration  go to state 106
    noptr-declarator                 go to state 107
    opaque-enum-declaration          go to state 108
    operator-function-id             go to state 109
    placeholder-type-specifier       go to state 110
    ptr-declarator                   go to state 111
    ptr-operator                     go to state 112
    qualified-id                     go to state 113
    simple-declaration               go to state 114
    simple-template-id               go to state 115
    simple-type-specifier            go to state 116
    static_assert-declaration        go to state 117
    storage-class-specifier          go to state 118
    template-declaration             go to state 119
    template-head                    go to state 120
    template-id                      go to state 121
    template-name                    go to state 122
    type-constraint                  go to state 124
    type-name                        go to state 125
    type-specifier                   go to state 126
    typedef-name                     go to state 127
    typename-specifier               go to state 128
    unnamed-namespace-definition     go to state 129
    unqualified-id                   go to state 130
    using-declaration                go to state 131
    using-directive                  go to state 132
    using-enum-declaration           go to state 133


State 121

  1160 unqualified-id: template-id •

    $default  reduce using rule 1160 (unqualified-id)


State 122

  235 deduction-guide: template-name • '(' parameter-declaration-clause ')' "->" simple-template-id ';'
  997 simple-template-id: template-name • '<' '>'
  998                   | template-name • '<' template-argument-list '>'
  1005 simple-type-specifier: template-name •

    '('  shift, and go to state 341
    '<'  shift, and go to state 342

    '('       [reduce using rule 1005 (simple-type-specifier)]
    $default  reduce using rule 1005 (simple-type-specifier)


State 123

    0 $accept: translation-unit • $end

    $end  shift, and go to state 343


State 124

  852 placeholder-type-specifier: type-constraint • "auto"
  854                           | type-constraint • "decltype" '(' "auto" ')'

    "decltype"  shift, and go to state 344
    "auto"      shift, and go to state 345


State 125

  660 nested-name-specifier: type-name • "::"
  1000 simple-type-specifier: type-name •

    "::"  shift, and go to state 346

    "::"      [reduce using rule 1000 (simple-type-specifier)]
    $default  reduce using rule 1000 (simple-type-specifier)


State 126

  238 defining-type-specifier: type-specifier •

    $default  reduce using rule 238 (defining-type-specifier)


State 127

  1094 type-name: typedef-name •

    $default  reduce using rule 1094 (type-name)


State 128

  1119 type-specifier: typename-specifier •

    $default  reduce using rule 1119 (type-specifier)


State 129

  655 namespace-definition: unnamed-namespace-definition •

    $default  reduce using rule 655 (namespace-definition)


State 130

  463 id-expression: unqualified-id •

    $default  reduce using rule 463 (id-expression)


State 131

   98 block-declaration: using-declaration •

    $default  reduce using rule 98 (block-declaration)


State 132

  100 block-declaration: using-directive •

    $default  reduce using rule 100 (block-declaration)


State 133

   99 block-declaration: using-enum-declaration •

    $default  reduce using rule 99 (block-declaration)


State 134

   13 alias-declaration: "using" IDENTIFIER • '=' defining-type-id ';'
   14                  | "using" IDENTIFIER • attribute-specifier-seq '=' defining-type-id ';'
  145 class-name: IDENTIFIER •
  297 enum-name: IDENTIFIER •
  651 namespace-alias: IDENTIFIER •
  657 namespace-name: IDENTIFIER •
  1066 template-name: IDENTIFIER •
  1124 typedef-name: IDENTIFIER •

    '='        shift, and go to state 347
    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    "::"      reduce using rule 145 (class-name)
    "::"      [reduce using rule 297 (enum-name)]
    "::"      [reduce using rule 651 (namespace-alias)]
    "::"      [reduce using rule 657 (namespace-name)]
    "::"      [reduce using rule 1124 (typedef-name)]
    '<'       reduce using rule 1066 (template-name)
    $default  reduce using rule 145 (class-name)

    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 348


State 135

  233 decltype-specifier: "decltype" • '(' expression ')'

    '('  shift, and go to state 349


State 136

  265 elaborated-enum-specifier: "enum" • IDENTIFIER
  266                          | "enum" • nested-name-specifier IDENTIFIER

    IDENTIFIER  shift, and go to state 222
    "::"        shift, and go to state 9
    "decltype"  shift, and go to state 135

    class-name             go to state 66
    decltype-specifier     go to state 139
    enum-name              go to state 85
    namespace-alias        go to state 100
    namespace-name         go to state 103
    nested-name-specifier  go to state 225
    simple-template-id     go to state 142
    template-name          go to state 143
    type-name              go to state 144
    typedef-name           go to state 127


State 137

  1186 using-directive: "using" "namespace" • namespace-name ';'
  1188                | "using" "namespace" • nested-name-specifier namespace-name ';'

    IDENTIFIER  shift, and go to state 258
    "::"        shift, and go to state 9
    "decltype"  shift, and go to state 135

    class-name             go to state 66
    decltype-specifier     go to state 139
    enum-name              go to state 85
    namespace-alias        go to state 100
    namespace-name         go to state 350
    nested-name-specifier  go to state 351
    simple-template-id     go to state 142
    template-name          go to state 143
    type-name              go to state 144
    typedef-name           go to state 127


State 138

  1179 using-declarator: "typename" • nested-name-specifier unqualified-id

    IDENTIFIER  shift, and go to state 258
    "::"        shift, and go to state 9
    "decltype"  shift, and go to state 135

    class-name             go to state 66
    decltype-specifier     go to state 139
    enum-name              go to state 85
    namespace-alias        go to state 100
    namespace-name         go to state 103
    nested-name-specifier  go to state 352
    simple-template-id     go to state 142
    template-name          go to state 143
    type-name              go to state 144
    typedef-name           go to state 127


State 139

  662 nested-name-specifier: decltype-specifier • "::"

    "::"  shift, and go to state 307


State 140

  1189 using-enum-declaration: "using" elaborated-enum-specifier • ';'

    ';'  shift, and go to state 353


State 141

  663 nested-name-specifier: nested-name-specifier • IDENTIFIER "::"
  664                      | nested-name-specifier • simple-template-id "::"
  665                      | nested-name-specifier • "template" simple-template-id "::"
  1180 using-declarator: nested-name-specifier • unqualified-id

    IDENTIFIER  shift, and go to state 354
    "template"  shift, and go to state 355
    "operator"  shift, and go to state 17
    '~'         shift, and go to state 36

    conversion-function-id  go to state 69
    literal-operator-id     go to state 96
    operator-function-id    go to state 109
    simple-template-id      go to state 356
    template-id             go to state 121
    template-name           go to state 143
    unqualified-id          go to state 357


State 142

  146 class-name: simple-template-id •
  1125 typedef-name: simple-template-id •

    IDENTIFIER        reduce using rule 146 (class-name)
    IDENTIFIER        [reduce using rule 1125 (typedef-name)]
    '+'               reduce using rule 146 (class-name)
    '+'               [reduce using rule 1125 (typedef-name)]
    '-'               reduce using rule 146 (class-name)
    '-'               [reduce using rule 1125 (typedef-name)]
    "using"           reduce using rule 146 (class-name)
    "using"           [reduce using rule 1125 (typedef-name)]
    '='               reduce using rule 146 (class-name)
    '='               [reduce using rule 1125 (typedef-name)]
    ';'               reduce using rule 146 (class-name)
    ';'               [reduce using rule 1125 (typedef-name)]
    "alignas"         reduce using rule 146 (class-name)
    "alignas"         [reduce using rule 1125 (typedef-name)]
    '('               reduce using rule 146 (class-name)
    '('               [reduce using rule 1125 (typedef-name)]
    ')'               reduce using rule 146 (class-name)
    ')'               [reduce using rule 1125 (typedef-name)]
    "..."             reduce using rule 146 (class-name)
    "..."             [reduce using rule 1125 (typedef-name)]
    '&'               reduce using rule 146 (class-name)
    '&'               [reduce using rule 1125 (typedef-name)]
    "asm"             reduce using rule 146 (class-name)
    "asm"             [reduce using rule 1125 (typedef-name)]
    "*="              reduce using rule 146 (class-name)
    "*="              [reduce using rule 1125 (typedef-name)]
    "/="              reduce using rule 146 (class-name)
    "/="              [reduce using rule 1125 (typedef-name)]
    "%="              reduce using rule 146 (class-name)
    "%="              [reduce using rule 1125 (typedef-name)]
    "+="              reduce using rule 146 (class-name)
    "+="              [reduce using rule 1125 (typedef-name)]
    "-="              reduce using rule 146 (class-name)
    "-="              [reduce using rule 1125 (typedef-name)]
    ">>="             reduce using rule 146 (class-name)
    ">>="             [reduce using rule 1125 (typedef-name)]
    "<<="             reduce using rule 146 (class-name)
    "<<="             [reduce using rule 1125 (typedef-name)]
    "&="              reduce using rule 146 (class-name)
    "&="              [reduce using rule 1125 (typedef-name)]
    "^="              reduce using rule 146 (class-name)
    "^="              [reduce using rule 1125 (typedef-name)]
    "|="              reduce using rule 146 (class-name)
    "|="              [reduce using rule 1125 (typedef-name)]
    ','               reduce using rule 146 (class-name)
    ','               [reduce using rule 1125 (typedef-name)]
    "::"              reduce using rule 146 (class-name)
    "::"              [reduce using rule 1125 (typedef-name)]
    '['               reduce using rule 146 (class-name)
    '['               [reduce using rule 1125 (typedef-name)]
    ']'               reduce using rule 146 (class-name)
    ']'               [reduce using rule 1125 (typedef-name)]
    ':'               reduce using rule 146 (class-name)
    ':'               [reduce using rule 1125 (typedef-name)]
    '{'               reduce using rule 146 (class-name)
    '{'               [reduce using rule 1125 (typedef-name)]
    '}'               reduce using rule 146 (class-name)
    '}'               [reduce using rule 1125 (typedef-name)]
    "virtual"         reduce using rule 146 (class-name)
    "virtual"         [reduce using rule 1125 (typedef-name)]
    "class"           reduce using rule 146 (class-name)
    "class"           [reduce using rule 1125 (typedef-name)]
    "struct"          reduce using rule 146 (class-name)
    "struct"          [reduce using rule 1125 (typedef-name)]
    "union"           reduce using rule 146 (class-name)
    "union"           [reduce using rule 1125 (typedef-name)]
    "template"        reduce using rule 146 (class-name)
    "template"        [reduce using rule 1125 (typedef-name)]
    "final"           reduce using rule 146 (class-name)
    "final"           [reduce using rule 1125 (typedef-name)]
    "<=>"             reduce using rule 146 (class-name)
    "<=>"             [reduce using rule 1125 (typedef-name)]
    "noexcept"        reduce using rule 146 (class-name)
    "noexcept"        [reduce using rule 1125 (typedef-name)]
    "concept"         reduce using rule 146 (class-name)
    "concept"         [reduce using rule 1125 (typedef-name)]
    '?'               reduce using rule 146 (class-name)
    '?'               [reduce using rule 1125 (typedef-name)]
    "&&"              reduce using rule 146 (class-name)
    "&&"              [reduce using rule 1125 (typedef-name)]
    "||"              reduce using rule 146 (class-name)
    "||"              [reduce using rule 1125 (typedef-name)]
    "operator"        reduce using rule 146 (class-name)
    "operator"        [reduce using rule 1125 (typedef-name)]
    "const"           reduce using rule 146 (class-name)
    "const"           [reduce using rule 1125 (typedef-name)]
    "volatile"        reduce using rule 146 (class-name)
    "volatile"        [reduce using rule 1125 (typedef-name)]
    "friend"          reduce using rule 146 (class-name)
    "friend"          [reduce using rule 1125 (typedef-name)]
    "typedef"         reduce using rule 146 (class-name)
    "typedef"         [reduce using rule 1125 (typedef-name)]
    "constexpr"       reduce using rule 146 (class-name)
    "constexpr"       [reduce using rule 1125 (typedef-name)]
    "consteval"       reduce using rule 146 (class-name)
    "consteval"       [reduce using rule 1125 (typedef-name)]
    "constinit"       reduce using rule 146 (class-name)
    "constinit"       [reduce using rule 1125 (typedef-name)]
    "inline"          reduce using rule 146 (class-name)
    "inline"          [reduce using rule 1125 (typedef-name)]
    "decltype"        reduce using rule 146 (class-name)
    "decltype"        [reduce using rule 1125 (typedef-name)]
    "->"              reduce using rule 146 (class-name)
    "->"              [reduce using rule 1125 (typedef-name)]
    '.'               reduce using rule 146 (class-name)
    '.'               [reduce using rule 1125 (typedef-name)]
    "enum"            reduce using rule 146 (class-name)
    "enum"            [reduce using rule 1125 (typedef-name)]
    "=="              reduce using rule 146 (class-name)
    "=="              [reduce using rule 1125 (typedef-name)]
    "!="              reduce using rule 146 (class-name)
    "!="              [reduce using rule 1125 (typedef-name)]
    '^'               reduce using rule 146 (class-name)
    '^'               [reduce using rule 1125 (typedef-name)]
    "extern"          reduce using rule 146 (class-name)
    "extern"          [reduce using rule 1125 (typedef-name)]
    '<'               reduce using rule 146 (class-name)
    '<'               [reduce using rule 1125 (typedef-name)]
    '>'               reduce using rule 146 (class-name)
    '>'               [reduce using rule 1125 (typedef-name)]
    "explicit"        reduce using rule 146 (class-name)
    "explicit"        [reduce using rule 1125 (typedef-name)]
    "export"          reduce using rule 146 (class-name)
    "export"          [reduce using rule 1125 (typedef-name)]
    "export-keyword"  reduce using rule 146 (class-name)
    "export-keyword"  [reduce using rule 1125 (typedef-name)]
    '*'               reduce using rule 146 (class-name)
    '*'               [reduce using rule 1125 (typedef-name)]
    '/'               reduce using rule 146 (class-name)
    '/'               [reduce using rule 1125 (typedef-name)]
    '%'               reduce using rule 146 (class-name)
    '%'               [reduce using rule 1125 (typedef-name)]
    '|'               reduce using rule 146 (class-name)
    '|'               [reduce using rule 1125 (typedef-name)]
    "<<"              reduce using rule 146 (class-name)
    "<<"              [reduce using rule 1125 (typedef-name)]
    ">>"              reduce using rule 146 (class-name)
    ">>"              [reduce using rule 1125 (typedef-name)]
    "<="              reduce using rule 146 (class-name)
    "<="              [reduce using rule 1125 (typedef-name)]
    ">="              reduce using rule 146 (class-name)
    ">="              [reduce using rule 1125 (typedef-name)]
    ".*"              reduce using rule 146 (class-name)
    ".*"              [reduce using rule 1125 (typedef-name)]
    "->*"             reduce using rule 146 (class-name)
    "->*"             [reduce using rule 1125 (typedef-name)]
    "try"             reduce using rule 146 (class-name)
    "try"             [reduce using rule 1125 (typedef-name)]
    "import-keyword"  reduce using rule 146 (class-name)
    "import-keyword"  [reduce using rule 1125 (typedef-name)]
    "namespace"       reduce using rule 146 (class-name)
    "namespace"       [reduce using rule 1125 (typedef-name)]
    "requires"        reduce using rule 146 (class-name)
    "requires"        [reduce using rule 1125 (typedef-name)]
    '~'               reduce using rule 146 (class-name)
    '~'               [reduce using rule 1125 (typedef-name)]
    "++"              reduce using rule 146 (class-name)
    "++"              [reduce using rule 1125 (typedef-name)]
    "--"              reduce using rule 146 (class-name)
    "--"              [reduce using rule 1125 (typedef-name)]
    "auto"            reduce using rule 146 (class-name)
    "auto"            [reduce using rule 1125 (typedef-name)]
    "char"            reduce using rule 146 (class-name)
    "char"            [reduce using rule 1125 (typedef-name)]
    "char8_t"         reduce using rule 146 (class-name)
    "char8_t"         [reduce using rule 1125 (typedef-name)]
    "char16_t"        reduce using rule 146 (class-name)
    "char16_t"        [reduce using rule 1125 (typedef-name)]
    "char32_t"        reduce using rule 146 (class-name)
    "char32_t"        [reduce using rule 1125 (typedef-name)]
    "wchar_t"         reduce using rule 146 (class-name)
    "wchar_t"         [reduce using rule 1125 (typedef-name)]
    "bool"            reduce using rule 146 (class-name)
    "bool"            [reduce using rule 1125 (typedef-name)]
    "short"           reduce using rule 146 (class-name)
    "short"           [reduce using rule 1125 (typedef-name)]
    "int"             reduce using rule 146 (class-name)
    "int"             [reduce using rule 1125 (typedef-name)]
    "long"            reduce using rule 146 (class-name)
    "long"            [reduce using rule 1125 (typedef-name)]
    "signed"          reduce using rule 146 (class-name)
    "signed"          [reduce using rule 1125 (typedef-name)]
    "unsigned"        reduce using rule 146 (class-name)
    "unsigned"        [reduce using rule 1125 (typedef-name)]
    "float"           reduce using rule 146 (class-name)
    "float"           [reduce using rule 1125 (typedef-name)]
    "double"          reduce using rule 146 (class-name)
    "double"          [reduce using rule 1125 (typedef-name)]
    "void"            reduce using rule 146 (class-name)
    "void"            [reduce using rule 1125 (typedef-name)]
    "static_assert"   reduce using rule 146 (class-name)
    "static_assert"   [reduce using rule 1125 (typedef-name)]
    "static"          reduce using rule 146 (class-name)
    "static"          [reduce using rule 1125 (typedef-name)]
    "thread_local"    reduce using rule 146 (class-name)
    "thread_local"    [reduce using rule 1125 (typedef-name)]
    "mutable"         reduce using rule 146 (class-name)
    "mutable"         [reduce using rule 1125 (typedef-name)]
    "typename"        reduce using rule 146 (class-name)
    "typename"        [reduce using rule 1125 (typedef-name)]
    "override"        reduce using rule 146 (class-name)
    "override"        [reduce using rule 1125 (typedef-name)]
    $default          reduce using rule 146 (class-name)


State 143

  997 simple-template-id: template-name • '<' '>'
  998                   | template-name • '<' template-argument-list '>'

    '<'  shift, and go to state 342


State 144

  660 nested-name-specifier: type-name • "::"

    "::"  shift, and go to state 346


State 145

  1181 using-declarator-list: using-declarator •
  1182                      | using-declarator • "..."

    "..."  shift, and go to state 358

    $default  reduce using rule 1181 (using-declarator-list)


State 146

  1178 using-declaration: "using" using-declarator-list • ';'
  1183 using-declarator-list: using-declarator-list • ',' using-declarator
  1184                      | using-declarator-list • ',' using-declarator "..."

    ';'  shift, and go to state 359
    ','  shift, and go to state 360


State 147

   15 alignment-specifier: "alignas" '(' • type-id ')'
   16                    | "alignas" '(' • type-id "..." ')'
   17                    | "alignas" '(' • constant-expression ')'
   18                    | "alignas" '(' • constant-expression "..." ')'

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 136
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    additive-expression                  go to state 404
    and-expression                       go to state 405
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-key                            go to state 210
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 412
    constant-expression                  go to state 413
    conversion-function-id               go to state 69
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 435
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-id                              go to state 451
    type-name                            go to state 125
    type-specifier                       go to state 217
    type-specifier-seq                   go to state 452
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 148

  145 class-name: IDENTIFIER •
  297 enum-name: IDENTIFIER •
  651 namespace-alias: IDENTIFIER •
  657 namespace-name: IDENTIFIER •
  1066 template-name: IDENTIFIER •
  1124 typedef-name: IDENTIFIER •
  1154 unqualified-id: IDENTIFIER •

    "::"      reduce using rule 145 (class-name)
    "::"      [reduce using rule 297 (enum-name)]
    "::"      [reduce using rule 651 (namespace-alias)]
    "::"      [reduce using rule 657 (namespace-name)]
    "::"      [reduce using rule 1124 (typedef-name)]
    "::"      [reduce using rule 1154 (unqualified-id)]
    '<'       reduce using rule 1066 (template-name)
    '<'       [reduce using rule 1154 (unqualified-id)]
    $default  reduce using rule 1154 (unqualified-id)


State 149

  663 nested-name-specifier: nested-name-specifier • IDENTIFIER "::"
  664                      | nested-name-specifier • simple-template-id "::"
  665                      | nested-name-specifier • "template" simple-template-id "::"
  905 ptr-operator: nested-name-specifier • '*'
  906             | nested-name-specifier • '*' attribute-specifier-seq
  907             | nested-name-specifier • '*' cv-qualifier-seq
  908             | nested-name-specifier • '*' attribute-specifier-seq cv-qualifier-seq
  913 qualified-id: nested-name-specifier • unqualified-id
  914             | nested-name-specifier • "template" unqualified-id

    IDENTIFIER  shift, and go to state 354
    "template"  shift, and go to state 461
    "operator"  shift, and go to state 17
    '*'         shift, and go to state 327
    '~'         shift, and go to state 36

    conversion-function-id  go to state 69
    literal-operator-id     go to state 96
    operator-function-id    go to state 109
    simple-template-id      go to state 356
    template-id             go to state 121
    template-name           go to state 143
    unqualified-id          go to state 332


State 150

  727 noptr-declarator: noptr-declarator • parameters-and-qualifiers
  728                 | noptr-declarator • '[' ']'
  729                 | noptr-declarator • '[' constant-expression ']'
  730                 | noptr-declarator • '[' ']' attribute-specifier-seq
  731                 | noptr-declarator • '[' constant-expression ']' attribute-specifier-seq
  895 ptr-declarator: noptr-declarator •

    '('  shift, and go to state 333
    '['  shift, and go to state 334

    '('       [reduce using rule 895 (ptr-declarator)]
    $default  reduce using rule 895 (ptr-declarator)

    parameters-and-qualifiers  go to state 462


State 151

  732 noptr-declarator: '(' ptr-declarator • ')'

    ')'  shift, and go to state 463


State 152

  231 declarator-id: "..." id-expression •

    $default  reduce using rule 231 (declarator-id)


State 153

  663 nested-name-specifier: nested-name-specifier • IDENTIFIER "::"
  664                      | nested-name-specifier • simple-template-id "::"
  665                      | nested-name-specifier • "template" simple-template-id "::"
  913 qualified-id: nested-name-specifier • unqualified-id
  914             | nested-name-specifier • "template" unqualified-id

    IDENTIFIER  shift, and go to state 354
    "template"  shift, and go to state 461
    "operator"  shift, and go to state 17
    '~'         shift, and go to state 36

    conversion-function-id  go to state 69
    literal-operator-id     go to state 96
    operator-function-id    go to state 109
    simple-template-id      go to state 356
    template-id             go to state 121
    template-name           go to state 143
    unqualified-id          go to state 332


State 154

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  902 ptr-operator: '&' attribute-specifier-seq •

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    "alignas"  [reduce using rule 902 (ptr-operator)]
    '['        [reduce using rule 902 (ptr-operator)]
    $default   reduce using rule 902 (ptr-operator)

    alignment-specifier  go to state 58
    attribute-specifier  go to state 265


State 155

   22 asm-declaration: "asm" '(' • string-literal ')' ';'

    "u8"  shift, and go to state 185
    'u'   shift, and go to state 186
    'U'   shift, and go to state 187
    'L'   shift, and go to state 188
    '"'   shift, and go to state 203
    'R'   shift, and go to state 209

    encoding-prefix  go to state 212
    string-literal   go to state 464


State 156

   50 attribute-specifier: '[' '[' • attribute-list ']' ']'
   51                    | '[' '[' • attribute-using-prefix attribute-list ']' ']'

    IDENTIFIER  shift, and go to state 465
    "using"     shift, and go to state 466

    attribute               go to state 467
    attribute-list          go to state 468
    attribute-namespace     go to state 469
    attribute-scoped-token  go to state 470
    attribute-token         go to state 471
    attribute-using-prefix  go to state 472


State 157

  324 explicit-specialization: "template" '<' • '>' declaration
  1059 template-head: "template" '<' • template-parameter-list '>'
  1060              | "template" '<' • template-parameter-list '>' requires-clause

    IDENTIFIER      shift, and go to state 161
    "alignas"       shift, and go to state 4
    "::"            shift, and go to state 9
    '['             shift, and go to state 10
    "virtual"       shift, and go to state 11
    "class"         shift, and go to state 473
    "struct"        shift, and go to state 13
    "union"         shift, and go to state 14
    "template"      shift, and go to state 474
    "const"         shift, and go to state 18
    "volatile"      shift, and go to state 19
    "friend"        shift, and go to state 20
    "typedef"       shift, and go to state 21
    "constexpr"     shift, and go to state 22
    "consteval"     shift, and go to state 23
    "constinit"     shift, and go to state 24
    "inline"        shift, and go to state 263
    "decltype"      shift, and go to state 26
    "enum"          shift, and go to state 27
    "extern"        shift, and go to state 264
    '>'             shift, and go to state 475
    "explicit"      shift, and go to state 29
    "this"          shift, and go to state 476
    "auto"          shift, and go to state 37
    "char"          shift, and go to state 38
    "char8_t"       shift, and go to state 39
    "char16_t"      shift, and go to state 40
    "char32_t"      shift, and go to state 41
    "wchar_t"       shift, and go to state 42
    "bool"          shift, and go to state 43
    "short"         shift, and go to state 44
    "int"           shift, and go to state 45
    "long"          shift, and go to state 46
    "signed"        shift, and go to state 47
    "unsigned"      shift, and go to state 48
    "float"         shift, and go to state 49
    "double"        shift, and go to state 50
    "void"          shift, and go to state 51
    "static"        shift, and go to state 53
    "thread_local"  shift, and go to state 54
    "mutable"       shift, and go to state 55
    "typename"      shift, and go to state 477

    alignment-specifier         go to state 58
    attribute-specifier         go to state 61
    attribute-specifier-seq     go to state 478
    class-head                  go to state 64
    class-key                   go to state 65
    class-name                  go to state 66
    class-specifier             go to state 67
    concept-name                go to state 68
    cv-qualifier                go to state 70
    decl-specifier              go to state 71
    decl-specifier-seq          go to state 479
    decltype-specifier          go to state 77
    defining-type-specifier     go to state 79
    elaborated-enum-specifier   go to state 80
    elaborated-type-specifier   go to state 81
    enum-head                   go to state 83
    enum-key                    go to state 268
    enum-name                   go to state 85
    enum-specifier              go to state 86
    explicit-specifier          go to state 269
    function-specifier          go to state 92
    namespace-alias             go to state 100
    namespace-name              go to state 103
    nested-name-specifier       go to state 213
    parameter-declaration       go to state 480
    placeholder-type-specifier  go to state 110
    simple-template-id          go to state 142
    simple-type-specifier       go to state 116
    storage-class-specifier     go to state 118
    template-head               go to state 481
    template-name               go to state 216
    template-parameter          go to state 482
    template-parameter-list     go to state 483
    type-constraint             go to state 484
    type-name                   go to state 125
    type-parameter              go to state 485
    type-parameter-key          go to state 486
    type-specifier              go to state 126
    typedef-name                go to state 127
    typename-specifier          go to state 128


State 158

  334 export-declaration: "export-keyword" • module-import-declaration

    "import-keyword"  shift, and go to state 34

    module-import-declaration  go to state 232


State 159

  323 explicit-instantiation: "template" declaration •

    $default  reduce using rule 323 (explicit-instantiation)


State 160

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  904 ptr-operator: "&&" attribute-specifier-seq •

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    "alignas"  [reduce using rule 904 (ptr-operator)]
    '['        [reduce using rule 904 (ptr-operator)]
    $default   reduce using rule 904 (ptr-operator)

    alignment-specifier  go to state 58
    attribute-specifier  go to state 265


State 161

  145 class-name: IDENTIFIER •
  163 concept-name: IDENTIFIER •
  297 enum-name: IDENTIFIER •
  651 namespace-alias: IDENTIFIER •
  657 namespace-name: IDENTIFIER •
  1066 template-name: IDENTIFIER •
  1124 typedef-name: IDENTIFIER •

    IDENTIFIER        reduce using rule 145 (class-name)
    IDENTIFIER        [reduce using rule 163 (concept-name)]
    IDENTIFIER        [reduce using rule 297 (enum-name)]
    IDENTIFIER        [reduce using rule 1066 (template-name)]
    IDENTIFIER        [reduce using rule 1124 (typedef-name)]
    '+'               reduce using rule 145 (class-name)
    '+'               [reduce using rule 297 (enum-name)]
    '+'               [reduce using rule 1066 (template-name)]
    '+'               [reduce using rule 1124 (typedef-name)]
    '-'               reduce using rule 145 (class-name)
    '-'               [reduce using rule 297 (enum-name)]
    '-'               [reduce using rule 1066 (template-name)]
    '-'               [reduce using rule 1124 (typedef-name)]
    "using"           reduce using rule 145 (class-name)
    "using"           [reduce using rule 297 (enum-name)]
    "using"           [reduce using rule 1066 (template-name)]
    "using"           [reduce using rule 1124 (typedef-name)]
    '='               reduce using rule 145 (class-name)
    '='               [reduce using rule 163 (concept-name)]
    '='               [reduce using rule 297 (enum-name)]
    '='               [reduce using rule 1066 (template-name)]
    '='               [reduce using rule 1124 (typedef-name)]
    ';'               reduce using rule 145 (class-name)
    ';'               [reduce using rule 163 (concept-name)]
    ';'               [reduce using rule 297 (enum-name)]
    ';'               [reduce using rule 1066 (template-name)]
    ';'               [reduce using rule 1124 (typedef-name)]
    "alignas"         reduce using rule 145 (class-name)
    "alignas"         [reduce using rule 297 (enum-name)]
    "alignas"         [reduce using rule 1066 (template-name)]
    "alignas"         [reduce using rule 1124 (typedef-name)]
    '('               reduce using rule 145 (class-name)
    '('               [reduce using rule 297 (enum-name)]
    '('               [reduce using rule 1066 (template-name)]
    '('               [reduce using rule 1124 (typedef-name)]
    ')'               reduce using rule 145 (class-name)
    ')'               [reduce using rule 297 (enum-name)]
    ')'               [reduce using rule 1066 (template-name)]
    ')'               [reduce using rule 1124 (typedef-name)]
    "..."             reduce using rule 145 (class-name)
    "..."             [reduce using rule 163 (concept-name)]
    "..."             [reduce using rule 297 (enum-name)]
    "..."             [reduce using rule 1066 (template-name)]
    "..."             [reduce using rule 1124 (typedef-name)]
    '&'               reduce using rule 145 (class-name)
    '&'               [reduce using rule 297 (enum-name)]
    '&'               [reduce using rule 1066 (template-name)]
    '&'               [reduce using rule 1124 (typedef-name)]
    "asm"             reduce using rule 145 (class-name)
    "asm"             [reduce using rule 297 (enum-name)]
    "asm"             [reduce using rule 1066 (template-name)]
    "asm"             [reduce using rule 1124 (typedef-name)]
    "*="              reduce using rule 145 (class-name)
    "*="              [reduce using rule 297 (enum-name)]
    "*="              [reduce using rule 1066 (template-name)]
    "*="              [reduce using rule 1124 (typedef-name)]
    "/="              reduce using rule 145 (class-name)
    "/="              [reduce using rule 297 (enum-name)]
    "/="              [reduce using rule 1066 (template-name)]
    "/="              [reduce using rule 1124 (typedef-name)]
    "%="              reduce using rule 145 (class-name)
    "%="              [reduce using rule 297 (enum-name)]
    "%="              [reduce using rule 1066 (template-name)]
    "%="              [reduce using rule 1124 (typedef-name)]
    "+="              reduce using rule 145 (class-name)
    "+="              [reduce using rule 297 (enum-name)]
    "+="              [reduce using rule 1066 (template-name)]
    "+="              [reduce using rule 1124 (typedef-name)]
    "-="              reduce using rule 145 (class-name)
    "-="              [reduce using rule 297 (enum-name)]
    "-="              [reduce using rule 1066 (template-name)]
    "-="              [reduce using rule 1124 (typedef-name)]
    ">>="             reduce using rule 145 (class-name)
    ">>="             [reduce using rule 297 (enum-name)]
    ">>="             [reduce using rule 1066 (template-name)]
    ">>="             [reduce using rule 1124 (typedef-name)]
    "<<="             reduce using rule 145 (class-name)
    "<<="             [reduce using rule 297 (enum-name)]
    "<<="             [reduce using rule 1066 (template-name)]
    "<<="             [reduce using rule 1124 (typedef-name)]
    "&="              reduce using rule 145 (class-name)
    "&="              [reduce using rule 297 (enum-name)]
    "&="              [reduce using rule 1066 (template-name)]
    "&="              [reduce using rule 1124 (typedef-name)]
    "^="              reduce using rule 145 (class-name)
    "^="              [reduce using rule 297 (enum-name)]
    "^="              [reduce using rule 1066 (template-name)]
    "^="              [reduce using rule 1124 (typedef-name)]
    "|="              reduce using rule 145 (class-name)
    "|="              [reduce using rule 297 (enum-name)]
    "|="              [reduce using rule 1066 (template-name)]
    "|="              [reduce using rule 1124 (typedef-name)]
    ','               reduce using rule 145 (class-name)
    ','               [reduce using rule 163 (concept-name)]
    ','               [reduce using rule 297 (enum-name)]
    ','               [reduce using rule 1066 (template-name)]
    ','               [reduce using rule 1124 (typedef-name)]
    "::"              reduce using rule 145 (class-name)
    "::"              [reduce using rule 297 (enum-name)]
    "::"              [reduce using rule 651 (namespace-alias)]
    "::"              [reduce using rule 657 (namespace-name)]
    "::"              [reduce using rule 1066 (template-name)]
    "::"              [reduce using rule 1124 (typedef-name)]
    '['               reduce using rule 145 (class-name)
    '['               [reduce using rule 297 (enum-name)]
    '['               [reduce using rule 1066 (template-name)]
    '['               [reduce using rule 1124 (typedef-name)]
    ']'               reduce using rule 145 (class-name)
    ']'               [reduce using rule 297 (enum-name)]
    ']'               [reduce using rule 1066 (template-name)]
    ']'               [reduce using rule 1124 (typedef-name)]
    ':'               reduce using rule 145 (class-name)
    ':'               [reduce using rule 297 (enum-name)]
    ':'               [reduce using rule 1066 (template-name)]
    ':'               [reduce using rule 1124 (typedef-name)]
    '{'               reduce using rule 145 (class-name)
    '{'               [reduce using rule 297 (enum-name)]
    '{'               [reduce using rule 1066 (template-name)]
    '{'               [reduce using rule 1124 (typedef-name)]
    '}'               reduce using rule 145 (class-name)
    '}'               [reduce using rule 297 (enum-name)]
    '}'               [reduce using rule 1066 (template-name)]
    '}'               [reduce using rule 1124 (typedef-name)]
    "virtual"         reduce using rule 145 (class-name)
    "virtual"         [reduce using rule 297 (enum-name)]
    "virtual"         [reduce using rule 1066 (template-name)]
    "virtual"         [reduce using rule 1124 (typedef-name)]
    "class"           reduce using rule 145 (class-name)
    "class"           [reduce using rule 297 (enum-name)]
    "class"           [reduce using rule 1066 (template-name)]
    "class"           [reduce using rule 1124 (typedef-name)]
    "struct"          reduce using rule 145 (class-name)
    "struct"          [reduce using rule 297 (enum-name)]
    "struct"          [reduce using rule 1066 (template-name)]
    "struct"          [reduce using rule 1124 (typedef-name)]
    "union"           reduce using rule 145 (class-name)
    "union"           [reduce using rule 297 (enum-name)]
    "union"           [reduce using rule 1066 (template-name)]
    "union"           [reduce using rule 1124 (typedef-name)]
    "template"        reduce using rule 145 (class-name)
    "template"        [reduce using rule 297 (enum-name)]
    "template"        [reduce using rule 1066 (template-name)]
    "template"        [reduce using rule 1124 (typedef-name)]
    "final"           reduce using rule 145 (class-name)
    "final"           [reduce using rule 297 (enum-name)]
    "final"           [reduce using rule 1066 (template-name)]
    "final"           [reduce using rule 1124 (typedef-name)]
    "<=>"             reduce using rule 145 (class-name)
    "<=>"             [reduce using rule 297 (enum-name)]
    "<=>"             [reduce using rule 1066 (template-name)]
    "<=>"             [reduce using rule 1124 (typedef-name)]
    "noexcept"        reduce using rule 145 (class-name)
    "noexcept"        [reduce using rule 297 (enum-name)]
    "noexcept"        [reduce using rule 1066 (template-name)]
    "noexcept"        [reduce using rule 1124 (typedef-name)]
    "concept"         reduce using rule 145 (class-name)
    "concept"         [reduce using rule 297 (enum-name)]
    "concept"         [reduce using rule 1066 (template-name)]
    "concept"         [reduce using rule 1124 (typedef-name)]
    '?'               reduce using rule 145 (class-name)
    '?'               [reduce using rule 297 (enum-name)]
    '?'               [reduce using rule 1066 (template-name)]
    '?'               [reduce using rule 1124 (typedef-name)]
    "&&"              reduce using rule 145 (class-name)
    "&&"              [reduce using rule 297 (enum-name)]
    "&&"              [reduce using rule 1066 (template-name)]
    "&&"              [reduce using rule 1124 (typedef-name)]
    "||"              reduce using rule 145 (class-name)
    "||"              [reduce using rule 297 (enum-name)]
    "||"              [reduce using rule 1066 (template-name)]
    "||"              [reduce using rule 1124 (typedef-name)]
    "operator"        reduce using rule 145 (class-name)
    "operator"        [reduce using rule 297 (enum-name)]
    "operator"        [reduce using rule 1066 (template-name)]
    "operator"        [reduce using rule 1124 (typedef-name)]
    "const"           reduce using rule 145 (class-name)
    "const"           [reduce using rule 297 (enum-name)]
    "const"           [reduce using rule 1066 (template-name)]
    "const"           [reduce using rule 1124 (typedef-name)]
    "volatile"        reduce using rule 145 (class-name)
    "volatile"        [reduce using rule 297 (enum-name)]
    "volatile"        [reduce using rule 1066 (template-name)]
    "volatile"        [reduce using rule 1124 (typedef-name)]
    "friend"          reduce using rule 145 (class-name)
    "friend"          [reduce using rule 297 (enum-name)]
    "friend"          [reduce using rule 1066 (template-name)]
    "friend"          [reduce using rule 1124 (typedef-name)]
    "typedef"         reduce using rule 145 (class-name)
    "typedef"         [reduce using rule 297 (enum-name)]
    "typedef"         [reduce using rule 1066 (template-name)]
    "typedef"         [reduce using rule 1124 (typedef-name)]
    "constexpr"       reduce using rule 145 (class-name)
    "constexpr"       [reduce using rule 297 (enum-name)]
    "constexpr"       [reduce using rule 1066 (template-name)]
    "constexpr"       [reduce using rule 1124 (typedef-name)]
    "consteval"       reduce using rule 145 (class-name)
    "consteval"       [reduce using rule 297 (enum-name)]
    "consteval"       [reduce using rule 1066 (template-name)]
    "consteval"       [reduce using rule 1124 (typedef-name)]
    "constinit"       reduce using rule 145 (class-name)
    "constinit"       [reduce using rule 297 (enum-name)]
    "constinit"       [reduce using rule 1066 (template-name)]
    "constinit"       [reduce using rule 1124 (typedef-name)]
    "inline"          reduce using rule 145 (class-name)
    "inline"          [reduce using rule 297 (enum-name)]
    "inline"          [reduce using rule 1066 (template-name)]
    "inline"          [reduce using rule 1124 (typedef-name)]
    "decltype"        reduce using rule 145 (class-name)
    "decltype"        [reduce using rule 163 (concept-name)]
    "decltype"        [reduce using rule 297 (enum-name)]
    "decltype"        [reduce using rule 1066 (template-name)]
    "decltype"        [reduce using rule 1124 (typedef-name)]
    "->"              reduce using rule 145 (class-name)
    "->"              [reduce using rule 297 (enum-name)]
    "->"              [reduce using rule 1066 (template-name)]
    "->"              [reduce using rule 1124 (typedef-name)]
    '.'               reduce using rule 145 (class-name)
    '.'               [reduce using rule 297 (enum-name)]
    '.'               [reduce using rule 1066 (template-name)]
    '.'               [reduce using rule 1124 (typedef-name)]
    "enum"            reduce using rule 145 (class-name)
    "enum"            [reduce using rule 297 (enum-name)]
    "enum"            [reduce using rule 1066 (template-name)]
    "enum"            [reduce using rule 1124 (typedef-name)]
    "=="              reduce using rule 145 (class-name)
    "=="              [reduce using rule 297 (enum-name)]
    "=="              [reduce using rule 1066 (template-name)]
    "=="              [reduce using rule 1124 (typedef-name)]
    "!="              reduce using rule 145 (class-name)
    "!="              [reduce using rule 297 (enum-name)]
    "!="              [reduce using rule 1066 (template-name)]
    "!="              [reduce using rule 1124 (typedef-name)]
    '^'               reduce using rule 145 (class-name)
    '^'               [reduce using rule 297 (enum-name)]
    '^'               [reduce using rule 1066 (template-name)]
    '^'               [reduce using rule 1124 (typedef-name)]
    "extern"          reduce using rule 145 (class-name)
    "extern"          [reduce using rule 297 (enum-name)]
    "extern"          [reduce using rule 1066 (template-name)]
    "extern"          [reduce using rule 1124 (typedef-name)]
    '<'               reduce using rule 145 (class-name)
    '<'               [reduce using rule 163 (concept-name)]
    '<'               [reduce using rule 297 (enum-name)]
    '<'               [reduce using rule 1066 (template-name)]
    '<'               [reduce using rule 1124 (typedef-name)]
    '>'               reduce using rule 145 (class-name)
    '>'               [reduce using rule 163 (concept-name)]
    '>'               [reduce using rule 297 (enum-name)]
    '>'               [reduce using rule 1066 (template-name)]
    '>'               [reduce using rule 1124 (typedef-name)]
    "explicit"        reduce using rule 145 (class-name)
    "explicit"        [reduce using rule 297 (enum-name)]
    "explicit"        [reduce using rule 1066 (template-name)]
    "explicit"        [reduce using rule 1124 (typedef-name)]
    "export"          reduce using rule 145 (class-name)
    "export"          [reduce using rule 297 (enum-name)]
    "export"          [reduce using rule 1066 (template-name)]
    "export"          [reduce using rule 1124 (typedef-name)]
    "export-keyword"  reduce using rule 145 (class-name)
    "export-keyword"  [reduce using rule 297 (enum-name)]
    "export-keyword"  [reduce using rule 1066 (template-name)]
    "export-keyword"  [reduce using rule 1124 (typedef-name)]
    '*'               reduce using rule 145 (class-name)
    '*'               [reduce using rule 297 (enum-name)]
    '*'               [reduce using rule 1066 (template-name)]
    '*'               [reduce using rule 1124 (typedef-name)]
    '/'               reduce using rule 145 (class-name)
    '/'               [reduce using rule 297 (enum-name)]
    '/'               [reduce using rule 1066 (template-name)]
    '/'               [reduce using rule 1124 (typedef-name)]
    '%'               reduce using rule 145 (class-name)
    '%'               [reduce using rule 297 (enum-name)]
    '%'               [reduce using rule 1066 (template-name)]
    '%'               [reduce using rule 1124 (typedef-name)]
    '|'               reduce using rule 145 (class-name)
    '|'               [reduce using rule 297 (enum-name)]
    '|'               [reduce using rule 1066 (template-name)]
    '|'               [reduce using rule 1124 (typedef-name)]
    "<<"              reduce using rule 145 (class-name)
    "<<"              [reduce using rule 297 (enum-name)]
    "<<"              [reduce using rule 1066 (template-name)]
    "<<"              [reduce using rule 1124 (typedef-name)]
    ">>"              reduce using rule 145 (class-name)
    ">>"              [reduce using rule 297 (enum-name)]
    ">>"              [reduce using rule 1066 (template-name)]
    ">>"              [reduce using rule 1124 (typedef-name)]
    "<="              reduce using rule 145 (class-name)
    "<="              [reduce using rule 297 (enum-name)]
    "<="              [reduce using rule 1066 (template-name)]
    "<="              [reduce using rule 1124 (typedef-name)]
    ">="              reduce using rule 145 (class-name)
    ">="              [reduce using rule 297 (enum-name)]
    ">="              [reduce using rule 1066 (template-name)]
    ">="              [reduce using rule 1124 (typedef-name)]
    ".*"              reduce using rule 145 (class-name)
    ".*"              [reduce using rule 297 (enum-name)]
    ".*"              [reduce using rule 1066 (template-name)]
    ".*"              [reduce using rule 1124 (typedef-name)]
    "->*"             reduce using rule 145 (class-name)
    "->*"             [reduce using rule 297 (enum-name)]
    "->*"             [reduce using rule 1066 (template-name)]
    "->*"             [reduce using rule 1124 (typedef-name)]
    "try"             reduce using rule 145 (class-name)
    "try"             [reduce using rule 297 (enum-name)]
    "try"             [reduce using rule 1066 (template-name)]
    "try"             [reduce using rule 1124 (typedef-name)]
    "import-keyword"  reduce using rule 145 (class-name)
    "import-keyword"  [reduce using rule 297 (enum-name)]
    "import-keyword"  [reduce using rule 1066 (template-name)]
    "import-keyword"  [reduce using rule 1124 (typedef-name)]
    "namespace"       reduce using rule 145 (class-name)
    "namespace"       [reduce using rule 297 (enum-name)]
    "namespace"       [reduce using rule 1066 (template-name)]
    "namespace"       [reduce using rule 1124 (typedef-name)]
    "requires"        reduce using rule 145 (class-name)
    "requires"        [reduce using rule 297 (enum-name)]
    "requires"        [reduce using rule 1066 (template-name)]
    "requires"        [reduce using rule 1124 (typedef-name)]
    '~'               reduce using rule 145 (class-name)
    '~'               [reduce using rule 297 (enum-name)]
    '~'               [reduce using rule 1066 (template-name)]
    '~'               [reduce using rule 1124 (typedef-name)]
    "++"              reduce using rule 145 (class-name)
    "++"              [reduce using rule 297 (enum-name)]
    "++"              [reduce using rule 1066 (template-name)]
    "++"              [reduce using rule 1124 (typedef-name)]
    "--"              reduce using rule 145 (class-name)
    "--"              [reduce using rule 297 (enum-name)]
    "--"              [reduce using rule 1066 (template-name)]
    "--"              [reduce using rule 1124 (typedef-name)]
    "auto"            reduce using rule 145 (class-name)
    "auto"            [reduce using rule 163 (concept-name)]
    "auto"            [reduce using rule 297 (enum-name)]
    "auto"            [reduce using rule 1066 (template-name)]
    "auto"            [reduce using rule 1124 (typedef-name)]
    "char"            reduce using rule 145 (class-name)
    "char"            [reduce using rule 297 (enum-name)]
    "char"            [reduce using rule 1066 (template-name)]
    "char"            [reduce using rule 1124 (typedef-name)]
    "char8_t"         reduce using rule 145 (class-name)
    "char8_t"         [reduce using rule 297 (enum-name)]
    "char8_t"         [reduce using rule 1066 (template-name)]
    "char8_t"         [reduce using rule 1124 (typedef-name)]
    "char16_t"        reduce using rule 145 (class-name)
    "char16_t"        [reduce using rule 297 (enum-name)]
    "char16_t"        [reduce using rule 1066 (template-name)]
    "char16_t"        [reduce using rule 1124 (typedef-name)]
    "char32_t"        reduce using rule 145 (class-name)
    "char32_t"        [reduce using rule 297 (enum-name)]
    "char32_t"        [reduce using rule 1066 (template-name)]
    "char32_t"        [reduce using rule 1124 (typedef-name)]
    "wchar_t"         reduce using rule 145 (class-name)
    "wchar_t"         [reduce using rule 297 (enum-name)]
    "wchar_t"         [reduce using rule 1066 (template-name)]
    "wchar_t"         [reduce using rule 1124 (typedef-name)]
    "bool"            reduce using rule 145 (class-name)
    "bool"            [reduce using rule 297 (enum-name)]
    "bool"            [reduce using rule 1066 (template-name)]
    "bool"            [reduce using rule 1124 (typedef-name)]
    "short"           reduce using rule 145 (class-name)
    "short"           [reduce using rule 297 (enum-name)]
    "short"           [reduce using rule 1066 (template-name)]
    "short"           [reduce using rule 1124 (typedef-name)]
    "int"             reduce using rule 145 (class-name)
    "int"             [reduce using rule 297 (enum-name)]
    "int"             [reduce using rule 1066 (template-name)]
    "int"             [reduce using rule 1124 (typedef-name)]
    "long"            reduce using rule 145 (class-name)
    "long"            [reduce using rule 297 (enum-name)]
    "long"            [reduce using rule 1066 (template-name)]
    "long"            [reduce using rule 1124 (typedef-name)]
    "signed"          reduce using rule 145 (class-name)
    "signed"          [reduce using rule 297 (enum-name)]
    "signed"          [reduce using rule 1066 (template-name)]
    "signed"          [reduce using rule 1124 (typedef-name)]
    "unsigned"        reduce using rule 145 (class-name)
    "unsigned"        [reduce using rule 297 (enum-name)]
    "unsigned"        [reduce using rule 1066 (template-name)]
    "unsigned"        [reduce using rule 1124 (typedef-name)]
    "float"           reduce using rule 145 (class-name)
    "float"           [reduce using rule 297 (enum-name)]
    "float"           [reduce using rule 1066 (template-name)]
    "float"           [reduce using rule 1124 (typedef-name)]
    "double"          reduce using rule 145 (class-name)
    "double"          [reduce using rule 297 (enum-name)]
    "double"          [reduce using rule 1066 (template-name)]
    "double"          [reduce using rule 1124 (typedef-name)]
    "void"            reduce using rule 145 (class-name)
    "void"            [reduce using rule 297 (enum-name)]
    "void"            [reduce using rule 1066 (template-name)]
    "void"            [reduce using rule 1124 (typedef-name)]
    "static_assert"   reduce using rule 145 (class-name)
    "static_assert"   [reduce using rule 297 (enum-name)]
    "static_assert"   [reduce using rule 1066 (template-name)]
    "static_assert"   [reduce using rule 1124 (typedef-name)]
    "static"          reduce using rule 145 (class-name)
    "static"          [reduce using rule 297 (enum-name)]
    "static"          [reduce using rule 1066 (template-name)]
    "static"          [reduce using rule 1124 (typedef-name)]
    "thread_local"    reduce using rule 145 (class-name)
    "thread_local"    [reduce using rule 297 (enum-name)]
    "thread_local"    [reduce using rule 1066 (template-name)]
    "thread_local"    [reduce using rule 1124 (typedef-name)]
    "mutable"         reduce using rule 145 (class-name)
    "mutable"         [reduce using rule 297 (enum-name)]
    "mutable"         [reduce using rule 1066 (template-name)]
    "mutable"         [reduce using rule 1124 (typedef-name)]
    "typename"        reduce using rule 145 (class-name)
    "typename"        [reduce using rule 297 (enum-name)]
    "typename"        [reduce using rule 1066 (template-name)]
    "typename"        [reduce using rule 1124 (typedef-name)]
    "override"        reduce using rule 145 (class-name)
    "override"        [reduce using rule 297 (enum-name)]
    "override"        [reduce using rule 1066 (template-name)]
    "override"        [reduce using rule 1124 (typedef-name)]
    $default          reduce using rule 145 (class-name)


State 162

  773 overloadable-operator: '+' •

    $default  reduce using rule 773 (overloadable-operator)


State 163

  774 overloadable-operator: '-' •

    $default  reduce using rule 774 (overloadable-operator)


State 164

  781 overloadable-operator: '=' •

    $default  reduce using rule 781 (overloadable-operator)


State 165

  767 overloadable-operator: '(' • ')'

    ')'  shift, and go to state 487


State 166

  779 overloadable-operator: '&' •

    $default  reduce using rule 779 (overloadable-operator)


State 167

  784 overloadable-operator: "*=" •

    $default  reduce using rule 784 (overloadable-operator)


State 168

  785 overloadable-operator: "/=" •

    $default  reduce using rule 785 (overloadable-operator)


State 169

  786 overloadable-operator: "%=" •

    $default  reduce using rule 786 (overloadable-operator)


State 170

  782 overloadable-operator: "+=" •

    $default  reduce using rule 782 (overloadable-operator)


State 171

  783 overloadable-operator: "-=" •

    $default  reduce using rule 783 (overloadable-operator)


State 172

  802 overloadable-operator: ">>=" •

    $default  reduce using rule 802 (overloadable-operator)


State 173

  801 overloadable-operator: "<<=" •

    $default  reduce using rule 801 (overloadable-operator)


State 174

  788 overloadable-operator: "&=" •

    $default  reduce using rule 788 (overloadable-operator)


State 175

  787 overloadable-operator: "^=" •

    $default  reduce using rule 787 (overloadable-operator)


State 176

  789 overloadable-operator: "|=" •

    $default  reduce using rule 789 (overloadable-operator)


State 177

  805 overloadable-operator: ',' •

    $default  reduce using rule 805 (overloadable-operator)


State 178

  768 overloadable-operator: '[' • ']'

    ']'  shift, and go to state 488


State 179

  766 overloadable-operator: "co_await" •

    $default  reduce using rule 766 (overloadable-operator)


State 180

  796 overloadable-operator: "<=>" •

    $default  reduce using rule 796 (overloadable-operator)


State 181

  797 overloadable-operator: "&&" •

    $default  reduce using rule 797 (overloadable-operator)


State 182

  798 overloadable-operator: "||" •

    $default  reduce using rule 798 (overloadable-operator)


State 183

  769 overloadable-operator: "->" •

    $default  reduce using rule 769 (overloadable-operator)


State 184

  763 overloadable-operator: "delete" •
  765                      | "delete" • '[' ']'

    '['  shift, and go to state 489

    '['       [reduce using rule 763 (overloadable-operator)]
    $default  reduce using rule 763 (overloadable-operator)


State 185

  279 encoding-prefix: "u8" •

    $default  reduce using rule 279 (encoding-prefix)


State 186

  280 encoding-prefix: 'u' •

    $default  reduce using rule 280 (encoding-prefix)


State 187

  281 encoding-prefix: 'U' •

    $default  reduce using rule 281 (encoding-prefix)


State 188

  282 encoding-prefix: 'L' •

    $default  reduce using rule 282 (encoding-prefix)


State 189

  790 overloadable-operator: "==" •

    $default  reduce using rule 790 (overloadable-operator)


State 190

  791 overloadable-operator: "!=" •

    $default  reduce using rule 791 (overloadable-operator)


State 191

  778 overloadable-operator: '^' •

    $default  reduce using rule 778 (overloadable-operator)


State 192

  792 overloadable-operator: '<' •

    $default  reduce using rule 792 (overloadable-operator)


State 193

  793 overloadable-operator: '>' •

    $default  reduce using rule 793 (overloadable-operator)


State 194

  775 overloadable-operator: '*' •

    $default  reduce using rule 775 (overloadable-operator)


State 195

  776 overloadable-operator: '/' •

    $default  reduce using rule 776 (overloadable-operator)


State 196

  777 overloadable-operator: '%' •

    $default  reduce using rule 777 (overloadable-operator)


State 197

  780 overloadable-operator: '|' •

    $default  reduce using rule 780 (overloadable-operator)


State 198

  799 overloadable-operator: "<<" •

    $default  reduce using rule 799 (overloadable-operator)


State 199

  800 overloadable-operator: ">>" •

    $default  reduce using rule 800 (overloadable-operator)


State 200

  794 overloadable-operator: "<=" •

    $default  reduce using rule 794 (overloadable-operator)


State 201

  795 overloadable-operator: ">=" •

    $default  reduce using rule 795 (overloadable-operator)


State 202

  770 overloadable-operator: "->*" •

    $default  reduce using rule 770 (overloadable-operator)


State 203

  1045 string-literal: '"' • '"'
  1047               | '"' • s-char-sequence '"'

    EXCEPT_THE_QUOTATION_MARK_REVERSE_SOLIDUS_OR_NEW_LINE_CHARACTER  shift, and go to state 490
    '\\'                                                             shift, and go to state 491
    '"'                                                              shift, and go to state 492
    "\\x"                                                            shift, and go to state 493
    "\\u"                                                            shift, and go to state 494
    "\\U"                                                            shift, and go to state 495

    basic-s-char                 go to state 496
    conditional-escape-sequence  go to state 497
    escape-sequence              go to state 498
    hexadecimal-escape-sequence  go to state 499
    numeric-escape-sequence      go to state 500
    octal-escape-sequence        go to state 501
    s-char                       go to state 502
    s-char-sequence              go to state 503
    simple-escape-sequence       go to state 504
    universal-character-name     go to state 505


State 204

  762 overloadable-operator: "new" •
  764                      | "new" • '[' ']'

    '['  shift, and go to state 506

    '['       [reduce using rule 762 (overloadable-operator)]
    $default  reduce using rule 762 (overloadable-operator)


State 205

  771 overloadable-operator: '~' •

    $default  reduce using rule 771 (overloadable-operator)


State 206

  772 overloadable-operator: '!' •

    $default  reduce using rule 772 (overloadable-operator)


State 207

  803 overloadable-operator: "++" •

    $default  reduce using rule 803 (overloadable-operator)


State 208

  804 overloadable-operator: "--" •

    $default  reduce using rule 804 (overloadable-operator)


State 209

  1049 string-literal: 'R' • raw-string

    '"'  shift, and go to state 507

    raw-string  go to state 508


State 210

  267 elaborated-type-specifier: class-key • IDENTIFIER
  268                          | class-key • attribute-specifier-seq IDENTIFIER
  269                          | class-key • nested-name-specifier IDENTIFIER
  270                          | class-key • attribute-specifier-seq nested-name-specifier IDENTIFIER
  271                          | class-key • simple-template-id
  272                          | class-key • nested-name-specifier simple-template-id
  273                          | class-key • nested-name-specifier "template" simple-template-id

    IDENTIFIER  shift, and go to state 271
    "alignas"   shift, and go to state 4
    "::"        shift, and go to state 9
    '['         shift, and go to state 10
    "decltype"  shift, and go to state 135

    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 509
    class-name               go to state 66
    decltype-specifier       go to state 139
    enum-name                go to state 85
    namespace-alias          go to state 100
    namespace-name           go to state 103
    nested-name-specifier    go to state 510
    simple-template-id       go to state 278
    template-name            go to state 143
    type-name                go to state 144
    typedef-name             go to state 127


State 211

  179 conversion-function-id: "operator" conversion-type-id •

    $default  reduce using rule 179 (conversion-function-id)


State 212

  1044 string-literal: encoding-prefix • '"' '"'
  1046               | encoding-prefix • '"' s-char-sequence '"'
  1048               | encoding-prefix • 'R' raw-string

    '"'  shift, and go to state 511
    'R'  shift, and go to state 512


State 213

  663 nested-name-specifier: nested-name-specifier • IDENTIFIER "::"
  664                      | nested-name-specifier • simple-template-id "::"
  665                      | nested-name-specifier • "template" simple-template-id "::"
  999 simple-type-specifier: nested-name-specifier • type-name
  1001                      | nested-name-specifier • "template" simple-template-id
  1004                      | nested-name-specifier • template-name
  1084 type-constraint: nested-name-specifier • concept-name
  1086                | nested-name-specifier • concept-name '<' '>'
  1088                | nested-name-specifier • concept-name '<' template-argument-list '>'

    IDENTIFIER  shift, and go to state 513
    "template"  shift, and go to state 514

    class-name          go to state 66
    concept-name        go to state 328
    enum-name           go to state 85
    simple-template-id  go to state 515
    template-name       go to state 330
    type-name           go to state 331
    typedef-name        go to state 127


State 214

  759 operator-function-id: "operator" overloadable-operator •
  760                     | "operator" overloadable-operator • '<' '>'
  761                     | "operator" overloadable-operator • '<' template-argument-list '>'

    '<'  shift, and go to state 516

    '<'       [reduce using rule 759 (operator-function-id)]
    $default  reduce using rule 759 (operator-function-id)


State 215

  565 literal-operator-id: "operator" string-literal • IDENTIFIER
  1177 user-defined-string-literal: string-literal • ud-suffix

    IDENTIFIER  shift, and go to state 517

    ud-suffix  go to state 518


State 216

  997 simple-template-id: template-name • '<' '>'
  998                   | template-name • '<' template-argument-list '>'
  1005 simple-type-specifier: template-name •

    '<'  shift, and go to state 342

    '<'       [reduce using rule 1005 (simple-type-specifier)]
    $default  reduce using rule 1005 (simple-type-specifier)


State 217

  1121 type-specifier-seq: type-specifier •
  1122                   | type-specifier • attribute-specifier-seq
  1123                   | type-specifier • type-specifier-seq

    IDENTIFIER  shift, and go to state 161
    "alignas"   shift, and go to state 4
    "::"        shift, and go to state 9
    '['         shift, and go to state 10
    "class"     shift, and go to state 12
    "struct"    shift, and go to state 13
    "union"     shift, and go to state 14
    "const"     shift, and go to state 18
    "volatile"  shift, and go to state 19
    "decltype"  shift, and go to state 26
    "enum"      shift, and go to state 136
    "auto"      shift, and go to state 37
    "char"      shift, and go to state 38
    "char8_t"   shift, and go to state 39
    "char16_t"  shift, and go to state 40
    "char32_t"  shift, and go to state 41
    "wchar_t"   shift, and go to state 42
    "bool"      shift, and go to state 43
    "short"     shift, and go to state 44
    "int"       shift, and go to state 45
    "long"      shift, and go to state 46
    "signed"    shift, and go to state 47
    "unsigned"  shift, and go to state 48
    "float"     shift, and go to state 49
    "double"    shift, and go to state 50
    "void"      shift, and go to state 51
    "typename"  shift, and go to state 56

    IDENTIFIER  [reduce using rule 1121 (type-specifier-seq)]
    "alignas"   [reduce using rule 1121 (type-specifier-seq)]
    "::"        [reduce using rule 1121 (type-specifier-seq)]
    '['         [reduce using rule 1121 (type-specifier-seq)]
    "class"     [reduce using rule 1121 (type-specifier-seq)]
    "struct"    [reduce using rule 1121 (type-specifier-seq)]
    "union"     [reduce using rule 1121 (type-specifier-seq)]
    "const"     [reduce using rule 1121 (type-specifier-seq)]
    "volatile"  [reduce using rule 1121 (type-specifier-seq)]
    "decltype"  [reduce using rule 1121 (type-specifier-seq)]
    "enum"      [reduce using rule 1121 (type-specifier-seq)]
    "auto"      [reduce using rule 1121 (type-specifier-seq)]
    "char"      [reduce using rule 1121 (type-specifier-seq)]
    "char8_t"   [reduce using rule 1121 (type-specifier-seq)]
    "char16_t"  [reduce using rule 1121 (type-specifier-seq)]
    "char32_t"  [reduce using rule 1121 (type-specifier-seq)]
    "wchar_t"   [reduce using rule 1121 (type-specifier-seq)]
    "bool"      [reduce using rule 1121 (type-specifier-seq)]
    "short"     [reduce using rule 1121 (type-specifier-seq)]
    "int"       [reduce using rule 1121 (type-specifier-seq)]
    "long"      [reduce using rule 1121 (type-specifier-seq)]
    "signed"    [reduce using rule 1121 (type-specifier-seq)]
    "unsigned"  [reduce using rule 1121 (type-specifier-seq)]
    "float"     [reduce using rule 1121 (type-specifier-seq)]
    "double"    [reduce using rule 1121 (type-specifier-seq)]
    "void"      [reduce using rule 1121 (type-specifier-seq)]
    "typename"  [reduce using rule 1121 (type-specifier-seq)]
    $default    reduce using rule 1121 (type-specifier-seq)

    alignment-specifier         go to state 58
    attribute-specifier         go to state 61
    attribute-specifier-seq     go to state 519
    class-key                   go to state 210
    class-name                  go to state 66
    concept-name                go to state 68
    cv-qualifier                go to state 70
    decltype-specifier          go to state 77
    elaborated-enum-specifier   go to state 80
    elaborated-type-specifier   go to state 81
    enum-name                   go to state 85
    namespace-alias             go to state 100
    namespace-name              go to state 103
    nested-name-specifier       go to state 213
    placeholder-type-specifier  go to state 110
    simple-template-id          go to state 142
    simple-type-specifier       go to state 116
    template-name               go to state 216
    type-constraint             go to state 124
    type-name                   go to state 125
    type-specifier              go to state 217
    type-specifier-seq          go to state 520
    typedef-name                go to state 127
    typename-specifier          go to state 128


State 218

  180 conversion-type-id: type-specifier-seq •
  181                   | type-specifier-seq • conversion-declarator

    IDENTIFIER  shift, and go to state 258
    '&'         shift, and go to state 7
    "::"        shift, and go to state 9
    "&&"        shift, and go to state 16
    "decltype"  shift, and go to state 135
    '*'         shift, and go to state 32

    IDENTIFIER  [reduce using rule 180 (conversion-type-id)]
    '&'         [reduce using rule 180 (conversion-type-id)]
    "::"        [reduce using rule 180 (conversion-type-id)]
    "&&"        [reduce using rule 180 (conversion-type-id)]
    "decltype"  [reduce using rule 180 (conversion-type-id)]
    '*'         [reduce using rule 180 (conversion-type-id)]
    $default    reduce using rule 180 (conversion-type-id)

    class-name             go to state 66
    conversion-declarator  go to state 521
    decltype-specifier     go to state 139
    enum-name              go to state 85
    namespace-alias        go to state 100
    namespace-name         go to state 103
    nested-name-specifier  go to state 522
    ptr-operator           go to state 523
    simple-template-id     go to state 142
    template-name          go to state 143
    type-name              go to state 144
    typedef-name           go to state 127


State 219

  566 literal-operator-id: "operator" user-defined-string-literal •

    $default  reduce using rule 566 (literal-operator-id)


State 220

  647 named-namespace-definition: "inline" "namespace" • IDENTIFIER '{' namespace-body '}'
  649                           | "inline" "namespace" • attribute-specifier-seq IDENTIFIER '{' namespace-body '}'
  1150 unnamed-namespace-definition: "inline" "namespace" • '{' namespace-body '}'
  1152                             | "inline" "namespace" • attribute-specifier-seq '{' namespace-body '}'

    IDENTIFIER  shift, and go to state 524
    "alignas"   shift, and go to state 4
    '['         shift, and go to state 10
    '{'         shift, and go to state 525

    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 526


State 221

  233 decltype-specifier: "decltype" '(' • expression ')'
  855 placeholder-type-specifier: "decltype" '(' • "auto" ')'

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 527
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 530
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    expression                           go to state 532
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 222

  145 class-name: IDENTIFIER •
  265 elaborated-enum-specifier: "enum" IDENTIFIER •
  297 enum-name: IDENTIFIER •
  651 namespace-alias: IDENTIFIER •
  657 namespace-name: IDENTIFIER •
  1066 template-name: IDENTIFIER •
  1124 typedef-name: IDENTIFIER •

    "::"      reduce using rule 145 (class-name)
    "::"      [reduce using rule 265 (elaborated-enum-specifier)]
    "::"      [reduce using rule 297 (enum-name)]
    "::"      [reduce using rule 651 (namespace-alias)]
    "::"      [reduce using rule 657 (namespace-name)]
    "::"      [reduce using rule 1124 (typedef-name)]
    '<'       reduce using rule 265 (elaborated-enum-specifier)
    '<'       [reduce using rule 1066 (template-name)]
    $default  reduce using rule 265 (elaborated-enum-specifier)


State 223

  295 enum-key: "enum" "class" •

    $default  reduce using rule 295 (enum-key)


State 224

  296 enum-key: "enum" "struct" •

    $default  reduce using rule 296 (enum-key)


State 225

  266 elaborated-enum-specifier: "enum" nested-name-specifier • IDENTIFIER
  663 nested-name-specifier: nested-name-specifier • IDENTIFIER "::"
  664                      | nested-name-specifier • simple-template-id "::"
  665                      | nested-name-specifier • "template" simple-template-id "::"

    IDENTIFIER  shift, and go to state 538
    "template"  shift, and go to state 355

    simple-template-id  go to state 539
    template-name       go to state 143


State 226

  322 explicit-instantiation: "extern" "template" • declaration

    IDENTIFIER        shift, and go to state 1
    "using"           shift, and go to state 2
    ';'               shift, and go to state 3
    "alignas"         shift, and go to state 4
    '('               shift, and go to state 5
    "..."             shift, and go to state 6
    '&'               shift, and go to state 7
    "asm"             shift, and go to state 8
    "::"              shift, and go to state 9
    '['               shift, and go to state 10
    "virtual"         shift, and go to state 11
    "class"           shift, and go to state 12
    "struct"          shift, and go to state 13
    "union"           shift, and go to state 14
    "template"        shift, and go to state 15
    "&&"              shift, and go to state 16
    "operator"        shift, and go to state 17
    "const"           shift, and go to state 18
    "volatile"        shift, and go to state 19
    "friend"          shift, and go to state 20
    "typedef"         shift, and go to state 21
    "constexpr"       shift, and go to state 22
    "consteval"       shift, and go to state 23
    "constinit"       shift, and go to state 24
    "inline"          shift, and go to state 25
    "decltype"        shift, and go to state 26
    "enum"            shift, and go to state 27
    "extern"          shift, and go to state 28
    "explicit"        shift, and go to state 29
    "export"          shift, and go to state 30
    "export-keyword"  shift, and go to state 158
    '*'               shift, and go to state 32
    "import-keyword"  shift, and go to state 34
    "namespace"       shift, and go to state 35
    '~'               shift, and go to state 36
    "auto"            shift, and go to state 37
    "char"            shift, and go to state 38
    "char8_t"         shift, and go to state 39
    "char16_t"        shift, and go to state 40
    "char32_t"        shift, and go to state 41
    "wchar_t"         shift, and go to state 42
    "bool"            shift, and go to state 43
    "short"           shift, and go to state 44
    "int"             shift, and go to state 45
    "long"            shift, and go to state 46
    "signed"          shift, and go to state 47
    "unsigned"        shift, and go to state 48
    "float"           shift, and go to state 49
    "double"          shift, and go to state 50
    "void"            shift, and go to state 51
    "static_assert"   shift, and go to state 52
    "static"          shift, and go to state 53
    "thread_local"    shift, and go to state 54
    "mutable"         shift, and go to state 55
    "typename"        shift, and go to state 56

    alias-declaration                go to state 57
    alignment-specifier              go to state 58
    asm-declaration                  go to state 59
    attribute-declaration            go to state 60
    attribute-specifier              go to state 61
    attribute-specifier-seq          go to state 62
    block-declaration                go to state 63
    class-head                       go to state 64
    class-key                        go to state 65
    class-name                       go to state 66
    class-specifier                  go to state 67
    concept-name                     go to state 68
    conversion-function-id           go to state 69
    cv-qualifier                     go to state 70
    decl-specifier                   go to state 71
    decl-specifier-seq               go to state 72
    declaration                      go to state 540
    declarator                       go to state 75
    declarator-id                    go to state 76
    decltype-specifier               go to state 77
    deduction-guide                  go to state 78
    defining-type-specifier          go to state 79
    elaborated-enum-specifier        go to state 80
    elaborated-type-specifier        go to state 81
    empty-declaration                go to state 82
    enum-head                        go to state 83
    enum-key                         go to state 84
    enum-name                        go to state 85
    enum-specifier                   go to state 86
    explicit-instantiation           go to state 87
    explicit-specialization          go to state 88
    explicit-specifier               go to state 89
    export-declaration               go to state 90
    function-definition              go to state 91
    function-specifier               go to state 92
    id-expression                    go to state 94
    linkage-specification            go to state 95
    literal-operator-id              go to state 96
    module-import-declaration        go to state 98
    named-namespace-definition       go to state 99
    namespace-alias                  go to state 100
    namespace-alias-definition       go to state 101
    namespace-definition             go to state 102
    namespace-name                   go to state 103
    nested-name-specifier            go to state 104
    nested-namespace-definition      go to state 105
    nodeclspec-function-declaration  go to state 106
    noptr-declarator                 go to state 107
    opaque-enum-declaration          go to state 108
    operator-function-id             go to state 109
    placeholder-type-specifier       go to state 110
    ptr-declarator                   go to state 111
    ptr-operator                     go to state 112
    qualified-id                     go to state 113
    simple-declaration               go to state 114
    simple-template-id               go to state 115
    simple-type-specifier            go to state 116
    static_assert-declaration        go to state 117
    storage-class-specifier          go to state 118
    template-declaration             go to state 119
    template-head                    go to state 120
    template-id                      go to state 121
    template-name                    go to state 122
    type-constraint                  go to state 124
    type-name                        go to state 125
    type-specifier                   go to state 126
    typedef-name                     go to state 127
    typename-specifier               go to state 128
    unnamed-namespace-definition     go to state 129
    unqualified-id                   go to state 130
    using-declaration                go to state 131
    using-directive                  go to state 132
    using-enum-declaration           go to state 133


State 227

  555 linkage-specification: "extern" string-literal • '{' '}'
  556                      | "extern" string-literal • '{' declaration-seq '}'
  557                      | "extern" string-literal • declaration

    IDENTIFIER        shift, and go to state 1
    "using"           shift, and go to state 2
    ';'               shift, and go to state 3
    "alignas"         shift, and go to state 4
    '('               shift, and go to state 5
    "..."             shift, and go to state 6
    '&'               shift, and go to state 7
    "asm"             shift, and go to state 8
    "::"              shift, and go to state 9
    '['               shift, and go to state 10
    '{'               shift, and go to state 541
    "virtual"         shift, and go to state 11
    "class"           shift, and go to state 12
    "struct"          shift, and go to state 13
    "union"           shift, and go to state 14
    "template"        shift, and go to state 15
    "&&"              shift, and go to state 16
    "operator"        shift, and go to state 17
    "const"           shift, and go to state 18
    "volatile"        shift, and go to state 19
    "friend"          shift, and go to state 20
    "typedef"         shift, and go to state 21
    "constexpr"       shift, and go to state 22
    "consteval"       shift, and go to state 23
    "constinit"       shift, and go to state 24
    "inline"          shift, and go to state 25
    "decltype"        shift, and go to state 26
    "enum"            shift, and go to state 27
    "extern"          shift, and go to state 28
    "explicit"        shift, and go to state 29
    "export"          shift, and go to state 30
    "export-keyword"  shift, and go to state 158
    '*'               shift, and go to state 32
    "import-keyword"  shift, and go to state 34
    "namespace"       shift, and go to state 35
    '~'               shift, and go to state 36
    "auto"            shift, and go to state 37
    "char"            shift, and go to state 38
    "char8_t"         shift, and go to state 39
    "char16_t"        shift, and go to state 40
    "char32_t"        shift, and go to state 41
    "wchar_t"         shift, and go to state 42
    "bool"            shift, and go to state 43
    "short"           shift, and go to state 44
    "int"             shift, and go to state 45
    "long"            shift, and go to state 46
    "signed"          shift, and go to state 47
    "unsigned"        shift, and go to state 48
    "float"           shift, and go to state 49
    "double"          shift, and go to state 50
    "void"            shift, and go to state 51
    "static_assert"   shift, and go to state 52
    "static"          shift, and go to state 53
    "thread_local"    shift, and go to state 54
    "mutable"         shift, and go to state 55
    "typename"        shift, and go to state 56

    alias-declaration                go to state 57
    alignment-specifier              go to state 58
    asm-declaration                  go to state 59
    attribute-declaration            go to state 60
    attribute-specifier              go to state 61
    attribute-specifier-seq          go to state 62
    block-declaration                go to state 63
    class-head                       go to state 64
    class-key                        go to state 65
    class-name                       go to state 66
    class-specifier                  go to state 67
    concept-name                     go to state 68
    conversion-function-id           go to state 69
    cv-qualifier                     go to state 70
    decl-specifier                   go to state 71
    decl-specifier-seq               go to state 72
    declaration                      go to state 542
    declarator                       go to state 75
    declarator-id                    go to state 76
    decltype-specifier               go to state 77
    deduction-guide                  go to state 78
    defining-type-specifier          go to state 79
    elaborated-enum-specifier        go to state 80
    elaborated-type-specifier        go to state 81
    empty-declaration                go to state 82
    enum-head                        go to state 83
    enum-key                         go to state 84
    enum-name                        go to state 85
    enum-specifier                   go to state 86
    explicit-instantiation           go to state 87
    explicit-specialization          go to state 88
    explicit-specifier               go to state 89
    export-declaration               go to state 90
    function-definition              go to state 91
    function-specifier               go to state 92
    id-expression                    go to state 94
    linkage-specification            go to state 95
    literal-operator-id              go to state 96
    module-import-declaration        go to state 98
    named-namespace-definition       go to state 99
    namespace-alias                  go to state 100
    namespace-alias-definition       go to state 101
    namespace-definition             go to state 102
    namespace-name                   go to state 103
    nested-name-specifier            go to state 104
    nested-namespace-definition      go to state 105
    nodeclspec-function-declaration  go to state 106
    noptr-declarator                 go to state 107
    opaque-enum-declaration          go to state 108
    operator-function-id             go to state 109
    placeholder-type-specifier       go to state 110
    ptr-declarator                   go to state 111
    ptr-operator                     go to state 112
    qualified-id                     go to state 113
    simple-declaration               go to state 114
    simple-template-id               go to state 115
    simple-type-specifier            go to state 116
    static_assert-declaration        go to state 117
    storage-class-specifier          go to state 118
    template-declaration             go to state 119
    template-head                    go to state 120
    template-id                      go to state 121
    template-name                    go to state 122
    type-constraint                  go to state 124
    type-name                        go to state 125
    type-specifier                   go to state 126
    typedef-name                     go to state 127
    typename-specifier               go to state 128
    unnamed-namespace-definition     go to state 129
    unqualified-id                   go to state 130
    using-declaration                go to state 131
    using-directive                  go to state 132
    using-enum-declaration           go to state 133


State 228

  325 explicit-specifier: "explicit" '(' • constant-expression ')'

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    additive-expression                  go to state 404
    and-expression                       go to state 405
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 412
    constant-expression                  go to state 543
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 435
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 229

  332 export-declaration: "export" '{' • '}'
  333                   | "export" '{' • declaration-seq '}'

    IDENTIFIER        shift, and go to state 1
    "using"           shift, and go to state 2
    ';'               shift, and go to state 3
    "alignas"         shift, and go to state 4
    '('               shift, and go to state 5
    "..."             shift, and go to state 6
    '&'               shift, and go to state 7
    "asm"             shift, and go to state 8
    "::"              shift, and go to state 9
    '['               shift, and go to state 10
    '}'               shift, and go to state 544
    "virtual"         shift, and go to state 11
    "class"           shift, and go to state 12
    "struct"          shift, and go to state 13
    "union"           shift, and go to state 14
    "template"        shift, and go to state 15
    "&&"              shift, and go to state 16
    "operator"        shift, and go to state 17
    "const"           shift, and go to state 18
    "volatile"        shift, and go to state 19
    "friend"          shift, and go to state 20
    "typedef"         shift, and go to state 21
    "constexpr"       shift, and go to state 22
    "consteval"       shift, and go to state 23
    "constinit"       shift, and go to state 24
    "inline"          shift, and go to state 25
    "decltype"        shift, and go to state 26
    "enum"            shift, and go to state 27
    "extern"          shift, and go to state 28
    "explicit"        shift, and go to state 29
    "export"          shift, and go to state 30
    "export-keyword"  shift, and go to state 158
    '*'               shift, and go to state 32
    "import-keyword"  shift, and go to state 34
    "namespace"       shift, and go to state 35
    '~'               shift, and go to state 36
    "auto"            shift, and go to state 37
    "char"            shift, and go to state 38
    "char8_t"         shift, and go to state 39
    "char16_t"        shift, and go to state 40
    "char32_t"        shift, and go to state 41
    "wchar_t"         shift, and go to state 42
    "bool"            shift, and go to state 43
    "short"           shift, and go to state 44
    "int"             shift, and go to state 45
    "long"            shift, and go to state 46
    "signed"          shift, and go to state 47
    "unsigned"        shift, and go to state 48
    "float"           shift, and go to state 49
    "double"          shift, and go to state 50
    "void"            shift, and go to state 51
    "static_assert"   shift, and go to state 52
    "static"          shift, and go to state 53
    "thread_local"    shift, and go to state 54
    "mutable"         shift, and go to state 55
    "typename"        shift, and go to state 56

    alias-declaration                go to state 57
    alignment-specifier              go to state 58
    asm-declaration                  go to state 59
    attribute-declaration            go to state 60
    attribute-specifier              go to state 61
    attribute-specifier-seq          go to state 62
    block-declaration                go to state 63
    class-head                       go to state 64
    class-key                        go to state 65
    class-name                       go to state 66
    class-specifier                  go to state 67
    concept-name                     go to state 68
    conversion-function-id           go to state 69
    cv-qualifier                     go to state 70
    decl-specifier                   go to state 71
    decl-specifier-seq               go to state 72
    declaration                      go to state 73
    declaration-seq                  go to state 545
    declarator                       go to state 75
    declarator-id                    go to state 76
    decltype-specifier               go to state 77
    deduction-guide                  go to state 78
    defining-type-specifier          go to state 79
    elaborated-enum-specifier        go to state 80
    elaborated-type-specifier        go to state 81
    empty-declaration                go to state 82
    enum-head                        go to state 83
    enum-key                         go to state 84
    enum-name                        go to state 85
    enum-specifier                   go to state 86
    explicit-instantiation           go to state 87
    explicit-specialization          go to state 88
    explicit-specifier               go to state 89
    export-declaration               go to state 90
    function-definition              go to state 91
    function-specifier               go to state 92
    id-expression                    go to state 94
    linkage-specification            go to state 95
    literal-operator-id              go to state 96
    module-import-declaration        go to state 98
    named-namespace-definition       go to state 99
    namespace-alias                  go to state 100
    namespace-alias-definition       go to state 101
    namespace-definition             go to state 102
    namespace-name                   go to state 103
    nested-name-specifier            go to state 104
    nested-namespace-definition      go to state 105
    nodeclspec-function-declaration  go to state 106
    noptr-declarator                 go to state 107
    opaque-enum-declaration          go to state 108
    operator-function-id             go to state 109
    placeholder-type-specifier       go to state 110
    ptr-declarator                   go to state 111
    ptr-operator                     go to state 112
    qualified-id                     go to state 113
    simple-declaration               go to state 114
    simple-template-id               go to state 115
    simple-type-specifier            go to state 116
    static_assert-declaration        go to state 117
    storage-class-specifier          go to state 118
    template-declaration             go to state 119
    template-head                    go to state 120
    template-id                      go to state 121
    template-name                    go to state 122
    type-constraint                  go to state 124
    type-name                        go to state 125
    type-specifier                   go to state 126
    typedef-name                     go to state 127
    typename-specifier               go to state 128
    unnamed-namespace-definition     go to state 129
    unqualified-id                   go to state 130
    using-declaration                go to state 131
    using-directive                  go to state 132
    using-enum-declaration           go to state 133


State 230

  331 export-declaration: "export" declaration •

    $default  reduce using rule 331 (export-declaration)


State 231

  623 module-declaration: "export-keyword" "module-keyword" • module-name ';'
  625                   | "export-keyword" "module-keyword" • module-name module-partition ';'
  627                   | "export-keyword" "module-keyword" • module-name attribute-specifier-seq ';'
  629                   | "export-keyword" "module-keyword" • module-name module-partition attribute-specifier-seq ';'

    IDENTIFIER  shift, and go to state 236

    module-name            go to state 546
    module-name-qualifier  go to state 239


State 232

  334 export-declaration: "export-keyword" module-import-declaration •

    $default  reduce using rule 334 (export-declaration)


State 233

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  898 ptr-operator: '*' attribute-specifier-seq •
  900             | '*' attribute-specifier-seq • cv-qualifier-seq

    "alignas"   shift, and go to state 4
    '['         shift, and go to state 10
    "const"     shift, and go to state 18
    "volatile"  shift, and go to state 19

    "alignas"   [reduce using rule 898 (ptr-operator)]
    '['         [reduce using rule 898 (ptr-operator)]
    "const"     [reduce using rule 898 (ptr-operator)]
    "volatile"  [reduce using rule 898 (ptr-operator)]
    $default    reduce using rule 898 (ptr-operator)

    alignment-specifier  go to state 58
    attribute-specifier  go to state 265
    cv-qualifier         go to state 234
    cv-qualifier-seq     go to state 547


State 234

  187 cv-qualifier-seq: cv-qualifier •
  188                 | cv-qualifier • cv-qualifier-seq

    "const"     shift, and go to state 18
    "volatile"  shift, and go to state 19

    "const"     [reduce using rule 187 (cv-qualifier-seq)]
    "volatile"  [reduce using rule 187 (cv-qualifier-seq)]
    $default    reduce using rule 187 (cv-qualifier-seq)

    cv-qualifier      go to state 234
    cv-qualifier-seq  go to state 548


State 235

  899 ptr-operator: '*' cv-qualifier-seq •

    $default  reduce using rule 899 (ptr-operator)


State 236

  638 module-name: IDENTIFIER •
  639 module-name-qualifier: IDENTIFIER • '.'

    '.'  shift, and go to state 549

    $default  reduce using rule 638 (module-name)


State 237

  414 global-module-fragment: "module-keyword" ';' •
  415                       | "module-keyword" ';' • declaration-seq

    IDENTIFIER        shift, and go to state 1
    "using"           shift, and go to state 2
    ';'               shift, and go to state 3
    "alignas"         shift, and go to state 4
    '('               shift, and go to state 5
    "..."             shift, and go to state 6
    '&'               shift, and go to state 7
    "asm"             shift, and go to state 8
    "::"              shift, and go to state 9
    '['               shift, and go to state 10
    "virtual"         shift, and go to state 11
    "class"           shift, and go to state 12
    "struct"          shift, and go to state 13
    "union"           shift, and go to state 14
    "template"        shift, and go to state 15
    "&&"              shift, and go to state 16
    "operator"        shift, and go to state 17
    "const"           shift, and go to state 18
    "volatile"        shift, and go to state 19
    "friend"          shift, and go to state 20
    "typedef"         shift, and go to state 21
    "constexpr"       shift, and go to state 22
    "consteval"       shift, and go to state 23
    "constinit"       shift, and go to state 24
    "inline"          shift, and go to state 25
    "decltype"        shift, and go to state 26
    "enum"            shift, and go to state 27
    "extern"          shift, and go to state 28
    "explicit"        shift, and go to state 29
    "export"          shift, and go to state 30
    "export-keyword"  shift, and go to state 158
    '*'               shift, and go to state 32
    "import-keyword"  shift, and go to state 34
    "namespace"       shift, and go to state 35
    '~'               shift, and go to state 36
    "auto"            shift, and go to state 37
    "char"            shift, and go to state 38
    "char8_t"         shift, and go to state 39
    "char16_t"        shift, and go to state 40
    "char32_t"        shift, and go to state 41
    "wchar_t"         shift, and go to state 42
    "bool"            shift, and go to state 43
    "short"           shift, and go to state 44
    "int"             shift, and go to state 45
    "long"            shift, and go to state 46
    "signed"          shift, and go to state 47
    "unsigned"        shift, and go to state 48
    "float"           shift, and go to state 49
    "double"          shift, and go to state 50
    "void"            shift, and go to state 51
    "static_assert"   shift, and go to state 52
    "static"          shift, and go to state 53
    "thread_local"    shift, and go to state 54
    "mutable"         shift, and go to state 55
    "typename"        shift, and go to state 56

    "export-keyword"  [reduce using rule 414 (global-module-fragment)]
    $default          reduce using rule 414 (global-module-fragment)

    alias-declaration                go to state 57
    alignment-specifier              go to state 58
    asm-declaration                  go to state 59
    attribute-declaration            go to state 60
    attribute-specifier              go to state 61
    attribute-specifier-seq          go to state 62
    block-declaration                go to state 63
    class-head                       go to state 64
    class-key                        go to state 65
    class-name                       go to state 66
    class-specifier                  go to state 67
    concept-name                     go to state 68
    conversion-function-id           go to state 69
    cv-qualifier                     go to state 70
    decl-specifier                   go to state 71
    decl-specifier-seq               go to state 72
    declaration                      go to state 73
    declaration-seq                  go to state 550
    declarator                       go to state 75
    declarator-id                    go to state 76
    decltype-specifier               go to state 77
    deduction-guide                  go to state 78
    defining-type-specifier          go to state 79
    elaborated-enum-specifier        go to state 80
    elaborated-type-specifier        go to state 81
    empty-declaration                go to state 82
    enum-head                        go to state 83
    enum-key                         go to state 84
    enum-name                        go to state 85
    enum-specifier                   go to state 86
    explicit-instantiation           go to state 87
    explicit-specialization          go to state 88
    explicit-specifier               go to state 89
    export-declaration               go to state 90
    function-definition              go to state 91
    function-specifier               go to state 92
    id-expression                    go to state 94
    linkage-specification            go to state 95
    literal-operator-id              go to state 96
    module-import-declaration        go to state 98
    named-namespace-definition       go to state 99
    namespace-alias                  go to state 100
    namespace-alias-definition       go to state 101
    namespace-definition             go to state 102
    namespace-name                   go to state 103
    nested-name-specifier            go to state 104
    nested-namespace-definition      go to state 105
    nodeclspec-function-declaration  go to state 106
    noptr-declarator                 go to state 107
    opaque-enum-declaration          go to state 108
    operator-function-id             go to state 109
    placeholder-type-specifier       go to state 110
    ptr-declarator                   go to state 111
    ptr-operator                     go to state 112
    qualified-id                     go to state 113
    simple-declaration               go to state 114
    simple-template-id               go to state 115
    simple-type-specifier            go to state 116
    static_assert-declaration        go to state 117
    storage-class-specifier          go to state 118
    template-declaration             go to state 119
    template-head                    go to state 120
    template-id                      go to state 121
    template-name                    go to state 122
    type-constraint                  go to state 124
    type-name                        go to state 125
    type-specifier                   go to state 126
    typedef-name                     go to state 127
    typename-specifier               go to state 128
    unnamed-namespace-definition     go to state 129
    unqualified-id                   go to state 130
    using-declaration                go to state 131
    using-directive                  go to state 132
    using-enum-declaration           go to state 133


State 238

  624 module-declaration: "module-keyword" module-name • ';'
  626                   | "module-keyword" module-name • module-partition ';'
  628                   | "module-keyword" module-name • attribute-specifier-seq ';'
  630                   | "module-keyword" module-name • module-partition attribute-specifier-seq ';'

    ';'        shift, and go to state 551
    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10
    ':'        shift, and go to state 241

    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 552
    module-partition         go to state 553


State 239

  637 module-name: module-name-qualifier • IDENTIFIER
  640 module-name-qualifier: module-name-qualifier • IDENTIFIER '.'

    IDENTIFIER  shift, and go to state 554


State 240

  416 h-char: EXCEPT_NEW_LINE_AND_GREATER_THAN_SIGN •

    $default  reduce using rule 416 (h-char)


State 241

  641 module-partition: ':' • IDENTIFIER
  642                 | ':' • module-name-qualifier IDENTIFIER

    IDENTIFIER  shift, and go to state 555

    module-name-qualifier  go to state 556


State 242

  420 header-name: '<' • "h-char-sequence" '>'

    "h-char-sequence"  shift, and go to state 557


State 243

  424 header-name: "h-char-sequence" • h-char

    EXCEPT_NEW_LINE_AND_GREATER_THAN_SIGN  shift, and go to state 240

    h-char  go to state 558


State 244

  421 header-name: '"' • q-char-sequence '"'

    EXCEPT_NEW_LINE_AND_QUOTATION_MARK  shift, and go to state 559

    q-char           go to state 560
    q-char-sequence  go to state 561


State 245

  422 header-name: "h-char-sequence:" •

    $default  reduce using rule 422 (header-name)


State 246

  423 header-name: h-char •

    $default  reduce using rule 423 (header-name)


State 247

  635 module-import-declaration: "import-keyword" header-name • ';'
  636                          | "import-keyword" header-name • attribute-specifier-seq ';'

    ';'        shift, and go to state 562
    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 563


State 248

  631 module-import-declaration: "import-keyword" module-name • ';'
  632                          | "import-keyword" module-name • attribute-specifier-seq ';'

    ';'        shift, and go to state 564
    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 565


State 249

  633 module-import-declaration: "import-keyword" module-partition • ';'
  634                          | "import-keyword" module-partition • attribute-specifier-seq ';'

    ';'        shift, and go to state 566
    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 567


State 250

  276 enclosing-namespace-specifier: IDENTIFIER •
  648 named-namespace-definition: "namespace" IDENTIFIER • '{' namespace-body '}'
  652 namespace-alias-definition: "namespace" IDENTIFIER • '=' qualified-namespace-specifier ';'

    '='  shift, and go to state 568
    '{'  shift, and go to state 569

    $default  reduce using rule 276 (enclosing-namespace-specifier)


State 251

  1151 unnamed-namespace-definition: "namespace" '{' • namespace-body '}'

    IDENTIFIER        shift, and go to state 1
    "using"           shift, and go to state 2
    ';'               shift, and go to state 3
    "alignas"         shift, and go to state 4
    '('               shift, and go to state 5
    "..."             shift, and go to state 6
    '&'               shift, and go to state 7
    "asm"             shift, and go to state 8
    "::"              shift, and go to state 9
    '['               shift, and go to state 10
    "virtual"         shift, and go to state 11
    "class"           shift, and go to state 12
    "struct"          shift, and go to state 13
    "union"           shift, and go to state 14
    "template"        shift, and go to state 15
    "&&"              shift, and go to state 16
    "operator"        shift, and go to state 17
    "const"           shift, and go to state 18
    "volatile"        shift, and go to state 19
    "friend"          shift, and go to state 20
    "typedef"         shift, and go to state 21
    "constexpr"       shift, and go to state 22
    "consteval"       shift, and go to state 23
    "constinit"       shift, and go to state 24
    "inline"          shift, and go to state 25
    "decltype"        shift, and go to state 26
    "enum"            shift, and go to state 27
    "extern"          shift, and go to state 28
    "explicit"        shift, and go to state 29
    "export"          shift, and go to state 30
    "export-keyword"  shift, and go to state 158
    '*'               shift, and go to state 32
    "import-keyword"  shift, and go to state 34
    "namespace"       shift, and go to state 35
    '~'               shift, and go to state 36
    "auto"            shift, and go to state 37
    "char"            shift, and go to state 38
    "char8_t"         shift, and go to state 39
    "char16_t"        shift, and go to state 40
    "char32_t"        shift, and go to state 41
    "wchar_t"         shift, and go to state 42
    "bool"            shift, and go to state 43
    "short"           shift, and go to state 44
    "int"             shift, and go to state 45
    "long"            shift, and go to state 46
    "signed"          shift, and go to state 47
    "unsigned"        shift, and go to state 48
    "float"           shift, and go to state 49
    "double"          shift, and go to state 50
    "void"            shift, and go to state 51
    "static_assert"   shift, and go to state 52
    "static"          shift, and go to state 53
    "thread_local"    shift, and go to state 54
    "mutable"         shift, and go to state 55
    "typename"        shift, and go to state 56

    alias-declaration                go to state 57
    alignment-specifier              go to state 58
    asm-declaration                  go to state 59
    attribute-declaration            go to state 60
    attribute-specifier              go to state 61
    attribute-specifier-seq          go to state 62
    block-declaration                go to state 63
    class-head                       go to state 64
    class-key                        go to state 65
    class-name                       go to state 66
    class-specifier                  go to state 67
    concept-name                     go to state 68
    conversion-function-id           go to state 69
    cv-qualifier                     go to state 70
    decl-specifier                   go to state 71
    decl-specifier-seq               go to state 72
    declaration                      go to state 73
    declaration-seq                  go to state 570
    declarator                       go to state 75
    declarator-id                    go to state 76
    decltype-specifier               go to state 77
    deduction-guide                  go to state 78
    defining-type-specifier          go to state 79
    elaborated-enum-specifier        go to state 80
    elaborated-type-specifier        go to state 81
    empty-declaration                go to state 82
    enum-head                        go to state 83
    enum-key                         go to state 84
    enum-name                        go to state 85
    enum-specifier                   go to state 86
    explicit-instantiation           go to state 87
    explicit-specialization          go to state 88
    explicit-specifier               go to state 89
    export-declaration               go to state 90
    function-definition              go to state 91
    function-specifier               go to state 92
    id-expression                    go to state 94
    linkage-specification            go to state 95
    literal-operator-id              go to state 96
    module-import-declaration        go to state 98
    named-namespace-definition       go to state 99
    namespace-alias                  go to state 100
    namespace-alias-definition       go to state 101
    namespace-body                   go to state 571
    namespace-definition             go to state 102
    namespace-name                   go to state 103
    nested-name-specifier            go to state 104
    nested-namespace-definition      go to state 105
    nodeclspec-function-declaration  go to state 106
    noptr-declarator                 go to state 107
    opaque-enum-declaration          go to state 108
    operator-function-id             go to state 109
    placeholder-type-specifier       go to state 110
    ptr-declarator                   go to state 111
    ptr-operator                     go to state 112
    qualified-id                     go to state 113
    simple-declaration               go to state 114
    simple-template-id               go to state 115
    simple-type-specifier            go to state 116
    static_assert-declaration        go to state 117
    storage-class-specifier          go to state 118
    template-declaration             go to state 119
    template-head                    go to state 120
    template-id                      go to state 121
    template-name                    go to state 122
    type-constraint                  go to state 124
    type-name                        go to state 125
    type-specifier                   go to state 126
    typedef-name                     go to state 127
    typename-specifier               go to state 128
    unnamed-namespace-definition     go to state 129
    unqualified-id                   go to state 130
    using-declaration                go to state 131
    using-directive                  go to state 132
    using-enum-declaration           go to state 133


State 252

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  650 named-namespace-definition: "namespace" attribute-specifier-seq • IDENTIFIER '{' namespace-body '}'
  1153 unnamed-namespace-definition: "namespace" attribute-specifier-seq • '{' namespace-body '}'

    IDENTIFIER  shift, and go to state 572
    "alignas"   shift, and go to state 4
    '['         shift, and go to state 10
    '{'         shift, and go to state 573

    alignment-specifier  go to state 58
    attribute-specifier  go to state 265


State 253

  277 enclosing-namespace-specifier: enclosing-namespace-specifier • "::" IDENTIFIER
  278                              | enclosing-namespace-specifier • "::" "inline" IDENTIFIER
  666 nested-namespace-definition: "namespace" enclosing-namespace-specifier • "::" IDENTIFIER '{' namespace-body '}'
  667                            | "namespace" enclosing-namespace-specifier • "::" "inline" IDENTIFIER '{' namespace-body '}'

    "::"  shift, and go to state 574


State 254

  145 class-name: IDENTIFIER •
  297 enum-name: IDENTIFIER •
  1066 template-name: IDENTIFIER •
  1124 typedef-name: IDENTIFIER •

    IDENTIFIER        reduce using rule 145 (class-name)
    IDENTIFIER        [reduce using rule 297 (enum-name)]
    IDENTIFIER        [reduce using rule 1124 (typedef-name)]
    '+'               reduce using rule 145 (class-name)
    '+'               [reduce using rule 297 (enum-name)]
    '+'               [reduce using rule 1124 (typedef-name)]
    '-'               reduce using rule 145 (class-name)
    '-'               [reduce using rule 297 (enum-name)]
    '-'               [reduce using rule 1124 (typedef-name)]
    "using"           reduce using rule 145 (class-name)
    "using"           [reduce using rule 297 (enum-name)]
    "using"           [reduce using rule 1124 (typedef-name)]
    '='               reduce using rule 145 (class-name)
    '='               [reduce using rule 297 (enum-name)]
    '='               [reduce using rule 1124 (typedef-name)]
    ';'               reduce using rule 145 (class-name)
    ';'               [reduce using rule 297 (enum-name)]
    ';'               [reduce using rule 1124 (typedef-name)]
    "alignas"         reduce using rule 145 (class-name)
    "alignas"         [reduce using rule 297 (enum-name)]
    "alignas"         [reduce using rule 1124 (typedef-name)]
    '('               reduce using rule 145 (class-name)
    '('               [reduce using rule 297 (enum-name)]
    '('               [reduce using rule 1124 (typedef-name)]
    ')'               reduce using rule 145 (class-name)
    ')'               [reduce using rule 297 (enum-name)]
    ')'               [reduce using rule 1124 (typedef-name)]
    "..."             reduce using rule 145 (class-name)
    "..."             [reduce using rule 297 (enum-name)]
    "..."             [reduce using rule 1124 (typedef-name)]
    '&'               reduce using rule 145 (class-name)
    '&'               [reduce using rule 297 (enum-name)]
    '&'               [reduce using rule 1124 (typedef-name)]
    "asm"             reduce using rule 145 (class-name)
    "asm"             [reduce using rule 297 (enum-name)]
    "asm"             [reduce using rule 1124 (typedef-name)]
    "*="              reduce using rule 145 (class-name)
    "*="              [reduce using rule 297 (enum-name)]
    "*="              [reduce using rule 1124 (typedef-name)]
    "/="              reduce using rule 145 (class-name)
    "/="              [reduce using rule 297 (enum-name)]
    "/="              [reduce using rule 1124 (typedef-name)]
    "%="              reduce using rule 145 (class-name)
    "%="              [reduce using rule 297 (enum-name)]
    "%="              [reduce using rule 1124 (typedef-name)]
    "+="              reduce using rule 145 (class-name)
    "+="              [reduce using rule 297 (enum-name)]
    "+="              [reduce using rule 1124 (typedef-name)]
    "-="              reduce using rule 145 (class-name)
    "-="              [reduce using rule 297 (enum-name)]
    "-="              [reduce using rule 1124 (typedef-name)]
    ">>="             reduce using rule 145 (class-name)
    ">>="             [reduce using rule 297 (enum-name)]
    ">>="             [reduce using rule 1124 (typedef-name)]
    "<<="             reduce using rule 145 (class-name)
    "<<="             [reduce using rule 297 (enum-name)]
    "<<="             [reduce using rule 1124 (typedef-name)]
    "&="              reduce using rule 145 (class-name)
    "&="              [reduce using rule 297 (enum-name)]
    "&="              [reduce using rule 1124 (typedef-name)]
    "^="              reduce using rule 145 (class-name)
    "^="              [reduce using rule 297 (enum-name)]
    "^="              [reduce using rule 1124 (typedef-name)]
    "|="              reduce using rule 145 (class-name)
    "|="              [reduce using rule 297 (enum-name)]
    "|="              [reduce using rule 1124 (typedef-name)]
    ','               reduce using rule 145 (class-name)
    ','               [reduce using rule 297 (enum-name)]
    ','               [reduce using rule 1124 (typedef-name)]
    "::"              reduce using rule 145 (class-name)
    "::"              [reduce using rule 297 (enum-name)]
    "::"              [reduce using rule 1124 (typedef-name)]
    '['               reduce using rule 145 (class-name)
    '['               [reduce using rule 297 (enum-name)]
    '['               [reduce using rule 1124 (typedef-name)]
    ']'               reduce using rule 145 (class-name)
    ']'               [reduce using rule 297 (enum-name)]
    ']'               [reduce using rule 1124 (typedef-name)]
    ':'               reduce using rule 145 (class-name)
    ':'               [reduce using rule 297 (enum-name)]
    ':'               [reduce using rule 1124 (typedef-name)]
    '{'               reduce using rule 145 (class-name)
    '{'               [reduce using rule 297 (enum-name)]
    '{'               [reduce using rule 1124 (typedef-name)]
    '}'               reduce using rule 145 (class-name)
    '}'               [reduce using rule 297 (enum-name)]
    '}'               [reduce using rule 1124 (typedef-name)]
    "virtual"         reduce using rule 145 (class-name)
    "virtual"         [reduce using rule 297 (enum-name)]
    "virtual"         [reduce using rule 1124 (typedef-name)]
    "class"           reduce using rule 145 (class-name)
    "class"           [reduce using rule 297 (enum-name)]
    "class"           [reduce using rule 1124 (typedef-name)]
    "struct"          reduce using rule 145 (class-name)
    "struct"          [reduce using rule 297 (enum-name)]
    "struct"          [reduce using rule 1124 (typedef-name)]
    "union"           reduce using rule 145 (class-name)
    "union"           [reduce using rule 297 (enum-name)]
    "union"           [reduce using rule 1124 (typedef-name)]
    "template"        reduce using rule 145 (class-name)
    "template"        [reduce using rule 297 (enum-name)]
    "template"        [reduce using rule 1124 (typedef-name)]
    "final"           reduce using rule 145 (class-name)
    "final"           [reduce using rule 297 (enum-name)]
    "final"           [reduce using rule 1124 (typedef-name)]
    "<=>"             reduce using rule 145 (class-name)
    "<=>"             [reduce using rule 297 (enum-name)]
    "<=>"             [reduce using rule 1124 (typedef-name)]
    "noexcept"        reduce using rule 145 (class-name)
    "noexcept"        [reduce using rule 297 (enum-name)]
    "noexcept"        [reduce using rule 1124 (typedef-name)]
    "concept"         reduce using rule 145 (class-name)
    "concept"         [reduce using rule 297 (enum-name)]
    "concept"         [reduce using rule 1124 (typedef-name)]
    '?'               reduce using rule 145 (class-name)
    '?'               [reduce using rule 297 (enum-name)]
    '?'               [reduce using rule 1124 (typedef-name)]
    "&&"              reduce using rule 145 (class-name)
    "&&"              [reduce using rule 297 (enum-name)]
    "&&"              [reduce using rule 1124 (typedef-name)]
    "||"              reduce using rule 145 (class-name)
    "||"              [reduce using rule 297 (enum-name)]
    "||"              [reduce using rule 1124 (typedef-name)]
    "operator"        reduce using rule 145 (class-name)
    "operator"        [reduce using rule 297 (enum-name)]
    "operator"        [reduce using rule 1124 (typedef-name)]
    "const"           reduce using rule 145 (class-name)
    "const"           [reduce using rule 297 (enum-name)]
    "const"           [reduce using rule 1124 (typedef-name)]
    "volatile"        reduce using rule 145 (class-name)
    "volatile"        [reduce using rule 297 (enum-name)]
    "volatile"        [reduce using rule 1124 (typedef-name)]
    "friend"          reduce using rule 145 (class-name)
    "friend"          [reduce using rule 297 (enum-name)]
    "friend"          [reduce using rule 1124 (typedef-name)]
    "typedef"         reduce using rule 145 (class-name)
    "typedef"         [reduce using rule 297 (enum-name)]
    "typedef"         [reduce using rule 1124 (typedef-name)]
    "constexpr"       reduce using rule 145 (class-name)
    "constexpr"       [reduce using rule 297 (enum-name)]
    "constexpr"       [reduce using rule 1124 (typedef-name)]
    "consteval"       reduce using rule 145 (class-name)
    "consteval"       [reduce using rule 297 (enum-name)]
    "consteval"       [reduce using rule 1124 (typedef-name)]
    "constinit"       reduce using rule 145 (class-name)
    "constinit"       [reduce using rule 297 (enum-name)]
    "constinit"       [reduce using rule 1124 (typedef-name)]
    "inline"          reduce using rule 145 (class-name)
    "inline"          [reduce using rule 297 (enum-name)]
    "inline"          [reduce using rule 1124 (typedef-name)]
    "decltype"        reduce using rule 145 (class-name)
    "decltype"        [reduce using rule 297 (enum-name)]
    "decltype"        [reduce using rule 1124 (typedef-name)]
    "->"              reduce using rule 145 (class-name)
    "->"              [reduce using rule 297 (enum-name)]
    "->"              [reduce using rule 1124 (typedef-name)]
    '.'               reduce using rule 145 (class-name)
    '.'               [reduce using rule 297 (enum-name)]
    '.'               [reduce using rule 1124 (typedef-name)]
    "enum"            reduce using rule 145 (class-name)
    "enum"            [reduce using rule 297 (enum-name)]
    "enum"            [reduce using rule 1124 (typedef-name)]
    "=="              reduce using rule 145 (class-name)
    "=="              [reduce using rule 297 (enum-name)]
    "=="              [reduce using rule 1124 (typedef-name)]
    "!="              reduce using rule 145 (class-name)
    "!="              [reduce using rule 297 (enum-name)]
    "!="              [reduce using rule 1124 (typedef-name)]
    '^'               reduce using rule 145 (class-name)
    '^'               [reduce using rule 297 (enum-name)]
    '^'               [reduce using rule 1124 (typedef-name)]
    "extern"          reduce using rule 145 (class-name)
    "extern"          [reduce using rule 297 (enum-name)]
    "extern"          [reduce using rule 1124 (typedef-name)]
    '<'               reduce using rule 145 (class-name)
    '<'               [reduce using rule 297 (enum-name)]
    '<'               [reduce using rule 1066 (template-name)]
    '<'               [reduce using rule 1124 (typedef-name)]
    '>'               reduce using rule 145 (class-name)
    '>'               [reduce using rule 297 (enum-name)]
    '>'               [reduce using rule 1124 (typedef-name)]
    "explicit"        reduce using rule 145 (class-name)
    "explicit"        [reduce using rule 297 (enum-name)]
    "explicit"        [reduce using rule 1124 (typedef-name)]
    "export"          reduce using rule 145 (class-name)
    "export"          [reduce using rule 297 (enum-name)]
    "export"          [reduce using rule 1124 (typedef-name)]
    "export-keyword"  reduce using rule 145 (class-name)
    "export-keyword"  [reduce using rule 297 (enum-name)]
    "export-keyword"  [reduce using rule 1124 (typedef-name)]
    '*'               reduce using rule 145 (class-name)
    '*'               [reduce using rule 297 (enum-name)]
    '*'               [reduce using rule 1124 (typedef-name)]
    '/'               reduce using rule 145 (class-name)
    '/'               [reduce using rule 297 (enum-name)]
    '/'               [reduce using rule 1124 (typedef-name)]
    '%'               reduce using rule 145 (class-name)
    '%'               [reduce using rule 297 (enum-name)]
    '%'               [reduce using rule 1124 (typedef-name)]
    '|'               reduce using rule 145 (class-name)
    '|'               [reduce using rule 297 (enum-name)]
    '|'               [reduce using rule 1124 (typedef-name)]
    "<<"              reduce using rule 145 (class-name)
    "<<"              [reduce using rule 297 (enum-name)]
    "<<"              [reduce using rule 1124 (typedef-name)]
    ">>"              reduce using rule 145 (class-name)
    ">>"              [reduce using rule 297 (enum-name)]
    ">>"              [reduce using rule 1124 (typedef-name)]
    "<="              reduce using rule 145 (class-name)
    "<="              [reduce using rule 297 (enum-name)]
    "<="              [reduce using rule 1124 (typedef-name)]
    ">="              reduce using rule 145 (class-name)
    ">="              [reduce using rule 297 (enum-name)]
    ">="              [reduce using rule 1124 (typedef-name)]
    ".*"              reduce using rule 145 (class-name)
    ".*"              [reduce using rule 297 (enum-name)]
    ".*"              [reduce using rule 1124 (typedef-name)]
    "->*"             reduce using rule 145 (class-name)
    "->*"             [reduce using rule 297 (enum-name)]
    "->*"             [reduce using rule 1124 (typedef-name)]
    "try"             reduce using rule 145 (class-name)
    "try"             [reduce using rule 297 (enum-name)]
    "try"             [reduce using rule 1124 (typedef-name)]
    "import-keyword"  reduce using rule 145 (class-name)
    "import-keyword"  [reduce using rule 297 (enum-name)]
    "import-keyword"  [reduce using rule 1124 (typedef-name)]
    "namespace"       reduce using rule 145 (class-name)
    "namespace"       [reduce using rule 297 (enum-name)]
    "namespace"       [reduce using rule 1124 (typedef-name)]
    "requires"        reduce using rule 145 (class-name)
    "requires"        [reduce using rule 297 (enum-name)]
    "requires"        [reduce using rule 1124 (typedef-name)]
    '~'               reduce using rule 145 (class-name)
    '~'               [reduce using rule 297 (enum-name)]
    '~'               [reduce using rule 1124 (typedef-name)]
    "++"              reduce using rule 145 (class-name)
    "++"              [reduce using rule 297 (enum-name)]
    "++"              [reduce using rule 1124 (typedef-name)]
    "--"              reduce using rule 145 (class-name)
    "--"              [reduce using rule 297 (enum-name)]
    "--"              [reduce using rule 1124 (typedef-name)]
    "auto"            reduce using rule 145 (class-name)
    "auto"            [reduce using rule 297 (enum-name)]
    "auto"            [reduce using rule 1124 (typedef-name)]
    "char"            reduce using rule 145 (class-name)
    "char"            [reduce using rule 297 (enum-name)]
    "char"            [reduce using rule 1124 (typedef-name)]
    "char8_t"         reduce using rule 145 (class-name)
    "char8_t"         [reduce using rule 297 (enum-name)]
    "char8_t"         [reduce using rule 1124 (typedef-name)]
    "char16_t"        reduce using rule 145 (class-name)
    "char16_t"        [reduce using rule 297 (enum-name)]
    "char16_t"        [reduce using rule 1124 (typedef-name)]
    "char32_t"        reduce using rule 145 (class-name)
    "char32_t"        [reduce using rule 297 (enum-name)]
    "char32_t"        [reduce using rule 1124 (typedef-name)]
    "wchar_t"         reduce using rule 145 (class-name)
    "wchar_t"         [reduce using rule 297 (enum-name)]
    "wchar_t"         [reduce using rule 1124 (typedef-name)]
    "bool"            reduce using rule 145 (class-name)
    "bool"            [reduce using rule 297 (enum-name)]
    "bool"            [reduce using rule 1124 (typedef-name)]
    "short"           reduce using rule 145 (class-name)
    "short"           [reduce using rule 297 (enum-name)]
    "short"           [reduce using rule 1124 (typedef-name)]
    "int"             reduce using rule 145 (class-name)
    "int"             [reduce using rule 297 (enum-name)]
    "int"             [reduce using rule 1124 (typedef-name)]
    "long"            reduce using rule 145 (class-name)
    "long"            [reduce using rule 297 (enum-name)]
    "long"            [reduce using rule 1124 (typedef-name)]
    "signed"          reduce using rule 145 (class-name)
    "signed"          [reduce using rule 297 (enum-name)]
    "signed"          [reduce using rule 1124 (typedef-name)]
    "unsigned"        reduce using rule 145 (class-name)
    "unsigned"        [reduce using rule 297 (enum-name)]
    "unsigned"        [reduce using rule 1124 (typedef-name)]
    "float"           reduce using rule 145 (class-name)
    "float"           [reduce using rule 297 (enum-name)]
    "float"           [reduce using rule 1124 (typedef-name)]
    "double"          reduce using rule 145 (class-name)
    "double"          [reduce using rule 297 (enum-name)]
    "double"          [reduce using rule 1124 (typedef-name)]
    "void"            reduce using rule 145 (class-name)
    "void"            [reduce using rule 297 (enum-name)]
    "void"            [reduce using rule 1124 (typedef-name)]
    "static_assert"   reduce using rule 145 (class-name)
    "static_assert"   [reduce using rule 297 (enum-name)]
    "static_assert"   [reduce using rule 1124 (typedef-name)]
    "static"          reduce using rule 145 (class-name)
    "static"          [reduce using rule 297 (enum-name)]
    "static"          [reduce using rule 1124 (typedef-name)]
    "thread_local"    reduce using rule 145 (class-name)
    "thread_local"    [reduce using rule 297 (enum-name)]
    "thread_local"    [reduce using rule 1124 (typedef-name)]
    "mutable"         reduce using rule 145 (class-name)
    "mutable"         [reduce using rule 297 (enum-name)]
    "mutable"         [reduce using rule 1124 (typedef-name)]
    "typename"        reduce using rule 145 (class-name)
    "typename"        [reduce using rule 297 (enum-name)]
    "typename"        [reduce using rule 1124 (typedef-name)]
    "override"        reduce using rule 145 (class-name)
    "override"        [reduce using rule 297 (enum-name)]
    "override"        [reduce using rule 1124 (typedef-name)]
    $default          reduce using rule 145 (class-name)


State 255

  1159 unqualified-id: '~' decltype-specifier •

    $default  reduce using rule 1159 (unqualified-id)


State 256

  1158 unqualified-id: '~' type-name •

    $default  reduce using rule 1158 (unqualified-id)


State 257

  1038 static_assert-declaration: "static_assert" '(' • constant-expression ')' ';'
  1039                          | "static_assert" '(' • constant-expression ',' string-literal ')' ';'

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    additive-expression                  go to state 404
    and-expression                       go to state 405
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 412
    constant-expression                  go to state 575
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 435
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 258

  145 class-name: IDENTIFIER •
  297 enum-name: IDENTIFIER •
  651 namespace-alias: IDENTIFIER •
  657 namespace-name: IDENTIFIER •
  1066 template-name: IDENTIFIER •
  1124 typedef-name: IDENTIFIER •

    ';'       reduce using rule 145 (class-name)
    ';'       [reduce using rule 297 (enum-name)]
    ';'       [reduce using rule 651 (namespace-alias)]
    ';'       [reduce using rule 657 (namespace-name)]
    ';'       [reduce using rule 1124 (typedef-name)]
    "..."     reduce using rule 145 (class-name)
    "..."     [reduce using rule 297 (enum-name)]
    "..."     [reduce using rule 1124 (typedef-name)]
    ','       reduce using rule 145 (class-name)
    ','       [reduce using rule 297 (enum-name)]
    ','       [reduce using rule 1124 (typedef-name)]
    "::"      reduce using rule 145 (class-name)
    "::"      [reduce using rule 297 (enum-name)]
    "::"      [reduce using rule 651 (namespace-alias)]
    "::"      [reduce using rule 657 (namespace-name)]
    "::"      [reduce using rule 1124 (typedef-name)]
    '{'       reduce using rule 145 (class-name)
    '{'       [reduce using rule 297 (enum-name)]
    '{'       [reduce using rule 1124 (typedef-name)]
    '<'       reduce using rule 1066 (template-name)
    $default  reduce using rule 145 (class-name)


State 259

  663 nested-name-specifier: nested-name-specifier • IDENTIFIER "::"
  664                      | nested-name-specifier • simple-template-id "::"
  665                      | nested-name-specifier • "template" simple-template-id "::"
  1126 typename-specifier: "typename" nested-name-specifier • IDENTIFIER
  1127                   | "typename" nested-name-specifier • simple-template-id
  1128                   | "typename" nested-name-specifier • "template" simple-template-id

    IDENTIFIER  shift, and go to state 576
    "template"  shift, and go to state 577

    simple-template-id  go to state 578
    template-name       go to state 143


State 260

  1185 using-directive: attribute-specifier-seq "using" • "namespace" namespace-name ';'
  1187                | attribute-specifier-seq "using" • "namespace" nested-name-specifier namespace-name ';'

    "namespace"  shift, and go to state 579


State 261

   42 attribute-declaration: attribute-specifier-seq ';' •

    $default  reduce using rule 42 (attribute-declaration)


State 262

   21 asm-declaration: attribute-specifier-seq "asm" • '(' string-literal ')' ';'

    '('  shift, and go to state 580


State 263

  209 decl-specifier: "inline" •

    $default  reduce using rule 209 (decl-specifier)


State 264

  1042 storage-class-specifier: "extern" •

    $default  reduce using rule 1042 (storage-class-specifier)


State 265

   53 attribute-specifier-seq: attribute-specifier-seq attribute-specifier •

    $default  reduce using rule 53 (attribute-specifier-seq)


State 266

  400 function-definition: attribute-specifier-seq decl-specifier-seq • declarator function-body
  404                    | attribute-specifier-seq decl-specifier-seq • declarator virt-specifier-seq function-body
  408                    | attribute-specifier-seq decl-specifier-seq • declarator requires-clause function-body
  979 simple-declaration: attribute-specifier-seq decl-specifier-seq • init-declarator-list ';'
  980                   | attribute-specifier-seq decl-specifier-seq • '[' identifier-list ']' initializer ';'
  982                   | attribute-specifier-seq decl-specifier-seq • ref-qualifier '[' identifier-list ']' initializer ';'

    IDENTIFIER  shift, and go to state 148
    '('         shift, and go to state 5
    "..."       shift, and go to state 6
    '&'         shift, and go to state 283
    "::"        shift, and go to state 9
    '['         shift, and go to state 581
    "&&"        shift, and go to state 285
    "operator"  shift, and go to state 17
    "decltype"  shift, and go to state 135
    '*'         shift, and go to state 32
    '~'         shift, and go to state 36

    class-name              go to state 66
    conversion-function-id  go to state 69
    declarator              go to state 582
    declarator-id           go to state 76
    decltype-specifier      go to state 139
    enum-name               go to state 85
    id-expression           go to state 94
    init-declarator         go to state 287
    init-declarator-list    go to state 583
    literal-operator-id     go to state 96
    namespace-alias         go to state 100
    namespace-name          go to state 103
    nested-name-specifier   go to state 149
    noptr-declarator        go to state 107
    operator-function-id    go to state 109
    ptr-declarator          go to state 111
    ptr-operator            go to state 112
    qualified-id            go to state 113
    ref-qualifier           go to state 584
    simple-template-id      go to state 115
    template-id             go to state 121
    template-name           go to state 143
    type-name               go to state 144
    typedef-name            go to state 127
    unqualified-id          go to state 130


State 267

  398 function-definition: attribute-specifier-seq declarator • function-body
  402                    | attribute-specifier-seq declarator • virt-specifier-seq function-body
  406                    | attribute-specifier-seq declarator • requires-clause function-body
  694 nodeclspec-function-declaration: attribute-specifier-seq declarator • ';'

    '='         shift, and go to state 291
    ';'         shift, and go to state 585
    ':'         shift, and go to state 293
    '{'         shift, and go to state 294
    "final"     shift, and go to state 295
    "try"       shift, and go to state 296
    "requires"  shift, and go to state 297
    "override"  shift, and go to state 298

    compound-statement  go to state 299
    ctor-initializer    go to state 300
    function-body       go to state 586
    function-try-block  go to state 302
    requires-clause     go to state 587
    virt-specifier      go to state 304
    virt-specifier-seq  go to state 588


State 268

  284 enum-head: enum-key •
  285          | enum-key • attribute-specifier-seq
  286          | enum-key • enum-head-name
  287          | enum-key • attribute-specifier-seq enum-head-name
  288          | enum-key • enum-base
  289          | enum-key • attribute-specifier-seq enum-base
  290          | enum-key • enum-head-name enum-base
  291          | enum-key • attribute-specifier-seq enum-head-name enum-base

    IDENTIFIER  shift, and go to state 309
    "alignas"   shift, and go to state 4
    "::"        shift, and go to state 9
    '['         shift, and go to state 10
    ':'         shift, and go to state 310
    "decltype"  shift, and go to state 135

    $default  reduce using rule 284 (enum-head)

    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 589
    class-name               go to state 66
    decltype-specifier       go to state 139
    enum-base                go to state 312
    enum-head-name           go to state 590
    enum-name                go to state 85
    namespace-alias          go to state 100
    namespace-name           go to state 103
    nested-name-specifier    go to state 314
    simple-template-id       go to state 142
    template-name            go to state 143
    type-name                go to state 144
    typedef-name             go to state 127


State 269

  411 function-specifier: explicit-specifier •

    $default  reduce using rule 411 (function-specifier)


State 270

  151 class-specifier: class-head '{' • '}'
  152                | class-head '{' • member-specification '}'

    IDENTIFIER       shift, and go to state 591
    "private"        shift, and go to state 592
    "protected"      shift, and go to state 593
    "public"         shift, and go to state 594
    "using"          shift, and go to state 595
    ';'              shift, and go to state 596
    "alignas"        shift, and go to state 4
    '('              shift, and go to state 5
    "..."            shift, and go to state 6
    '&'              shift, and go to state 7
    "::"             shift, and go to state 9
    '['              shift, and go to state 10
    ':'              shift, and go to state 597
    '}'              shift, and go to state 598
    "virtual"        shift, and go to state 11
    "class"          shift, and go to state 12
    "struct"         shift, and go to state 13
    "union"          shift, and go to state 14
    "template"       shift, and go to state 599
    "&&"             shift, and go to state 16
    "operator"       shift, and go to state 17
    "const"          shift, and go to state 18
    "volatile"       shift, and go to state 19
    "friend"         shift, and go to state 20
    "typedef"        shift, and go to state 21
    "constexpr"      shift, and go to state 22
    "consteval"      shift, and go to state 23
    "constinit"      shift, and go to state 24
    "inline"         shift, and go to state 263
    "decltype"       shift, and go to state 26
    "enum"           shift, and go to state 27
    "extern"         shift, and go to state 264
    "explicit"       shift, and go to state 29
    '*'              shift, and go to state 32
    '~'              shift, and go to state 36
    "auto"           shift, and go to state 37
    "char"           shift, and go to state 38
    "char8_t"        shift, and go to state 39
    "char16_t"       shift, and go to state 40
    "char32_t"       shift, and go to state 41
    "wchar_t"        shift, and go to state 42
    "bool"           shift, and go to state 43
    "short"          shift, and go to state 44
    "int"            shift, and go to state 45
    "long"           shift, and go to state 46
    "signed"         shift, and go to state 47
    "unsigned"       shift, and go to state 48
    "float"          shift, and go to state 49
    "double"         shift, and go to state 50
    "void"           shift, and go to state 51
    "static_assert"  shift, and go to state 52
    "static"         shift, and go to state 53
    "thread_local"   shift, and go to state 54
    "mutable"        shift, and go to state 55
    "typename"       shift, and go to state 56

    access-specifier            go to state 600
    alias-declaration           go to state 601
    alignment-specifier         go to state 58
    attribute-specifier         go to state 61
    attribute-specifier-seq     go to state 602
    class-head                  go to state 64
    class-key                   go to state 65
    class-name                  go to state 66
    class-specifier             go to state 67
    concept-name                go to state 68
    conversion-function-id      go to state 69
    cv-qualifier                go to state 70
    decl-specifier              go to state 71
    decl-specifier-seq          go to state 603
    declarator                  go to state 604
    declarator-id               go to state 76
    decltype-specifier          go to state 77
    deduction-guide             go to state 605
    defining-type-specifier     go to state 79
    elaborated-enum-specifier   go to state 80
    elaborated-type-specifier   go to state 81
    empty-declaration           go to state 606
    enum-head                   go to state 83
    enum-key                    go to state 84
    enum-name                   go to state 85
    enum-specifier              go to state 86
    explicit-specialization     go to state 607
    explicit-specifier          go to state 89
    function-definition         go to state 608
    function-specifier          go to state 92
    id-expression               go to state 94
    literal-operator-id         go to state 96
    member-declaration          go to state 609
    member-declarator           go to state 610
    member-declarator-list      go to state 611
    member-specification        go to state 612
    namespace-alias             go to state 100
    namespace-name              go to state 103
    nested-name-specifier       go to state 104
    noptr-declarator            go to state 107
    opaque-enum-declaration     go to state 613
    operator-function-id        go to state 109
    placeholder-type-specifier  go to state 110
    ptr-declarator              go to state 111
    ptr-operator                go to state 112
    qualified-id                go to state 113
    simple-template-id          go to state 115
    simple-type-specifier       go to state 116
    static_assert-declaration   go to state 614
    storage-class-specifier     go to state 118
    template-declaration        go to state 615
    template-head               go to state 120
    template-id                 go to state 121
    template-name               go to state 122
    type-constraint             go to state 124
    type-name                   go to state 125
    type-specifier              go to state 126
    typedef-name                go to state 127
    typename-specifier          go to state 128
    unqualified-id              go to state 130
    using-declaration           go to state 616
    using-enum-declaration      go to state 617


State 271

  145 class-name: IDENTIFIER •
  267 elaborated-type-specifier: class-key IDENTIFIER •
  297 enum-name: IDENTIFIER •
  651 namespace-alias: IDENTIFIER •
  657 namespace-name: IDENTIFIER •
  1066 template-name: IDENTIFIER •
  1124 typedef-name: IDENTIFIER •

    "::"      reduce using rule 145 (class-name)
    "::"      [reduce using rule 267 (elaborated-type-specifier)]
    "::"      [reduce using rule 297 (enum-name)]
    "::"      [reduce using rule 651 (namespace-alias)]
    "::"      [reduce using rule 657 (namespace-name)]
    "::"      [reduce using rule 1124 (typedef-name)]
    ':'       reduce using rule 145 (class-name)
    ':'       [reduce using rule 267 (elaborated-type-specifier)]
    '{'       reduce using rule 145 (class-name)
    '{'       [reduce using rule 267 (elaborated-type-specifier)]
    "final"   reduce using rule 145 (class-name)
    "final"   [reduce using rule 267 (elaborated-type-specifier)]
    '<'       reduce using rule 267 (elaborated-type-specifier)
    '<'       [reduce using rule 1066 (template-name)]
    $default  reduce using rule 267 (elaborated-type-specifier)


State 272

   68 base-clause: ':' • base-specifier-list

    IDENTIFIER   shift, and go to state 258
    "private"    shift, and go to state 592
    "protected"  shift, and go to state 593
    "public"     shift, and go to state 594
    "alignas"    shift, and go to state 4
    "::"         shift, and go to state 9
    '['          shift, and go to state 10
    "virtual"    shift, and go to state 618
    "decltype"   shift, and go to state 135

    access-specifier         go to state 619
    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 620
    base-specifier           go to state 621
    base-specifier-list      go to state 622
    class-name               go to state 66
    class-or-decltype        go to state 623
    decltype-specifier       go to state 624
    enum-name                go to state 85
    namespace-alias          go to state 100
    namespace-name           go to state 103
    nested-name-specifier    go to state 625
    simple-template-id       go to state 142
    template-name            go to state 143
    type-name                go to state 626
    typedef-name             go to state 127


State 273

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  129 class-head: class-key attribute-specifier-seq • class-head-name
  131           | class-key attribute-specifier-seq • class-head-name class-virt-specifier
  133           | class-key attribute-specifier-seq • class-head-name base-clause
  135           | class-key attribute-specifier-seq • class-head-name class-virt-specifier base-clause
  137           | class-key attribute-specifier-seq •
  139           | class-key attribute-specifier-seq • base-clause
  268 elaborated-type-specifier: class-key attribute-specifier-seq • IDENTIFIER
  270                          | class-key attribute-specifier-seq • nested-name-specifier IDENTIFIER

    IDENTIFIER  shift, and go to state 627
    "alignas"   shift, and go to state 4
    "::"        shift, and go to state 9
    '['         shift, and go to state 10
    ':'         shift, and go to state 272
    "decltype"  shift, and go to state 135

    $default  reduce using rule 137 (class-head)

    alignment-specifier    go to state 58
    attribute-specifier    go to state 265
    base-clause            go to state 628
    class-head-name        go to state 629
    class-name             go to state 276
    decltype-specifier     go to state 139
    enum-name              go to state 85
    namespace-alias        go to state 100
    namespace-name         go to state 103
    nested-name-specifier  go to state 630
    simple-template-id     go to state 142
    template-name          go to state 143
    type-name              go to state 144
    typedef-name           go to state 127


State 274

  138 class-head: class-key base-clause •

    $default  reduce using rule 138 (class-head)


State 275

  128 class-head: class-key class-head-name •
  130           | class-key class-head-name • class-virt-specifier
  132           | class-key class-head-name • base-clause
  134           | class-key class-head-name • class-virt-specifier base-clause

    ':'      shift, and go to state 272
    "final"  shift, and go to state 631

    $default  reduce using rule 128 (class-head)

    base-clause           go to state 632
    class-virt-specifier  go to state 633


State 276

  141 class-head-name: class-name •
  1092 type-name: class-name •

    "::"      reduce using rule 1092 (type-name)
    $default  reduce using rule 141 (class-head-name)


State 277

  140 class-head-name: nested-name-specifier • class-name
  269 elaborated-type-specifier: class-key nested-name-specifier • IDENTIFIER
  272                          | class-key nested-name-specifier • simple-template-id
  273                          | class-key nested-name-specifier • "template" simple-template-id
  663 nested-name-specifier: nested-name-specifier • IDENTIFIER "::"
  664                      | nested-name-specifier • simple-template-id "::"
  665                      | nested-name-specifier • "template" simple-template-id "::"

    IDENTIFIER  shift, and go to state 634
    "template"  shift, and go to state 635

    class-name          go to state 636
    simple-template-id  go to state 637
    template-name       go to state 143


State 278

  146 class-name: simple-template-id •
  271 elaborated-type-specifier: class-key simple-template-id •
  1125 typedef-name: simple-template-id •

    "::"      reduce using rule 146 (class-name)
    "::"      [reduce using rule 271 (elaborated-type-specifier)]
    "::"      [reduce using rule 1125 (typedef-name)]
    ':'       reduce using rule 146 (class-name)
    ':'       [reduce using rule 271 (elaborated-type-specifier)]
    '{'       reduce using rule 146 (class-name)
    '{'       [reduce using rule 271 (elaborated-type-specifier)]
    "final"   reduce using rule 146 (class-name)
    "final"   [reduce using rule 271 (elaborated-type-specifier)]
    $default  reduce using rule 271 (elaborated-type-specifier)


State 279

  1087 type-constraint: concept-name '<' • '>'
  1089                | concept-name '<' • template-argument-list '>'

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 136
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '>'                 shift, and go to state 638
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    additive-expression                  go to state 404
    and-expression                       go to state 405
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-key                            go to state 210
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 412
    constant-expression                  go to state 639
    conversion-function-id               go to state 69
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 640
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 435
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    string-literal                       go to state 450
    template-argument                    go to state 641
    template-argument-list               go to state 642
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-id                              go to state 643
    type-name                            go to state 125
    type-specifier                       go to state 217
    type-specifier-seq                   go to state 452
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 280

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  211 decl-specifier-seq: decl-specifier attribute-specifier-seq •

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    "alignas"  [reduce using rule 211 (decl-specifier-seq)]
    '['        [reduce using rule 211 (decl-specifier-seq)]
    $default   reduce using rule 211 (decl-specifier-seq)

    alignment-specifier  go to state 58
    attribute-specifier  go to state 265


State 281

  212 decl-specifier-seq: decl-specifier decl-specifier-seq •

    $default  reduce using rule 212 (decl-specifier-seq)


State 282

  977 simple-declaration: decl-specifier-seq ';' •

    $default  reduce using rule 977 (simple-declaration)


State 283

  901 ptr-operator: '&' •
  902             | '&' • attribute-specifier-seq
  928 ref-qualifier: '&' •

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    '['       [reduce using rule 928 (ref-qualifier)]
    $default  reduce using rule 901 (ptr-operator)

    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 154


State 284

  981 simple-declaration: decl-specifier-seq '[' • identifier-list ']' initializer ';'

    IDENTIFIER  shift, and go to state 644

    identifier-list  go to state 645


State 285

  903 ptr-operator: "&&" •
  904             | "&&" • attribute-specifier-seq
  929 ref-qualifier: "&&" •

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    '['       [reduce using rule 929 (ref-qualifier)]
    $default  reduce using rule 903 (ptr-operator)

    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 160


State 286

  401 function-definition: decl-specifier-seq declarator • function-body
  405                    | decl-specifier-seq declarator • virt-specifier-seq function-body
  409                    | decl-specifier-seq declarator • requires-clause function-body
  473 init-declarator: declarator •
  474                | declarator • initializer
  475                | declarator • requires-clause

    '='         shift, and go to state 646
    '('         shift, and go to state 647
    ':'         shift, and go to state 293
    '{'         shift, and go to state 648
    "final"     shift, and go to state 295
    "try"       shift, and go to state 296
    "requires"  shift, and go to state 297
    "override"  shift, and go to state 298

    $default  reduce using rule 473 (init-declarator)

    brace-or-equal-initializer  go to state 649
    braced-init-list            go to state 650
    compound-statement          go to state 299
    ctor-initializer            go to state 300
    function-body               go to state 651
    function-try-block          go to state 302
    initializer                 go to state 652
    requires-clause             go to state 653
    virt-specifier              go to state 304
    virt-specifier-seq          go to state 654


State 287

  476 init-declarator-list: init-declarator •

    $default  reduce using rule 476 (init-declarator-list)


State 288

  477 init-declarator-list: init-declarator-list • ',' init-declarator
  978 simple-declaration: decl-specifier-seq init-declarator-list • ';'

    ';'  shift, and go to state 655
    ','  shift, and go to state 656


State 289

  983 simple-declaration: decl-specifier-seq ref-qualifier • '[' identifier-list ']' initializer ';'

    '['  shift, and go to state 657


State 290

  227 declaration-seq: declaration-seq declaration •

    $default  reduce using rule 227 (declaration-seq)


State 291

  396 function-body: '=' • "default" ';'
  397              | '=' • "delete" ';'

    "delete"   shift, and go to state 658
    "default"  shift, and go to state 659


State 292

  695 nodeclspec-function-declaration: declarator ';' •

    $default  reduce using rule 695 (nodeclspec-function-declaration)


State 293

  184 ctor-initializer: ':' • mem-initializer-list

    IDENTIFIER  shift, and go to state 660
    "::"        shift, and go to state 9
    "decltype"  shift, and go to state 135

    class-name             go to state 66
    class-or-decltype      go to state 661
    decltype-specifier     go to state 624
    enum-name              go to state 85
    mem-initializer        go to state 662
    mem-initializer-id     go to state 663
    mem-initializer-list   go to state 664
    namespace-alias        go to state 100
    namespace-name         go to state 103
    nested-name-specifier  go to state 625
    simple-template-id     go to state 142
    template-name          go to state 143
    type-name              go to state 626
    typedef-name           go to state 127


State 294

  160 compound-statement: '{' • '}'
  161                   | '{' • statement-seq '}'

    IDENTIFIER          shift, and go to state 665
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    "using"             shift, and go to state 2
    ';'                 shift, and go to state 666
    "alignas"           shift, and go to state 4
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "asm"               shift, and go to state 8
    "::"                shift, and go to state 365
    '['                 shift, and go to state 667
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 294
    '}'                 shift, and go to state 668
    "virtual"           shift, and go to state 11
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "co_return"         shift, and go to state 669
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "friend"            shift, and go to state 20
    "typedef"           shift, and go to state 21
    "constexpr"         shift, and go to state 22
    "consteval"         shift, and go to state 23
    "constinit"         shift, and go to state 24
    "inline"            shift, and go to state 263
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 27
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    "extern"            shift, and go to state 264
    "explicit"          shift, and go to state 29
    '*'                 shift, and go to state 386
    "default"           shift, and go to state 670
    "try"               shift, and go to state 671
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "while"             shift, and go to state 672
    "do"                shift, and go to state 673
    "for"               shift, and go to state 674
    "break"             shift, and go to state 675
    "continue"          shift, and go to state 676
    "return"            shift, and go to state 677
    "goto"              shift, and go to state 678
    "case"              shift, and go to state 679
    "namespace"         shift, and go to state 680
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "if"                shift, and go to state 681
    "switch"            shift, and go to state 682
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    "static_assert"     shift, and go to state 52
    "static"            shift, and go to state 53
    "thread_local"      shift, and go to state 54
    "mutable"           shift, and go to state 55
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    alias-declaration                    go to state 57
    alignment-specifier                  go to state 58
    and-expression                       go to state 405
    asm-declaration                      go to state 59
    assignment-expression                go to state 530
    attribute-specifier                  go to state 61
    attribute-specifier-seq              go to state 683
    await-expression                     go to state 406
    binary-literal                       go to state 407
    block-declaration                    go to state 684
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-head                           go to state 64
    class-key                            go to state 65
    class-name                           go to state 66
    class-specifier                      go to state 67
    compare-expression                   go to state 411
    compound-statement                   go to state 685
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    coroutine-return-statement           go to state 686
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decl-specifier                       go to state 71
    decl-specifier-seq                   go to state 687
    declaration-statement                go to state 688
    decltype-specifier                   go to state 77
    defining-type-specifier              go to state 79
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-head                            go to state 83
    enum-key                             go to state 84
    enum-name                            go to state 85
    enum-specifier                       go to state 86
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    explicit-specifier                   go to state 269
    expression                           go to state 689
    expression-statement                 go to state 690
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    function-specifier                   go to state 92
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    iteration-statement                  go to state 691
    jump-statement                       go to state 692
    labeled-statement                    go to state 693
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-alias-definition           go to state 101
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    opaque-enum-declaration              go to state 108
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    selection-statement                  go to state 694
    shift-expression                     go to state 448
    simple-declaration                   go to state 114
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    statement                            go to state 695
    statement-seq                        go to state 696
    static_assert-declaration            go to state 117
    storage-class-specifier              go to state 118
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    try-block                            go to state 697
    type-constraint                      go to state 124
    type-name                            go to state 125
    type-specifier                       go to state 126
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    using-declaration                    go to state 131
    using-directive                      go to state 132
    using-enum-declaration               go to state 133
    yield-expression                     go to state 537


State 295

  1191 virt-specifier: "final" •

    $default  reduce using rule 1191 (virt-specifier)


State 296

  412 function-try-block: "try" • compound-statement handler-seq
  413                   | "try" • ctor-initializer compound-statement handler-seq

    ':'  shift, and go to state 293
    '{'  shift, and go to state 294

    compound-statement  go to state 698
    ctor-initializer    go to state 699


State 297

  943 requires-clause: "requires" • constraint-logical-or-expression

    IDENTIFIER  shift, and go to state 148
    '('         shift, and go to state 700
    "::"        shift, and go to state 9
    '['         shift, and go to state 366
    '0'         shift, and go to state 368
    '1'         shift, and go to state 369
    "0b"        shift, and go to state 370
    "0B"        shift, and go to state 371
    '\''        shift, and go to state 372
    "false"     shift, and go to state 373
    "true"      shift, and go to state 374
    "operator"  shift, and go to state 17
    "decltype"  shift, and go to state 135
    '.'         shift, and go to state 377
    '2'         shift, and go to state 378
    '3'         shift, and go to state 379
    '4'         shift, and go to state 380
    '5'         shift, and go to state 381
    '6'         shift, and go to state 382
    '7'         shift, and go to state 383
    '8'         shift, and go to state 384
    '9'         shift, and go to state 385
    "u8"        shift, and go to state 185
    'u'         shift, and go to state 186
    'U'         shift, and go to state 187
    'L'         shift, and go to state 188
    '"'         shift, and go to state 203
    "0x"        shift, and go to state 387
    "0X"        shift, and go to state 388
    "requires"  shift, and go to state 389
    '~'         shift, and go to state 36
    "this"      shift, and go to state 395
    "nullptr"   shift, and go to state 396
    'R'         shift, and go to state 209

    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    character-literal                    go to state 410
    class-name                           go to state 66
    constraint-logical-and-expression    go to state 701
    constraint-logical-or-expression     go to state 702
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 139
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 153
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    pointer-literal                      go to state 443
    primary-expression                   go to state 703
    qualified-id                         go to state 113
    requires-expression                  go to state 447
    simple-template-id                   go to state 115
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 143
    type-name                            go to state 144
    typedef-name                         go to state 127
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 298

  1190 virt-specifier: "override" •

    $default  reduce using rule 1190 (virt-specifier)


State 299

  394 function-body: compound-statement •

    $default  reduce using rule 394 (function-body)


State 300

  393 function-body: ctor-initializer • compound-statement

    '{'  shift, and go to state 294

    compound-statement  go to state 704


State 301

  399 function-definition: declarator function-body •

    $default  reduce using rule 399 (function-definition)


State 302

  395 function-body: function-try-block •

    $default  reduce using rule 395 (function-body)


State 303

  407 function-definition: declarator requires-clause • function-body

    '='    shift, and go to state 291
    ':'    shift, and go to state 293
    '{'    shift, and go to state 294
    "try"  shift, and go to state 296

    compound-statement  go to state 299
    ctor-initializer    go to state 300
    function-body       go to state 705
    function-try-block  go to state 302


State 304

  1192 virt-specifier-seq: virt-specifier •

    $default  reduce using rule 1192 (virt-specifier-seq)


State 305

  403 function-definition: declarator virt-specifier-seq • function-body
  1193 virt-specifier-seq: virt-specifier-seq • virt-specifier

    '='         shift, and go to state 291
    ':'         shift, and go to state 293
    '{'         shift, and go to state 294
    "final"     shift, and go to state 295
    "try"       shift, and go to state 296
    "override"  shift, and go to state 298

    compound-statement  go to state 299
    ctor-initializer    go to state 300
    function-body       go to state 706
    function-try-block  go to state 302
    virt-specifier      go to state 707


State 306

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  726 noptr-declarator: declarator-id attribute-specifier-seq •

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    '['       [reduce using rule 726 (noptr-declarator)]
    $default  reduce using rule 726 (noptr-declarator)

    alignment-specifier  go to state 58
    attribute-specifier  go to state 265


State 307

  662 nested-name-specifier: decltype-specifier "::" •

    $default  reduce using rule 662 (nested-name-specifier)


State 308

  298 enum-specifier: enum-head '{' • '}'
  299               | enum-head '{' • enumerator-list '}'
  300               | enum-head '{' • enumerator-list ',' '}'

    IDENTIFIER  shift, and go to state 708
    '}'         shift, and go to state 709

    enumerator             go to state 710
    enumerator-definition  go to state 711
    enumerator-list        go to state 712


State 309

  145 class-name: IDENTIFIER •
  293 enum-head-name: IDENTIFIER •
  297 enum-name: IDENTIFIER •
  651 namespace-alias: IDENTIFIER •
  657 namespace-name: IDENTIFIER •
  1066 template-name: IDENTIFIER •
  1124 typedef-name: IDENTIFIER •

    "::"      reduce using rule 145 (class-name)
    "::"      [reduce using rule 297 (enum-name)]
    "::"      [reduce using rule 651 (namespace-alias)]
    "::"      [reduce using rule 657 (namespace-name)]
    "::"      [reduce using rule 1124 (typedef-name)]
    '<'       reduce using rule 1066 (template-name)
    $default  reduce using rule 293 (enum-head-name)


State 310

  283 enum-base: ':' • type-specifier-seq

    IDENTIFIER  shift, and go to state 161
    "::"        shift, and go to state 9
    "class"     shift, and go to state 12
    "struct"    shift, and go to state 13
    "union"     shift, and go to state 14
    "const"     shift, and go to state 18
    "volatile"  shift, and go to state 19
    "decltype"  shift, and go to state 26
    "enum"      shift, and go to state 136
    "auto"      shift, and go to state 37
    "char"      shift, and go to state 38
    "char8_t"   shift, and go to state 39
    "char16_t"  shift, and go to state 40
    "char32_t"  shift, and go to state 41
    "wchar_t"   shift, and go to state 42
    "bool"      shift, and go to state 43
    "short"     shift, and go to state 44
    "int"       shift, and go to state 45
    "long"      shift, and go to state 46
    "signed"    shift, and go to state 47
    "unsigned"  shift, and go to state 48
    "float"     shift, and go to state 49
    "double"    shift, and go to state 50
    "void"      shift, and go to state 51
    "typename"  shift, and go to state 56

    class-key                   go to state 210
    class-name                  go to state 66
    concept-name                go to state 68
    cv-qualifier                go to state 70
    decltype-specifier          go to state 77
    elaborated-enum-specifier   go to state 80
    elaborated-type-specifier   go to state 81
    enum-name                   go to state 85
    namespace-alias             go to state 100
    namespace-name              go to state 103
    nested-name-specifier       go to state 213
    placeholder-type-specifier  go to state 110
    simple-template-id          go to state 142
    simple-type-specifier       go to state 116
    template-name               go to state 216
    type-constraint             go to state 124
    type-name                   go to state 125
    type-specifier              go to state 217
    type-specifier-seq          go to state 713
    typedef-name                go to state 127
    typename-specifier          go to state 128


State 311

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  285 enum-head: enum-key attribute-specifier-seq •
  287          | enum-key attribute-specifier-seq • enum-head-name
  289          | enum-key attribute-specifier-seq • enum-base
  291          | enum-key attribute-specifier-seq • enum-head-name enum-base
  756 opaque-enum-declaration: enum-key attribute-specifier-seq • enum-head-name ';'
  758                        | enum-key attribute-specifier-seq • enum-head-name enum-base ';'

    IDENTIFIER  shift, and go to state 309
    "alignas"   shift, and go to state 4
    "::"        shift, and go to state 9
    '['         shift, and go to state 10
    ':'         shift, and go to state 310
    "decltype"  shift, and go to state 135

    $default  reduce using rule 285 (enum-head)

    alignment-specifier    go to state 58
    attribute-specifier    go to state 265
    class-name             go to state 66
    decltype-specifier     go to state 139
    enum-base              go to state 714
    enum-head-name         go to state 715
    enum-name              go to state 85
    namespace-alias        go to state 100
    namespace-name         go to state 103
    nested-name-specifier  go to state 314
    simple-template-id     go to state 142
    template-name          go to state 143
    type-name              go to state 144
    typedef-name           go to state 127


State 312

  288 enum-head: enum-key enum-base •

    $default  reduce using rule 288 (enum-head)


State 313

  286 enum-head: enum-key enum-head-name •
  290          | enum-key enum-head-name • enum-base
  755 opaque-enum-declaration: enum-key enum-head-name • ';'
  757                        | enum-key enum-head-name • enum-base ';'

    ';'  shift, and go to state 716
    ':'  shift, and go to state 310

    $default  reduce using rule 286 (enum-head)

    enum-base  go to state 717


State 314

  292 enum-head-name: nested-name-specifier • IDENTIFIER
  663 nested-name-specifier: nested-name-specifier • IDENTIFIER "::"
  664                      | nested-name-specifier • simple-template-id "::"
  665                      | nested-name-specifier • "template" simple-template-id "::"

    IDENTIFIER  shift, and go to state 718
    "template"  shift, and go to state 355

    simple-template-id  go to state 539
    template-name       go to state 143


State 315

  1066 template-name: IDENTIFIER •

    $default  reduce using rule 1066 (template-name)


State 316

  234 deduction-guide: explicit-specifier template-name • '(' parameter-declaration-clause ')' "->" simple-template-id ';'

    '('  shift, and go to state 719


State 317

  623 module-declaration: "export-keyword" • "module-keyword" module-name ';'
  625                   | "export-keyword" • "module-keyword" module-name module-partition ';'
  627                   | "export-keyword" • "module-keyword" module-name attribute-specifier-seq ';'
  629                   | "export-keyword" • "module-keyword" module-name module-partition attribute-specifier-seq ';'

    "module-keyword"  shift, and go to state 231


State 318

  624 module-declaration: "module-keyword" • module-name ';'
  626                   | "module-keyword" • module-name module-partition ';'
  628                   | "module-keyword" • module-name attribute-specifier-seq ';'
  630                   | "module-keyword" • module-name module-partition attribute-specifier-seq ';'

    IDENTIFIER  shift, and go to state 236

    module-name            go to state 238
    module-name-qualifier  go to state 239


State 319

  1075 translation-unit: global-module-fragment module-declaration •
  1077                 | global-module-fragment module-declaration • declaration-seq
  1079                 | global-module-fragment module-declaration • private-module-fragment
  1081                 | global-module-fragment module-declaration • declaration-seq private-module-fragment

    IDENTIFIER        shift, and go to state 1
    "using"           shift, and go to state 2
    ';'               shift, and go to state 3
    "alignas"         shift, and go to state 4
    '('               shift, and go to state 5
    "..."             shift, and go to state 6
    '&'               shift, and go to state 7
    "asm"             shift, and go to state 8
    "::"              shift, and go to state 9
    '['               shift, and go to state 10
    "virtual"         shift, and go to state 11
    "class"           shift, and go to state 12
    "struct"          shift, and go to state 13
    "union"           shift, and go to state 14
    "template"        shift, and go to state 15
    "&&"              shift, and go to state 16
    "operator"        shift, and go to state 17
    "const"           shift, and go to state 18
    "volatile"        shift, and go to state 19
    "friend"          shift, and go to state 20
    "typedef"         shift, and go to state 21
    "constexpr"       shift, and go to state 22
    "consteval"       shift, and go to state 23
    "constinit"       shift, and go to state 24
    "inline"          shift, and go to state 25
    "decltype"        shift, and go to state 26
    "enum"            shift, and go to state 27
    "extern"          shift, and go to state 28
    "explicit"        shift, and go to state 29
    "export"          shift, and go to state 30
    "export-keyword"  shift, and go to state 158
    '*'               shift, and go to state 32
    "module-keyword"  shift, and go to state 321
    "import-keyword"  shift, and go to state 34
    "namespace"       shift, and go to state 35
    '~'               shift, and go to state 36
    "auto"            shift, and go to state 37
    "char"            shift, and go to state 38
    "char8_t"         shift, and go to state 39
    "char16_t"        shift, and go to state 40
    "char32_t"        shift, and go to state 41
    "wchar_t"         shift, and go to state 42
    "bool"            shift, and go to state 43
    "short"           shift, and go to state 44
    "int"             shift, and go to state 45
    "long"            shift, and go to state 46
    "signed"          shift, and go to state 47
    "unsigned"        shift, and go to state 48
    "float"           shift, and go to state 49
    "double"          shift, and go to state 50
    "void"            shift, and go to state 51
    "static_assert"   shift, and go to state 52
    "static"          shift, and go to state 53
    "thread_local"    shift, and go to state 54
    "mutable"         shift, and go to state 55
    "typename"        shift, and go to state 56

    $default  reduce using rule 1075 (translation-unit)

    alias-declaration                go to state 57
    alignment-specifier              go to state 58
    asm-declaration                  go to state 59
    attribute-declaration            go to state 60
    attribute-specifier              go to state 61
    attribute-specifier-seq          go to state 62
    block-declaration                go to state 63
    class-head                       go to state 64
    class-key                        go to state 65
    class-name                       go to state 66
    class-specifier                  go to state 67
    concept-name                     go to state 68
    conversion-function-id           go to state 69
    cv-qualifier                     go to state 70
    decl-specifier                   go to state 71
    decl-specifier-seq               go to state 72
    declaration                      go to state 73
    declaration-seq                  go to state 720
    declarator                       go to state 75
    declarator-id                    go to state 76
    decltype-specifier               go to state 77
    deduction-guide                  go to state 78
    defining-type-specifier          go to state 79
    elaborated-enum-specifier        go to state 80
    elaborated-type-specifier        go to state 81
    empty-declaration                go to state 82
    enum-head                        go to state 83
    enum-key                         go to state 84
    enum-name                        go to state 85
    enum-specifier                   go to state 86
    explicit-instantiation           go to state 87
    explicit-specialization          go to state 88
    explicit-specifier               go to state 89
    export-declaration               go to state 90
    function-definition              go to state 91
    function-specifier               go to state 92
    id-expression                    go to state 94
    linkage-specification            go to state 95
    literal-operator-id              go to state 96
    module-import-declaration        go to state 98
    named-namespace-definition       go to state 99
    namespace-alias                  go to state 100
    namespace-alias-definition       go to state 101
    namespace-definition             go to state 102
    namespace-name                   go to state 103
    nested-name-specifier            go to state 104
    nested-namespace-definition      go to state 105
    nodeclspec-function-declaration  go to state 106
    noptr-declarator                 go to state 107
    opaque-enum-declaration          go to state 108
    operator-function-id             go to state 109
    placeholder-type-specifier       go to state 110
    private-module-fragment          go to state 721
    ptr-declarator                   go to state 111
    ptr-operator                     go to state 112
    qualified-id                     go to state 113
    simple-declaration               go to state 114
    simple-template-id               go to state 115
    simple-type-specifier            go to state 116
    static_assert-declaration        go to state 117
    storage-class-specifier          go to state 118
    template-declaration             go to state 119
    template-head                    go to state 120
    template-id                      go to state 121
    template-name                    go to state 122
    type-constraint                  go to state 124
    type-name                        go to state 125
    type-specifier                   go to state 126
    typedef-name                     go to state 127
    typename-specifier               go to state 128
    unnamed-namespace-definition     go to state 129
    unqualified-id                   go to state 130
    using-declaration                go to state 131
    using-directive                  go to state 132
    using-enum-declaration           go to state 133


State 320

  1064 template-id: literal-operator-id '<' • '>'
  1065            | literal-operator-id '<' • template-argument-list '>'

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 136
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '>'                 shift, and go to state 722
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    additive-expression                  go to state 404
    and-expression                       go to state 405
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-key                            go to state 210
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 412
    constant-expression                  go to state 639
    conversion-function-id               go to state 69
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 640
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 435
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    string-literal                       go to state 450
    template-argument                    go to state 641
    template-argument-list               go to state 723
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-id                              go to state 643
    type-name                            go to state 125
    type-specifier                       go to state 217
    type-specifier-seq                   go to state 452
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 321

  890 private-module-fragment: "module-keyword" • ':' "private" ';'
  891                        | "module-keyword" • ':' "private" ';' declaration-seq

    ':'  shift, and go to state 724


State 322

  227 declaration-seq: declaration-seq • declaration
  1078 translation-unit: module-declaration declaration-seq •
  1082                 | module-declaration declaration-seq • private-module-fragment

    IDENTIFIER        shift, and go to state 1
    "using"           shift, and go to state 2
    ';'               shift, and go to state 3
    "alignas"         shift, and go to state 4
    '('               shift, and go to state 5
    "..."             shift, and go to state 6
    '&'               shift, and go to state 7
    "asm"             shift, and go to state 8
    "::"              shift, and go to state 9
    '['               shift, and go to state 10
    "virtual"         shift, and go to state 11
    "class"           shift, and go to state 12
    "struct"          shift, and go to state 13
    "union"           shift, and go to state 14
    "template"        shift, and go to state 15
    "&&"              shift, and go to state 16
    "operator"        shift, and go to state 17
    "const"           shift, and go to state 18
    "volatile"        shift, and go to state 19
    "friend"          shift, and go to state 20
    "typedef"         shift, and go to state 21
    "constexpr"       shift, and go to state 22
    "consteval"       shift, and go to state 23
    "constinit"       shift, and go to state 24
    "inline"          shift, and go to state 25
    "decltype"        shift, and go to state 26
    "enum"            shift, and go to state 27
    "extern"          shift, and go to state 28
    "explicit"        shift, and go to state 29
    "export"          shift, and go to state 30
    "export-keyword"  shift, and go to state 158
    '*'               shift, and go to state 32
    "module-keyword"  shift, and go to state 321
    "import-keyword"  shift, and go to state 34
    "namespace"       shift, and go to state 35
    '~'               shift, and go to state 36
    "auto"            shift, and go to state 37
    "char"            shift, and go to state 38
    "char8_t"         shift, and go to state 39
    "char16_t"        shift, and go to state 40
    "char32_t"        shift, and go to state 41
    "wchar_t"         shift, and go to state 42
    "bool"            shift, and go to state 43
    "short"           shift, and go to state 44
    "int"             shift, and go to state 45
    "long"            shift, and go to state 46
    "signed"          shift, and go to state 47
    "unsigned"        shift, and go to state 48
    "float"           shift, and go to state 49
    "double"          shift, and go to state 50
    "void"            shift, and go to state 51
    "static_assert"   shift, and go to state 52
    "static"          shift, and go to state 53
    "thread_local"    shift, and go to state 54
    "mutable"         shift, and go to state 55
    "typename"        shift, and go to state 56

    $default  reduce using rule 1078 (translation-unit)

    alias-declaration                go to state 57
    alignment-specifier              go to state 58
    asm-declaration                  go to state 59
    attribute-declaration            go to state 60
    attribute-specifier              go to state 61
    attribute-specifier-seq          go to state 62
    block-declaration                go to state 63
    class-head                       go to state 64
    class-key                        go to state 65
    class-name                       go to state 66
    class-specifier                  go to state 67
    concept-name                     go to state 68
    conversion-function-id           go to state 69
    cv-qualifier                     go to state 70
    decl-specifier                   go to state 71
    decl-specifier-seq               go to state 72
    declaration                      go to state 290
    declarator                       go to state 75
    declarator-id                    go to state 76
    decltype-specifier               go to state 77
    deduction-guide                  go to state 78
    defining-type-specifier          go to state 79
    elaborated-enum-specifier        go to state 80
    elaborated-type-specifier        go to state 81
    empty-declaration                go to state 82
    enum-head                        go to state 83
    enum-key                         go to state 84
    enum-name                        go to state 85
    enum-specifier                   go to state 86
    explicit-instantiation           go to state 87
    explicit-specialization          go to state 88
    explicit-specifier               go to state 89
    export-declaration               go to state 90
    function-definition              go to state 91
    function-specifier               go to state 92
    id-expression                    go to state 94
    linkage-specification            go to state 95
    literal-operator-id              go to state 96
    module-import-declaration        go to state 98
    named-namespace-definition       go to state 99
    namespace-alias                  go to state 100
    namespace-alias-definition       go to state 101
    namespace-definition             go to state 102
    namespace-name                   go to state 103
    nested-name-specifier            go to state 104
    nested-namespace-definition      go to state 105
    nodeclspec-function-declaration  go to state 106
    noptr-declarator                 go to state 107
    opaque-enum-declaration          go to state 108
    operator-function-id             go to state 109
    placeholder-type-specifier       go to state 110
    private-module-fragment          go to state 725
    ptr-declarator                   go to state 111
    ptr-operator                     go to state 112
    qualified-id                     go to state 113
    simple-declaration               go to state 114
    simple-template-id               go to state 115
    simple-type-specifier            go to state 116
    static_assert-declaration        go to state 117
    storage-class-specifier          go to state 118
    template-declaration             go to state 119
    template-head                    go to state 120
    template-id                      go to state 121
    template-name                    go to state 122
    type-constraint                  go to state 124
    type-name                        go to state 125
    type-specifier                   go to state 126
    typedef-name                     go to state 127
    typename-specifier               go to state 128
    unnamed-namespace-definition     go to state 129
    unqualified-id                   go to state 130
    using-declaration                go to state 131
    using-directive                  go to state 132
    using-enum-declaration           go to state 133


State 323

  1080 translation-unit: module-declaration private-module-fragment •

    $default  reduce using rule 1080 (translation-unit)


State 324

  661 nested-name-specifier: namespace-name "::" •

    $default  reduce using rule 661 (nested-name-specifier)


State 325

  145 class-name: IDENTIFIER •
  163 concept-name: IDENTIFIER •
  297 enum-name: IDENTIFIER •
  663 nested-name-specifier: nested-name-specifier IDENTIFIER • "::"
  1066 template-name: IDENTIFIER •
  1124 typedef-name: IDENTIFIER •
  1154 unqualified-id: IDENTIFIER •

    "::"  shift, and go to state 726

    IDENTIFIER      reduce using rule 145 (class-name)
    IDENTIFIER      [reduce using rule 297 (enum-name)]
    IDENTIFIER      [reduce using rule 1066 (template-name)]
    IDENTIFIER      [reduce using rule 1124 (typedef-name)]
    '+'             reduce using rule 1154 (unqualified-id)
    '-'             reduce using rule 1154 (unqualified-id)
    '='             reduce using rule 145 (class-name)
    '='             [reduce using rule 297 (enum-name)]
    '='             [reduce using rule 1066 (template-name)]
    '='             [reduce using rule 1124 (typedef-name)]
    '='             [reduce using rule 1154 (unqualified-id)]
    ';'             reduce using rule 145 (class-name)
    ';'             [reduce using rule 297 (enum-name)]
    ';'             [reduce using rule 1066 (template-name)]
    ';'             [reduce using rule 1124 (typedef-name)]
    ';'             [reduce using rule 1154 (unqualified-id)]
    "alignas"       reduce using rule 145 (class-name)
    "alignas"       [reduce using rule 297 (enum-name)]
    "alignas"       [reduce using rule 1066 (template-name)]
    "alignas"       [reduce using rule 1124 (typedef-name)]
    "alignas"       [reduce using rule 1154 (unqualified-id)]
    '('             reduce using rule 145 (class-name)
    '('             [reduce using rule 297 (enum-name)]
    '('             [reduce using rule 1066 (template-name)]
    '('             [reduce using rule 1124 (typedef-name)]
    '('             [reduce using rule 1154 (unqualified-id)]
    ')'             reduce using rule 145 (class-name)
    ')'             [reduce using rule 297 (enum-name)]
    ')'             [reduce using rule 1066 (template-name)]
    ')'             [reduce using rule 1124 (typedef-name)]
    ')'             [reduce using rule 1154 (unqualified-id)]
    "..."           reduce using rule 145 (class-name)
    "..."           [reduce using rule 297 (enum-name)]
    "..."           [reduce using rule 1066 (template-name)]
    "..."           [reduce using rule 1124 (typedef-name)]
    "..."           [reduce using rule 1154 (unqualified-id)]
    '&'             reduce using rule 145 (class-name)
    '&'             [reduce using rule 297 (enum-name)]
    '&'             [reduce using rule 1066 (template-name)]
    '&'             [reduce using rule 1124 (typedef-name)]
    '&'             [reduce using rule 1154 (unqualified-id)]
    "*="            reduce using rule 1154 (unqualified-id)
    "/="            reduce using rule 1154 (unqualified-id)
    "%="            reduce using rule 1154 (unqualified-id)
    "+="            reduce using rule 1154 (unqualified-id)
    "-="            reduce using rule 1154 (unqualified-id)
    ">>="           reduce using rule 1154 (unqualified-id)
    "<<="           reduce using rule 1154 (unqualified-id)
    "&="            reduce using rule 1154 (unqualified-id)
    "^="            reduce using rule 1154 (unqualified-id)
    "|="            reduce using rule 1154 (unqualified-id)
    ','             reduce using rule 145 (class-name)
    ','             [reduce using rule 297 (enum-name)]
    ','             [reduce using rule 1066 (template-name)]
    ','             [reduce using rule 1124 (typedef-name)]
    ','             [reduce using rule 1154 (unqualified-id)]
    "::"            [reduce using rule 145 (class-name)]
    "::"            [reduce using rule 297 (enum-name)]
    "::"            [reduce using rule 1066 (template-name)]
    "::"            [reduce using rule 1124 (typedef-name)]
    '['             reduce using rule 145 (class-name)
    '['             [reduce using rule 297 (enum-name)]
    '['             [reduce using rule 1066 (template-name)]
    '['             [reduce using rule 1124 (typedef-name)]
    '['             [reduce using rule 1154 (unqualified-id)]
    ']'             reduce using rule 1154 (unqualified-id)
    ':'             reduce using rule 145 (class-name)
    ':'             [reduce using rule 297 (enum-name)]
    ':'             [reduce using rule 1066 (template-name)]
    ':'             [reduce using rule 1124 (typedef-name)]
    ':'             [reduce using rule 1154 (unqualified-id)]
    '{'             reduce using rule 145 (class-name)
    '{'             [reduce using rule 297 (enum-name)]
    '{'             [reduce using rule 1066 (template-name)]
    '{'             [reduce using rule 1124 (typedef-name)]
    '{'             [reduce using rule 1154 (unqualified-id)]
    '}'             reduce using rule 1154 (unqualified-id)
    "virtual"       reduce using rule 145 (class-name)
    "virtual"       [reduce using rule 297 (enum-name)]
    "virtual"       [reduce using rule 1066 (template-name)]
    "virtual"       [reduce using rule 1124 (typedef-name)]
    "class"         reduce using rule 145 (class-name)
    "class"         [reduce using rule 297 (enum-name)]
    "class"         [reduce using rule 1066 (template-name)]
    "class"         [reduce using rule 1124 (typedef-name)]
    "struct"        reduce using rule 145 (class-name)
    "struct"        [reduce using rule 297 (enum-name)]
    "struct"        [reduce using rule 1066 (template-name)]
    "struct"        [reduce using rule 1124 (typedef-name)]
    "union"         reduce using rule 145 (class-name)
    "union"         [reduce using rule 297 (enum-name)]
    "union"         [reduce using rule 1066 (template-name)]
    "union"         [reduce using rule 1124 (typedef-name)]
    "final"         reduce using rule 1154 (unqualified-id)
    "<=>"           reduce using rule 1154 (unqualified-id)
    '?'             reduce using rule 1154 (unqualified-id)
    "&&"            reduce using rule 145 (class-name)
    "&&"            [reduce using rule 297 (enum-name)]
    "&&"            [reduce using rule 1066 (template-name)]
    "&&"            [reduce using rule 1124 (typedef-name)]
    "&&"            [reduce using rule 1154 (unqualified-id)]
    "||"            reduce using rule 1154 (unqualified-id)
    "operator"      reduce using rule 145 (class-name)
    "operator"      [reduce using rule 297 (enum-name)]
    "operator"      [reduce using rule 1066 (template-name)]
    "operator"      [reduce using rule 1124 (typedef-name)]
    "const"         reduce using rule 145 (class-name)
    "const"         [reduce using rule 297 (enum-name)]
    "const"         [reduce using rule 1066 (template-name)]
    "const"         [reduce using rule 1124 (typedef-name)]
    "volatile"      reduce using rule 145 (class-name)
    "volatile"      [reduce using rule 297 (enum-name)]
    "volatile"      [reduce using rule 1066 (template-name)]
    "volatile"      [reduce using rule 1124 (typedef-name)]
    "friend"        reduce using rule 145 (class-name)
    "friend"        [reduce using rule 297 (enum-name)]
    "friend"        [reduce using rule 1066 (template-name)]
    "friend"        [reduce using rule 1124 (typedef-name)]
    "typedef"       reduce using rule 145 (class-name)
    "typedef"       [reduce using rule 297 (enum-name)]
    "typedef"       [reduce using rule 1066 (template-name)]
    "typedef"       [reduce using rule 1124 (typedef-name)]
    "constexpr"     reduce using rule 145 (class-name)
    "constexpr"     [reduce using rule 297 (enum-name)]
    "constexpr"     [reduce using rule 1066 (template-name)]
    "constexpr"     [reduce using rule 1124 (typedef-name)]
    "consteval"     reduce using rule 145 (class-name)
    "consteval"     [reduce using rule 297 (enum-name)]
    "consteval"     [reduce using rule 1066 (template-name)]
    "consteval"     [reduce using rule 1124 (typedef-name)]
    "constinit"     reduce using rule 145 (class-name)
    "constinit"     [reduce using rule 297 (enum-name)]
    "constinit"     [reduce using rule 1066 (template-name)]
    "constinit"     [reduce using rule 1124 (typedef-name)]
    "inline"        reduce using rule 145 (class-name)
    "inline"        [reduce using rule 297 (enum-name)]
    "inline"        [reduce using rule 1066 (template-name)]
    "inline"        [reduce using rule 1124 (typedef-name)]
    "decltype"      reduce using rule 145 (class-name)
    "decltype"      [reduce using rule 163 (concept-name)]
    "decltype"      [reduce using rule 297 (enum-name)]
    "decltype"      [reduce using rule 1066 (template-name)]
    "decltype"      [reduce using rule 1124 (typedef-name)]
    "->"            reduce using rule 1154 (unqualified-id)
    '.'             reduce using rule 1154 (unqualified-id)
    "enum"          reduce using rule 145 (class-name)
    "enum"          [reduce using rule 297 (enum-name)]
    "enum"          [reduce using rule 1066 (template-name)]
    "enum"          [reduce using rule 1124 (typedef-name)]
    "=="            reduce using rule 1154 (unqualified-id)
    "!="            reduce using rule 1154 (unqualified-id)
    '^'             reduce using rule 1154 (unqualified-id)
    "extern"        reduce using rule 145 (class-name)
    "extern"        [reduce using rule 297 (enum-name)]
    "extern"        [reduce using rule 1066 (template-name)]
    "extern"        [reduce using rule 1124 (typedef-name)]
    '<'             reduce using rule 163 (concept-name)
    '<'             [reduce using rule 1066 (template-name)]
    '<'             [reduce using rule 1154 (unqualified-id)]
    '>'             reduce using rule 145 (class-name)
    '>'             [reduce using rule 297 (enum-name)]
    '>'             [reduce using rule 1066 (template-name)]
    '>'             [reduce using rule 1124 (typedef-name)]
    '>'             [reduce using rule 1154 (unqualified-id)]
    "explicit"      reduce using rule 145 (class-name)
    "explicit"      [reduce using rule 297 (enum-name)]
    "explicit"      [reduce using rule 1066 (template-name)]
    "explicit"      [reduce using rule 1124 (typedef-name)]
    '*'             reduce using rule 145 (class-name)
    '*'             [reduce using rule 297 (enum-name)]
    '*'             [reduce using rule 1066 (template-name)]
    '*'             [reduce using rule 1124 (typedef-name)]
    '*'             [reduce using rule 1154 (unqualified-id)]
    '/'             reduce using rule 1154 (unqualified-id)
    '%'             reduce using rule 1154 (unqualified-id)
    '|'             reduce using rule 1154 (unqualified-id)
    "<<"            reduce using rule 1154 (unqualified-id)
    ">>"            reduce using rule 1154 (unqualified-id)
    "<="            reduce using rule 1154 (unqualified-id)
    ">="            reduce using rule 1154 (unqualified-id)
    ".*"            reduce using rule 1154 (unqualified-id)
    "->*"           reduce using rule 1154 (unqualified-id)
    "try"           reduce using rule 1154 (unqualified-id)
    "requires"      reduce using rule 1154 (unqualified-id)
    '~'             reduce using rule 145 (class-name)
    '~'             [reduce using rule 297 (enum-name)]
    '~'             [reduce using rule 1066 (template-name)]
    '~'             [reduce using rule 1124 (typedef-name)]
    "++"            reduce using rule 1154 (unqualified-id)
    "--"            reduce using rule 1154 (unqualified-id)
    "auto"          reduce using rule 145 (class-name)
    "auto"          [reduce using rule 163 (concept-name)]
    "auto"          [reduce using rule 297 (enum-name)]
    "auto"          [reduce using rule 1066 (template-name)]
    "auto"          [reduce using rule 1124 (typedef-name)]
    "char"          reduce using rule 145 (class-name)
    "char"          [reduce using rule 297 (enum-name)]
    "char"          [reduce using rule 1066 (template-name)]
    "char"          [reduce using rule 1124 (typedef-name)]
    "char8_t"       reduce using rule 145 (class-name)
    "char8_t"       [reduce using rule 297 (enum-name)]
    "char8_t"       [reduce using rule 1066 (template-name)]
    "char8_t"       [reduce using rule 1124 (typedef-name)]
    "char16_t"      reduce using rule 145 (class-name)
    "char16_t"      [reduce using rule 297 (enum-name)]
    "char16_t"      [reduce using rule 1066 (template-name)]
    "char16_t"      [reduce using rule 1124 (typedef-name)]
    "char32_t"      reduce using rule 145 (class-name)
    "char32_t"      [reduce using rule 297 (enum-name)]
    "char32_t"      [reduce using rule 1066 (template-name)]
    "char32_t"      [reduce using rule 1124 (typedef-name)]
    "wchar_t"       reduce using rule 145 (class-name)
    "wchar_t"       [reduce using rule 297 (enum-name)]
    "wchar_t"       [reduce using rule 1066 (template-name)]
    "wchar_t"       [reduce using rule 1124 (typedef-name)]
    "bool"          reduce using rule 145 (class-name)
    "bool"          [reduce using rule 297 (enum-name)]
    "bool"          [reduce using rule 1066 (template-name)]
    "bool"          [reduce using rule 1124 (typedef-name)]
    "short"         reduce using rule 145 (class-name)
    "short"         [reduce using rule 297 (enum-name)]
    "short"         [reduce using rule 1066 (template-name)]
    "short"         [reduce using rule 1124 (typedef-name)]
    "int"           reduce using rule 145 (class-name)
    "int"           [reduce using rule 297 (enum-name)]
    "int"           [reduce using rule 1066 (template-name)]
    "int"           [reduce using rule 1124 (typedef-name)]
    "long"          reduce using rule 145 (class-name)
    "long"          [reduce using rule 297 (enum-name)]
    "long"          [reduce using rule 1066 (template-name)]
    "long"          [reduce using rule 1124 (typedef-name)]
    "signed"        reduce using rule 145 (class-name)
    "signed"        [reduce using rule 297 (enum-name)]
    "signed"        [reduce using rule 1066 (template-name)]
    "signed"        [reduce using rule 1124 (typedef-name)]
    "unsigned"      reduce using rule 145 (class-name)
    "unsigned"      [reduce using rule 297 (enum-name)]
    "unsigned"      [reduce using rule 1066 (template-name)]
    "unsigned"      [reduce using rule 1124 (typedef-name)]
    "float"         reduce using rule 145 (class-name)
    "float"         [reduce using rule 297 (enum-name)]
    "float"         [reduce using rule 1066 (template-name)]
    "float"         [reduce using rule 1124 (typedef-name)]
    "double"        reduce using rule 145 (class-name)
    "double"        [reduce using rule 297 (enum-name)]
    "double"        [reduce using rule 1066 (template-name)]
    "double"        [reduce using rule 1124 (typedef-name)]
    "void"          reduce using rule 145 (class-name)
    "void"          [reduce using rule 297 (enum-name)]
    "void"          [reduce using rule 1066 (template-name)]
    "void"          [reduce using rule 1124 (typedef-name)]
    "static"        reduce using rule 145 (class-name)
    "static"        [reduce using rule 297 (enum-name)]
    "static"        [reduce using rule 1066 (template-name)]
    "static"        [reduce using rule 1124 (typedef-name)]
    "thread_local"  reduce using rule 145 (class-name)
    "thread_local"  [reduce using rule 297 (enum-name)]
    "thread_local"  [reduce using rule 1066 (template-name)]
    "thread_local"  [reduce using rule 1124 (typedef-name)]
    "mutable"       reduce using rule 145 (class-name)
    "mutable"       [reduce using rule 297 (enum-name)]
    "mutable"       [reduce using rule 1066 (template-name)]
    "mutable"       [reduce using rule 1124 (typedef-name)]
    "typename"      reduce using rule 145 (class-name)
    "typename"      [reduce using rule 297 (enum-name)]
    "typename"      [reduce using rule 1066 (template-name)]
    "typename"      [reduce using rule 1124 (typedef-name)]
    "override"      reduce using rule 1154 (unqualified-id)
    $default        reduce using rule 145 (class-name)


State 326

  665 nested-name-specifier: nested-name-specifier "template" • simple-template-id "::"
  914 qualified-id: nested-name-specifier "template" • unqualified-id
  1001 simple-type-specifier: nested-name-specifier "template" • simple-template-id

    IDENTIFIER  shift, and go to state 727
    "operator"  shift, and go to state 17
    '~'         shift, and go to state 36

    conversion-function-id  go to state 69
    literal-operator-id     go to state 96
    operator-function-id    go to state 109
    simple-template-id      go to state 728
    template-id             go to state 121
    template-name           go to state 143
    unqualified-id          go to state 729


State 327

  905 ptr-operator: nested-name-specifier '*' •
  906             | nested-name-specifier '*' • attribute-specifier-seq
  907             | nested-name-specifier '*' • cv-qualifier-seq
  908             | nested-name-specifier '*' • attribute-specifier-seq cv-qualifier-seq

    "alignas"   shift, and go to state 4
    '['         shift, and go to state 10
    "const"     shift, and go to state 18
    "volatile"  shift, and go to state 19

    "alignas"   [reduce using rule 905 (ptr-operator)]
    '['         [reduce using rule 905 (ptr-operator)]
    "const"     [reduce using rule 905 (ptr-operator)]
    "volatile"  [reduce using rule 905 (ptr-operator)]
    $default    reduce using rule 905 (ptr-operator)

    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 730
    cv-qualifier             go to state 234
    cv-qualifier-seq         go to state 731


State 328

  1084 type-constraint: nested-name-specifier concept-name •
  1086                | nested-name-specifier concept-name • '<' '>'
  1088                | nested-name-specifier concept-name • '<' template-argument-list '>'

    '<'  shift, and go to state 732

    $default  reduce using rule 1084 (type-constraint)


State 329

  146 class-name: simple-template-id •
  664 nested-name-specifier: nested-name-specifier simple-template-id • "::"
  1061 template-id: simple-template-id •
  1125 typedef-name: simple-template-id •

    "::"  shift, and go to state 733

    IDENTIFIER      reduce using rule 146 (class-name)
    IDENTIFIER      [reduce using rule 1125 (typedef-name)]
    '+'             reduce using rule 1061 (template-id)
    '-'             reduce using rule 1061 (template-id)
    '='             reduce using rule 146 (class-name)
    '='             [reduce using rule 1061 (template-id)]
    '='             [reduce using rule 1125 (typedef-name)]
    ';'             reduce using rule 146 (class-name)
    ';'             [reduce using rule 1061 (template-id)]
    ';'             [reduce using rule 1125 (typedef-name)]
    "alignas"       reduce using rule 146 (class-name)
    "alignas"       [reduce using rule 1061 (template-id)]
    "alignas"       [reduce using rule 1125 (typedef-name)]
    '('             reduce using rule 146 (class-name)
    '('             [reduce using rule 1061 (template-id)]
    '('             [reduce using rule 1125 (typedef-name)]
    ')'             reduce using rule 146 (class-name)
    ')'             [reduce using rule 1061 (template-id)]
    ')'             [reduce using rule 1125 (typedef-name)]
    "..."           reduce using rule 146 (class-name)
    "..."           [reduce using rule 1061 (template-id)]
    "..."           [reduce using rule 1125 (typedef-name)]
    '&'             reduce using rule 146 (class-name)
    '&'             [reduce using rule 1061 (template-id)]
    '&'             [reduce using rule 1125 (typedef-name)]
    "*="            reduce using rule 1061 (template-id)
    "/="            reduce using rule 1061 (template-id)
    "%="            reduce using rule 1061 (template-id)
    "+="            reduce using rule 1061 (template-id)
    "-="            reduce using rule 1061 (template-id)
    ">>="           reduce using rule 1061 (template-id)
    "<<="           reduce using rule 1061 (template-id)
    "&="            reduce using rule 1061 (template-id)
    "^="            reduce using rule 1061 (template-id)
    "|="            reduce using rule 1061 (template-id)
    ','             reduce using rule 146 (class-name)
    ','             [reduce using rule 1061 (template-id)]
    ','             [reduce using rule 1125 (typedef-name)]
    "::"            [reduce using rule 146 (class-name)]
    "::"            [reduce using rule 1125 (typedef-name)]
    '['             reduce using rule 146 (class-name)
    '['             [reduce using rule 1061 (template-id)]
    '['             [reduce using rule 1125 (typedef-name)]
    ']'             reduce using rule 1061 (template-id)
    ':'             reduce using rule 146 (class-name)
    ':'             [reduce using rule 1061 (template-id)]
    ':'             [reduce using rule 1125 (typedef-name)]
    '{'             reduce using rule 146 (class-name)
    '{'             [reduce using rule 1061 (template-id)]
    '{'             [reduce using rule 1125 (typedef-name)]
    '}'             reduce using rule 1061 (template-id)
    "virtual"       reduce using rule 146 (class-name)
    "virtual"       [reduce using rule 1125 (typedef-name)]
    "class"         reduce using rule 146 (class-name)
    "class"         [reduce using rule 1125 (typedef-name)]
    "struct"        reduce using rule 146 (class-name)
    "struct"        [reduce using rule 1125 (typedef-name)]
    "union"         reduce using rule 146 (class-name)
    "union"         [reduce using rule 1125 (typedef-name)]
    "final"         reduce using rule 1061 (template-id)
    "<=>"           reduce using rule 1061 (template-id)
    '?'             reduce using rule 1061 (template-id)
    "&&"            reduce using rule 146 (class-name)
    "&&"            [reduce using rule 1061 (template-id)]
    "&&"            [reduce using rule 1125 (typedef-name)]
    "||"            reduce using rule 1061 (template-id)
    "operator"      reduce using rule 146 (class-name)
    "operator"      [reduce using rule 1125 (typedef-name)]
    "const"         reduce using rule 146 (class-name)
    "const"         [reduce using rule 1125 (typedef-name)]
    "volatile"      reduce using rule 146 (class-name)
    "volatile"      [reduce using rule 1125 (typedef-name)]
    "friend"        reduce using rule 146 (class-name)
    "friend"        [reduce using rule 1125 (typedef-name)]
    "typedef"       reduce using rule 146 (class-name)
    "typedef"       [reduce using rule 1125 (typedef-name)]
    "constexpr"     reduce using rule 146 (class-name)
    "constexpr"     [reduce using rule 1125 (typedef-name)]
    "consteval"     reduce using rule 146 (class-name)
    "consteval"     [reduce using rule 1125 (typedef-name)]
    "constinit"     reduce using rule 146 (class-name)
    "constinit"     [reduce using rule 1125 (typedef-name)]
    "inline"        reduce using rule 146 (class-name)
    "inline"        [reduce using rule 1125 (typedef-name)]
    "decltype"      reduce using rule 146 (class-name)
    "decltype"      [reduce using rule 1125 (typedef-name)]
    "->"            reduce using rule 1061 (template-id)
    '.'             reduce using rule 1061 (template-id)
    "enum"          reduce using rule 146 (class-name)
    "enum"          [reduce using rule 1125 (typedef-name)]
    "=="            reduce using rule 1061 (template-id)
    "!="            reduce using rule 1061 (template-id)
    '^'             reduce using rule 1061 (template-id)
    "extern"        reduce using rule 146 (class-name)
    "extern"        [reduce using rule 1125 (typedef-name)]
    '<'             reduce using rule 1061 (template-id)
    '>'             reduce using rule 146 (class-name)
    '>'             [reduce using rule 1061 (template-id)]
    '>'             [reduce using rule 1125 (typedef-name)]
    "explicit"      reduce using rule 146 (class-name)
    "explicit"      [reduce using rule 1125 (typedef-name)]
    '*'             reduce using rule 146 (class-name)
    '*'             [reduce using rule 1061 (template-id)]
    '*'             [reduce using rule 1125 (typedef-name)]
    '/'             reduce using rule 1061 (template-id)
    '%'             reduce using rule 1061 (template-id)
    '|'             reduce using rule 1061 (template-id)
    "<<"            reduce using rule 1061 (template-id)
    ">>"            reduce using rule 1061 (template-id)
    "<="            reduce using rule 1061 (template-id)
    ">="            reduce using rule 1061 (template-id)
    ".*"            reduce using rule 1061 (template-id)
    "->*"           reduce using rule 1061 (template-id)
    "try"           reduce using rule 1061 (template-id)
    "requires"      reduce using rule 1061 (template-id)
    '~'             reduce using rule 146 (class-name)
    '~'             [reduce using rule 1125 (typedef-name)]
    "++"            reduce using rule 1061 (template-id)
    "--"            reduce using rule 1061 (template-id)
    "auto"          reduce using rule 146 (class-name)
    "auto"          [reduce using rule 1125 (typedef-name)]
    "char"          reduce using rule 146 (class-name)
    "char"          [reduce using rule 1125 (typedef-name)]
    "char8_t"       reduce using rule 146 (class-name)
    "char8_t"       [reduce using rule 1125 (typedef-name)]
    "char16_t"      reduce using rule 146 (class-name)
    "char16_t"      [reduce using rule 1125 (typedef-name)]
    "char32_t"      reduce using rule 146 (class-name)
    "char32_t"      [reduce using rule 1125 (typedef-name)]
    "wchar_t"       reduce using rule 146 (class-name)
    "wchar_t"       [reduce using rule 1125 (typedef-name)]
    "bool"          reduce using rule 146 (class-name)
    "bool"          [reduce using rule 1125 (typedef-name)]
    "short"         reduce using rule 146 (class-name)
    "short"         [reduce using rule 1125 (typedef-name)]
    "int"           reduce using rule 146 (class-name)
    "int"           [reduce using rule 1125 (typedef-name)]
    "long"          reduce using rule 146 (class-name)
    "long"          [reduce using rule 1125 (typedef-name)]
    "signed"        reduce using rule 146 (class-name)
    "signed"        [reduce using rule 1125 (typedef-name)]
    "unsigned"      reduce using rule 146 (class-name)
    "unsigned"      [reduce using rule 1125 (typedef-name)]
    "float"         reduce using rule 146 (class-name)
    "float"         [reduce using rule 1125 (typedef-name)]
    "double"        reduce using rule 146 (class-name)
    "double"        [reduce using rule 1125 (typedef-name)]
    "void"          reduce using rule 146 (class-name)
    "void"          [reduce using rule 1125 (typedef-name)]
    "static"        reduce using rule 146 (class-name)
    "static"        [reduce using rule 1125 (typedef-name)]
    "thread_local"  reduce using rule 146 (class-name)
    "thread_local"  [reduce using rule 1125 (typedef-name)]
    "mutable"       reduce using rule 146 (class-name)
    "mutable"       [reduce using rule 1125 (typedef-name)]
    "typename"      reduce using rule 146 (class-name)
    "typename"      [reduce using rule 1125 (typedef-name)]
    "override"      reduce using rule 1061 (template-id)
    $default        reduce using rule 146 (class-name)


State 330

  997 simple-template-id: template-name • '<' '>'
  998                   | template-name • '<' template-argument-list '>'
  1004 simple-type-specifier: nested-name-specifier template-name •

    '<'  shift, and go to state 342

    '<'       [reduce using rule 1004 (simple-type-specifier)]
    $default  reduce using rule 1004 (simple-type-specifier)


State 331

  999 simple-type-specifier: nested-name-specifier type-name •

    $default  reduce using rule 999 (simple-type-specifier)


State 332

  913 qualified-id: nested-name-specifier unqualified-id •

    $default  reduce using rule 913 (qualified-id)


State 333

  836 parameters-and-qualifiers: '(' • parameter-declaration-clause ')'
  837                          | '(' • parameter-declaration-clause ')' cv-qualifier-seq
  838                          | '(' • parameter-declaration-clause ')' ref-qualifier
  839                          | '(' • parameter-declaration-clause ')' cv-qualifier-seq ref-qualifier
  840                          | '(' • parameter-declaration-clause ')' noexcept-specifier
  841                          | '(' • parameter-declaration-clause ')' cv-qualifier-seq noexcept-specifier
  842                          | '(' • parameter-declaration-clause ')' ref-qualifier noexcept-specifier
  843                          | '(' • parameter-declaration-clause ')' cv-qualifier-seq ref-qualifier noexcept-specifier
  844                          | '(' • parameter-declaration-clause ')' attribute-specifier-seq
  845                          | '(' • parameter-declaration-clause ')' cv-qualifier-seq attribute-specifier-seq
  846                          | '(' • parameter-declaration-clause ')' ref-qualifier attribute-specifier-seq
  847                          | '(' • parameter-declaration-clause ')' cv-qualifier-seq ref-qualifier attribute-specifier-seq
  848                          | '(' • parameter-declaration-clause ')' noexcept-specifier attribute-specifier-seq
  849                          | '(' • parameter-declaration-clause ')' cv-qualifier-seq noexcept-specifier attribute-specifier-seq
  850                          | '(' • parameter-declaration-clause ')' ref-qualifier noexcept-specifier attribute-specifier-seq
  851                          | '(' • parameter-declaration-clause ')' cv-qualifier-seq ref-qualifier noexcept-specifier attribute-specifier-seq

    IDENTIFIER      shift, and go to state 161
    "alignas"       shift, and go to state 4
    "..."           shift, and go to state 734
    "::"            shift, and go to state 9
    '['             shift, and go to state 10
    "virtual"       shift, and go to state 11
    "class"         shift, and go to state 12
    "struct"        shift, and go to state 13
    "union"         shift, and go to state 14
    "const"         shift, and go to state 18
    "volatile"      shift, and go to state 19
    "friend"        shift, and go to state 20
    "typedef"       shift, and go to state 21
    "constexpr"     shift, and go to state 22
    "consteval"     shift, and go to state 23
    "constinit"     shift, and go to state 24
    "inline"        shift, and go to state 263
    "decltype"      shift, and go to state 26
    "enum"          shift, and go to state 27
    "extern"        shift, and go to state 264
    "explicit"      shift, and go to state 29
    "this"          shift, and go to state 476
    "auto"          shift, and go to state 37
    "char"          shift, and go to state 38
    "char8_t"       shift, and go to state 39
    "char16_t"      shift, and go to state 40
    "char32_t"      shift, and go to state 41
    "wchar_t"       shift, and go to state 42
    "bool"          shift, and go to state 43
    "short"         shift, and go to state 44
    "int"           shift, and go to state 45
    "long"          shift, and go to state 46
    "signed"        shift, and go to state 47
    "unsigned"      shift, and go to state 48
    "float"         shift, and go to state 49
    "double"        shift, and go to state 50
    "void"          shift, and go to state 51
    "static"        shift, and go to state 53
    "thread_local"  shift, and go to state 54
    "mutable"       shift, and go to state 55
    "typename"      shift, and go to state 56

    alignment-specifier           go to state 58
    attribute-specifier           go to state 61
    attribute-specifier-seq       go to state 478
    class-head                    go to state 64
    class-key                     go to state 65
    class-name                    go to state 66
    class-specifier               go to state 67
    concept-name                  go to state 68
    cv-qualifier                  go to state 70
    decl-specifier                go to state 71
    decl-specifier-seq            go to state 479
    decltype-specifier            go to state 77
    defining-type-specifier       go to state 79
    elaborated-enum-specifier     go to state 80
    elaborated-type-specifier     go to state 81
    enum-head                     go to state 83
    enum-key                      go to state 268
    enum-name                     go to state 85
    enum-specifier                go to state 86
    explicit-specifier            go to state 269
    function-specifier            go to state 92
    namespace-alias               go to state 100
    namespace-name                go to state 103
    nested-name-specifier         go to state 213
    parameter-declaration         go to state 735
    parameter-declaration-clause  go to state 736
    parameter-declaration-list    go to state 737
    placeholder-type-specifier    go to state 110
    simple-template-id            go to state 142
    simple-type-specifier         go to state 116
    storage-class-specifier       go to state 118
    template-name                 go to state 216
    type-constraint               go to state 124
    type-name                     go to state 125
    type-specifier                go to state 126
    typedef-name                  go to state 127
    typename-specifier            go to state 128


State 334

  728 noptr-declarator: noptr-declarator '[' • ']'
  729                 | noptr-declarator '[' • constant-expression ']'
  730                 | noptr-declarator '[' • ']' attribute-specifier-seq
  731                 | noptr-declarator '[' • constant-expression ']' attribute-specifier-seq

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    ']'                 shift, and go to state 738
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    additive-expression                  go to state 404
    and-expression                       go to state 405
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 412
    constant-expression                  go to state 739
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 435
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 335

  230 declarator: noptr-declarator parameters-and-qualifiers • trailing-return-type
  727 noptr-declarator: noptr-declarator parameters-and-qualifiers •

    "->"  shift, and go to state 740

    $default  reduce using rule 727 (noptr-declarator)

    trailing-return-type  go to state 741


State 336

  1062 template-id: operator-function-id '<' • '>'
  1063            | operator-function-id '<' • template-argument-list '>'

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 136
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '>'                 shift, and go to state 742
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    additive-expression                  go to state 404
    and-expression                       go to state 405
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-key                            go to state 210
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 412
    constant-expression                  go to state 639
    conversion-function-id               go to state 69
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 640
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 435
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    string-literal                       go to state 450
    template-argument                    go to state 641
    template-argument-list               go to state 743
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-id                              go to state 643
    type-name                            go to state 125
    type-specifier                       go to state 217
    type-specifier-seq                   go to state 452
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 337

  896 ptr-declarator: ptr-operator ptr-declarator •

    $default  reduce using rule 896 (ptr-declarator)


State 338

  162 concept-definition: "concept" • concept-name '=' constraint-expression ';'

    IDENTIFIER  shift, and go to state 744

    concept-name  go to state 745


State 339

  1058 template-declaration: template-head concept-definition •

    $default  reduce using rule 1058 (template-declaration)


State 340

  1057 template-declaration: template-head declaration •

    $default  reduce using rule 1057 (template-declaration)


State 341

  235 deduction-guide: template-name '(' • parameter-declaration-clause ')' "->" simple-template-id ';'

    IDENTIFIER      shift, and go to state 161
    "alignas"       shift, and go to state 4
    "..."           shift, and go to state 734
    "::"            shift, and go to state 9
    '['             shift, and go to state 10
    "virtual"       shift, and go to state 11
    "class"         shift, and go to state 12
    "struct"        shift, and go to state 13
    "union"         shift, and go to state 14
    "const"         shift, and go to state 18
    "volatile"      shift, and go to state 19
    "friend"        shift, and go to state 20
    "typedef"       shift, and go to state 21
    "constexpr"     shift, and go to state 22
    "consteval"     shift, and go to state 23
    "constinit"     shift, and go to state 24
    "inline"        shift, and go to state 263
    "decltype"      shift, and go to state 26
    "enum"          shift, and go to state 27
    "extern"        shift, and go to state 264
    "explicit"      shift, and go to state 29
    "this"          shift, and go to state 476
    "auto"          shift, and go to state 37
    "char"          shift, and go to state 38
    "char8_t"       shift, and go to state 39
    "char16_t"      shift, and go to state 40
    "char32_t"      shift, and go to state 41
    "wchar_t"       shift, and go to state 42
    "bool"          shift, and go to state 43
    "short"         shift, and go to state 44
    "int"           shift, and go to state 45
    "long"          shift, and go to state 46
    "signed"        shift, and go to state 47
    "unsigned"      shift, and go to state 48
    "float"         shift, and go to state 49
    "double"        shift, and go to state 50
    "void"          shift, and go to state 51
    "static"        shift, and go to state 53
    "thread_local"  shift, and go to state 54
    "mutable"       shift, and go to state 55
    "typename"      shift, and go to state 56

    alignment-specifier           go to state 58
    attribute-specifier           go to state 61
    attribute-specifier-seq       go to state 478
    class-head                    go to state 64
    class-key                     go to state 65
    class-name                    go to state 66
    class-specifier               go to state 67
    concept-name                  go to state 68
    cv-qualifier                  go to state 70
    decl-specifier                go to state 71
    decl-specifier-seq            go to state 479
    decltype-specifier            go to state 77
    defining-type-specifier       go to state 79
    elaborated-enum-specifier     go to state 80
    elaborated-type-specifier     go to state 81
    enum-head                     go to state 83
    enum-key                      go to state 268
    enum-name                     go to state 85
    enum-specifier                go to state 86
    explicit-specifier            go to state 269
    function-specifier            go to state 92
    namespace-alias               go to state 100
    namespace-name                go to state 103
    nested-name-specifier         go to state 213
    parameter-declaration         go to state 735
    parameter-declaration-clause  go to state 746
    parameter-declaration-list    go to state 737
    placeholder-type-specifier    go to state 110
    simple-template-id            go to state 142
    simple-type-specifier         go to state 116
    storage-class-specifier       go to state 118
    template-name                 go to state 216
    type-constraint               go to state 124
    type-name                     go to state 125
    type-specifier                go to state 126
    typedef-name                  go to state 127
    typename-specifier            go to state 128


State 342

  997 simple-template-id: template-name '<' • '>'
  998                   | template-name '<' • template-argument-list '>'

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 136
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '>'                 shift, and go to state 747
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    additive-expression                  go to state 404
    and-expression                       go to state 405
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-key                            go to state 210
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 412
    constant-expression                  go to state 639
    conversion-function-id               go to state 69
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 640
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 435
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    string-literal                       go to state 450
    template-argument                    go to state 641
    template-argument-list               go to state 748
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-id                              go to state 643
    type-name                            go to state 125
    type-specifier                       go to state 217
    type-specifier-seq                   go to state 452
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 343

    0 $accept: translation-unit $end •

    $default  accept


State 344

  854 placeholder-type-specifier: type-constraint "decltype" • '(' "auto" ')'

    '('  shift, and go to state 749


State 345

  852 placeholder-type-specifier: type-constraint "auto" •

    $default  reduce using rule 852 (placeholder-type-specifier)


State 346

  660 nested-name-specifier: type-name "::" •

    $default  reduce using rule 660 (nested-name-specifier)


State 347

   13 alias-declaration: "using" IDENTIFIER '=' • defining-type-id ';'

    IDENTIFIER  shift, and go to state 161
    "::"        shift, and go to state 9
    "class"     shift, and go to state 12
    "struct"    shift, and go to state 13
    "union"     shift, and go to state 14
    "const"     shift, and go to state 18
    "volatile"  shift, and go to state 19
    "decltype"  shift, and go to state 26
    "enum"      shift, and go to state 27
    "auto"      shift, and go to state 37
    "char"      shift, and go to state 38
    "char8_t"   shift, and go to state 39
    "char16_t"  shift, and go to state 40
    "char32_t"  shift, and go to state 41
    "wchar_t"   shift, and go to state 42
    "bool"      shift, and go to state 43
    "short"     shift, and go to state 44
    "int"       shift, and go to state 45
    "long"      shift, and go to state 46
    "signed"    shift, and go to state 47
    "unsigned"  shift, and go to state 48
    "float"     shift, and go to state 49
    "double"    shift, and go to state 50
    "void"      shift, and go to state 51
    "typename"  shift, and go to state 56

    class-head                   go to state 64
    class-key                    go to state 65
    class-name                   go to state 66
    class-specifier              go to state 67
    concept-name                 go to state 68
    cv-qualifier                 go to state 70
    decltype-specifier           go to state 77
    defining-type-id             go to state 750
    defining-type-specifier      go to state 751
    defining-type-specifier-seq  go to state 752
    elaborated-enum-specifier    go to state 80
    elaborated-type-specifier    go to state 81
    enum-head                    go to state 83
    enum-key                     go to state 268
    enum-name                    go to state 85
    enum-specifier               go to state 86
    namespace-alias              go to state 100
    namespace-name               go to state 103
    nested-name-specifier        go to state 213
    placeholder-type-specifier   go to state 110
    simple-template-id           go to state 142
    simple-type-specifier        go to state 116
    template-name                go to state 216
    type-constraint              go to state 124
    type-name                    go to state 125
    type-specifier               go to state 126
    typedef-name                 go to state 127
    typename-specifier           go to state 128


State 348

   14 alias-declaration: "using" IDENTIFIER attribute-specifier-seq • '=' defining-type-id ';'
   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier

    '='        shift, and go to state 753
    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    alignment-specifier  go to state 58
    attribute-specifier  go to state 265


State 349

  233 decltype-specifier: "decltype" '(' • expression ')'

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 530
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    expression                           go to state 532
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 350

  661 nested-name-specifier: namespace-name • "::"
  1186 using-directive: "using" "namespace" namespace-name • ';'

    ';'   shift, and go to state 754
    "::"  shift, and go to state 324


State 351

  663 nested-name-specifier: nested-name-specifier • IDENTIFIER "::"
  664                      | nested-name-specifier • simple-template-id "::"
  665                      | nested-name-specifier • "template" simple-template-id "::"
  1188 using-directive: "using" "namespace" nested-name-specifier • namespace-name ';'

    IDENTIFIER  shift, and go to state 755
    "template"  shift, and go to state 355

    namespace-alias     go to state 100
    namespace-name      go to state 756
    simple-template-id  go to state 539
    template-name       go to state 143


State 352

  663 nested-name-specifier: nested-name-specifier • IDENTIFIER "::"
  664                      | nested-name-specifier • simple-template-id "::"
  665                      | nested-name-specifier • "template" simple-template-id "::"
  1179 using-declarator: "typename" nested-name-specifier • unqualified-id

    IDENTIFIER  shift, and go to state 354
    "template"  shift, and go to state 355
    "operator"  shift, and go to state 17
    '~'         shift, and go to state 36

    conversion-function-id  go to state 69
    literal-operator-id     go to state 96
    operator-function-id    go to state 109
    simple-template-id      go to state 356
    template-id             go to state 121
    template-name           go to state 143
    unqualified-id          go to state 757


State 353

  1189 using-enum-declaration: "using" elaborated-enum-specifier ';' •

    $default  reduce using rule 1189 (using-enum-declaration)


State 354

  663 nested-name-specifier: nested-name-specifier IDENTIFIER • "::"
  1066 template-name: IDENTIFIER •
  1154 unqualified-id: IDENTIFIER •

    "::"  shift, and go to state 726

    "::"      [reduce using rule 1154 (unqualified-id)]
    '<'       reduce using rule 1066 (template-name)
    '<'       [reduce using rule 1154 (unqualified-id)]
    $default  reduce using rule 1154 (unqualified-id)


State 355

  665 nested-name-specifier: nested-name-specifier "template" • simple-template-id "::"

    IDENTIFIER  shift, and go to state 315

    simple-template-id  go to state 758
    template-name       go to state 143


State 356

  664 nested-name-specifier: nested-name-specifier simple-template-id • "::"
  1061 template-id: simple-template-id •

    "::"  shift, and go to state 733

    "::"      [reduce using rule 1061 (template-id)]
    $default  reduce using rule 1061 (template-id)


State 357

  1180 using-declarator: nested-name-specifier unqualified-id •

    $default  reduce using rule 1180 (using-declarator)


State 358

  1182 using-declarator-list: using-declarator "..." •

    $default  reduce using rule 1182 (using-declarator-list)


State 359

  1178 using-declaration: "using" using-declarator-list ';' •

    $default  reduce using rule 1178 (using-declaration)


State 360

  1183 using-declarator-list: using-declarator-list ',' • using-declarator
  1184                      | using-declarator-list ',' • using-declarator "..."

    IDENTIFIER  shift, and go to state 258
    "::"        shift, and go to state 9
    "decltype"  shift, and go to state 135
    "typename"  shift, and go to state 138

    class-name             go to state 66
    decltype-specifier     go to state 139
    enum-name              go to state 85
    namespace-alias        go to state 100
    namespace-name         go to state 103
    nested-name-specifier  go to state 141
    simple-template-id     go to state 142
    template-name          go to state 143
    type-name              go to state 144
    typedef-name           go to state 127
    using-declarator       go to state 759


State 361

  1144 unary-operator: '+' •

    $default  reduce using rule 1144 (unary-operator)


State 362

  1145 unary-operator: '-' •

    $default  reduce using rule 1145 (unary-operator)


State 363

  125 cast-expression: '(' • type-id ')' cast-expression
  348 fold-expression: '(' • cast-expression fold-operator "..." ')'
  349                | '(' • "..." fold-operator cast-expression ')'
  350                | '(' • cast-expression fold-operator "..." fold-operator cast-expression ')'
  885 primary-expression: '(' • expression ')'

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    "..."               shift, and go to state 760
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 136
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 530
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 761
    character-literal                    go to state 410
    class-key                            go to state 210
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    expression                           go to state 762
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-id                              go to state 763
    type-name                            go to state 125
    type-specifier                       go to state 217
    type-specifier-seq                   go to state 452
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 364

  1143 unary-operator: '&' •

    $default  reduce using rule 1143 (unary-operator)


State 365

  244 delete-expression: "::" • "delete" cast-expression
  246                  | "::" • "delete" '[' ']' cast-expression
  659 nested-name-specifier: "::" •
  672 new-expression: "::" • "new" new-type-id
  674               | "::" • "new" new-placement new-type-id
  676               | "::" • "new" new-type-id new-initializer
  678               | "::" • "new" new-placement new-type-id new-initializer
  680               | "::" • "new" '(' type-id ')'
  682               | "::" • "new" new-placement '(' type-id ')'
  684               | "::" • "new" '(' type-id ')' new-initializer
  686               | "::" • "new" new-placement '(' type-id ')' new-initializer

    "delete"  shift, and go to state 764
    "new"     shift, and go to state 765

    $default  reduce using rule 659 (nested-name-specifier)


State 366

  538 lambda-introducer: '[' • ']'
  539                  | '[' • lambda-capture ']'

    IDENTIFIER  shift, and go to state 766
    '='         shift, and go to state 767
    "..."       shift, and go to state 768
    '&'         shift, and go to state 769
    ']'         shift, and go to state 770
    '*'         shift, and go to state 771
    "this"      shift, and go to state 772

    capture          go to state 773
    capture-default  go to state 774
    capture-list     go to state 775
    init-capture     go to state 776
    lambda-capture   go to state 777
    simple-capture   go to state 778


State 367

   58 await-expression: "co_await" • cast-expression

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 779
    character-literal                    go to state 410
    class-name                           go to state 66
    concept-name                         go to state 68
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    requires-expression                  go to state 447
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 368

  252 digit: '0' •
  752 octal-literal: '0' •

    '0'       reduce using rule 252 (digit)
    '0'       [reduce using rule 752 (octal-literal)]
    '1'       reduce using rule 252 (digit)
    '1'       [reduce using rule 752 (octal-literal)]
    '\''      reduce using rule 252 (digit)
    '\''      [reduce using rule 752 (octal-literal)]
    '.'       reduce using rule 252 (digit)
    '.'       [reduce using rule 752 (octal-literal)]
    '2'       reduce using rule 252 (digit)
    '2'       [reduce using rule 752 (octal-literal)]
    '3'       reduce using rule 252 (digit)
    '3'       [reduce using rule 752 (octal-literal)]
    '4'       reduce using rule 252 (digit)
    '4'       [reduce using rule 752 (octal-literal)]
    '5'       reduce using rule 252 (digit)
    '5'       [reduce using rule 752 (octal-literal)]
    '6'       reduce using rule 252 (digit)
    '6'       [reduce using rule 752 (octal-literal)]
    '7'       reduce using rule 252 (digit)
    '7'       [reduce using rule 752 (octal-literal)]
    '8'       reduce using rule 252 (digit)
    '9'       reduce using rule 252 (digit)
    'e'       reduce using rule 252 (digit)
    'E'       reduce using rule 252 (digit)
    $default  reduce using rule 752 (octal-literal)


State 369

  253 digit: '1' •
  699 nonzero-digit: '1' •

    '0'       reduce using rule 253 (digit)
    '0'       [reduce using rule 699 (nonzero-digit)]
    '1'       reduce using rule 253 (digit)
    '1'       [reduce using rule 699 (nonzero-digit)]
    '\''      reduce using rule 253 (digit)
    '\''      [reduce using rule 699 (nonzero-digit)]
    '.'       reduce using rule 253 (digit)
    '.'       [reduce using rule 699 (nonzero-digit)]
    '2'       reduce using rule 253 (digit)
    '2'       [reduce using rule 699 (nonzero-digit)]
    '3'       reduce using rule 253 (digit)
    '3'       [reduce using rule 699 (nonzero-digit)]
    '4'       reduce using rule 253 (digit)
    '4'       [reduce using rule 699 (nonzero-digit)]
    '5'       reduce using rule 253 (digit)
    '5'       [reduce using rule 699 (nonzero-digit)]
    '6'       reduce using rule 253 (digit)
    '6'       [reduce using rule 699 (nonzero-digit)]
    '7'       reduce using rule 253 (digit)
    '7'       [reduce using rule 699 (nonzero-digit)]
    '8'       reduce using rule 253 (digit)
    '8'       [reduce using rule 699 (nonzero-digit)]
    '9'       reduce using rule 253 (digit)
    '9'       [reduce using rule 699 (nonzero-digit)]
    'e'       reduce using rule 253 (digit)
    'E'       reduce using rule 253 (digit)
    $default  reduce using rule 699 (nonzero-digit)


State 370

   91 binary-literal: "0b" • binary-digit

    '0'  shift, and go to state 780
    '1'  shift, and go to state 781

    binary-digit  go to state 782


State 371

   92 binary-literal: "0B" • binary-digit

    '0'  shift, and go to state 780
    '1'  shift, and go to state 781

    binary-digit  go to state 783


State 372

  127 character-literal: '\'' • c-char-sequence '\''

    EXCEPT_THE_APOSTROPHE_REVERSE_SOLIDUS_OR_NEW_LINE_CHARACTER  shift, and go to state 784
    '\\'                                                         shift, and go to state 491
    "\\x"                                                        shift, and go to state 493
    "\\u"                                                        shift, and go to state 494
    "\\U"                                                        shift, and go to state 495

    basic-c-char                 go to state 785
    c-char                       go to state 786
    c-char-sequence              go to state 787
    conditional-escape-sequence  go to state 497
    escape-sequence              go to state 788
    hexadecimal-escape-sequence  go to state 499
    numeric-escape-sequence      go to state 500
    octal-escape-sequence        go to state 501
    simple-escape-sequence       go to state 504
    universal-character-name     go to state 789


State 373

  104 boolean-literal: "false" •

    $default  reduce using rule 104 (boolean-literal)


State 374

  105 boolean-literal: "true" •

    $default  reduce using rule 105 (boolean-literal)


State 375

  696 noexcept-expression: "noexcept" • '(' expression ')'

    '('  shift, and go to state 790


State 376

  245 delete-expression: "delete" • cast-expression
  247                  | "delete" • '[' ']' cast-expression

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 791
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 792
    character-literal                    go to state 410
    class-name                           go to state 66
    concept-name                         go to state 68
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    requires-expression                  go to state 447
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 377

  391 fractional-constant: '.' • digit-sequence

    '0'  shift, and go to state 793
    '1'  shift, and go to state 794
    '2'  shift, and go to state 795
    '3'  shift, and go to state 796
    '4'  shift, and go to state 797
    '5'  shift, and go to state 798
    '6'  shift, and go to state 799
    '7'  shift, and go to state 800
    '8'  shift, and go to state 801
    '9'  shift, and go to state 802

    digit           go to state 417
    digit-sequence  go to state 803


State 378

  254 digit: '2' •
  700 nonzero-digit: '2' •

    '0'       reduce using rule 254 (digit)
    '0'       [reduce using rule 700 (nonzero-digit)]
    '1'       reduce using rule 254 (digit)
    '1'       [reduce using rule 700 (nonzero-digit)]
    '\''      reduce using rule 254 (digit)
    '\''      [reduce using rule 700 (nonzero-digit)]
    '.'       reduce using rule 254 (digit)
    '.'       [reduce using rule 700 (nonzero-digit)]
    '2'       reduce using rule 254 (digit)
    '2'       [reduce using rule 700 (nonzero-digit)]
    '3'       reduce using rule 254 (digit)
    '3'       [reduce using rule 700 (nonzero-digit)]
    '4'       reduce using rule 254 (digit)
    '4'       [reduce using rule 700 (nonzero-digit)]
    '5'       reduce using rule 254 (digit)
    '5'       [reduce using rule 700 (nonzero-digit)]
    '6'       reduce using rule 254 (digit)
    '6'       [reduce using rule 700 (nonzero-digit)]
    '7'       reduce using rule 254 (digit)
    '7'       [reduce using rule 700 (nonzero-digit)]
    '8'       reduce using rule 254 (digit)
    '8'       [reduce using rule 700 (nonzero-digit)]
    '9'       reduce using rule 254 (digit)
    '9'       [reduce using rule 700 (nonzero-digit)]
    'e'       reduce using rule 254 (digit)
    'E'       reduce using rule 254 (digit)
    $default  reduce using rule 700 (nonzero-digit)


State 379

  255 digit: '3' •
  701 nonzero-digit: '3' •

    '0'       reduce using rule 255 (digit)
    '0'       [reduce using rule 701 (nonzero-digit)]
    '1'       reduce using rule 255 (digit)
    '1'       [reduce using rule 701 (nonzero-digit)]
    '\''      reduce using rule 255 (digit)
    '\''      [reduce using rule 701 (nonzero-digit)]
    '.'       reduce using rule 255 (digit)
    '.'       [reduce using rule 701 (nonzero-digit)]
    '2'       reduce using rule 255 (digit)
    '2'       [reduce using rule 701 (nonzero-digit)]
    '3'       reduce using rule 255 (digit)
    '3'       [reduce using rule 701 (nonzero-digit)]
    '4'       reduce using rule 255 (digit)
    '4'       [reduce using rule 701 (nonzero-digit)]
    '5'       reduce using rule 255 (digit)
    '5'       [reduce using rule 701 (nonzero-digit)]
    '6'       reduce using rule 255 (digit)
    '6'       [reduce using rule 701 (nonzero-digit)]
    '7'       reduce using rule 255 (digit)
    '7'       [reduce using rule 701 (nonzero-digit)]
    '8'       reduce using rule 255 (digit)
    '8'       [reduce using rule 701 (nonzero-digit)]
    '9'       reduce using rule 255 (digit)
    '9'       [reduce using rule 701 (nonzero-digit)]
    'e'       reduce using rule 255 (digit)
    'E'       reduce using rule 255 (digit)
    $default  reduce using rule 701 (nonzero-digit)


State 380

  256 digit: '4' •
  702 nonzero-digit: '4' •

    '0'       reduce using rule 256 (digit)
    '0'       [reduce using rule 702 (nonzero-digit)]
    '1'       reduce using rule 256 (digit)
    '1'       [reduce using rule 702 (nonzero-digit)]
    '\''      reduce using rule 256 (digit)
    '\''      [reduce using rule 702 (nonzero-digit)]
    '.'       reduce using rule 256 (digit)
    '.'       [reduce using rule 702 (nonzero-digit)]
    '2'       reduce using rule 256 (digit)
    '2'       [reduce using rule 702 (nonzero-digit)]
    '3'       reduce using rule 256 (digit)
    '3'       [reduce using rule 702 (nonzero-digit)]
    '4'       reduce using rule 256 (digit)
    '4'       [reduce using rule 702 (nonzero-digit)]
    '5'       reduce using rule 256 (digit)
    '5'       [reduce using rule 702 (nonzero-digit)]
    '6'       reduce using rule 256 (digit)
    '6'       [reduce using rule 702 (nonzero-digit)]
    '7'       reduce using rule 256 (digit)
    '7'       [reduce using rule 702 (nonzero-digit)]
    '8'       reduce using rule 256 (digit)
    '8'       [reduce using rule 702 (nonzero-digit)]
    '9'       reduce using rule 256 (digit)
    '9'       [reduce using rule 702 (nonzero-digit)]
    'e'       reduce using rule 256 (digit)
    'E'       reduce using rule 256 (digit)
    $default  reduce using rule 702 (nonzero-digit)


State 381

  257 digit: '5' •
  703 nonzero-digit: '5' •

    '0'       reduce using rule 257 (digit)
    '0'       [reduce using rule 703 (nonzero-digit)]
    '1'       reduce using rule 257 (digit)
    '1'       [reduce using rule 703 (nonzero-digit)]
    '\''      reduce using rule 257 (digit)
    '\''      [reduce using rule 703 (nonzero-digit)]
    '.'       reduce using rule 257 (digit)
    '.'       [reduce using rule 703 (nonzero-digit)]
    '2'       reduce using rule 257 (digit)
    '2'       [reduce using rule 703 (nonzero-digit)]
    '3'       reduce using rule 257 (digit)
    '3'       [reduce using rule 703 (nonzero-digit)]
    '4'       reduce using rule 257 (digit)
    '4'       [reduce using rule 703 (nonzero-digit)]
    '5'       reduce using rule 257 (digit)
    '5'       [reduce using rule 703 (nonzero-digit)]
    '6'       reduce using rule 257 (digit)
    '6'       [reduce using rule 703 (nonzero-digit)]
    '7'       reduce using rule 257 (digit)
    '7'       [reduce using rule 703 (nonzero-digit)]
    '8'       reduce using rule 257 (digit)
    '8'       [reduce using rule 703 (nonzero-digit)]
    '9'       reduce using rule 257 (digit)
    '9'       [reduce using rule 703 (nonzero-digit)]
    'e'       reduce using rule 257 (digit)
    'E'       reduce using rule 257 (digit)
    $default  reduce using rule 703 (nonzero-digit)


State 382

  258 digit: '6' •
  704 nonzero-digit: '6' •

    '0'       reduce using rule 258 (digit)
    '0'       [reduce using rule 704 (nonzero-digit)]
    '1'       reduce using rule 258 (digit)
    '1'       [reduce using rule 704 (nonzero-digit)]
    '\''      reduce using rule 258 (digit)
    '\''      [reduce using rule 704 (nonzero-digit)]
    '.'       reduce using rule 258 (digit)
    '.'       [reduce using rule 704 (nonzero-digit)]
    '2'       reduce using rule 258 (digit)
    '2'       [reduce using rule 704 (nonzero-digit)]
    '3'       reduce using rule 258 (digit)
    '3'       [reduce using rule 704 (nonzero-digit)]
    '4'       reduce using rule 258 (digit)
    '4'       [reduce using rule 704 (nonzero-digit)]
    '5'       reduce using rule 258 (digit)
    '5'       [reduce using rule 704 (nonzero-digit)]
    '6'       reduce using rule 258 (digit)
    '6'       [reduce using rule 704 (nonzero-digit)]
    '7'       reduce using rule 258 (digit)
    '7'       [reduce using rule 704 (nonzero-digit)]
    '8'       reduce using rule 258 (digit)
    '8'       [reduce using rule 704 (nonzero-digit)]
    '9'       reduce using rule 258 (digit)
    '9'       [reduce using rule 704 (nonzero-digit)]
    'e'       reduce using rule 258 (digit)
    'E'       reduce using rule 258 (digit)
    $default  reduce using rule 704 (nonzero-digit)


State 383

  259 digit: '7' •
  705 nonzero-digit: '7' •

    '0'       reduce using rule 259 (digit)
    '0'       [reduce using rule 705 (nonzero-digit)]
    '1'       reduce using rule 259 (digit)
    '1'       [reduce using rule 705 (nonzero-digit)]
    '\''      reduce using rule 259 (digit)
    '\''      [reduce using rule 705 (nonzero-digit)]
    '.'       reduce using rule 259 (digit)
    '.'       [reduce using rule 705 (nonzero-digit)]
    '2'       reduce using rule 259 (digit)
    '2'       [reduce using rule 705 (nonzero-digit)]
    '3'       reduce using rule 259 (digit)
    '3'       [reduce using rule 705 (nonzero-digit)]
    '4'       reduce using rule 259 (digit)
    '4'       [reduce using rule 705 (nonzero-digit)]
    '5'       reduce using rule 259 (digit)
    '5'       [reduce using rule 705 (nonzero-digit)]
    '6'       reduce using rule 259 (digit)
    '6'       [reduce using rule 705 (nonzero-digit)]
    '7'       reduce using rule 259 (digit)
    '7'       [reduce using rule 705 (nonzero-digit)]
    '8'       reduce using rule 259 (digit)
    '8'       [reduce using rule 705 (nonzero-digit)]
    '9'       reduce using rule 259 (digit)
    '9'       [reduce using rule 705 (nonzero-digit)]
    'e'       reduce using rule 259 (digit)
    'E'       reduce using rule 259 (digit)
    $default  reduce using rule 705 (nonzero-digit)


State 384

  260 digit: '8' •
  706 nonzero-digit: '8' •

    '0'       reduce using rule 260 (digit)
    '0'       [reduce using rule 706 (nonzero-digit)]
    '1'       reduce using rule 260 (digit)
    '1'       [reduce using rule 706 (nonzero-digit)]
    '\''      reduce using rule 260 (digit)
    '\''      [reduce using rule 706 (nonzero-digit)]
    '.'       reduce using rule 260 (digit)
    '.'       [reduce using rule 706 (nonzero-digit)]
    '2'       reduce using rule 260 (digit)
    '2'       [reduce using rule 706 (nonzero-digit)]
    '3'       reduce using rule 260 (digit)
    '3'       [reduce using rule 706 (nonzero-digit)]
    '4'       reduce using rule 260 (digit)
    '4'       [reduce using rule 706 (nonzero-digit)]
    '5'       reduce using rule 260 (digit)
    '5'       [reduce using rule 706 (nonzero-digit)]
    '6'       reduce using rule 260 (digit)
    '6'       [reduce using rule 706 (nonzero-digit)]
    '7'       reduce using rule 260 (digit)
    '7'       [reduce using rule 706 (nonzero-digit)]
    '8'       reduce using rule 260 (digit)
    '8'       [reduce using rule 706 (nonzero-digit)]
    '9'       reduce using rule 260 (digit)
    '9'       [reduce using rule 706 (nonzero-digit)]
    'e'       reduce using rule 260 (digit)
    'E'       reduce using rule 260 (digit)
    $default  reduce using rule 706 (nonzero-digit)


State 385

  261 digit: '9' •
  707 nonzero-digit: '9' •

    '0'       reduce using rule 261 (digit)
    '0'       [reduce using rule 707 (nonzero-digit)]
    '1'       reduce using rule 261 (digit)
    '1'       [reduce using rule 707 (nonzero-digit)]
    '\''      reduce using rule 261 (digit)
    '\''      [reduce using rule 707 (nonzero-digit)]
    '.'       reduce using rule 261 (digit)
    '.'       [reduce using rule 707 (nonzero-digit)]
    '2'       reduce using rule 261 (digit)
    '2'       [reduce using rule 707 (nonzero-digit)]
    '3'       reduce using rule 261 (digit)
    '3'       [reduce using rule 707 (nonzero-digit)]
    '4'       reduce using rule 261 (digit)
    '4'       [reduce using rule 707 (nonzero-digit)]
    '5'       reduce using rule 261 (digit)
    '5'       [reduce using rule 707 (nonzero-digit)]
    '6'       reduce using rule 261 (digit)
    '6'       [reduce using rule 707 (nonzero-digit)]
    '7'       reduce using rule 261 (digit)
    '7'       [reduce using rule 707 (nonzero-digit)]
    '8'       reduce using rule 261 (digit)
    '8'       [reduce using rule 707 (nonzero-digit)]
    '9'       reduce using rule 261 (digit)
    '9'       [reduce using rule 707 (nonzero-digit)]
    'e'       reduce using rule 261 (digit)
    'E'       reduce using rule 261 (digit)
    $default  reduce using rule 707 (nonzero-digit)


State 386

  1142 unary-operator: '*' •

    $default  reduce using rule 1142 (unary-operator)


State 387

  461 hexadecimal-prefix: "0x" •

    $default  reduce using rule 461 (hexadecimal-prefix)


State 388

  462 hexadecimal-prefix: "0X" •

    $default  reduce using rule 462 (hexadecimal-prefix)


State 389

  944 requires-expression: "requires" • requirement-body
  945                    | "requires" • requirement-parameter-list requirement-body

    '('  shift, and go to state 804
    '{'  shift, and go to state 805

    requirement-body            go to state 806
    requirement-parameter-list  go to state 807


State 390

  673 new-expression: "new" • new-type-id
  675               | "new" • new-placement new-type-id
  677               | "new" • new-type-id new-initializer
  679               | "new" • new-placement new-type-id new-initializer
  681               | "new" • '(' type-id ')'
  683               | "new" • new-placement '(' type-id ')'
  685               | "new" • '(' type-id ')' new-initializer
  687               | "new" • new-placement '(' type-id ')' new-initializer

    IDENTIFIER  shift, and go to state 161
    '('         shift, and go to state 808
    "::"        shift, and go to state 9
    "class"     shift, and go to state 12
    "struct"    shift, and go to state 13
    "union"     shift, and go to state 14
    "const"     shift, and go to state 18
    "volatile"  shift, and go to state 19
    "decltype"  shift, and go to state 26
    "enum"      shift, and go to state 136
    "auto"      shift, and go to state 37
    "char"      shift, and go to state 38
    "char8_t"   shift, and go to state 39
    "char16_t"  shift, and go to state 40
    "char32_t"  shift, and go to state 41
    "wchar_t"   shift, and go to state 42
    "bool"      shift, and go to state 43
    "short"     shift, and go to state 44
    "int"       shift, and go to state 45
    "long"      shift, and go to state 46
    "signed"    shift, and go to state 47
    "unsigned"  shift, and go to state 48
    "float"     shift, and go to state 49
    "double"    shift, and go to state 50
    "void"      shift, and go to state 51
    "typename"  shift, and go to state 56

    class-key                   go to state 210
    class-name                  go to state 66
    concept-name                go to state 68
    cv-qualifier                go to state 70
    decltype-specifier          go to state 77
    elaborated-enum-specifier   go to state 80
    elaborated-type-specifier   go to state 81
    enum-name                   go to state 85
    namespace-alias             go to state 100
    namespace-name              go to state 103
    nested-name-specifier       go to state 213
    new-placement               go to state 809
    new-type-id                 go to state 810
    placeholder-type-specifier  go to state 110
    simple-template-id          go to state 142
    simple-type-specifier       go to state 116
    template-name               go to state 216
    type-constraint             go to state 124
    type-name                   go to state 125
    type-specifier              go to state 217
    type-specifier-seq          go to state 811
    typedef-name                go to state 127
    typename-specifier          go to state 128


State 391

  1147 unary-operator: '~' •
  1158 unqualified-id: '~' • type-name
  1159               | '~' • decltype-specifier

    IDENTIFIER  shift, and go to state 254
    "decltype"  shift, and go to state 135

    IDENTIFIER  [reduce using rule 1147 (unary-operator)]
    "decltype"  [reduce using rule 1147 (unary-operator)]
    $default    reduce using rule 1147 (unary-operator)

    class-name          go to state 66
    decltype-specifier  go to state 255
    enum-name           go to state 85
    simple-template-id  go to state 142
    template-name       go to state 143
    type-name           go to state 256
    typedef-name        go to state 127


State 392

  1146 unary-operator: '!' •

    $default  reduce using rule 1146 (unary-operator)


State 393

  1132 unary-expression: "++" • cast-expression

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 812
    character-literal                    go to state 410
    class-name                           go to state 66
    concept-name                         go to state 68
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    requires-expression                  go to state 447
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 394

  1133 unary-expression: "--" • cast-expression

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 813
    character-literal                    go to state 410
    class-name                           go to state 66
    concept-name                         go to state 68
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    requires-expression                  go to state 447
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 395

  884 primary-expression: "this" •

    $default  reduce using rule 884 (primary-expression)


State 396

  859 pointer-literal: "nullptr" •

    $default  reduce using rule 859 (pointer-literal)


State 397

  877 postfix-expression: "dynamic_cast" • '<' type-id '>' '(' expression ')'

    '<'  shift, and go to state 814


State 398

  878 postfix-expression: "static_cast" • '<' type-id '>' '(' expression ')'

    '<'  shift, and go to state 815


State 399

  879 postfix-expression: "reinterpret_cast" • '<' type-id '>' '(' expression ')'

    '<'  shift, and go to state 816


State 400

  880 postfix-expression: "const_cast" • '<' type-id '>' '(' expression ')'

    '<'  shift, and go to state 817


State 401

  881 postfix-expression: "typeid" • '(' expression ')'
  882                   | "typeid" • '(' type-id ')'

    '('  shift, and go to state 818


State 402

  1135 unary-expression: "sizeof" • unary-expression
  1136                 | "sizeof" • '(' type-id ')'
  1137                 | "sizeof" • "..." '(' IDENTIFIER ')'

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 819
    "..."               shift, and go to state 820
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    character-literal                    go to state 410
    class-name                           go to state 66
    concept-name                         go to state 68
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    requires-expression                  go to state 447
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 821
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 403

  1138 unary-expression: "alignof" • '(' type-id ')'

    '('  shift, and go to state 822


State 404

   11 additive-expression: additive-expression • '+' multiplicative-expression
   12                    | additive-expression • '-' multiplicative-expression
  966 shift-expression: additive-expression •

    '+'  shift, and go to state 823
    '-'  shift, and go to state 824

    $default  reduce using rule 966 (shift-expression)


State 405

   20 and-expression: and-expression • '&' equality-expression
  320 exclusive-or-expression: and-expression •

    '&'  shift, and go to state 825

    $default  reduce using rule 320 (exclusive-or-expression)


State 406

  1134 unary-expression: await-expression •

    $default  reduce using rule 1134 (unary-expression)


State 407

   93 binary-literal: binary-literal • binary-digit
   94               | binary-literal • '\'' binary-digit
  489 integer-literal: binary-literal •
  490                | binary-literal • integer-suffix
  1172 user-defined-integer-literal: binary-literal • ud-suffix

    IDENTIFIER  shift, and go to state 826
    LL          shift, and go to state 827
    '0'         shift, and go to state 780
    '1'         shift, and go to state 781
    '\''        shift, and go to state 828
    'u'         shift, and go to state 829
    'U'         shift, and go to state 830
    'L'         shift, and go to state 831
    'l'         shift, and go to state 832
    "ll"        shift, and go to state 833
    'z'         shift, and go to state 834
    'Z'         shift, and go to state 835

    IDENTIFIER  [reduce using rule 489 (integer-literal)]
    $default    reduce using rule 489 (integer-literal)

    binary-digit      go to state 836
    integer-suffix    go to state 837
    long-long-suffix  go to state 838
    long-suffix       go to state 839
    size-suffix       go to state 840
    ud-suffix         go to state 841
    unsigned-suffix   go to state 842


State 408

  562 literal: boolean-literal •

    $default  reduce using rule 562 (literal)


State 409

  856 pm-expression: cast-expression •

    $default  reduce using rule 856 (pm-expression)


State 410

  559 literal: character-literal •
  1163 user-defined-character-literal: character-literal • ud-suffix

    IDENTIFIER  shift, and go to state 826

    IDENTIFIER  [reduce using rule 559 (literal)]
    $default    reduce using rule 559 (literal)

    ud-suffix  go to state 843


State 411

  155 compare-expression: compare-expression • "<=>" shift-expression
  930 relational-expression: compare-expression •

    "<=>"  shift, and go to state 844

    $default  reduce using rule 930 (relational-expression)


State 412

  171 constant-expression: conditional-expression •

    $default  reduce using rule 171 (constant-expression)


State 413

   17 alignment-specifier: "alignas" '(' constant-expression • ')'
   18                    | "alignas" '(' constant-expression • "..." ')'

    ')'    shift, and go to state 845
    "..."  shift, and go to state 846


State 414

  342 floating-point-literal: decimal-floating-point-literal •

    $default  reduce using rule 342 (floating-point-literal)


State 415

  199 decimal-literal: decimal-literal • digit
  200                | decimal-literal • '\'' digit
  493 integer-literal: decimal-literal •
  494                | decimal-literal • integer-suffix
  1169 user-defined-integer-literal: decimal-literal • ud-suffix

    IDENTIFIER  shift, and go to state 826
    LL          shift, and go to state 827
    '0'         shift, and go to state 793
    '1'         shift, and go to state 794
    '\''        shift, and go to state 847
    '2'         shift, and go to state 795
    '3'         shift, and go to state 796
    '4'         shift, and go to state 797
    '5'         shift, and go to state 798
    '6'         shift, and go to state 799
    '7'         shift, and go to state 800
    '8'         shift, and go to state 801
    '9'         shift, and go to state 802
    'u'         shift, and go to state 829
    'U'         shift, and go to state 830
    'L'         shift, and go to state 831
    'l'         shift, and go to state 832
    "ll"        shift, and go to state 833
    'z'         shift, and go to state 834
    'Z'         shift, and go to state 835

    IDENTIFIER  [reduce using rule 493 (integer-literal)]
    $default    reduce using rule 493 (integer-literal)

    digit             go to state 848
    integer-suffix    go to state 849
    long-long-suffix  go to state 838
    long-suffix       go to state 839
    size-suffix       go to state 840
    ud-suffix         go to state 850
    unsigned-suffix   go to state 842


State 416

  1141 unary-expression: delete-expression •

    $default  reduce using rule 1141 (unary-expression)


State 417

  262 digit-sequence: digit •

    $default  reduce using rule 262 (digit-sequence)


State 418

  196 decimal-floating-point-literal: digit-sequence • exponent-part
  197                               | digit-sequence • exponent-part floating-point-suffix
  263 digit-sequence: digit-sequence • digit
  264               | digit-sequence • '\'' digit
  390 fractional-constant: digit-sequence • '.' digit-sequence
  392                    | digit-sequence • '.'
  1166 user-defined-floating-point-literal: digit-sequence • exponent-part ud-suffix

    '0'   shift, and go to state 793
    '1'   shift, and go to state 794
    '\''  shift, and go to state 851
    '.'   shift, and go to state 852
    '2'   shift, and go to state 795
    '3'   shift, and go to state 796
    '4'   shift, and go to state 797
    '5'   shift, and go to state 798
    '6'   shift, and go to state 799
    '7'   shift, and go to state 800
    '8'   shift, and go to state 801
    '9'   shift, and go to state 802
    'e'   shift, and go to state 853
    'E'   shift, and go to state 854

    digit          go to state 855
    exponent-part  go to state 856


State 419

  126 character-literal: encoding-prefix • '\'' c-char-sequence '\''
  1044 string-literal: encoding-prefix • '"' '"'
  1046               | encoding-prefix • '"' s-char-sequence '"'
  1048               | encoding-prefix • 'R' raw-string

    '\''  shift, and go to state 857
    '"'   shift, and go to state 511
    'R'   shift, and go to state 512


State 420

   19 and-expression: equality-expression •
  308 equality-expression: equality-expression • "==" relational-expression
  309                    | equality-expression • "!=" relational-expression

    "=="  shift, and go to state 858
    "!="  shift, and go to state 859

    $default  reduce using rule 19 (and-expression)


State 421

  321 exclusive-or-expression: exclusive-or-expression • '^' and-expression
  467 inclusive-or-expression: exclusive-or-expression •

    '^'  shift, and go to state 860

    $default  reduce using rule 467 (inclusive-or-expression)


State 422

  560 literal: floating-point-literal •

    $default  reduce using rule 560 (literal)


State 423

  888 primary-expression: fold-expression •

    $default  reduce using rule 888 (primary-expression)


State 424

  192 decimal-floating-point-literal: fractional-constant •
  193                               | fractional-constant • exponent-part
  194                               | fractional-constant • floating-point-suffix
  195                               | fractional-constant • exponent-part floating-point-suffix
  1164 user-defined-floating-point-literal: fractional-constant • ud-suffix
  1165                                    | fractional-constant • exponent-part ud-suffix

    IDENTIFIER  shift, and go to state 826
    'L'         shift, and go to state 861
    'e'         shift, and go to state 853
    'E'         shift, and go to state 854
    'f'         shift, and go to state 862
    'l'         shift, and go to state 863
    'F'         shift, and go to state 864

    IDENTIFIER  [reduce using rule 192 (decimal-floating-point-literal)]
    $default    reduce using rule 192 (decimal-floating-point-literal)

    exponent-part          go to state 865
    floating-point-suffix  go to state 866
    ud-suffix              go to state 867


State 425

  343 floating-point-literal: hexadecimal-floating-point-literal •

    $default  reduce using rule 343 (floating-point-literal)


State 426

  495 integer-literal: hexadecimal-literal •
  496                | hexadecimal-literal • integer-suffix
  1171 user-defined-integer-literal: hexadecimal-literal • ud-suffix

    IDENTIFIER  shift, and go to state 826
    LL          shift, and go to state 827
    'u'         shift, and go to state 829
    'U'         shift, and go to state 830
    'L'         shift, and go to state 831
    'l'         shift, and go to state 832
    "ll"        shift, and go to state 833
    'z'         shift, and go to state 834
    'Z'         shift, and go to state 835

    IDENTIFIER  [reduce using rule 495 (integer-literal)]
    $default    reduce using rule 495 (integer-literal)

    integer-suffix    go to state 868
    long-long-suffix  go to state 838
    long-suffix       go to state 839
    size-suffix       go to state 840
    ud-suffix         go to state 869
    unsigned-suffix   go to state 842


State 427

  453 hexadecimal-floating-point-literal: hexadecimal-prefix • hexadecimal-fractional-constant binary-exponent-part
  454                                   | hexadecimal-prefix • hexadecimal-fractional-constant binary-exponent-part floating-point-suffix
  455                                   | hexadecimal-prefix • hexadecimal-digit-sequence binary-exponent-part
  456                                   | hexadecimal-prefix • hexadecimal-digit-sequence binary-exponent-part floating-point-suffix
  460 hexadecimal-literal: hexadecimal-prefix • hexadecimal-digit-sequence
  1167 user-defined-floating-point-literal: hexadecimal-prefix • hexadecimal-fractional-constant binary-exponent-part ud-suffix
  1168                                    | hexadecimal-prefix • hexadecimal-digit-sequence binary-exponent-part ud-suffix

    '0'  shift, and go to state 870
    '1'  shift, and go to state 871
    '.'  shift, and go to state 872
    '2'  shift, and go to state 873
    '3'  shift, and go to state 874
    '4'  shift, and go to state 875
    '5'  shift, and go to state 876
    '6'  shift, and go to state 877
    '7'  shift, and go to state 878
    '8'  shift, and go to state 879
    '9'  shift, and go to state 880
    'e'  shift, and go to state 881
    'E'  shift, and go to state 882
    'f'  shift, and go to state 883
    'F'  shift, and go to state 884
    'a'  shift, and go to state 885
    'b'  shift, and go to state 886
    'c'  shift, and go to state 887
    'd'  shift, and go to state 888
    'A'  shift, and go to state 889
    'B'  shift, and go to state 890
    'C'  shift, and go to state 891
    'D'  shift, and go to state 892

    hexadecimal-digit                go to state 893
    hexadecimal-digit-sequence       go to state 894
    hexadecimal-fractional-constant  go to state 895


State 428

  886 primary-expression: id-expression •

    $default  reduce using rule 886 (primary-expression)


State 429

  468 inclusive-or-expression: inclusive-or-expression • '|' exclusive-or-expression
  567 logical-and-expression: inclusive-or-expression •

    '|'  shift, and go to state 896

    $default  reduce using rule 567 (logical-and-expression)


State 430

  558 literal: integer-literal •

    $default  reduce using rule 558 (literal)


State 431

  887 primary-expression: lambda-expression •

    $default  reduce using rule 887 (primary-expression)


State 432

  535 lambda-expression: lambda-introducer • lambda-declarator compound-statement
  536                  | lambda-introducer • '<' template-parameter-list '>' lambda-declarator compound-statement
  537                  | lambda-introducer • '<' template-parameter-list '>' requires-clause lambda-declarator compound-statement

    IDENTIFIER      shift, and go to state 161
    "alignas"       shift, and go to state 4
    '('             shift, and go to state 897
    "::"            shift, and go to state 9
    '['             shift, and go to state 10
    "virtual"       shift, and go to state 11
    "class"         shift, and go to state 12
    "struct"        shift, and go to state 13
    "union"         shift, and go to state 14
    "noexcept"      shift, and go to state 898
    "const"         shift, and go to state 18
    "volatile"      shift, and go to state 19
    "friend"        shift, and go to state 20
    "typedef"       shift, and go to state 21
    "constexpr"     shift, and go to state 22
    "consteval"     shift, and go to state 23
    "constinit"     shift, and go to state 24
    "inline"        shift, and go to state 263
    "decltype"      shift, and go to state 26
    "->"            shift, and go to state 740
    "enum"          shift, and go to state 27
    "extern"        shift, and go to state 264
    '<'             shift, and go to state 899
    "explicit"      shift, and go to state 29
    "auto"          shift, and go to state 37
    "char"          shift, and go to state 38
    "char8_t"       shift, and go to state 39
    "char16_t"      shift, and go to state 40
    "char32_t"      shift, and go to state 41
    "wchar_t"       shift, and go to state 42
    "bool"          shift, and go to state 43
    "short"         shift, and go to state 44
    "int"           shift, and go to state 45
    "long"          shift, and go to state 46
    "signed"        shift, and go to state 47
    "unsigned"      shift, and go to state 48
    "float"         shift, and go to state 49
    "double"        shift, and go to state 50
    "void"          shift, and go to state 51
    "static"        shift, and go to state 53
    "thread_local"  shift, and go to state 54
    "mutable"       shift, and go to state 55
    "typename"      shift, and go to state 56

    alignment-specifier         go to state 58
    attribute-specifier         go to state 61
    attribute-specifier-seq     go to state 900
    class-head                  go to state 64
    class-key                   go to state 65
    class-name                  go to state 66
    class-specifier             go to state 67
    concept-name                go to state 68
    cv-qualifier                go to state 70
    decl-specifier              go to state 71
    decl-specifier-seq          go to state 901
    decltype-specifier          go to state 77
    defining-type-specifier     go to state 79
    elaborated-enum-specifier   go to state 80
    elaborated-type-specifier   go to state 81
    enum-head                   go to state 83
    enum-key                    go to state 268
    enum-name                   go to state 85
    enum-specifier              go to state 86
    explicit-specifier          go to state 269
    function-specifier          go to state 92
    lambda-declarator           go to state 902
    lambda-specifiers           go to state 903
    namespace-alias             go to state 100
    namespace-name              go to state 103
    nested-name-specifier       go to state 213
    noexcept-specifier          go to state 904
    placeholder-type-specifier  go to state 110
    simple-template-id          go to state 142
    simple-type-specifier       go to state 116
    storage-class-specifier     go to state 118
    template-name               go to state 216
    trailing-return-type        go to state 905
    type-constraint             go to state 124
    type-name                   go to state 125
    type-specifier              go to state 126
    typedef-name                go to state 127
    typename-specifier          go to state 128


State 433

  883 primary-expression: literal •

    $default  reduce using rule 883 (primary-expression)


State 434

  568 logical-and-expression: logical-and-expression • "&&" inclusive-or-expression
  569 logical-or-expression: logical-and-expression •

    "&&"  shift, and go to state 906

    $default  reduce using rule 569 (logical-or-expression)


State 435

  169 conditional-expression: logical-or-expression •
  170                       | logical-or-expression • '?' expression ':' assignment-expression
  570 logical-or-expression: logical-or-expression • "||" logical-and-expression

    '?'   shift, and go to state 907
    "||"  shift, and go to state 908

    $default  reduce using rule 169 (conditional-expression)


State 436

   10 additive-expression: multiplicative-expression •
  644 multiplicative-expression: multiplicative-expression • '*' pm-expression
  645                          | multiplicative-expression • '/' pm-expression
  646                          | multiplicative-expression • '%' pm-expression

    '*'  shift, and go to state 909
    '/'  shift, and go to state 910
    '%'  shift, and go to state 911

    $default  reduce using rule 10 (additive-expression)


State 437

  663 nested-name-specifier: nested-name-specifier • IDENTIFIER "::"
  664                      | nested-name-specifier • simple-template-id "::"
  665                      | nested-name-specifier • "template" simple-template-id "::"
  913 qualified-id: nested-name-specifier • unqualified-id
  914             | nested-name-specifier • "template" unqualified-id
  999 simple-type-specifier: nested-name-specifier • type-name
  1001                      | nested-name-specifier • "template" simple-template-id
  1004                      | nested-name-specifier • template-name
  1084 type-constraint: nested-name-specifier • concept-name
  1086                | nested-name-specifier • concept-name '<' '>'
  1088                | nested-name-specifier • concept-name '<' template-argument-list '>'

    IDENTIFIER  shift, and go to state 325
    "template"  shift, and go to state 326
    "operator"  shift, and go to state 17
    '~'         shift, and go to state 36

    class-name              go to state 66
    concept-name            go to state 328
    conversion-function-id  go to state 69
    enum-name               go to state 85
    literal-operator-id     go to state 96
    operator-function-id    go to state 109
    simple-template-id      go to state 329
    template-id             go to state 121
    template-name           go to state 330
    type-name               go to state 331
    typedef-name            go to state 127
    unqualified-id          go to state 332


State 438

  1140 unary-expression: new-expression •

    $default  reduce using rule 1140 (unary-expression)


State 439

  1139 unary-expression: noexcept-expression •

    $default  reduce using rule 1139 (unary-expression)


State 440

  198 decimal-literal: nonzero-digit •

    $default  reduce using rule 198 (decimal-literal)


State 441

  491 integer-literal: octal-literal •
  492                | octal-literal • integer-suffix
  753 octal-literal: octal-literal • octal-digit
  754              | octal-literal • '\'' octal-digit
  1170 user-defined-integer-literal: octal-literal • ud-suffix

    IDENTIFIER  shift, and go to state 826
    LL          shift, and go to state 827
    '0'         shift, and go to state 912
    '1'         shift, and go to state 913
    '\''        shift, and go to state 914
    '2'         shift, and go to state 915
    '3'         shift, and go to state 916
    '4'         shift, and go to state 917
    '5'         shift, and go to state 918
    '6'         shift, and go to state 919
    '7'         shift, and go to state 920
    'u'         shift, and go to state 829
    'U'         shift, and go to state 830
    'L'         shift, and go to state 831
    'l'         shift, and go to state 832
    "ll"        shift, and go to state 833
    'z'         shift, and go to state 834
    'Z'         shift, and go to state 835

    IDENTIFIER  [reduce using rule 491 (integer-literal)]
    $default    reduce using rule 491 (integer-literal)

    integer-suffix    go to state 921
    long-long-suffix  go to state 838
    long-suffix       go to state 839
    octal-digit       go to state 922
    size-suffix       go to state 840
    ud-suffix         go to state 923
    unsigned-suffix   go to state 842


State 442

  643 multiplicative-expression: pm-expression •
  857 pm-expression: pm-expression • ".*" cast-expression
  858              | pm-expression • "->*" cast-expression

    ".*"   shift, and go to state 924
    "->*"  shift, and go to state 925

    $default  reduce using rule 643 (multiplicative-expression)


State 443

  563 literal: pointer-literal •

    $default  reduce using rule 563 (literal)


State 444

  861 postfix-expression: postfix-expression • '[' ']'
  862                   | postfix-expression • '[' expression-list ']'
  863                   | postfix-expression • '(' ')'
  864                   | postfix-expression • '(' expression-list ')'
  871                   | postfix-expression • '.' id-expression
  872                   | postfix-expression • '.' "template" id-expression
  873                   | postfix-expression • "->" id-expression
  874                   | postfix-expression • "->" "template" id-expression
  875                   | postfix-expression • "++"
  876                   | postfix-expression • "--"
  1130 unary-expression: postfix-expression •

    '('   shift, and go to state 926
    '['   shift, and go to state 927
    "->"  shift, and go to state 928
    '.'   shift, and go to state 929
    "++"  shift, and go to state 930
    "--"  shift, and go to state 931

    $default  reduce using rule 1130 (unary-expression)


State 445

  860 postfix-expression: primary-expression •

    $default  reduce using rule 860 (postfix-expression)


State 446

  307 equality-expression: relational-expression •
  931 relational-expression: relational-expression • '<' compare-expression
  932                      | relational-expression • '>' compare-expression
  933                      | relational-expression • "<=" compare-expression
  934                      | relational-expression • ">=" compare-expression

    '<'   shift, and go to state 932
    '>'   shift, and go to state 933
    "<="  shift, and go to state 934
    ">="  shift, and go to state 935

    '>'       [reduce using rule 307 (equality-expression)]
    $default  reduce using rule 307 (equality-expression)


State 447

  889 primary-expression: requires-expression •

    $default  reduce using rule 889 (primary-expression)


State 448

  154 compare-expression: shift-expression •
  967 shift-expression: shift-expression • "<<" additive-expression
  968                 | shift-expression • ">>" additive-expression

    "<<"  shift, and go to state 936
    ">>"  shift, and go to state 937

    $default  reduce using rule 154 (compare-expression)


State 449

  865 postfix-expression: simple-type-specifier • '(' ')'
  866                   | simple-type-specifier • '(' expression-list ')'
  869                   | simple-type-specifier • braced-init-list
  1117 type-specifier: simple-type-specifier •

    '('  shift, and go to state 938
    '{'  shift, and go to state 939

    '('       [reduce using rule 1117 (type-specifier)]
    $default  reduce using rule 1117 (type-specifier)

    braced-init-list  go to state 940


State 450

  561 literal: string-literal •
  1177 user-defined-string-literal: string-literal • ud-suffix

    IDENTIFIER  shift, and go to state 826

    IDENTIFIER  [reduce using rule 561 (literal)]
    $default    reduce using rule 561 (literal)

    ud-suffix  go to state 518


State 451

   15 alignment-specifier: "alignas" '(' type-id • ')'
   16                    | "alignas" '(' type-id • "..." ')'

    ')'    shift, and go to state 941
    "..."  shift, and go to state 942


State 452

  1090 type-id: type-specifier-seq •
  1091        | type-specifier-seq • abstract-declarator

    IDENTIFIER  shift, and go to state 258
    '('         shift, and go to state 943
    "..."       shift, and go to state 944
    '&'         shift, and go to state 7
    "::"        shift, and go to state 9
    '['         shift, and go to state 945
    "&&"        shift, and go to state 16
    "decltype"  shift, and go to state 135
    '*'         shift, and go to state 32

    '('       [reduce using rule 1090 (type-id)]
    "..."     [reduce using rule 1090 (type-id)]
    $default  reduce using rule 1090 (type-id)

    abstract-declarator             go to state 946
    abstract-pack-declarator        go to state 947
    class-name                      go to state 66
    decltype-specifier              go to state 139
    enum-name                       go to state 85
    namespace-alias                 go to state 100
    namespace-name                  go to state 103
    nested-name-specifier           go to state 522
    noptr-abstract-declarator       go to state 948
    noptr-abstract-pack-declarator  go to state 949
    parameters-and-qualifiers       go to state 950
    ptr-abstract-declarator         go to state 951
    ptr-operator                    go to state 952
    simple-template-id              go to state 142
    template-name                   go to state 143
    type-name                       go to state 144
    typedef-name                    go to state 127


State 453

  867 postfix-expression: typename-specifier • '(' ')'
  868                   | typename-specifier • '(' expression-list ')'
  870                   | typename-specifier • braced-init-list
  1119 type-specifier: typename-specifier •

    '('  shift, and go to state 953
    '{'  shift, and go to state 939

    '('       [reduce using rule 1119 (type-specifier)]
    $default  reduce using rule 1119 (type-specifier)

    braced-init-list  go to state 954


State 454

  124 cast-expression: unary-expression •

    $default  reduce using rule 124 (cast-expression)


State 455

  1131 unary-expression: unary-operator • cast-expression

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 955
    character-literal                    go to state 410
    class-name                           go to state 66
    concept-name                         go to state 68
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    requires-expression                  go to state 447
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 456

  1176 user-defined-literal: user-defined-character-literal •

    $default  reduce using rule 1176 (user-defined-literal)


State 457

  1174 user-defined-literal: user-defined-floating-point-literal •

    $default  reduce using rule 1174 (user-defined-literal)


State 458

  1173 user-defined-literal: user-defined-integer-literal •

    $default  reduce using rule 1173 (user-defined-literal)


State 459

  564 literal: user-defined-literal •

    $default  reduce using rule 564 (literal)


State 460

  1175 user-defined-literal: user-defined-string-literal •

    $default  reduce using rule 1175 (user-defined-literal)


State 461

  665 nested-name-specifier: nested-name-specifier "template" • simple-template-id "::"
  914 qualified-id: nested-name-specifier "template" • unqualified-id

    IDENTIFIER  shift, and go to state 727
    "operator"  shift, and go to state 17
    '~'         shift, and go to state 36

    conversion-function-id  go to state 69
    literal-operator-id     go to state 96
    operator-function-id    go to state 109
    simple-template-id      go to state 956
    template-id             go to state 121
    template-name           go to state 143
    unqualified-id          go to state 729


State 462

  727 noptr-declarator: noptr-declarator parameters-and-qualifiers •

    $default  reduce using rule 727 (noptr-declarator)


State 463

  732 noptr-declarator: '(' ptr-declarator ')' •

    $default  reduce using rule 732 (noptr-declarator)


State 464

   22 asm-declaration: "asm" '(' string-literal • ')' ';'

    ')'  shift, and go to state 957


State 465

   48 attribute-namespace: IDENTIFIER •
   55 attribute-token: IDENTIFIER •

    "::"      reduce using rule 48 (attribute-namespace)
    $default  reduce using rule 55 (attribute-token)


State 466

   57 attribute-using-prefix: "using" • attribute-namespace ':'

    IDENTIFIER  shift, and go to state 958

    attribute-namespace  go to state 959


State 467

   43 attribute-list: attribute •
   46               | attribute • "..."

    "..."  shift, and go to state 960

    $default  reduce using rule 43 (attribute-list)


State 468

   44 attribute-list: attribute-list • ','
   45               | attribute-list • ',' attribute
   47               | attribute-list • ',' attribute "..."
   50 attribute-specifier: '[' '[' attribute-list • ']' ']'

    ','  shift, and go to state 961
    ']'  shift, and go to state 962


State 469

   49 attribute-scoped-token: attribute-namespace • "::" IDENTIFIER

    "::"  shift, and go to state 963


State 470

   56 attribute-token: attribute-scoped-token •

    $default  reduce using rule 56 (attribute-token)


State 471

   38 attribute: attribute-token •
   39          | attribute-token • attribute-argument-clause

    '('  shift, and go to state 964

    $default  reduce using rule 38 (attribute)

    attribute-argument-clause  go to state 965


State 472

   51 attribute-specifier: '[' '[' attribute-using-prefix • attribute-list ']' ']'

    IDENTIFIER  shift, and go to state 465

    attribute               go to state 467
    attribute-list          go to state 966
    attribute-namespace     go to state 469
    attribute-scoped-token  go to state 470
    attribute-token         go to state 471


State 473

  142 class-key: "class" •
  1113 type-parameter-key: "class" •

    IDENTIFIER  reduce using rule 142 (class-key)
    IDENTIFIER  [reduce using rule 1113 (type-parameter-key)]
    '='         reduce using rule 1113 (type-parameter-key)
    "..."       reduce using rule 1113 (type-parameter-key)
    ','         reduce using rule 1113 (type-parameter-key)
    '>'         reduce using rule 1113 (type-parameter-key)
    $default    reduce using rule 142 (class-key)


State 474

  1059 template-head: "template" • '<' template-parameter-list '>'
  1060              | "template" • '<' template-parameter-list '>' requires-clause

    '<'  shift, and go to state 967


State 475

  324 explicit-specialization: "template" '<' '>' • declaration

    IDENTIFIER        shift, and go to state 1
    "using"           shift, and go to state 2
    ';'               shift, and go to state 3
    "alignas"         shift, and go to state 4
    '('               shift, and go to state 5
    "..."             shift, and go to state 6
    '&'               shift, and go to state 7
    "asm"             shift, and go to state 8
    "::"              shift, and go to state 9
    '['               shift, and go to state 10
    "virtual"         shift, and go to state 11
    "class"           shift, and go to state 12
    "struct"          shift, and go to state 13
    "union"           shift, and go to state 14
    "template"        shift, and go to state 15
    "&&"              shift, and go to state 16
    "operator"        shift, and go to state 17
    "const"           shift, and go to state 18
    "volatile"        shift, and go to state 19
    "friend"          shift, and go to state 20
    "typedef"         shift, and go to state 21
    "constexpr"       shift, and go to state 22
    "consteval"       shift, and go to state 23
    "constinit"       shift, and go to state 24
    "inline"          shift, and go to state 25
    "decltype"        shift, and go to state 26
    "enum"            shift, and go to state 27
    "extern"          shift, and go to state 28
    "explicit"        shift, and go to state 29
    "export"          shift, and go to state 30
    "export-keyword"  shift, and go to state 158
    '*'               shift, and go to state 32
    "import-keyword"  shift, and go to state 34
    "namespace"       shift, and go to state 35
    '~'               shift, and go to state 36
    "auto"            shift, and go to state 37
    "char"            shift, and go to state 38
    "char8_t"         shift, and go to state 39
    "char16_t"        shift, and go to state 40
    "char32_t"        shift, and go to state 41
    "wchar_t"         shift, and go to state 42
    "bool"            shift, and go to state 43
    "short"           shift, and go to state 44
    "int"             shift, and go to state 45
    "long"            shift, and go to state 46
    "signed"          shift, and go to state 47
    "unsigned"        shift, and go to state 48
    "float"           shift, and go to state 49
    "double"          shift, and go to state 50
    "void"            shift, and go to state 51
    "static_assert"   shift, and go to state 52
    "static"          shift, and go to state 53
    "thread_local"    shift, and go to state 54
    "mutable"         shift, and go to state 55
    "typename"        shift, and go to state 56

    alias-declaration                go to state 57
    alignment-specifier              go to state 58
    asm-declaration                  go to state 59
    attribute-declaration            go to state 60
    attribute-specifier              go to state 61
    attribute-specifier-seq          go to state 62
    block-declaration                go to state 63
    class-head                       go to state 64
    class-key                        go to state 65
    class-name                       go to state 66
    class-specifier                  go to state 67
    concept-name                     go to state 68
    conversion-function-id           go to state 69
    cv-qualifier                     go to state 70
    decl-specifier                   go to state 71
    decl-specifier-seq               go to state 72
    declaration                      go to state 968
    declarator                       go to state 75
    declarator-id                    go to state 76
    decltype-specifier               go to state 77
    deduction-guide                  go to state 78
    defining-type-specifier          go to state 79
    elaborated-enum-specifier        go to state 80
    elaborated-type-specifier        go to state 81
    empty-declaration                go to state 82
    enum-head                        go to state 83
    enum-key                         go to state 84
    enum-name                        go to state 85
    enum-specifier                   go to state 86
    explicit-instantiation           go to state 87
    explicit-specialization          go to state 88
    explicit-specifier               go to state 89
    export-declaration               go to state 90
    function-definition              go to state 91
    function-specifier               go to state 92
    id-expression                    go to state 94
    linkage-specification            go to state 95
    literal-operator-id              go to state 96
    module-import-declaration        go to state 98
    named-namespace-definition       go to state 99
    namespace-alias                  go to state 100
    namespace-alias-definition       go to state 101
    namespace-definition             go to state 102
    namespace-name                   go to state 103
    nested-name-specifier            go to state 104
    nested-namespace-definition      go to state 105
    nodeclspec-function-declaration  go to state 106
    noptr-declarator                 go to state 107
    opaque-enum-declaration          go to state 108
    operator-function-id             go to state 109
    placeholder-type-specifier       go to state 110
    ptr-declarator                   go to state 111
    ptr-operator                     go to state 112
    qualified-id                     go to state 113
    simple-declaration               go to state 114
    simple-template-id               go to state 115
    simple-type-specifier            go to state 116
    static_assert-declaration        go to state 117
    storage-class-specifier          go to state 118
    template-declaration             go to state 119
    template-head                    go to state 120
    template-id                      go to state 121
    template-name                    go to state 122
    type-constraint                  go to state 124
    type-name                        go to state 125
    type-specifier                   go to state 126
    typedef-name                     go to state 127
    typename-specifier               go to state 128
    unnamed-namespace-definition     go to state 129
    unqualified-id                   go to state 130
    using-declaration                go to state 131
    using-directive                  go to state 132
    using-enum-declaration           go to state 133


State 476

  809 parameter-declaration: "this" • decl-specifier-seq declarator
  813                      | "this" • decl-specifier-seq declarator '=' initializer-clause
  817                      | "this" • decl-specifier-seq
  821                      | "this" • decl-specifier-seq abstract-declarator
  825                      | "this" • decl-specifier-seq '=' initializer-clause
  829                      | "this" • decl-specifier-seq abstract-declarator '=' initializer-clause

    IDENTIFIER      shift, and go to state 161
    "::"            shift, and go to state 9
    "virtual"       shift, and go to state 11
    "class"         shift, and go to state 12
    "struct"        shift, and go to state 13
    "union"         shift, and go to state 14
    "const"         shift, and go to state 18
    "volatile"      shift, and go to state 19
    "friend"        shift, and go to state 20
    "typedef"       shift, and go to state 21
    "constexpr"     shift, and go to state 22
    "consteval"     shift, and go to state 23
    "constinit"     shift, and go to state 24
    "inline"        shift, and go to state 263
    "decltype"      shift, and go to state 26
    "enum"          shift, and go to state 27
    "extern"        shift, and go to state 264
    "explicit"      shift, and go to state 29
    "auto"          shift, and go to state 37
    "char"          shift, and go to state 38
    "char8_t"       shift, and go to state 39
    "char16_t"      shift, and go to state 40
    "char32_t"      shift, and go to state 41
    "wchar_t"       shift, and go to state 42
    "bool"          shift, and go to state 43
    "short"         shift, and go to state 44
    "int"           shift, and go to state 45
    "long"          shift, and go to state 46
    "signed"        shift, and go to state 47
    "unsigned"      shift, and go to state 48
    "float"         shift, and go to state 49
    "double"        shift, and go to state 50
    "void"          shift, and go to state 51
    "static"        shift, and go to state 53
    "thread_local"  shift, and go to state 54
    "mutable"       shift, and go to state 55
    "typename"      shift, and go to state 56

    class-head                  go to state 64
    class-key                   go to state 65
    class-name                  go to state 66
    class-specifier             go to state 67
    concept-name                go to state 68
    cv-qualifier                go to state 70
    decl-specifier              go to state 71
    decl-specifier-seq          go to state 969
    decltype-specifier          go to state 77
    defining-type-specifier     go to state 79
    elaborated-enum-specifier   go to state 80
    elaborated-type-specifier   go to state 81
    enum-head                   go to state 83
    enum-key                    go to state 268
    enum-name                   go to state 85
    enum-specifier              go to state 86
    explicit-specifier          go to state 269
    function-specifier          go to state 92
    namespace-alias             go to state 100
    namespace-name              go to state 103
    nested-name-specifier       go to state 213
    placeholder-type-specifier  go to state 110
    simple-template-id          go to state 142
    simple-type-specifier       go to state 116
    storage-class-specifier     go to state 118
    template-name               go to state 216
    type-constraint             go to state 124
    type-name                   go to state 125
    type-specifier              go to state 126
    typedef-name                go to state 127
    typename-specifier          go to state 128


State 477

  1114 type-parameter-key: "typename" •
  1126 typename-specifier: "typename" • nested-name-specifier IDENTIFIER
  1127                   | "typename" • nested-name-specifier simple-template-id
  1128                   | "typename" • nested-name-specifier "template" simple-template-id

    IDENTIFIER  shift, and go to state 258
    "::"        shift, and go to state 9
    "decltype"  shift, and go to state 135

    IDENTIFIER  [reduce using rule 1114 (type-parameter-key)]
    $default    reduce using rule 1114 (type-parameter-key)

    class-name             go to state 66
    decltype-specifier     go to state 139
    enum-name              go to state 85
    namespace-alias        go to state 100
    namespace-name         go to state 103
    nested-name-specifier  go to state 259
    simple-template-id     go to state 142
    template-name          go to state 143
    type-name              go to state 144
    typedef-name           go to state 127


State 478

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  806 parameter-declaration: attribute-specifier-seq • decl-specifier-seq declarator
  808                      | attribute-specifier-seq • "this" decl-specifier-seq declarator
  810                      | attribute-specifier-seq • decl-specifier-seq declarator '=' initializer-clause
  812                      | attribute-specifier-seq • "this" decl-specifier-seq declarator '=' initializer-clause
  814                      | attribute-specifier-seq • decl-specifier-seq
  816                      | attribute-specifier-seq • "this" decl-specifier-seq
  818                      | attribute-specifier-seq • decl-specifier-seq abstract-declarator
  820                      | attribute-specifier-seq • "this" decl-specifier-seq abstract-declarator
  822                      | attribute-specifier-seq • decl-specifier-seq '=' initializer-clause
  824                      | attribute-specifier-seq • "this" decl-specifier-seq '=' initializer-clause
  826                      | attribute-specifier-seq • decl-specifier-seq abstract-declarator '=' initializer-clause
  828                      | attribute-specifier-seq • "this" decl-specifier-seq abstract-declarator '=' initializer-clause

    IDENTIFIER      shift, and go to state 161
    "alignas"       shift, and go to state 4
    "::"            shift, and go to state 9
    '['             shift, and go to state 10
    "virtual"       shift, and go to state 11
    "class"         shift, and go to state 12
    "struct"        shift, and go to state 13
    "union"         shift, and go to state 14
    "const"         shift, and go to state 18
    "volatile"      shift, and go to state 19
    "friend"        shift, and go to state 20
    "typedef"       shift, and go to state 21
    "constexpr"     shift, and go to state 22
    "consteval"     shift, and go to state 23
    "constinit"     shift, and go to state 24
    "inline"        shift, and go to state 263
    "decltype"      shift, and go to state 26
    "enum"          shift, and go to state 27
    "extern"        shift, and go to state 264
    "explicit"      shift, and go to state 29
    "this"          shift, and go to state 970
    "auto"          shift, and go to state 37
    "char"          shift, and go to state 38
    "char8_t"       shift, and go to state 39
    "char16_t"      shift, and go to state 40
    "char32_t"      shift, and go to state 41
    "wchar_t"       shift, and go to state 42
    "bool"          shift, and go to state 43
    "short"         shift, and go to state 44
    "int"           shift, and go to state 45
    "long"          shift, and go to state 46
    "signed"        shift, and go to state 47
    "unsigned"      shift, and go to state 48
    "float"         shift, and go to state 49
    "double"        shift, and go to state 50
    "void"          shift, and go to state 51
    "static"        shift, and go to state 53
    "thread_local"  shift, and go to state 54
    "mutable"       shift, and go to state 55
    "typename"      shift, and go to state 56

    alignment-specifier         go to state 58
    attribute-specifier         go to state 265
    class-head                  go to state 64
    class-key                   go to state 65
    class-name                  go to state 66
    class-specifier             go to state 67
    concept-name                go to state 68
    cv-qualifier                go to state 70
    decl-specifier              go to state 71
    decl-specifier-seq          go to state 971
    decltype-specifier          go to state 77
    defining-type-specifier     go to state 79
    elaborated-enum-specifier   go to state 80
    elaborated-type-specifier   go to state 81
    enum-head                   go to state 83
    enum-key                    go to state 268
    enum-name                   go to state 85
    enum-specifier              go to state 86
    explicit-specifier          go to state 269
    function-specifier          go to state 92
    namespace-alias             go to state 100
    namespace-name              go to state 103
    nested-name-specifier       go to state 213
    placeholder-type-specifier  go to state 110
    simple-template-id          go to state 142
    simple-type-specifier       go to state 116
    storage-class-specifier     go to state 118
    template-name               go to state 216
    type-constraint             go to state 124
    type-name                   go to state 125
    type-specifier              go to state 126
    typedef-name                go to state 127
    typename-specifier          go to state 128


State 479

  807 parameter-declaration: decl-specifier-seq • declarator
  811                      | decl-specifier-seq • declarator '=' initializer-clause
  815                      | decl-specifier-seq •
  819                      | decl-specifier-seq • abstract-declarator
  823                      | decl-specifier-seq • '=' initializer-clause
  827                      | decl-specifier-seq • abstract-declarator '=' initializer-clause

    IDENTIFIER  shift, and go to state 148
    '='         shift, and go to state 972
    '('         shift, and go to state 973
    "..."       shift, and go to state 974
    '&'         shift, and go to state 7
    "::"        shift, and go to state 9
    '['         shift, and go to state 945
    "&&"        shift, and go to state 16
    "operator"  shift, and go to state 17
    "decltype"  shift, and go to state 135
    '*'         shift, and go to state 32
    '~'         shift, and go to state 36

    "..."     [reduce using rule 815 (parameter-declaration)]
    $default  reduce using rule 815 (parameter-declaration)

    abstract-declarator             go to state 975
    abstract-pack-declarator        go to state 947
    class-name                      go to state 66
    conversion-function-id          go to state 69
    declarator                      go to state 976
    declarator-id                   go to state 76
    decltype-specifier              go to state 139
    enum-name                       go to state 85
    id-expression                   go to state 94
    literal-operator-id             go to state 96
    namespace-alias                 go to state 100
    namespace-name                  go to state 103
    nested-name-specifier           go to state 149
    noptr-abstract-declarator       go to state 948
    noptr-abstract-pack-declarator  go to state 949
    noptr-declarator                go to state 107
    operator-function-id            go to state 109
    parameters-and-qualifiers       go to state 950
    ptr-abstract-declarator         go to state 951
    ptr-declarator                  go to state 111
    ptr-operator                    go to state 977
    qualified-id                    go to state 113
    simple-template-id              go to state 115
    template-id                     go to state 121
    template-name                   go to state 143
    type-name                       go to state 144
    typedef-name                    go to state 127
    unqualified-id                  go to state 130


State 480

  1068 template-parameter: parameter-declaration •

    $default  reduce using rule 1068 (template-parameter)


State 481

  1107 type-parameter: template-head • type-parameter-key
  1108               | template-head • type-parameter-key "..."
  1109               | template-head • type-parameter-key IDENTIFIER
  1110               | template-head • type-parameter-key "..." IDENTIFIER
  1111               | template-head • type-parameter-key '=' id-expression
  1112               | template-head • type-parameter-key IDENTIFIER '=' id-expression

    "class"     shift, and go to state 978
    "typename"  shift, and go to state 979

    type-parameter-key  go to state 980


State 482

  1069 template-parameter-list: template-parameter •

    $default  reduce using rule 1069 (template-parameter-list)


State 483

  1059 template-head: "template" '<' template-parameter-list • '>'
  1060              | "template" '<' template-parameter-list • '>' requires-clause
  1070 template-parameter-list: template-parameter-list • ',' template-parameter

    ','  shift, and go to state 981
    '>'  shift, and go to state 982


State 484

  852 placeholder-type-specifier: type-constraint • "auto"
  854                           | type-constraint • "decltype" '(' "auto" ')'
  1101 type-parameter: type-constraint •
  1102               | type-constraint • "..."
  1103               | type-constraint • IDENTIFIER
  1104               | type-constraint • "..." IDENTIFIER
  1105               | type-constraint • '=' type-id
  1106               | type-constraint • IDENTIFIER '=' type-id

    IDENTIFIER  shift, and go to state 983
    '='         shift, and go to state 984
    "..."       shift, and go to state 985
    "decltype"  shift, and go to state 344
    "auto"      shift, and go to state 345

    $default  reduce using rule 1101 (type-parameter)


State 485

  1067 template-parameter: type-parameter •

    $default  reduce using rule 1067 (template-parameter)


State 486

  1095 type-parameter: type-parameter-key •
  1096               | type-parameter-key • "..."
  1097               | type-parameter-key • IDENTIFIER
  1098               | type-parameter-key • "..." IDENTIFIER
  1099               | type-parameter-key • '=' type-id
  1100               | type-parameter-key • IDENTIFIER '=' type-id

    IDENTIFIER  shift, and go to state 986
    '='         shift, and go to state 987
    "..."       shift, and go to state 988

    $default  reduce using rule 1095 (type-parameter)


State 487

  767 overloadable-operator: '(' ')' •

    $default  reduce using rule 767 (overloadable-operator)


State 488

  768 overloadable-operator: '[' ']' •

    $default  reduce using rule 768 (overloadable-operator)


State 489

  765 overloadable-operator: "delete" '[' • ']'

    ']'  shift, and go to state 989


State 490

   84 basic-s-char: EXCEPT_THE_QUOTATION_MARK_REVERSE_SOLIDUS_OR_NEW_LINE_CHARACTER •

    $default  reduce using rule 84 (basic-s-char)


State 491

  167 conditional-escape-sequence: '\\' • conditional-escape-sequence-char
  749 octal-escape-sequence: '\\' • octal-digit
  750                      | '\\' • octal-digit octal-digit
  751                      | '\\' • octal-digit octal-digit octal-digit
  984 simple-escape-sequence: '\\' • simple-escape-sequence-char

    NOT_AN_OCTAL_DIGIT_A_SIMPLE_ESCAPE_SEQUENCE_CHAR_OR_THE_CHARACTERS_U_U_OR_X  shift, and go to state 990
    '0'                                                                          shift, and go to state 912
    '1'                                                                          shift, and go to state 913
    '\''                                                                         shift, and go to state 991
    '\\'                                                                         shift, and go to state 992
    '?'                                                                          shift, and go to state 993
    '2'                                                                          shift, and go to state 915
    '3'                                                                          shift, and go to state 916
    '4'                                                                          shift, and go to state 917
    '5'                                                                          shift, and go to state 918
    '6'                                                                          shift, and go to state 919
    '7'                                                                          shift, and go to state 920
    'f'                                                                          shift, and go to state 994
    '"'                                                                          shift, and go to state 995
    'a'                                                                          shift, and go to state 996
    'b'                                                                          shift, and go to state 997
    'n'                                                                          shift, and go to state 998
    'r'                                                                          shift, and go to state 999
    't'                                                                          shift, and go to state 1000
    'v'                                                                          shift, and go to state 1001

    conditional-escape-sequence-char  go to state 1002
    octal-digit                       go to state 1003
    simple-escape-sequence-char       go to state 1004


State 492

  1045 string-literal: '"' '"' •

    $default  reduce using rule 1045 (string-literal)


State 493

  451 hexadecimal-escape-sequence: "\\x" • hexadecimal-digit

    '0'  shift, and go to state 870
    '1'  shift, and go to state 871
    '2'  shift, and go to state 873
    '3'  shift, and go to state 874
    '4'  shift, and go to state 875
    '5'  shift, and go to state 876
    '6'  shift, and go to state 877
    '7'  shift, and go to state 878
    '8'  shift, and go to state 879
    '9'  shift, and go to state 880
    'e'  shift, and go to state 881
    'E'  shift, and go to state 882
    'f'  shift, and go to state 883
    'F'  shift, and go to state 884
    'a'  shift, and go to state 885
    'b'  shift, and go to state 886
    'c'  shift, and go to state 887
    'd'  shift, and go to state 888
    'A'  shift, and go to state 889
    'B'  shift, and go to state 890
    'C'  shift, and go to state 891
    'D'  shift, and go to state 892

    hexadecimal-digit  go to state 1005


State 494

  1148 universal-character-name: "\\u" • hex-quad

    '0'  shift, and go to state 870
    '1'  shift, and go to state 871
    '2'  shift, and go to state 873
    '3'  shift, and go to state 874
    '4'  shift, and go to state 875
    '5'  shift, and go to state 876
    '6'  shift, and go to state 877
    '7'  shift, and go to state 878
    '8'  shift, and go to state 879
    '9'  shift, and go to state 880
    'e'  shift, and go to state 881
    'E'  shift, and go to state 882
    'f'  shift, and go to state 883
    'F'  shift, and go to state 884
    'a'  shift, and go to state 885
    'b'  shift, and go to state 886
    'c'  shift, and go to state 887
    'd'  shift, and go to state 888
    'A'  shift, and go to state 889
    'B'  shift, and go to state 890
    'C'  shift, and go to state 891
    'D'  shift, and go to state 892

    hex-quad           go to state 1006
    hexadecimal-digit  go to state 1007


State 495

  1149 universal-character-name: "\\U" • hex-quad hex-quad

    '0'  shift, and go to state 870
    '1'  shift, and go to state 871
    '2'  shift, and go to state 873
    '3'  shift, and go to state 874
    '4'  shift, and go to state 875
    '5'  shift, and go to state 876
    '6'  shift, and go to state 877
    '7'  shift, and go to state 878
    '8'  shift, and go to state 879
    '9'  shift, and go to state 880
    'e'  shift, and go to state 881
    'E'  shift, and go to state 882
    'f'  shift, and go to state 883
    'F'  shift, and go to state 884
    'a'  shift, and go to state 885
    'b'  shift, and go to state 886
    'c'  shift, and go to state 887
    'd'  shift, and go to state 888
    'A'  shift, and go to state 889
    'B'  shift, and go to state 890
    'C'  shift, and go to state 891
    'D'  shift, and go to state 892

    hex-quad           go to state 1008
    hexadecimal-digit  go to state 1007


State 496

  947 s-char: basic-s-char •

    $default  reduce using rule 947 (s-char)


State 497

  312 escape-sequence: conditional-escape-sequence •

    $default  reduce using rule 312 (escape-sequence)


State 498

  948 s-char: escape-sequence •

    $default  reduce using rule 948 (s-char)


State 499

  452 hexadecimal-escape-sequence: hexadecimal-escape-sequence • hexadecimal-digit
  740 numeric-escape-sequence: hexadecimal-escape-sequence •

    '0'  shift, and go to state 870
    '1'  shift, and go to state 871
    '2'  shift, and go to state 873
    '3'  shift, and go to state 874
    '4'  shift, and go to state 875
    '5'  shift, and go to state 876
    '6'  shift, and go to state 877
    '7'  shift, and go to state 878
    '8'  shift, and go to state 879
    '9'  shift, and go to state 880
    'e'  shift, and go to state 881
    'E'  shift, and go to state 882
    'f'  shift, and go to state 883
    'F'  shift, and go to state 884
    'a'  shift, and go to state 885
    'b'  shift, and go to state 886
    'c'  shift, and go to state 887
    'd'  shift, and go to state 888
    'A'  shift, and go to state 889
    'B'  shift, and go to state 890
    'C'  shift, and go to state 891
    'D'  shift, and go to state 892

    $default  reduce using rule 740 (numeric-escape-sequence)

    hexadecimal-digit  go to state 1009


State 500

  311 escape-sequence: numeric-escape-sequence •

    $default  reduce using rule 311 (escape-sequence)


State 501

  739 numeric-escape-sequence: octal-escape-sequence •

    $default  reduce using rule 739 (numeric-escape-sequence)


State 502

  950 s-char-sequence: s-char •

    $default  reduce using rule 950 (s-char-sequence)


State 503

  951 s-char-sequence: s-char-sequence • s-char
  1047 string-literal: '"' s-char-sequence • '"'

    EXCEPT_THE_QUOTATION_MARK_REVERSE_SOLIDUS_OR_NEW_LINE_CHARACTER  shift, and go to state 490
    '\\'                                                             shift, and go to state 491
    '"'                                                              shift, and go to state 1010
    "\\x"                                                            shift, and go to state 493
    "\\u"                                                            shift, and go to state 494
    "\\U"                                                            shift, and go to state 495

    basic-s-char                 go to state 496
    conditional-escape-sequence  go to state 497
    escape-sequence              go to state 498
    hexadecimal-escape-sequence  go to state 499
    numeric-escape-sequence      go to state 500
    octal-escape-sequence        go to state 501
    s-char                       go to state 1011
    simple-escape-sequence       go to state 504
    universal-character-name     go to state 505


State 504

  310 escape-sequence: simple-escape-sequence •

    $default  reduce using rule 310 (escape-sequence)


State 505

  949 s-char: universal-character-name •

    $default  reduce using rule 949 (s-char)


State 506

  764 overloadable-operator: "new" '[' • ']'

    ']'  shift, and go to state 1012


State 507

  920 raw-string: '"' • '(' ')' '"'
  921           | '"' • d-char-sequence '(' ')' '"'
  922           | '"' • '(' r-char-sequence ')' '"'
  923           | '"' • d-char-sequence '(' r-char-sequence ')' '"'
  924           | '"' • '(' ')' d-char-sequence '"'
  925           | '"' • d-char-sequence '(' ')' d-char-sequence '"'
  926           | '"' • '(' r-char-sequence ')' d-char-sequence '"'
  927           | '"' • d-char-sequence '(' r-char-sequence ')' d-char-sequence '"'

    EXCEPT_SPACE_PARENTHESIS_REVERSE_SOLIDUS_TABULATION_LINE_TABULATION_FORM_FEED_AND_NEW_LINE  shift, and go to state 1013
    '('                                                                                         shift, and go to state 1014

    d-char           go to state 1015
    d-char-sequence  go to state 1016


State 508

  1049 string-literal: 'R' raw-string •

    $default  reduce using rule 1049 (string-literal)


State 509

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  268 elaborated-type-specifier: class-key attribute-specifier-seq • IDENTIFIER
  270                          | class-key attribute-specifier-seq • nested-name-specifier IDENTIFIER

    IDENTIFIER  shift, and go to state 627
    "alignas"   shift, and go to state 4
    "::"        shift, and go to state 9
    '['         shift, and go to state 10
    "decltype"  shift, and go to state 135

    alignment-specifier    go to state 58
    attribute-specifier    go to state 265
    class-name             go to state 66
    decltype-specifier     go to state 139
    enum-name              go to state 85
    namespace-alias        go to state 100
    namespace-name         go to state 103
    nested-name-specifier  go to state 1017
    simple-template-id     go to state 142
    template-name          go to state 143
    type-name              go to state 144
    typedef-name           go to state 127


State 510

  269 elaborated-type-specifier: class-key nested-name-specifier • IDENTIFIER
  272                          | class-key nested-name-specifier • simple-template-id
  273                          | class-key nested-name-specifier • "template" simple-template-id
  663 nested-name-specifier: nested-name-specifier • IDENTIFIER "::"
  664                      | nested-name-specifier • simple-template-id "::"
  665                      | nested-name-specifier • "template" simple-template-id "::"

    IDENTIFIER  shift, and go to state 1018
    "template"  shift, and go to state 635

    simple-template-id  go to state 1019
    template-name       go to state 143


State 511

  1044 string-literal: encoding-prefix '"' • '"'
  1046               | encoding-prefix '"' • s-char-sequence '"'

    EXCEPT_THE_QUOTATION_MARK_REVERSE_SOLIDUS_OR_NEW_LINE_CHARACTER  shift, and go to state 490
    '\\'                                                             shift, and go to state 491
    '"'                                                              shift, and go to state 1020
    "\\x"                                                            shift, and go to state 493
    "\\u"                                                            shift, and go to state 494
    "\\U"                                                            shift, and go to state 495

    basic-s-char                 go to state 496
    conditional-escape-sequence  go to state 497
    escape-sequence              go to state 498
    hexadecimal-escape-sequence  go to state 499
    numeric-escape-sequence      go to state 500
    octal-escape-sequence        go to state 501
    s-char                       go to state 502
    s-char-sequence              go to state 1021
    simple-escape-sequence       go to state 504
    universal-character-name     go to state 505


State 512

  1048 string-literal: encoding-prefix 'R' • raw-string

    '"'  shift, and go to state 507

    raw-string  go to state 1022


State 513

  145 class-name: IDENTIFIER •
  163 concept-name: IDENTIFIER •
  297 enum-name: IDENTIFIER •
  663 nested-name-specifier: nested-name-specifier IDENTIFIER • "::"
  1066 template-name: IDENTIFIER •
  1124 typedef-name: IDENTIFIER •

    "::"  shift, and go to state 726

    IDENTIFIER        reduce using rule 145 (class-name)
    IDENTIFIER        [reduce using rule 163 (concept-name)]
    IDENTIFIER        [reduce using rule 297 (enum-name)]
    IDENTIFIER        [reduce using rule 1066 (template-name)]
    IDENTIFIER        [reduce using rule 1124 (typedef-name)]
    '+'               reduce using rule 145 (class-name)
    '+'               [reduce using rule 297 (enum-name)]
    '+'               [reduce using rule 1066 (template-name)]
    '+'               [reduce using rule 1124 (typedef-name)]
    '-'               reduce using rule 145 (class-name)
    '-'               [reduce using rule 297 (enum-name)]
    '-'               [reduce using rule 1066 (template-name)]
    '-'               [reduce using rule 1124 (typedef-name)]
    "using"           reduce using rule 145 (class-name)
    "using"           [reduce using rule 297 (enum-name)]
    "using"           [reduce using rule 1066 (template-name)]
    "using"           [reduce using rule 1124 (typedef-name)]
    '='               reduce using rule 145 (class-name)
    '='               [reduce using rule 163 (concept-name)]
    '='               [reduce using rule 297 (enum-name)]
    '='               [reduce using rule 1066 (template-name)]
    '='               [reduce using rule 1124 (typedef-name)]
    ';'               reduce using rule 145 (class-name)
    ';'               [reduce using rule 297 (enum-name)]
    ';'               [reduce using rule 1066 (template-name)]
    ';'               [reduce using rule 1124 (typedef-name)]
    "alignas"         reduce using rule 145 (class-name)
    "alignas"         [reduce using rule 297 (enum-name)]
    "alignas"         [reduce using rule 1066 (template-name)]
    "alignas"         [reduce using rule 1124 (typedef-name)]
    '('               reduce using rule 145 (class-name)
    '('               [reduce using rule 297 (enum-name)]
    '('               [reduce using rule 1066 (template-name)]
    '('               [reduce using rule 1124 (typedef-name)]
    ')'               reduce using rule 145 (class-name)
    ')'               [reduce using rule 297 (enum-name)]
    ')'               [reduce using rule 1066 (template-name)]
    ')'               [reduce using rule 1124 (typedef-name)]
    "..."             reduce using rule 145 (class-name)
    "..."             [reduce using rule 163 (concept-name)]
    "..."             [reduce using rule 297 (enum-name)]
    "..."             [reduce using rule 1066 (template-name)]
    "..."             [reduce using rule 1124 (typedef-name)]
    '&'               reduce using rule 145 (class-name)
    '&'               [reduce using rule 297 (enum-name)]
    '&'               [reduce using rule 1066 (template-name)]
    '&'               [reduce using rule 1124 (typedef-name)]
    "asm"             reduce using rule 145 (class-name)
    "asm"             [reduce using rule 297 (enum-name)]
    "asm"             [reduce using rule 1066 (template-name)]
    "asm"             [reduce using rule 1124 (typedef-name)]
    "*="              reduce using rule 145 (class-name)
    "*="              [reduce using rule 297 (enum-name)]
    "*="              [reduce using rule 1066 (template-name)]
    "*="              [reduce using rule 1124 (typedef-name)]
    "/="              reduce using rule 145 (class-name)
    "/="              [reduce using rule 297 (enum-name)]
    "/="              [reduce using rule 1066 (template-name)]
    "/="              [reduce using rule 1124 (typedef-name)]
    "%="              reduce using rule 145 (class-name)
    "%="              [reduce using rule 297 (enum-name)]
    "%="              [reduce using rule 1066 (template-name)]
    "%="              [reduce using rule 1124 (typedef-name)]
    "+="              reduce using rule 145 (class-name)
    "+="              [reduce using rule 297 (enum-name)]
    "+="              [reduce using rule 1066 (template-name)]
    "+="              [reduce using rule 1124 (typedef-name)]
    "-="              reduce using rule 145 (class-name)
    "-="              [reduce using rule 297 (enum-name)]
    "-="              [reduce using rule 1066 (template-name)]
    "-="              [reduce using rule 1124 (typedef-name)]
    ">>="             reduce using rule 145 (class-name)
    ">>="             [reduce using rule 297 (enum-name)]
    ">>="             [reduce using rule 1066 (template-name)]
    ">>="             [reduce using rule 1124 (typedef-name)]
    "<<="             reduce using rule 145 (class-name)
    "<<="             [reduce using rule 297 (enum-name)]
    "<<="             [reduce using rule 1066 (template-name)]
    "<<="             [reduce using rule 1124 (typedef-name)]
    "&="              reduce using rule 145 (class-name)
    "&="              [reduce using rule 297 (enum-name)]
    "&="              [reduce using rule 1066 (template-name)]
    "&="              [reduce using rule 1124 (typedef-name)]
    "^="              reduce using rule 145 (class-name)
    "^="              [reduce using rule 297 (enum-name)]
    "^="              [reduce using rule 1066 (template-name)]
    "^="              [reduce using rule 1124 (typedef-name)]
    "|="              reduce using rule 145 (class-name)
    "|="              [reduce using rule 297 (enum-name)]
    "|="              [reduce using rule 1066 (template-name)]
    "|="              [reduce using rule 1124 (typedef-name)]
    ','               reduce using rule 145 (class-name)
    ','               [reduce using rule 163 (concept-name)]
    ','               [reduce using rule 297 (enum-name)]
    ','               [reduce using rule 1066 (template-name)]
    ','               [reduce using rule 1124 (typedef-name)]
    "::"              [reduce using rule 145 (class-name)]
    "::"              [reduce using rule 297 (enum-name)]
    "::"              [reduce using rule 1066 (template-name)]
    "::"              [reduce using rule 1124 (typedef-name)]
    '['               reduce using rule 145 (class-name)
    '['               [reduce using rule 297 (enum-name)]
    '['               [reduce using rule 1066 (template-name)]
    '['               [reduce using rule 1124 (typedef-name)]
    ']'               reduce using rule 145 (class-name)
    ']'               [reduce using rule 297 (enum-name)]
    ']'               [reduce using rule 1066 (template-name)]
    ']'               [reduce using rule 1124 (typedef-name)]
    ':'               reduce using rule 145 (class-name)
    ':'               [reduce using rule 297 (enum-name)]
    ':'               [reduce using rule 1066 (template-name)]
    ':'               [reduce using rule 1124 (typedef-name)]
    '{'               reduce using rule 145 (class-name)
    '{'               [reduce using rule 297 (enum-name)]
    '{'               [reduce using rule 1066 (template-name)]
    '{'               [reduce using rule 1124 (typedef-name)]
    '}'               reduce using rule 145 (class-name)
    '}'               [reduce using rule 297 (enum-name)]
    '}'               [reduce using rule 1066 (template-name)]
    '}'               [reduce using rule 1124 (typedef-name)]
    "virtual"         reduce using rule 145 (class-name)
    "virtual"         [reduce using rule 297 (enum-name)]
    "virtual"         [reduce using rule 1066 (template-name)]
    "virtual"         [reduce using rule 1124 (typedef-name)]
    "class"           reduce using rule 145 (class-name)
    "class"           [reduce using rule 297 (enum-name)]
    "class"           [reduce using rule 1066 (template-name)]
    "class"           [reduce using rule 1124 (typedef-name)]
    "struct"          reduce using rule 145 (class-name)
    "struct"          [reduce using rule 297 (enum-name)]
    "struct"          [reduce using rule 1066 (template-name)]
    "struct"          [reduce using rule 1124 (typedef-name)]
    "union"           reduce using rule 145 (class-name)
    "union"           [reduce using rule 297 (enum-name)]
    "union"           [reduce using rule 1066 (template-name)]
    "union"           [reduce using rule 1124 (typedef-name)]
    "template"        reduce using rule 145 (class-name)
    "template"        [reduce using rule 297 (enum-name)]
    "template"        [reduce using rule 1066 (template-name)]
    "template"        [reduce using rule 1124 (typedef-name)]
    "final"           reduce using rule 145 (class-name)
    "final"           [reduce using rule 297 (enum-name)]
    "final"           [reduce using rule 1066 (template-name)]
    "final"           [reduce using rule 1124 (typedef-name)]
    "<=>"             reduce using rule 145 (class-name)
    "<=>"             [reduce using rule 297 (enum-name)]
    "<=>"             [reduce using rule 1066 (template-name)]
    "<=>"             [reduce using rule 1124 (typedef-name)]
    "noexcept"        reduce using rule 145 (class-name)
    "noexcept"        [reduce using rule 297 (enum-name)]
    "noexcept"        [reduce using rule 1066 (template-name)]
    "noexcept"        [reduce using rule 1124 (typedef-name)]
    "concept"         reduce using rule 145 (class-name)
    "concept"         [reduce using rule 297 (enum-name)]
    "concept"         [reduce using rule 1066 (template-name)]
    "concept"         [reduce using rule 1124 (typedef-name)]
    '?'               reduce using rule 145 (class-name)
    '?'               [reduce using rule 297 (enum-name)]
    '?'               [reduce using rule 1066 (template-name)]
    '?'               [reduce using rule 1124 (typedef-name)]
    "&&"              reduce using rule 145 (class-name)
    "&&"              [reduce using rule 297 (enum-name)]
    "&&"              [reduce using rule 1066 (template-name)]
    "&&"              [reduce using rule 1124 (typedef-name)]
    "||"              reduce using rule 145 (class-name)
    "||"              [reduce using rule 297 (enum-name)]
    "||"              [reduce using rule 1066 (template-name)]
    "||"              [reduce using rule 1124 (typedef-name)]
    "operator"        reduce using rule 145 (class-name)
    "operator"        [reduce using rule 297 (enum-name)]
    "operator"        [reduce using rule 1066 (template-name)]
    "operator"        [reduce using rule 1124 (typedef-name)]
    "const"           reduce using rule 145 (class-name)
    "const"           [reduce using rule 297 (enum-name)]
    "const"           [reduce using rule 1066 (template-name)]
    "const"           [reduce using rule 1124 (typedef-name)]
    "volatile"        reduce using rule 145 (class-name)
    "volatile"        [reduce using rule 297 (enum-name)]
    "volatile"        [reduce using rule 1066 (template-name)]
    "volatile"        [reduce using rule 1124 (typedef-name)]
    "friend"          reduce using rule 145 (class-name)
    "friend"          [reduce using rule 297 (enum-name)]
    "friend"          [reduce using rule 1066 (template-name)]
    "friend"          [reduce using rule 1124 (typedef-name)]
    "typedef"         reduce using rule 145 (class-name)
    "typedef"         [reduce using rule 297 (enum-name)]
    "typedef"         [reduce using rule 1066 (template-name)]
    "typedef"         [reduce using rule 1124 (typedef-name)]
    "constexpr"       reduce using rule 145 (class-name)
    "constexpr"       [reduce using rule 297 (enum-name)]
    "constexpr"       [reduce using rule 1066 (template-name)]
    "constexpr"       [reduce using rule 1124 (typedef-name)]
    "consteval"       reduce using rule 145 (class-name)
    "consteval"       [reduce using rule 297 (enum-name)]
    "consteval"       [reduce using rule 1066 (template-name)]
    "consteval"       [reduce using rule 1124 (typedef-name)]
    "constinit"       reduce using rule 145 (class-name)
    "constinit"       [reduce using rule 297 (enum-name)]
    "constinit"       [reduce using rule 1066 (template-name)]
    "constinit"       [reduce using rule 1124 (typedef-name)]
    "inline"          reduce using rule 145 (class-name)
    "inline"          [reduce using rule 297 (enum-name)]
    "inline"          [reduce using rule 1066 (template-name)]
    "inline"          [reduce using rule 1124 (typedef-name)]
    "decltype"        reduce using rule 145 (class-name)
    "decltype"        [reduce using rule 163 (concept-name)]
    "decltype"        [reduce using rule 297 (enum-name)]
    "decltype"        [reduce using rule 1066 (template-name)]
    "decltype"        [reduce using rule 1124 (typedef-name)]
    "->"              reduce using rule 145 (class-name)
    "->"              [reduce using rule 297 (enum-name)]
    "->"              [reduce using rule 1066 (template-name)]
    "->"              [reduce using rule 1124 (typedef-name)]
    '.'               reduce using rule 145 (class-name)
    '.'               [reduce using rule 297 (enum-name)]
    '.'               [reduce using rule 1066 (template-name)]
    '.'               [reduce using rule 1124 (typedef-name)]
    "enum"            reduce using rule 145 (class-name)
    "enum"            [reduce using rule 297 (enum-name)]
    "enum"            [reduce using rule 1066 (template-name)]
    "enum"            [reduce using rule 1124 (typedef-name)]
    "=="              reduce using rule 145 (class-name)
    "=="              [reduce using rule 297 (enum-name)]
    "=="              [reduce using rule 1066 (template-name)]
    "=="              [reduce using rule 1124 (typedef-name)]
    "!="              reduce using rule 145 (class-name)
    "!="              [reduce using rule 297 (enum-name)]
    "!="              [reduce using rule 1066 (template-name)]
    "!="              [reduce using rule 1124 (typedef-name)]
    '^'               reduce using rule 145 (class-name)
    '^'               [reduce using rule 297 (enum-name)]
    '^'               [reduce using rule 1066 (template-name)]
    '^'               [reduce using rule 1124 (typedef-name)]
    "extern"          reduce using rule 145 (class-name)
    "extern"          [reduce using rule 297 (enum-name)]
    "extern"          [reduce using rule 1066 (template-name)]
    "extern"          [reduce using rule 1124 (typedef-name)]
    '<'               reduce using rule 145 (class-name)
    '<'               [reduce using rule 163 (concept-name)]
    '<'               [reduce using rule 297 (enum-name)]
    '<'               [reduce using rule 1066 (template-name)]
    '<'               [reduce using rule 1124 (typedef-name)]
    '>'               reduce using rule 145 (class-name)
    '>'               [reduce using rule 163 (concept-name)]
    '>'               [reduce using rule 297 (enum-name)]
    '>'               [reduce using rule 1066 (template-name)]
    '>'               [reduce using rule 1124 (typedef-name)]
    "explicit"        reduce using rule 145 (class-name)
    "explicit"        [reduce using rule 297 (enum-name)]
    "explicit"        [reduce using rule 1066 (template-name)]
    "explicit"        [reduce using rule 1124 (typedef-name)]
    "export"          reduce using rule 145 (class-name)
    "export"          [reduce using rule 297 (enum-name)]
    "export"          [reduce using rule 1066 (template-name)]
    "export"          [reduce using rule 1124 (typedef-name)]
    "export-keyword"  reduce using rule 145 (class-name)
    "export-keyword"  [reduce using rule 297 (enum-name)]
    "export-keyword"  [reduce using rule 1066 (template-name)]
    "export-keyword"  [reduce using rule 1124 (typedef-name)]
    '*'               reduce using rule 145 (class-name)
    '*'               [reduce using rule 297 (enum-name)]
    '*'               [reduce using rule 1066 (template-name)]
    '*'               [reduce using rule 1124 (typedef-name)]
    '/'               reduce using rule 145 (class-name)
    '/'               [reduce using rule 297 (enum-name)]
    '/'               [reduce using rule 1066 (template-name)]
    '/'               [reduce using rule 1124 (typedef-name)]
    '%'               reduce using rule 145 (class-name)
    '%'               [reduce using rule 297 (enum-name)]
    '%'               [reduce using rule 1066 (template-name)]
    '%'               [reduce using rule 1124 (typedef-name)]
    '|'               reduce using rule 145 (class-name)
    '|'               [reduce using rule 297 (enum-name)]
    '|'               [reduce using rule 1066 (template-name)]
    '|'               [reduce using rule 1124 (typedef-name)]
    "<<"              reduce using rule 145 (class-name)
    "<<"              [reduce using rule 297 (enum-name)]
    "<<"              [reduce using rule 1066 (template-name)]
    "<<"              [reduce using rule 1124 (typedef-name)]
    ">>"              reduce using rule 145 (class-name)
    ">>"              [reduce using rule 297 (enum-name)]
    ">>"              [reduce using rule 1066 (template-name)]
    ">>"              [reduce using rule 1124 (typedef-name)]
    "<="              reduce using rule 145 (class-name)
    "<="              [reduce using rule 297 (enum-name)]
    "<="              [reduce using rule 1066 (template-name)]
    "<="              [reduce using rule 1124 (typedef-name)]
    ">="              reduce using rule 145 (class-name)
    ">="              [reduce using rule 297 (enum-name)]
    ">="              [reduce using rule 1066 (template-name)]
    ">="              [reduce using rule 1124 (typedef-name)]
    ".*"              reduce using rule 145 (class-name)
    ".*"              [reduce using rule 297 (enum-name)]
    ".*"              [reduce using rule 1066 (template-name)]
    ".*"              [reduce using rule 1124 (typedef-name)]
    "->*"             reduce using rule 145 (class-name)
    "->*"             [reduce using rule 297 (enum-name)]
    "->*"             [reduce using rule 1066 (template-name)]
    "->*"             [reduce using rule 1124 (typedef-name)]
    "try"             reduce using rule 145 (class-name)
    "try"             [reduce using rule 297 (enum-name)]
    "try"             [reduce using rule 1066 (template-name)]
    "try"             [reduce using rule 1124 (typedef-name)]
    "import-keyword"  reduce using rule 145 (class-name)
    "import-keyword"  [reduce using rule 297 (enum-name)]
    "import-keyword"  [reduce using rule 1066 (template-name)]
    "import-keyword"  [reduce using rule 1124 (typedef-name)]
    "namespace"       reduce using rule 145 (class-name)
    "namespace"       [reduce using rule 297 (enum-name)]
    "namespace"       [reduce using rule 1066 (template-name)]
    "namespace"       [reduce using rule 1124 (typedef-name)]
    "requires"        reduce using rule 145 (class-name)
    "requires"        [reduce using rule 297 (enum-name)]
    "requires"        [reduce using rule 1066 (template-name)]
    "requires"        [reduce using rule 1124 (typedef-name)]
    '~'               reduce using rule 145 (class-name)
    '~'               [reduce using rule 297 (enum-name)]
    '~'               [reduce using rule 1066 (template-name)]
    '~'               [reduce using rule 1124 (typedef-name)]
    "++"              reduce using rule 145 (class-name)
    "++"              [reduce using rule 297 (enum-name)]
    "++"              [reduce using rule 1066 (template-name)]
    "++"              [reduce using rule 1124 (typedef-name)]
    "--"              reduce using rule 145 (class-name)
    "--"              [reduce using rule 297 (enum-name)]
    "--"              [reduce using rule 1066 (template-name)]
    "--"              [reduce using rule 1124 (typedef-name)]
    "auto"            reduce using rule 145 (class-name)
    "auto"            [reduce using rule 163 (concept-name)]
    "auto"            [reduce using rule 297 (enum-name)]
    "auto"            [reduce using rule 1066 (template-name)]
    "auto"            [reduce using rule 1124 (typedef-name)]
    "char"            reduce using rule 145 (class-name)
    "char"            [reduce using rule 297 (enum-name)]
    "char"            [reduce using rule 1066 (template-name)]
    "char"            [reduce using rule 1124 (typedef-name)]
    "char8_t"         reduce using rule 145 (class-name)
    "char8_t"         [reduce using rule 297 (enum-name)]
    "char8_t"         [reduce using rule 1066 (template-name)]
    "char8_t"         [reduce using rule 1124 (typedef-name)]
    "char16_t"        reduce using rule 145 (class-name)
    "char16_t"        [reduce using rule 297 (enum-name)]
    "char16_t"        [reduce using rule 1066 (template-name)]
    "char16_t"        [reduce using rule 1124 (typedef-name)]
    "char32_t"        reduce using rule 145 (class-name)
    "char32_t"        [reduce using rule 297 (enum-name)]
    "char32_t"        [reduce using rule 1066 (template-name)]
    "char32_t"        [reduce using rule 1124 (typedef-name)]
    "wchar_t"         reduce using rule 145 (class-name)
    "wchar_t"         [reduce using rule 297 (enum-name)]
    "wchar_t"         [reduce using rule 1066 (template-name)]
    "wchar_t"         [reduce using rule 1124 (typedef-name)]
    "bool"            reduce using rule 145 (class-name)
    "bool"            [reduce using rule 297 (enum-name)]
    "bool"            [reduce using rule 1066 (template-name)]
    "bool"            [reduce using rule 1124 (typedef-name)]
    "short"           reduce using rule 145 (class-name)
    "short"           [reduce using rule 297 (enum-name)]
    "short"           [reduce using rule 1066 (template-name)]
    "short"           [reduce using rule 1124 (typedef-name)]
    "int"             reduce using rule 145 (class-name)
    "int"             [reduce using rule 297 (enum-name)]
    "int"             [reduce using rule 1066 (template-name)]
    "int"             [reduce using rule 1124 (typedef-name)]
    "long"            reduce using rule 145 (class-name)
    "long"            [reduce using rule 297 (enum-name)]
    "long"            [reduce using rule 1066 (template-name)]
    "long"            [reduce using rule 1124 (typedef-name)]
    "signed"          reduce using rule 145 (class-name)
    "signed"          [reduce using rule 297 (enum-name)]
    "signed"          [reduce using rule 1066 (template-name)]
    "signed"          [reduce using rule 1124 (typedef-name)]
    "unsigned"        reduce using rule 145 (class-name)
    "unsigned"        [reduce using rule 297 (enum-name)]
    "unsigned"        [reduce using rule 1066 (template-name)]
    "unsigned"        [reduce using rule 1124 (typedef-name)]
    "float"           reduce using rule 145 (class-name)
    "float"           [reduce using rule 297 (enum-name)]
    "float"           [reduce using rule 1066 (template-name)]
    "float"           [reduce using rule 1124 (typedef-name)]
    "double"          reduce using rule 145 (class-name)
    "double"          [reduce using rule 297 (enum-name)]
    "double"          [reduce using rule 1066 (template-name)]
    "double"          [reduce using rule 1124 (typedef-name)]
    "void"            reduce using rule 145 (class-name)
    "void"            [reduce using rule 297 (enum-name)]
    "void"            [reduce using rule 1066 (template-name)]
    "void"            [reduce using rule 1124 (typedef-name)]
    "static_assert"   reduce using rule 145 (class-name)
    "static_assert"   [reduce using rule 297 (enum-name)]
    "static_assert"   [reduce using rule 1066 (template-name)]
    "static_assert"   [reduce using rule 1124 (typedef-name)]
    "static"          reduce using rule 145 (class-name)
    "static"          [reduce using rule 297 (enum-name)]
    "static"          [reduce using rule 1066 (template-name)]
    "static"          [reduce using rule 1124 (typedef-name)]
    "thread_local"    reduce using rule 145 (class-name)
    "thread_local"    [reduce using rule 297 (enum-name)]
    "thread_local"    [reduce using rule 1066 (template-name)]
    "thread_local"    [reduce using rule 1124 (typedef-name)]
    "mutable"         reduce using rule 145 (class-name)
    "mutable"         [reduce using rule 297 (enum-name)]
    "mutable"         [reduce using rule 1066 (template-name)]
    "mutable"         [reduce using rule 1124 (typedef-name)]
    "typename"        reduce using rule 145 (class-name)
    "typename"        [reduce using rule 297 (enum-name)]
    "typename"        [reduce using rule 1066 (template-name)]
    "typename"        [reduce using rule 1124 (typedef-name)]
    "override"        reduce using rule 145 (class-name)
    "override"        [reduce using rule 297 (enum-name)]
    "override"        [reduce using rule 1066 (template-name)]
    "override"        [reduce using rule 1124 (typedef-name)]
    $default          reduce using rule 145 (class-name)


State 514

  665 nested-name-specifier: nested-name-specifier "template" • simple-template-id "::"
  1001 simple-type-specifier: nested-name-specifier "template" • simple-template-id

    IDENTIFIER  shift, and go to state 315

    simple-template-id  go to state 1023
    template-name       go to state 143


State 515

  146 class-name: simple-template-id •
  664 nested-name-specifier: nested-name-specifier simple-template-id • "::"
  1125 typedef-name: simple-template-id •

    "::"  shift, and go to state 733

    IDENTIFIER        reduce using rule 146 (class-name)
    IDENTIFIER        [reduce using rule 1125 (typedef-name)]
    '+'               reduce using rule 146 (class-name)
    '+'               [reduce using rule 1125 (typedef-name)]
    '-'               reduce using rule 146 (class-name)
    '-'               [reduce using rule 1125 (typedef-name)]
    "using"           reduce using rule 146 (class-name)
    "using"           [reduce using rule 1125 (typedef-name)]
    '='               reduce using rule 146 (class-name)
    '='               [reduce using rule 1125 (typedef-name)]
    ';'               reduce using rule 146 (class-name)
    ';'               [reduce using rule 1125 (typedef-name)]
    "alignas"         reduce using rule 146 (class-name)
    "alignas"         [reduce using rule 1125 (typedef-name)]
    '('               reduce using rule 146 (class-name)
    '('               [reduce using rule 1125 (typedef-name)]
    ')'               reduce using rule 146 (class-name)
    ')'               [reduce using rule 1125 (typedef-name)]
    "..."             reduce using rule 146 (class-name)
    "..."             [reduce using rule 1125 (typedef-name)]
    '&'               reduce using rule 146 (class-name)
    '&'               [reduce using rule 1125 (typedef-name)]
    "asm"             reduce using rule 146 (class-name)
    "asm"             [reduce using rule 1125 (typedef-name)]
    "*="              reduce using rule 146 (class-name)
    "*="              [reduce using rule 1125 (typedef-name)]
    "/="              reduce using rule 146 (class-name)
    "/="              [reduce using rule 1125 (typedef-name)]
    "%="              reduce using rule 146 (class-name)
    "%="              [reduce using rule 1125 (typedef-name)]
    "+="              reduce using rule 146 (class-name)
    "+="              [reduce using rule 1125 (typedef-name)]
    "-="              reduce using rule 146 (class-name)
    "-="              [reduce using rule 1125 (typedef-name)]
    ">>="             reduce using rule 146 (class-name)
    ">>="             [reduce using rule 1125 (typedef-name)]
    "<<="             reduce using rule 146 (class-name)
    "<<="             [reduce using rule 1125 (typedef-name)]
    "&="              reduce using rule 146 (class-name)
    "&="              [reduce using rule 1125 (typedef-name)]
    "^="              reduce using rule 146 (class-name)
    "^="              [reduce using rule 1125 (typedef-name)]
    "|="              reduce using rule 146 (class-name)
    "|="              [reduce using rule 1125 (typedef-name)]
    ','               reduce using rule 146 (class-name)
    ','               [reduce using rule 1125 (typedef-name)]
    "::"              [reduce using rule 146 (class-name)]
    "::"              [reduce using rule 1125 (typedef-name)]
    '['               reduce using rule 146 (class-name)
    '['               [reduce using rule 1125 (typedef-name)]
    ']'               reduce using rule 146 (class-name)
    ']'               [reduce using rule 1125 (typedef-name)]
    ':'               reduce using rule 146 (class-name)
    ':'               [reduce using rule 1125 (typedef-name)]
    '{'               reduce using rule 146 (class-name)
    '{'               [reduce using rule 1125 (typedef-name)]
    '}'               reduce using rule 146 (class-name)
    '}'               [reduce using rule 1125 (typedef-name)]
    "virtual"         reduce using rule 146 (class-name)
    "virtual"         [reduce using rule 1125 (typedef-name)]
    "class"           reduce using rule 146 (class-name)
    "class"           [reduce using rule 1125 (typedef-name)]
    "struct"          reduce using rule 146 (class-name)
    "struct"          [reduce using rule 1125 (typedef-name)]
    "union"           reduce using rule 146 (class-name)
    "union"           [reduce using rule 1125 (typedef-name)]
    "template"        reduce using rule 146 (class-name)
    "template"        [reduce using rule 1125 (typedef-name)]
    "final"           reduce using rule 146 (class-name)
    "final"           [reduce using rule 1125 (typedef-name)]
    "<=>"             reduce using rule 146 (class-name)
    "<=>"             [reduce using rule 1125 (typedef-name)]
    "noexcept"        reduce using rule 146 (class-name)
    "noexcept"        [reduce using rule 1125 (typedef-name)]
    "concept"         reduce using rule 146 (class-name)
    "concept"         [reduce using rule 1125 (typedef-name)]
    '?'               reduce using rule 146 (class-name)
    '?'               [reduce using rule 1125 (typedef-name)]
    "&&"              reduce using rule 146 (class-name)
    "&&"              [reduce using rule 1125 (typedef-name)]
    "||"              reduce using rule 146 (class-name)
    "||"              [reduce using rule 1125 (typedef-name)]
    "operator"        reduce using rule 146 (class-name)
    "operator"        [reduce using rule 1125 (typedef-name)]
    "const"           reduce using rule 146 (class-name)
    "const"           [reduce using rule 1125 (typedef-name)]
    "volatile"        reduce using rule 146 (class-name)
    "volatile"        [reduce using rule 1125 (typedef-name)]
    "friend"          reduce using rule 146 (class-name)
    "friend"          [reduce using rule 1125 (typedef-name)]
    "typedef"         reduce using rule 146 (class-name)
    "typedef"         [reduce using rule 1125 (typedef-name)]
    "constexpr"       reduce using rule 146 (class-name)
    "constexpr"       [reduce using rule 1125 (typedef-name)]
    "consteval"       reduce using rule 146 (class-name)
    "consteval"       [reduce using rule 1125 (typedef-name)]
    "constinit"       reduce using rule 146 (class-name)
    "constinit"       [reduce using rule 1125 (typedef-name)]
    "inline"          reduce using rule 146 (class-name)
    "inline"          [reduce using rule 1125 (typedef-name)]
    "decltype"        reduce using rule 146 (class-name)
    "decltype"        [reduce using rule 1125 (typedef-name)]
    "->"              reduce using rule 146 (class-name)
    "->"              [reduce using rule 1125 (typedef-name)]
    '.'               reduce using rule 146 (class-name)
    '.'               [reduce using rule 1125 (typedef-name)]
    "enum"            reduce using rule 146 (class-name)
    "enum"            [reduce using rule 1125 (typedef-name)]
    "=="              reduce using rule 146 (class-name)
    "=="              [reduce using rule 1125 (typedef-name)]
    "!="              reduce using rule 146 (class-name)
    "!="              [reduce using rule 1125 (typedef-name)]
    '^'               reduce using rule 146 (class-name)
    '^'               [reduce using rule 1125 (typedef-name)]
    "extern"          reduce using rule 146 (class-name)
    "extern"          [reduce using rule 1125 (typedef-name)]
    '<'               reduce using rule 146 (class-name)
    '<'               [reduce using rule 1125 (typedef-name)]
    '>'               reduce using rule 146 (class-name)
    '>'               [reduce using rule 1125 (typedef-name)]
    "explicit"        reduce using rule 146 (class-name)
    "explicit"        [reduce using rule 1125 (typedef-name)]
    "export"          reduce using rule 146 (class-name)
    "export"          [reduce using rule 1125 (typedef-name)]
    "export-keyword"  reduce using rule 146 (class-name)
    "export-keyword"  [reduce using rule 1125 (typedef-name)]
    '*'               reduce using rule 146 (class-name)
    '*'               [reduce using rule 1125 (typedef-name)]
    '/'               reduce using rule 146 (class-name)
    '/'               [reduce using rule 1125 (typedef-name)]
    '%'               reduce using rule 146 (class-name)
    '%'               [reduce using rule 1125 (typedef-name)]
    '|'               reduce using rule 146 (class-name)
    '|'               [reduce using rule 1125 (typedef-name)]
    "<<"              reduce using rule 146 (class-name)
    "<<"              [reduce using rule 1125 (typedef-name)]
    ">>"              reduce using rule 146 (class-name)
    ">>"              [reduce using rule 1125 (typedef-name)]
    "<="              reduce using rule 146 (class-name)
    "<="              [reduce using rule 1125 (typedef-name)]
    ">="              reduce using rule 146 (class-name)
    ">="              [reduce using rule 1125 (typedef-name)]
    ".*"              reduce using rule 146 (class-name)
    ".*"              [reduce using rule 1125 (typedef-name)]
    "->*"             reduce using rule 146 (class-name)
    "->*"             [reduce using rule 1125 (typedef-name)]
    "try"             reduce using rule 146 (class-name)
    "try"             [reduce using rule 1125 (typedef-name)]
    "import-keyword"  reduce using rule 146 (class-name)
    "import-keyword"  [reduce using rule 1125 (typedef-name)]
    "namespace"       reduce using rule 146 (class-name)
    "namespace"       [reduce using rule 1125 (typedef-name)]
    "requires"        reduce using rule 146 (class-name)
    "requires"        [reduce using rule 1125 (typedef-name)]
    '~'               reduce using rule 146 (class-name)
    '~'               [reduce using rule 1125 (typedef-name)]
    "++"              reduce using rule 146 (class-name)
    "++"              [reduce using rule 1125 (typedef-name)]
    "--"              reduce using rule 146 (class-name)
    "--"              [reduce using rule 1125 (typedef-name)]
    "auto"            reduce using rule 146 (class-name)
    "auto"            [reduce using rule 1125 (typedef-name)]
    "char"            reduce using rule 146 (class-name)
    "char"            [reduce using rule 1125 (typedef-name)]
    "char8_t"         reduce using rule 146 (class-name)
    "char8_t"         [reduce using rule 1125 (typedef-name)]
    "char16_t"        reduce using rule 146 (class-name)
    "char16_t"        [reduce using rule 1125 (typedef-name)]
    "char32_t"        reduce using rule 146 (class-name)
    "char32_t"        [reduce using rule 1125 (typedef-name)]
    "wchar_t"         reduce using rule 146 (class-name)
    "wchar_t"         [reduce using rule 1125 (typedef-name)]
    "bool"            reduce using rule 146 (class-name)
    "bool"            [reduce using rule 1125 (typedef-name)]
    "short"           reduce using rule 146 (class-name)
    "short"           [reduce using rule 1125 (typedef-name)]
    "int"             reduce using rule 146 (class-name)
    "int"             [reduce using rule 1125 (typedef-name)]
    "long"            reduce using rule 146 (class-name)
    "long"            [reduce using rule 1125 (typedef-name)]
    "signed"          reduce using rule 146 (class-name)
    "signed"          [reduce using rule 1125 (typedef-name)]
    "unsigned"        reduce using rule 146 (class-name)
    "unsigned"        [reduce using rule 1125 (typedef-name)]
    "float"           reduce using rule 146 (class-name)
    "float"           [reduce using rule 1125 (typedef-name)]
    "double"          reduce using rule 146 (class-name)
    "double"          [reduce using rule 1125 (typedef-name)]
    "void"            reduce using rule 146 (class-name)
    "void"            [reduce using rule 1125 (typedef-name)]
    "static_assert"   reduce using rule 146 (class-name)
    "static_assert"   [reduce using rule 1125 (typedef-name)]
    "static"          reduce using rule 146 (class-name)
    "static"          [reduce using rule 1125 (typedef-name)]
    "thread_local"    reduce using rule 146 (class-name)
    "thread_local"    [reduce using rule 1125 (typedef-name)]
    "mutable"         reduce using rule 146 (class-name)
    "mutable"         [reduce using rule 1125 (typedef-name)]
    "typename"        reduce using rule 146 (class-name)
    "typename"        [reduce using rule 1125 (typedef-name)]
    "override"        reduce using rule 146 (class-name)
    "override"        [reduce using rule 1125 (typedef-name)]
    $default          reduce using rule 146 (class-name)


State 516

  760 operator-function-id: "operator" overloadable-operator '<' • '>'
  761                     | "operator" overloadable-operator '<' • template-argument-list '>'

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 136
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '>'                 shift, and go to state 1024
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    additive-expression                  go to state 404
    and-expression                       go to state 405
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-key                            go to state 210
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 412
    constant-expression                  go to state 639
    conversion-function-id               go to state 69
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 640
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 435
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    string-literal                       go to state 450
    template-argument                    go to state 641
    template-argument-list               go to state 1025
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-id                              go to state 643
    type-name                            go to state 125
    type-specifier                       go to state 217
    type-specifier-seq                   go to state 452
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 517

  565 literal-operator-id: "operator" string-literal IDENTIFIER •
  1129 ud-suffix: IDENTIFIER •

    IDENTIFIER        reduce using rule 565 (literal-operator-id)
    IDENTIFIER        [reduce using rule 1129 (ud-suffix)]
    '+'               reduce using rule 565 (literal-operator-id)
    '+'               [reduce using rule 1129 (ud-suffix)]
    '-'               reduce using rule 565 (literal-operator-id)
    '-'               [reduce using rule 1129 (ud-suffix)]
    "using"           reduce using rule 565 (literal-operator-id)
    "using"           [reduce using rule 1129 (ud-suffix)]
    '='               reduce using rule 565 (literal-operator-id)
    '='               [reduce using rule 1129 (ud-suffix)]
    ';'               reduce using rule 565 (literal-operator-id)
    ';'               [reduce using rule 1129 (ud-suffix)]
    "alignas"         reduce using rule 565 (literal-operator-id)
    "alignas"         [reduce using rule 1129 (ud-suffix)]
    '('               reduce using rule 565 (literal-operator-id)
    '('               [reduce using rule 1129 (ud-suffix)]
    ')'               reduce using rule 565 (literal-operator-id)
    ')'               [reduce using rule 1129 (ud-suffix)]
    "..."             reduce using rule 565 (literal-operator-id)
    "..."             [reduce using rule 1129 (ud-suffix)]
    '&'               reduce using rule 565 (literal-operator-id)
    '&'               [reduce using rule 1129 (ud-suffix)]
    "asm"             reduce using rule 565 (literal-operator-id)
    "asm"             [reduce using rule 1129 (ud-suffix)]
    "*="              reduce using rule 565 (literal-operator-id)
    "*="              [reduce using rule 1129 (ud-suffix)]
    "/="              reduce using rule 565 (literal-operator-id)
    "/="              [reduce using rule 1129 (ud-suffix)]
    "%="              reduce using rule 565 (literal-operator-id)
    "%="              [reduce using rule 1129 (ud-suffix)]
    "+="              reduce using rule 565 (literal-operator-id)
    "+="              [reduce using rule 1129 (ud-suffix)]
    "-="              reduce using rule 565 (literal-operator-id)
    "-="              [reduce using rule 1129 (ud-suffix)]
    ">>="             reduce using rule 565 (literal-operator-id)
    ">>="             [reduce using rule 1129 (ud-suffix)]
    "<<="             reduce using rule 565 (literal-operator-id)
    "<<="             [reduce using rule 1129 (ud-suffix)]
    "&="              reduce using rule 565 (literal-operator-id)
    "&="              [reduce using rule 1129 (ud-suffix)]
    "^="              reduce using rule 565 (literal-operator-id)
    "^="              [reduce using rule 1129 (ud-suffix)]
    "|="              reduce using rule 565 (literal-operator-id)
    "|="              [reduce using rule 1129 (ud-suffix)]
    ','               reduce using rule 565 (literal-operator-id)
    ','               [reduce using rule 1129 (ud-suffix)]
    "::"              reduce using rule 565 (literal-operator-id)
    "::"              [reduce using rule 1129 (ud-suffix)]
    '['               reduce using rule 565 (literal-operator-id)
    '['               [reduce using rule 1129 (ud-suffix)]
    ']'               reduce using rule 565 (literal-operator-id)
    ']'               [reduce using rule 1129 (ud-suffix)]
    ':'               reduce using rule 565 (literal-operator-id)
    ':'               [reduce using rule 1129 (ud-suffix)]
    '{'               reduce using rule 565 (literal-operator-id)
    '{'               [reduce using rule 1129 (ud-suffix)]
    '}'               reduce using rule 565 (literal-operator-id)
    '}'               [reduce using rule 1129 (ud-suffix)]
    "virtual"         reduce using rule 565 (literal-operator-id)
    "virtual"         [reduce using rule 1129 (ud-suffix)]
    "class"           reduce using rule 565 (literal-operator-id)
    "class"           [reduce using rule 1129 (ud-suffix)]
    "struct"          reduce using rule 565 (literal-operator-id)
    "struct"          [reduce using rule 1129 (ud-suffix)]
    "union"           reduce using rule 565 (literal-operator-id)
    "union"           [reduce using rule 1129 (ud-suffix)]
    "template"        reduce using rule 565 (literal-operator-id)
    "template"        [reduce using rule 1129 (ud-suffix)]
    "final"           reduce using rule 565 (literal-operator-id)
    "final"           [reduce using rule 1129 (ud-suffix)]
    "<=>"             reduce using rule 565 (literal-operator-id)
    "<=>"             [reduce using rule 1129 (ud-suffix)]
    "noexcept"        reduce using rule 565 (literal-operator-id)
    "noexcept"        [reduce using rule 1129 (ud-suffix)]
    "concept"         reduce using rule 565 (literal-operator-id)
    "concept"         [reduce using rule 1129 (ud-suffix)]
    '?'               reduce using rule 565 (literal-operator-id)
    '?'               [reduce using rule 1129 (ud-suffix)]
    "&&"              reduce using rule 565 (literal-operator-id)
    "&&"              [reduce using rule 1129 (ud-suffix)]
    "||"              reduce using rule 565 (literal-operator-id)
    "||"              [reduce using rule 1129 (ud-suffix)]
    "operator"        reduce using rule 565 (literal-operator-id)
    "operator"        [reduce using rule 1129 (ud-suffix)]
    "const"           reduce using rule 565 (literal-operator-id)
    "const"           [reduce using rule 1129 (ud-suffix)]
    "volatile"        reduce using rule 565 (literal-operator-id)
    "volatile"        [reduce using rule 1129 (ud-suffix)]
    "friend"          reduce using rule 565 (literal-operator-id)
    "friend"          [reduce using rule 1129 (ud-suffix)]
    "typedef"         reduce using rule 565 (literal-operator-id)
    "typedef"         [reduce using rule 1129 (ud-suffix)]
    "constexpr"       reduce using rule 565 (literal-operator-id)
    "constexpr"       [reduce using rule 1129 (ud-suffix)]
    "consteval"       reduce using rule 565 (literal-operator-id)
    "consteval"       [reduce using rule 1129 (ud-suffix)]
    "constinit"       reduce using rule 565 (literal-operator-id)
    "constinit"       [reduce using rule 1129 (ud-suffix)]
    "inline"          reduce using rule 565 (literal-operator-id)
    "inline"          [reduce using rule 1129 (ud-suffix)]
    "decltype"        reduce using rule 565 (literal-operator-id)
    "decltype"        [reduce using rule 1129 (ud-suffix)]
    "->"              reduce using rule 565 (literal-operator-id)
    "->"              [reduce using rule 1129 (ud-suffix)]
    '.'               reduce using rule 565 (literal-operator-id)
    '.'               [reduce using rule 1129 (ud-suffix)]
    "enum"            reduce using rule 565 (literal-operator-id)
    "enum"            [reduce using rule 1129 (ud-suffix)]
    "=="              reduce using rule 565 (literal-operator-id)
    "=="              [reduce using rule 1129 (ud-suffix)]
    "!="              reduce using rule 565 (literal-operator-id)
    "!="              [reduce using rule 1129 (ud-suffix)]
    '^'               reduce using rule 565 (literal-operator-id)
    '^'               [reduce using rule 1129 (ud-suffix)]
    "extern"          reduce using rule 565 (literal-operator-id)
    "extern"          [reduce using rule 1129 (ud-suffix)]
    '<'               reduce using rule 565 (literal-operator-id)
    '<'               [reduce using rule 1129 (ud-suffix)]
    '>'               reduce using rule 565 (literal-operator-id)
    '>'               [reduce using rule 1129 (ud-suffix)]
    "explicit"        reduce using rule 565 (literal-operator-id)
    "explicit"        [reduce using rule 1129 (ud-suffix)]
    "export"          reduce using rule 565 (literal-operator-id)
    "export"          [reduce using rule 1129 (ud-suffix)]
    "export-keyword"  reduce using rule 565 (literal-operator-id)
    "export-keyword"  [reduce using rule 1129 (ud-suffix)]
    '*'               reduce using rule 565 (literal-operator-id)
    '*'               [reduce using rule 1129 (ud-suffix)]
    '/'               reduce using rule 565 (literal-operator-id)
    '/'               [reduce using rule 1129 (ud-suffix)]
    '%'               reduce using rule 565 (literal-operator-id)
    '%'               [reduce using rule 1129 (ud-suffix)]
    '|'               reduce using rule 565 (literal-operator-id)
    '|'               [reduce using rule 1129 (ud-suffix)]
    "<<"              reduce using rule 565 (literal-operator-id)
    "<<"              [reduce using rule 1129 (ud-suffix)]
    ">>"              reduce using rule 565 (literal-operator-id)
    ">>"              [reduce using rule 1129 (ud-suffix)]
    "<="              reduce using rule 565 (literal-operator-id)
    "<="              [reduce using rule 1129 (ud-suffix)]
    ">="              reduce using rule 565 (literal-operator-id)
    ">="              [reduce using rule 1129 (ud-suffix)]
    ".*"              reduce using rule 565 (literal-operator-id)
    ".*"              [reduce using rule 1129 (ud-suffix)]
    "->*"             reduce using rule 565 (literal-operator-id)
    "->*"             [reduce using rule 1129 (ud-suffix)]
    "try"             reduce using rule 565 (literal-operator-id)
    "try"             [reduce using rule 1129 (ud-suffix)]
    "import-keyword"  reduce using rule 565 (literal-operator-id)
    "import-keyword"  [reduce using rule 1129 (ud-suffix)]
    "namespace"       reduce using rule 565 (literal-operator-id)
    "namespace"       [reduce using rule 1129 (ud-suffix)]
    "requires"        reduce using rule 565 (literal-operator-id)
    "requires"        [reduce using rule 1129 (ud-suffix)]
    '~'               reduce using rule 565 (literal-operator-id)
    '~'               [reduce using rule 1129 (ud-suffix)]
    "++"              reduce using rule 565 (literal-operator-id)
    "++"              [reduce using rule 1129 (ud-suffix)]
    "--"              reduce using rule 565 (literal-operator-id)
    "--"              [reduce using rule 1129 (ud-suffix)]
    "auto"            reduce using rule 565 (literal-operator-id)
    "auto"            [reduce using rule 1129 (ud-suffix)]
    "char"            reduce using rule 565 (literal-operator-id)
    "char"            [reduce using rule 1129 (ud-suffix)]
    "char8_t"         reduce using rule 565 (literal-operator-id)
    "char8_t"         [reduce using rule 1129 (ud-suffix)]
    "char16_t"        reduce using rule 565 (literal-operator-id)
    "char16_t"        [reduce using rule 1129 (ud-suffix)]
    "char32_t"        reduce using rule 565 (literal-operator-id)
    "char32_t"        [reduce using rule 1129 (ud-suffix)]
    "wchar_t"         reduce using rule 565 (literal-operator-id)
    "wchar_t"         [reduce using rule 1129 (ud-suffix)]
    "bool"            reduce using rule 565 (literal-operator-id)
    "bool"            [reduce using rule 1129 (ud-suffix)]
    "short"           reduce using rule 565 (literal-operator-id)
    "short"           [reduce using rule 1129 (ud-suffix)]
    "int"             reduce using rule 565 (literal-operator-id)
    "int"             [reduce using rule 1129 (ud-suffix)]
    "long"            reduce using rule 565 (literal-operator-id)
    "long"            [reduce using rule 1129 (ud-suffix)]
    "signed"          reduce using rule 565 (literal-operator-id)
    "signed"          [reduce using rule 1129 (ud-suffix)]
    "unsigned"        reduce using rule 565 (literal-operator-id)
    "unsigned"        [reduce using rule 1129 (ud-suffix)]
    "float"           reduce using rule 565 (literal-operator-id)
    "float"           [reduce using rule 1129 (ud-suffix)]
    "double"          reduce using rule 565 (literal-operator-id)
    "double"          [reduce using rule 1129 (ud-suffix)]
    "void"            reduce using rule 565 (literal-operator-id)
    "void"            [reduce using rule 1129 (ud-suffix)]
    "static_assert"   reduce using rule 565 (literal-operator-id)
    "static_assert"   [reduce using rule 1129 (ud-suffix)]
    "static"          reduce using rule 565 (literal-operator-id)
    "static"          [reduce using rule 1129 (ud-suffix)]
    "thread_local"    reduce using rule 565 (literal-operator-id)
    "thread_local"    [reduce using rule 1129 (ud-suffix)]
    "mutable"         reduce using rule 565 (literal-operator-id)
    "mutable"         [reduce using rule 1129 (ud-suffix)]
    "typename"        reduce using rule 565 (literal-operator-id)
    "typename"        [reduce using rule 1129 (ud-suffix)]
    "override"        reduce using rule 565 (literal-operator-id)
    "override"        [reduce using rule 1129 (ud-suffix)]
    $default          reduce using rule 565 (literal-operator-id)


State 518

  1177 user-defined-string-literal: string-literal ud-suffix •

    $default  reduce using rule 1177 (user-defined-string-literal)


State 519

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  1122 type-specifier-seq: type-specifier attribute-specifier-seq •

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    "alignas"  [reduce using rule 1122 (type-specifier-seq)]
    '['        [reduce using rule 1122 (type-specifier-seq)]
    $default   reduce using rule 1122 (type-specifier-seq)

    alignment-specifier  go to state 58
    attribute-specifier  go to state 265


State 520

  1123 type-specifier-seq: type-specifier type-specifier-seq •

    $default  reduce using rule 1123 (type-specifier-seq)


State 521

  181 conversion-type-id: type-specifier-seq conversion-declarator •

    $default  reduce using rule 181 (conversion-type-id)


State 522

  663 nested-name-specifier: nested-name-specifier • IDENTIFIER "::"
  664                      | nested-name-specifier • simple-template-id "::"
  665                      | nested-name-specifier • "template" simple-template-id "::"
  905 ptr-operator: nested-name-specifier • '*'
  906             | nested-name-specifier • '*' attribute-specifier-seq
  907             | nested-name-specifier • '*' cv-qualifier-seq
  908             | nested-name-specifier • '*' attribute-specifier-seq cv-qualifier-seq

    IDENTIFIER  shift, and go to state 1026
    "template"  shift, and go to state 355
    '*'         shift, and go to state 327

    simple-template-id  go to state 539
    template-name       go to state 143


State 523

  177 conversion-declarator: ptr-operator •
  178                      | ptr-operator • conversion-declarator

    IDENTIFIER  shift, and go to state 258
    '&'         shift, and go to state 7
    "::"        shift, and go to state 9
    "&&"        shift, and go to state 16
    "decltype"  shift, and go to state 135
    '*'         shift, and go to state 32

    IDENTIFIER  [reduce using rule 177 (conversion-declarator)]
    '&'         [reduce using rule 177 (conversion-declarator)]
    "::"        [reduce using rule 177 (conversion-declarator)]
    "&&"        [reduce using rule 177 (conversion-declarator)]
    "decltype"  [reduce using rule 177 (conversion-declarator)]
    '*'         [reduce using rule 177 (conversion-declarator)]
    $default    reduce using rule 177 (conversion-declarator)

    class-name             go to state 66
    conversion-declarator  go to state 1027
    decltype-specifier     go to state 139
    enum-name              go to state 85
    namespace-alias        go to state 100
    namespace-name         go to state 103
    nested-name-specifier  go to state 522
    ptr-operator           go to state 523
    simple-template-id     go to state 142
    template-name          go to state 143
    type-name              go to state 144
    typedef-name           go to state 127


State 524

  647 named-namespace-definition: "inline" "namespace" IDENTIFIER • '{' namespace-body '}'

    '{'  shift, and go to state 1028


State 525

  1150 unnamed-namespace-definition: "inline" "namespace" '{' • namespace-body '}'

    IDENTIFIER        shift, and go to state 1
    "using"           shift, and go to state 2
    ';'               shift, and go to state 3
    "alignas"         shift, and go to state 4
    '('               shift, and go to state 5
    "..."             shift, and go to state 6
    '&'               shift, and go to state 7
    "asm"             shift, and go to state 8
    "::"              shift, and go to state 9
    '['               shift, and go to state 10
    "virtual"         shift, and go to state 11
    "class"           shift, and go to state 12
    "struct"          shift, and go to state 13
    "union"           shift, and go to state 14
    "template"        shift, and go to state 15
    "&&"              shift, and go to state 16
    "operator"        shift, and go to state 17
    "const"           shift, and go to state 18
    "volatile"        shift, and go to state 19
    "friend"          shift, and go to state 20
    "typedef"         shift, and go to state 21
    "constexpr"       shift, and go to state 22
    "consteval"       shift, and go to state 23
    "constinit"       shift, and go to state 24
    "inline"          shift, and go to state 25
    "decltype"        shift, and go to state 26
    "enum"            shift, and go to state 27
    "extern"          shift, and go to state 28
    "explicit"        shift, and go to state 29
    "export"          shift, and go to state 30
    "export-keyword"  shift, and go to state 158
    '*'               shift, and go to state 32
    "import-keyword"  shift, and go to state 34
    "namespace"       shift, and go to state 35
    '~'               shift, and go to state 36
    "auto"            shift, and go to state 37
    "char"            shift, and go to state 38
    "char8_t"         shift, and go to state 39
    "char16_t"        shift, and go to state 40
    "char32_t"        shift, and go to state 41
    "wchar_t"         shift, and go to state 42
    "bool"            shift, and go to state 43
    "short"           shift, and go to state 44
    "int"             shift, and go to state 45
    "long"            shift, and go to state 46
    "signed"          shift, and go to state 47
    "unsigned"        shift, and go to state 48
    "float"           shift, and go to state 49
    "double"          shift, and go to state 50
    "void"            shift, and go to state 51
    "static_assert"   shift, and go to state 52
    "static"          shift, and go to state 53
    "thread_local"    shift, and go to state 54
    "mutable"         shift, and go to state 55
    "typename"        shift, and go to state 56

    alias-declaration                go to state 57
    alignment-specifier              go to state 58
    asm-declaration                  go to state 59
    attribute-declaration            go to state 60
    attribute-specifier              go to state 61
    attribute-specifier-seq          go to state 62
    block-declaration                go to state 63
    class-head                       go to state 64
    class-key                        go to state 65
    class-name                       go to state 66
    class-specifier                  go to state 67
    concept-name                     go to state 68
    conversion-function-id           go to state 69
    cv-qualifier                     go to state 70
    decl-specifier                   go to state 71
    decl-specifier-seq               go to state 72
    declaration                      go to state 73
    declaration-seq                  go to state 570
    declarator                       go to state 75
    declarator-id                    go to state 76
    decltype-specifier               go to state 77
    deduction-guide                  go to state 78
    defining-type-specifier          go to state 79
    elaborated-enum-specifier        go to state 80
    elaborated-type-specifier        go to state 81
    empty-declaration                go to state 82
    enum-head                        go to state 83
    enum-key                         go to state 84
    enum-name                        go to state 85
    enum-specifier                   go to state 86
    explicit-instantiation           go to state 87
    explicit-specialization          go to state 88
    explicit-specifier               go to state 89
    export-declaration               go to state 90
    function-definition              go to state 91
    function-specifier               go to state 92
    id-expression                    go to state 94
    linkage-specification            go to state 95
    literal-operator-id              go to state 96
    module-import-declaration        go to state 98
    named-namespace-definition       go to state 99
    namespace-alias                  go to state 100
    namespace-alias-definition       go to state 101
    namespace-body                   go to state 1029
    namespace-definition             go to state 102
    namespace-name                   go to state 103
    nested-name-specifier            go to state 104
    nested-namespace-definition      go to state 105
    nodeclspec-function-declaration  go to state 106
    noptr-declarator                 go to state 107
    opaque-enum-declaration          go to state 108
    operator-function-id             go to state 109
    placeholder-type-specifier       go to state 110
    ptr-declarator                   go to state 111
    ptr-operator                     go to state 112
    qualified-id                     go to state 113
    simple-declaration               go to state 114
    simple-template-id               go to state 115
    simple-type-specifier            go to state 116
    static_assert-declaration        go to state 117
    storage-class-specifier          go to state 118
    template-declaration             go to state 119
    template-head                    go to state 120
    template-id                      go to state 121
    template-name                    go to state 122
    type-constraint                  go to state 124
    type-name                        go to state 125
    type-specifier                   go to state 126
    typedef-name                     go to state 127
    typename-specifier               go to state 128
    unnamed-namespace-definition     go to state 129
    unqualified-id                   go to state 130
    using-declaration                go to state 131
    using-directive                  go to state 132
    using-enum-declaration           go to state 133


State 526

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  649 named-namespace-definition: "inline" "namespace" attribute-specifier-seq • IDENTIFIER '{' namespace-body '}'
  1152 unnamed-namespace-definition: "inline" "namespace" attribute-specifier-seq • '{' namespace-body '}'

    IDENTIFIER  shift, and go to state 1030
    "alignas"   shift, and go to state 4
    '['         shift, and go to state 10
    '{'         shift, and go to state 1031

    alignment-specifier  go to state 58
    attribute-specifier  go to state 265


State 527

  853 placeholder-type-specifier: "auto" •
  855                           | "decltype" '(' "auto" • ')'

    ')'  shift, and go to state 1032

    $default  reduce using rule 853 (placeholder-type-specifier)


State 528

  1071 throw-expression: "throw" •
  1072                 | "throw" • assignment-expression

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    $default  reduce using rule 1071 (throw-expression)

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 1033
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 529

  1194 yield-expression: "co_yield" • assignment-expression
  1195                 | "co_yield" • braced-init-list

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 939
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 1034
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    braced-init-list                     go to state 1035
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 530

  337 expression: assignment-expression •

    $default  reduce using rule 337 (expression)


State 531

   23 assignment-expression: conditional-expression •

    $default  reduce using rule 23 (assignment-expression)


State 532

  233 decltype-specifier: "decltype" '(' expression • ')'
  338 expression: expression • ',' assignment-expression

    ')'  shift, and go to state 1036
    ','  shift, and go to state 1037


State 533

   26 assignment-expression: logical-or-expression • assignment-operator initializer-clause
  169 conditional-expression: logical-or-expression •
  170                       | logical-or-expression • '?' expression ':' assignment-expression
  570 logical-or-expression: logical-or-expression • "||" logical-and-expression

    '='    shift, and go to state 1038
    "*="   shift, and go to state 1039
    "/="   shift, and go to state 1040
    "%="   shift, and go to state 1041
    "+="   shift, and go to state 1042
    "-="   shift, and go to state 1043
    ">>="  shift, and go to state 1044
    "<<="  shift, and go to state 1045
    "&="   shift, and go to state 1046
    "^="   shift, and go to state 1047
    "|="   shift, and go to state 1048
    '?'    shift, and go to state 907
    "||"   shift, and go to state 908

    '='       [reduce using rule 169 (conditional-expression)]
    $default  reduce using rule 169 (conditional-expression)

    assignment-operator  go to state 1049


State 534

  865 postfix-expression: simple-type-specifier • '(' ')'
  866                   | simple-type-specifier • '(' expression-list ')'
  869                   | simple-type-specifier • braced-init-list

    '('  shift, and go to state 938
    '{'  shift, and go to state 939

    braced-init-list  go to state 940


State 535

   25 assignment-expression: throw-expression •

    $default  reduce using rule 25 (assignment-expression)


State 536

  867 postfix-expression: typename-specifier • '(' ')'
  868                   | typename-specifier • '(' expression-list ')'
  870                   | typename-specifier • braced-init-list

    '('  shift, and go to state 953
    '{'  shift, and go to state 939

    braced-init-list  go to state 954


State 537

   24 assignment-expression: yield-expression •

    $default  reduce using rule 24 (assignment-expression)


State 538

  266 elaborated-enum-specifier: "enum" nested-name-specifier IDENTIFIER •
  663 nested-name-specifier: nested-name-specifier IDENTIFIER • "::"
  1066 template-name: IDENTIFIER •

    "::"  shift, and go to state 726

    "::"      [reduce using rule 266 (elaborated-enum-specifier)]
    '<'       reduce using rule 266 (elaborated-enum-specifier)
    '<'       [reduce using rule 1066 (template-name)]
    $default  reduce using rule 266 (elaborated-enum-specifier)


State 539

  664 nested-name-specifier: nested-name-specifier simple-template-id • "::"

    "::"  shift, and go to state 733


State 540

  322 explicit-instantiation: "extern" "template" declaration •

    $default  reduce using rule 322 (explicit-instantiation)


State 541

  555 linkage-specification: "extern" string-literal '{' • '}'
  556                      | "extern" string-literal '{' • declaration-seq '}'

    IDENTIFIER        shift, and go to state 1
    "using"           shift, and go to state 2
    ';'               shift, and go to state 3
    "alignas"         shift, and go to state 4
    '('               shift, and go to state 5
    "..."             shift, and go to state 6
    '&'               shift, and go to state 7
    "asm"             shift, and go to state 8
    "::"              shift, and go to state 9
    '['               shift, and go to state 10
    '}'               shift, and go to state 1050
    "virtual"         shift, and go to state 11
    "class"           shift, and go to state 12
    "struct"          shift, and go to state 13
    "union"           shift, and go to state 14
    "template"        shift, and go to state 15
    "&&"              shift, and go to state 16
    "operator"        shift, and go to state 17
    "const"           shift, and go to state 18
    "volatile"        shift, and go to state 19
    "friend"          shift, and go to state 20
    "typedef"         shift, and go to state 21
    "constexpr"       shift, and go to state 22
    "consteval"       shift, and go to state 23
    "constinit"       shift, and go to state 24
    "inline"          shift, and go to state 25
    "decltype"        shift, and go to state 26
    "enum"            shift, and go to state 27
    "extern"          shift, and go to state 28
    "explicit"        shift, and go to state 29
    "export"          shift, and go to state 30
    "export-keyword"  shift, and go to state 158
    '*'               shift, and go to state 32
    "import-keyword"  shift, and go to state 34
    "namespace"       shift, and go to state 35
    '~'               shift, and go to state 36
    "auto"            shift, and go to state 37
    "char"            shift, and go to state 38
    "char8_t"         shift, and go to state 39
    "char16_t"        shift, and go to state 40
    "char32_t"        shift, and go to state 41
    "wchar_t"         shift, and go to state 42
    "bool"            shift, and go to state 43
    "short"           shift, and go to state 44
    "int"             shift, and go to state 45
    "long"            shift, and go to state 46
    "signed"          shift, and go to state 47
    "unsigned"        shift, and go to state 48
    "float"           shift, and go to state 49
    "double"          shift, and go to state 50
    "void"            shift, and go to state 51
    "static_assert"   shift, and go to state 52
    "static"          shift, and go to state 53
    "thread_local"    shift, and go to state 54
    "mutable"         shift, and go to state 55
    "typename"        shift, and go to state 56

    alias-declaration                go to state 57
    alignment-specifier              go to state 58
    asm-declaration                  go to state 59
    attribute-declaration            go to state 60
    attribute-specifier              go to state 61
    attribute-specifier-seq          go to state 62
    block-declaration                go to state 63
    class-head                       go to state 64
    class-key                        go to state 65
    class-name                       go to state 66
    class-specifier                  go to state 67
    concept-name                     go to state 68
    conversion-function-id           go to state 69
    cv-qualifier                     go to state 70
    decl-specifier                   go to state 71
    decl-specifier-seq               go to state 72
    declaration                      go to state 73
    declaration-seq                  go to state 1051
    declarator                       go to state 75
    declarator-id                    go to state 76
    decltype-specifier               go to state 77
    deduction-guide                  go to state 78
    defining-type-specifier          go to state 79
    elaborated-enum-specifier        go to state 80
    elaborated-type-specifier        go to state 81
    empty-declaration                go to state 82
    enum-head                        go to state 83
    enum-key                         go to state 84
    enum-name                        go to state 85
    enum-specifier                   go to state 86
    explicit-instantiation           go to state 87
    explicit-specialization          go to state 88
    explicit-specifier               go to state 89
    export-declaration               go to state 90
    function-definition              go to state 91
    function-specifier               go to state 92
    id-expression                    go to state 94
    linkage-specification            go to state 95
    literal-operator-id              go to state 96
    module-import-declaration        go to state 98
    named-namespace-definition       go to state 99
    namespace-alias                  go to state 100
    namespace-alias-definition       go to state 101
    namespace-definition             go to state 102
    namespace-name                   go to state 103
    nested-name-specifier            go to state 104
    nested-namespace-definition      go to state 105
    nodeclspec-function-declaration  go to state 106
    noptr-declarator                 go to state 107
    opaque-enum-declaration          go to state 108
    operator-function-id             go to state 109
    placeholder-type-specifier       go to state 110
    ptr-declarator                   go to state 111
    ptr-operator                     go to state 112
    qualified-id                     go to state 113
    simple-declaration               go to state 114
    simple-template-id               go to state 115
    simple-type-specifier            go to state 116
    static_assert-declaration        go to state 117
    storage-class-specifier          go to state 118
    template-declaration             go to state 119
    template-head                    go to state 120
    template-id                      go to state 121
    template-name                    go to state 122
    type-constraint                  go to state 124
    type-name                        go to state 125
    type-specifier                   go to state 126
    typedef-name                     go to state 127
    typename-specifier               go to state 128
    unnamed-namespace-definition     go to state 129
    unqualified-id                   go to state 130
    using-declaration                go to state 131
    using-directive                  go to state 132
    using-enum-declaration           go to state 133


State 542

  557 linkage-specification: "extern" string-literal declaration •

    $default  reduce using rule 557 (linkage-specification)


State 543

  325 explicit-specifier: "explicit" '(' constant-expression • ')'

    ')'  shift, and go to state 1052


State 544

  332 export-declaration: "export" '{' '}' •

    $default  reduce using rule 332 (export-declaration)


State 545

  227 declaration-seq: declaration-seq • declaration
  333 export-declaration: "export" '{' declaration-seq • '}'

    IDENTIFIER        shift, and go to state 1
    "using"           shift, and go to state 2
    ';'               shift, and go to state 3
    "alignas"         shift, and go to state 4
    '('               shift, and go to state 5
    "..."             shift, and go to state 6
    '&'               shift, and go to state 7
    "asm"             shift, and go to state 8
    "::"              shift, and go to state 9
    '['               shift, and go to state 10
    '}'               shift, and go to state 1053
    "virtual"         shift, and go to state 11
    "class"           shift, and go to state 12
    "struct"          shift, and go to state 13
    "union"           shift, and go to state 14
    "template"        shift, and go to state 15
    "&&"              shift, and go to state 16
    "operator"        shift, and go to state 17
    "const"           shift, and go to state 18
    "volatile"        shift, and go to state 19
    "friend"          shift, and go to state 20
    "typedef"         shift, and go to state 21
    "constexpr"       shift, and go to state 22
    "consteval"       shift, and go to state 23
    "constinit"       shift, and go to state 24
    "inline"          shift, and go to state 25
    "decltype"        shift, and go to state 26
    "enum"            shift, and go to state 27
    "extern"          shift, and go to state 28
    "explicit"        shift, and go to state 29
    "export"          shift, and go to state 30
    "export-keyword"  shift, and go to state 158
    '*'               shift, and go to state 32
    "import-keyword"  shift, and go to state 34
    "namespace"       shift, and go to state 35
    '~'               shift, and go to state 36
    "auto"            shift, and go to state 37
    "char"            shift, and go to state 38
    "char8_t"         shift, and go to state 39
    "char16_t"        shift, and go to state 40
    "char32_t"        shift, and go to state 41
    "wchar_t"         shift, and go to state 42
    "bool"            shift, and go to state 43
    "short"           shift, and go to state 44
    "int"             shift, and go to state 45
    "long"            shift, and go to state 46
    "signed"          shift, and go to state 47
    "unsigned"        shift, and go to state 48
    "float"           shift, and go to state 49
    "double"          shift, and go to state 50
    "void"            shift, and go to state 51
    "static_assert"   shift, and go to state 52
    "static"          shift, and go to state 53
    "thread_local"    shift, and go to state 54
    "mutable"         shift, and go to state 55
    "typename"        shift, and go to state 56

    alias-declaration                go to state 57
    alignment-specifier              go to state 58
    asm-declaration                  go to state 59
    attribute-declaration            go to state 60
    attribute-specifier              go to state 61
    attribute-specifier-seq          go to state 62
    block-declaration                go to state 63
    class-head                       go to state 64
    class-key                        go to state 65
    class-name                       go to state 66
    class-specifier                  go to state 67
    concept-name                     go to state 68
    conversion-function-id           go to state 69
    cv-qualifier                     go to state 70
    decl-specifier                   go to state 71
    decl-specifier-seq               go to state 72
    declaration                      go to state 290
    declarator                       go to state 75
    declarator-id                    go to state 76
    decltype-specifier               go to state 77
    deduction-guide                  go to state 78
    defining-type-specifier          go to state 79
    elaborated-enum-specifier        go to state 80
    elaborated-type-specifier        go to state 81
    empty-declaration                go to state 82
    enum-head                        go to state 83
    enum-key                         go to state 84
    enum-name                        go to state 85
    enum-specifier                   go to state 86
    explicit-instantiation           go to state 87
    explicit-specialization          go to state 88
    explicit-specifier               go to state 89
    export-declaration               go to state 90
    function-definition              go to state 91
    function-specifier               go to state 92
    id-expression                    go to state 94
    linkage-specification            go to state 95
    literal-operator-id              go to state 96
    module-import-declaration        go to state 98
    named-namespace-definition       go to state 99
    namespace-alias                  go to state 100
    namespace-alias-definition       go to state 101
    namespace-definition             go to state 102
    namespace-name                   go to state 103
    nested-name-specifier            go to state 104
    nested-namespace-definition      go to state 105
    nodeclspec-function-declaration  go to state 106
    noptr-declarator                 go to state 107
    opaque-enum-declaration          go to state 108
    operator-function-id             go to state 109
    placeholder-type-specifier       go to state 110
    ptr-declarator                   go to state 111
    ptr-operator                     go to state 112
    qualified-id                     go to state 113
    simple-declaration               go to state 114
    simple-template-id               go to state 115
    simple-type-specifier            go to state 116
    static_assert-declaration        go to state 117
    storage-class-specifier          go to state 118
    template-declaration             go to state 119
    template-head                    go to state 120
    template-id                      go to state 121
    template-name                    go to state 122
    type-constraint                  go to state 124
    type-name                        go to state 125
    type-specifier                   go to state 126
    typedef-name                     go to state 127
    typename-specifier               go to state 128
    unnamed-namespace-definition     go to state 129
    unqualified-id                   go to state 130
    using-declaration                go to state 131
    using-directive                  go to state 132
    using-enum-declaration           go to state 133


State 546

  623 module-declaration: "export-keyword" "module-keyword" module-name • ';'
  625                   | "export-keyword" "module-keyword" module-name • module-partition ';'
  627                   | "export-keyword" "module-keyword" module-name • attribute-specifier-seq ';'
  629                   | "export-keyword" "module-keyword" module-name • module-partition attribute-specifier-seq ';'

    ';'        shift, and go to state 1054
    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10
    ':'        shift, and go to state 241

    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 1055
    module-partition         go to state 1056


State 547

  900 ptr-operator: '*' attribute-specifier-seq cv-qualifier-seq •

    $default  reduce using rule 900 (ptr-operator)


State 548

  188 cv-qualifier-seq: cv-qualifier cv-qualifier-seq •

    $default  reduce using rule 188 (cv-qualifier-seq)


State 549

  639 module-name-qualifier: IDENTIFIER '.' •

    $default  reduce using rule 639 (module-name-qualifier)


State 550

  227 declaration-seq: declaration-seq • declaration
  415 global-module-fragment: "module-keyword" ';' declaration-seq •

    IDENTIFIER        shift, and go to state 1
    "using"           shift, and go to state 2
    ';'               shift, and go to state 3
    "alignas"         shift, and go to state 4
    '('               shift, and go to state 5
    "..."             shift, and go to state 6
    '&'               shift, and go to state 7
    "asm"             shift, and go to state 8
    "::"              shift, and go to state 9
    '['               shift, and go to state 10
    "virtual"         shift, and go to state 11
    "class"           shift, and go to state 12
    "struct"          shift, and go to state 13
    "union"           shift, and go to state 14
    "template"        shift, and go to state 15
    "&&"              shift, and go to state 16
    "operator"        shift, and go to state 17
    "const"           shift, and go to state 18
    "volatile"        shift, and go to state 19
    "friend"          shift, and go to state 20
    "typedef"         shift, and go to state 21
    "constexpr"       shift, and go to state 22
    "consteval"       shift, and go to state 23
    "constinit"       shift, and go to state 24
    "inline"          shift, and go to state 25
    "decltype"        shift, and go to state 26
    "enum"            shift, and go to state 27
    "extern"          shift, and go to state 28
    "explicit"        shift, and go to state 29
    "export"          shift, and go to state 30
    "export-keyword"  shift, and go to state 158
    '*'               shift, and go to state 32
    "import-keyword"  shift, and go to state 34
    "namespace"       shift, and go to state 35
    '~'               shift, and go to state 36
    "auto"            shift, and go to state 37
    "char"            shift, and go to state 38
    "char8_t"         shift, and go to state 39
    "char16_t"        shift, and go to state 40
    "char32_t"        shift, and go to state 41
    "wchar_t"         shift, and go to state 42
    "bool"            shift, and go to state 43
    "short"           shift, and go to state 44
    "int"             shift, and go to state 45
    "long"            shift, and go to state 46
    "signed"          shift, and go to state 47
    "unsigned"        shift, and go to state 48
    "float"           shift, and go to state 49
    "double"          shift, and go to state 50
    "void"            shift, and go to state 51
    "static_assert"   shift, and go to state 52
    "static"          shift, and go to state 53
    "thread_local"    shift, and go to state 54
    "mutable"         shift, and go to state 55
    "typename"        shift, and go to state 56

    "export-keyword"  [reduce using rule 415 (global-module-fragment)]
    $default          reduce using rule 415 (global-module-fragment)

    alias-declaration                go to state 57
    alignment-specifier              go to state 58
    asm-declaration                  go to state 59
    attribute-declaration            go to state 60
    attribute-specifier              go to state 61
    attribute-specifier-seq          go to state 62
    block-declaration                go to state 63
    class-head                       go to state 64
    class-key                        go to state 65
    class-name                       go to state 66
    class-specifier                  go to state 67
    concept-name                     go to state 68
    conversion-function-id           go to state 69
    cv-qualifier                     go to state 70
    decl-specifier                   go to state 71
    decl-specifier-seq               go to state 72
    declaration                      go to state 290
    declarator                       go to state 75
    declarator-id                    go to state 76
    decltype-specifier               go to state 77
    deduction-guide                  go to state 78
    defining-type-specifier          go to state 79
    elaborated-enum-specifier        go to state 80
    elaborated-type-specifier        go to state 81
    empty-declaration                go to state 82
    enum-head                        go to state 83
    enum-key                         go to state 84
    enum-name                        go to state 85
    enum-specifier                   go to state 86
    explicit-instantiation           go to state 87
    explicit-specialization          go to state 88
    explicit-specifier               go to state 89
    export-declaration               go to state 90
    function-definition              go to state 91
    function-specifier               go to state 92
    id-expression                    go to state 94
    linkage-specification            go to state 95
    literal-operator-id              go to state 96
    module-import-declaration        go to state 98
    named-namespace-definition       go to state 99
    namespace-alias                  go to state 100
    namespace-alias-definition       go to state 101
    namespace-definition             go to state 102
    namespace-name                   go to state 103
    nested-name-specifier            go to state 104
    nested-namespace-definition      go to state 105
    nodeclspec-function-declaration  go to state 106
    noptr-declarator                 go to state 107
    opaque-enum-declaration          go to state 108
    operator-function-id             go to state 109
    placeholder-type-specifier       go to state 110
    ptr-declarator                   go to state 111
    ptr-operator                     go to state 112
    qualified-id                     go to state 113
    simple-declaration               go to state 114
    simple-template-id               go to state 115
    simple-type-specifier            go to state 116
    static_assert-declaration        go to state 117
    storage-class-specifier          go to state 118
    template-declaration             go to state 119
    template-head                    go to state 120
    template-id                      go to state 121
    template-name                    go to state 122
    type-constraint                  go to state 124
    type-name                        go to state 125
    type-specifier                   go to state 126
    typedef-name                     go to state 127
    typename-specifier               go to state 128
    unnamed-namespace-definition     go to state 129
    unqualified-id                   go to state 130
    using-declaration                go to state 131
    using-directive                  go to state 132
    using-enum-declaration           go to state 133


State 551

  624 module-declaration: "module-keyword" module-name ';' •

    $default  reduce using rule 624 (module-declaration)


State 552

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  628 module-declaration: "module-keyword" module-name attribute-specifier-seq • ';'

    ';'        shift, and go to state 1057
    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    alignment-specifier  go to state 58
    attribute-specifier  go to state 265


State 553

  626 module-declaration: "module-keyword" module-name module-partition • ';'
  630                   | "module-keyword" module-name module-partition • attribute-specifier-seq ';'

    ';'        shift, and go to state 1058
    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 1059


State 554

  637 module-name: module-name-qualifier IDENTIFIER •
  640 module-name-qualifier: module-name-qualifier IDENTIFIER • '.'

    '.'  shift, and go to state 1060

    $default  reduce using rule 637 (module-name)


State 555

  639 module-name-qualifier: IDENTIFIER • '.'
  641 module-partition: ':' IDENTIFIER •

    '.'  shift, and go to state 549

    $default  reduce using rule 641 (module-partition)


State 556

  640 module-name-qualifier: module-name-qualifier • IDENTIFIER '.'
  642 module-partition: ':' module-name-qualifier • IDENTIFIER

    IDENTIFIER  shift, and go to state 1061


State 557

  420 header-name: '<' "h-char-sequence" • '>'

    '>'  shift, and go to state 1062


State 558

  424 header-name: "h-char-sequence" h-char •

    $default  reduce using rule 424 (header-name)


State 559

  910 q-char: EXCEPT_NEW_LINE_AND_QUOTATION_MARK •

    $default  reduce using rule 910 (q-char)


State 560

  911 q-char-sequence: q-char •

    $default  reduce using rule 911 (q-char-sequence)


State 561

  421 header-name: '"' q-char-sequence • '"'
  912 q-char-sequence: q-char-sequence • q-char

    EXCEPT_NEW_LINE_AND_QUOTATION_MARK  shift, and go to state 559
    '"'                                 shift, and go to state 1063

    q-char  go to state 1064


State 562

  635 module-import-declaration: "import-keyword" header-name ';' •

    $default  reduce using rule 635 (module-import-declaration)


State 563

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  636 module-import-declaration: "import-keyword" header-name attribute-specifier-seq • ';'

    ';'        shift, and go to state 1065
    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    alignment-specifier  go to state 58
    attribute-specifier  go to state 265


State 564

  631 module-import-declaration: "import-keyword" module-name ';' •

    $default  reduce using rule 631 (module-import-declaration)


State 565

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  632 module-import-declaration: "import-keyword" module-name attribute-specifier-seq • ';'

    ';'        shift, and go to state 1066
    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    alignment-specifier  go to state 58
    attribute-specifier  go to state 265


State 566

  633 module-import-declaration: "import-keyword" module-partition ';' •

    $default  reduce using rule 633 (module-import-declaration)


State 567

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  634 module-import-declaration: "import-keyword" module-partition attribute-specifier-seq • ';'

    ';'        shift, and go to state 1067
    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    alignment-specifier  go to state 58
    attribute-specifier  go to state 265


State 568

  652 namespace-alias-definition: "namespace" IDENTIFIER '=' • qualified-namespace-specifier ';'

    IDENTIFIER  shift, and go to state 258
    "::"        shift, and go to state 9
    "decltype"  shift, and go to state 135

    class-name                     go to state 66
    decltype-specifier             go to state 139
    enum-name                      go to state 85
    namespace-alias                go to state 100
    namespace-name                 go to state 1068
    nested-name-specifier          go to state 1069
    qualified-namespace-specifier  go to state 1070
    simple-template-id             go to state 142
    template-name                  go to state 143
    type-name                      go to state 144
    typedef-name                   go to state 127


State 569

  648 named-namespace-definition: "namespace" IDENTIFIER '{' • namespace-body '}'

    IDENTIFIER        shift, and go to state 1
    "using"           shift, and go to state 2
    ';'               shift, and go to state 3
    "alignas"         shift, and go to state 4
    '('               shift, and go to state 5
    "..."             shift, and go to state 6
    '&'               shift, and go to state 7
    "asm"             shift, and go to state 8
    "::"              shift, and go to state 9
    '['               shift, and go to state 10
    "virtual"         shift, and go to state 11
    "class"           shift, and go to state 12
    "struct"          shift, and go to state 13
    "union"           shift, and go to state 14
    "template"        shift, and go to state 15
    "&&"              shift, and go to state 16
    "operator"        shift, and go to state 17
    "const"           shift, and go to state 18
    "volatile"        shift, and go to state 19
    "friend"          shift, and go to state 20
    "typedef"         shift, and go to state 21
    "constexpr"       shift, and go to state 22
    "consteval"       shift, and go to state 23
    "constinit"       shift, and go to state 24
    "inline"          shift, and go to state 25
    "decltype"        shift, and go to state 26
    "enum"            shift, and go to state 27
    "extern"          shift, and go to state 28
    "explicit"        shift, and go to state 29
    "export"          shift, and go to state 30
    "export-keyword"  shift, and go to state 158
    '*'               shift, and go to state 32
    "import-keyword"  shift, and go to state 34
    "namespace"       shift, and go to state 35
    '~'               shift, and go to state 36
    "auto"            shift, and go to state 37
    "char"            shift, and go to state 38
    "char8_t"         shift, and go to state 39
    "char16_t"        shift, and go to state 40
    "char32_t"        shift, and go to state 41
    "wchar_t"         shift, and go to state 42
    "bool"            shift, and go to state 43
    "short"           shift, and go to state 44
    "int"             shift, and go to state 45
    "long"            shift, and go to state 46
    "signed"          shift, and go to state 47
    "unsigned"        shift, and go to state 48
    "float"           shift, and go to state 49
    "double"          shift, and go to state 50
    "void"            shift, and go to state 51
    "static_assert"   shift, and go to state 52
    "static"          shift, and go to state 53
    "thread_local"    shift, and go to state 54
    "mutable"         shift, and go to state 55
    "typename"        shift, and go to state 56

    alias-declaration                go to state 57
    alignment-specifier              go to state 58
    asm-declaration                  go to state 59
    attribute-declaration            go to state 60
    attribute-specifier              go to state 61
    attribute-specifier-seq          go to state 62
    block-declaration                go to state 63
    class-head                       go to state 64
    class-key                        go to state 65
    class-name                       go to state 66
    class-specifier                  go to state 67
    concept-name                     go to state 68
    conversion-function-id           go to state 69
    cv-qualifier                     go to state 70
    decl-specifier                   go to state 71
    decl-specifier-seq               go to state 72
    declaration                      go to state 73
    declaration-seq                  go to state 570
    declarator                       go to state 75
    declarator-id                    go to state 76
    decltype-specifier               go to state 77
    deduction-guide                  go to state 78
    defining-type-specifier          go to state 79
    elaborated-enum-specifier        go to state 80
    elaborated-type-specifier        go to state 81
    empty-declaration                go to state 82
    enum-head                        go to state 83
    enum-key                         go to state 84
    enum-name                        go to state 85
    enum-specifier                   go to state 86
    explicit-instantiation           go to state 87
    explicit-specialization          go to state 88
    explicit-specifier               go to state 89
    export-declaration               go to state 90
    function-definition              go to state 91
    function-specifier               go to state 92
    id-expression                    go to state 94
    linkage-specification            go to state 95
    literal-operator-id              go to state 96
    module-import-declaration        go to state 98
    named-namespace-definition       go to state 99
    namespace-alias                  go to state 100
    namespace-alias-definition       go to state 101
    namespace-body                   go to state 1071
    namespace-definition             go to state 102
    namespace-name                   go to state 103
    nested-name-specifier            go to state 104
    nested-namespace-definition      go to state 105
    nodeclspec-function-declaration  go to state 106
    noptr-declarator                 go to state 107
    opaque-enum-declaration          go to state 108
    operator-function-id             go to state 109
    placeholder-type-specifier       go to state 110
    ptr-declarator                   go to state 111
    ptr-operator                     go to state 112
    qualified-id                     go to state 113
    simple-declaration               go to state 114
    simple-template-id               go to state 115
    simple-type-specifier            go to state 116
    static_assert-declaration        go to state 117
    storage-class-specifier          go to state 118
    template-declaration             go to state 119
    template-head                    go to state 120
    template-id                      go to state 121
    template-name                    go to state 122
    type-constraint                  go to state 124
    type-name                        go to state 125
    type-specifier                   go to state 126
    typedef-name                     go to state 127
    typename-specifier               go to state 128
    unnamed-namespace-definition     go to state 129
    unqualified-id                   go to state 130
    using-declaration                go to state 131
    using-directive                  go to state 132
    using-enum-declaration           go to state 133


State 570

  227 declaration-seq: declaration-seq • declaration
  653 namespace-body: declaration-seq •

    IDENTIFIER        shift, and go to state 1
    "using"           shift, and go to state 2
    ';'               shift, and go to state 3
    "alignas"         shift, and go to state 4
    '('               shift, and go to state 5
    "..."             shift, and go to state 6
    '&'               shift, and go to state 7
    "asm"             shift, and go to state 8
    "::"              shift, and go to state 9
    '['               shift, and go to state 10
    "virtual"         shift, and go to state 11
    "class"           shift, and go to state 12
    "struct"          shift, and go to state 13
    "union"           shift, and go to state 14
    "template"        shift, and go to state 15
    "&&"              shift, and go to state 16
    "operator"        shift, and go to state 17
    "const"           shift, and go to state 18
    "volatile"        shift, and go to state 19
    "friend"          shift, and go to state 20
    "typedef"         shift, and go to state 21
    "constexpr"       shift, and go to state 22
    "consteval"       shift, and go to state 23
    "constinit"       shift, and go to state 24
    "inline"          shift, and go to state 25
    "decltype"        shift, and go to state 26
    "enum"            shift, and go to state 27
    "extern"          shift, and go to state 28
    "explicit"        shift, and go to state 29
    "export"          shift, and go to state 30
    "export-keyword"  shift, and go to state 158
    '*'               shift, and go to state 32
    "import-keyword"  shift, and go to state 34
    "namespace"       shift, and go to state 35
    '~'               shift, and go to state 36
    "auto"            shift, and go to state 37
    "char"            shift, and go to state 38
    "char8_t"         shift, and go to state 39
    "char16_t"        shift, and go to state 40
    "char32_t"        shift, and go to state 41
    "wchar_t"         shift, and go to state 42
    "bool"            shift, and go to state 43
    "short"           shift, and go to state 44
    "int"             shift, and go to state 45
    "long"            shift, and go to state 46
    "signed"          shift, and go to state 47
    "unsigned"        shift, and go to state 48
    "float"           shift, and go to state 49
    "double"          shift, and go to state 50
    "void"            shift, and go to state 51
    "static_assert"   shift, and go to state 52
    "static"          shift, and go to state 53
    "thread_local"    shift, and go to state 54
    "mutable"         shift, and go to state 55
    "typename"        shift, and go to state 56

    $default  reduce using rule 653 (namespace-body)

    alias-declaration                go to state 57
    alignment-specifier              go to state 58
    asm-declaration                  go to state 59
    attribute-declaration            go to state 60
    attribute-specifier              go to state 61
    attribute-specifier-seq          go to state 62
    block-declaration                go to state 63
    class-head                       go to state 64
    class-key                        go to state 65
    class-name                       go to state 66
    class-specifier                  go to state 67
    concept-name                     go to state 68
    conversion-function-id           go to state 69
    cv-qualifier                     go to state 70
    decl-specifier                   go to state 71
    decl-specifier-seq               go to state 72
    declaration                      go to state 290
    declarator                       go to state 75
    declarator-id                    go to state 76
    decltype-specifier               go to state 77
    deduction-guide                  go to state 78
    defining-type-specifier          go to state 79
    elaborated-enum-specifier        go to state 80
    elaborated-type-specifier        go to state 81
    empty-declaration                go to state 82
    enum-head                        go to state 83
    enum-key                         go to state 84
    enum-name                        go to state 85
    enum-specifier                   go to state 86
    explicit-instantiation           go to state 87
    explicit-specialization          go to state 88
    explicit-specifier               go to state 89
    export-declaration               go to state 90
    function-definition              go to state 91
    function-specifier               go to state 92
    id-expression                    go to state 94
    linkage-specification            go to state 95
    literal-operator-id              go to state 96
    module-import-declaration        go to state 98
    named-namespace-definition       go to state 99
    namespace-alias                  go to state 100
    namespace-alias-definition       go to state 101
    namespace-definition             go to state 102
    namespace-name                   go to state 103
    nested-name-specifier            go to state 104
    nested-namespace-definition      go to state 105
    nodeclspec-function-declaration  go to state 106
    noptr-declarator                 go to state 107
    opaque-enum-declaration          go to state 108
    operator-function-id             go to state 109
    placeholder-type-specifier       go to state 110
    ptr-declarator                   go to state 111
    ptr-operator                     go to state 112
    qualified-id                     go to state 113
    simple-declaration               go to state 114
    simple-template-id               go to state 115
    simple-type-specifier            go to state 116
    static_assert-declaration        go to state 117
    storage-class-specifier          go to state 118
    template-declaration             go to state 119
    template-head                    go to state 120
    template-id                      go to state 121
    template-name                    go to state 122
    type-constraint                  go to state 124
    type-name                        go to state 125
    type-specifier                   go to state 126
    typedef-name                     go to state 127
    typename-specifier               go to state 128
    unnamed-namespace-definition     go to state 129
    unqualified-id                   go to state 130
    using-declaration                go to state 131
    using-directive                  go to state 132
    using-enum-declaration           go to state 133


State 571

  1151 unnamed-namespace-definition: "namespace" '{' namespace-body • '}'

    '}'  shift, and go to state 1072


State 572

  650 named-namespace-definition: "namespace" attribute-specifier-seq IDENTIFIER • '{' namespace-body '}'

    '{'  shift, and go to state 1073


State 573

  1153 unnamed-namespace-definition: "namespace" attribute-specifier-seq '{' • namespace-body '}'

    IDENTIFIER        shift, and go to state 1
    "using"           shift, and go to state 2
    ';'               shift, and go to state 3
    "alignas"         shift, and go to state 4
    '('               shift, and go to state 5
    "..."             shift, and go to state 6
    '&'               shift, and go to state 7
    "asm"             shift, and go to state 8
    "::"              shift, and go to state 9
    '['               shift, and go to state 10
    "virtual"         shift, and go to state 11
    "class"           shift, and go to state 12
    "struct"          shift, and go to state 13
    "union"           shift, and go to state 14
    "template"        shift, and go to state 15
    "&&"              shift, and go to state 16
    "operator"        shift, and go to state 17
    "const"           shift, and go to state 18
    "volatile"        shift, and go to state 19
    "friend"          shift, and go to state 20
    "typedef"         shift, and go to state 21
    "constexpr"       shift, and go to state 22
    "consteval"       shift, and go to state 23
    "constinit"       shift, and go to state 24
    "inline"          shift, and go to state 25
    "decltype"        shift, and go to state 26
    "enum"            shift, and go to state 27
    "extern"          shift, and go to state 28
    "explicit"        shift, and go to state 29
    "export"          shift, and go to state 30
    "export-keyword"  shift, and go to state 158
    '*'               shift, and go to state 32
    "import-keyword"  shift, and go to state 34
    "namespace"       shift, and go to state 35
    '~'               shift, and go to state 36
    "auto"            shift, and go to state 37
    "char"            shift, and go to state 38
    "char8_t"         shift, and go to state 39
    "char16_t"        shift, and go to state 40
    "char32_t"        shift, and go to state 41
    "wchar_t"         shift, and go to state 42
    "bool"            shift, and go to state 43
    "short"           shift, and go to state 44
    "int"             shift, and go to state 45
    "long"            shift, and go to state 46
    "signed"          shift, and go to state 47
    "unsigned"        shift, and go to state 48
    "float"           shift, and go to state 49
    "double"          shift, and go to state 50
    "void"            shift, and go to state 51
    "static_assert"   shift, and go to state 52
    "static"          shift, and go to state 53
    "thread_local"    shift, and go to state 54
    "mutable"         shift, and go to state 55
    "typename"        shift, and go to state 56

    alias-declaration                go to state 57
    alignment-specifier              go to state 58
    asm-declaration                  go to state 59
    attribute-declaration            go to state 60
    attribute-specifier              go to state 61
    attribute-specifier-seq          go to state 62
    block-declaration                go to state 63
    class-head                       go to state 64
    class-key                        go to state 65
    class-name                       go to state 66
    class-specifier                  go to state 67
    concept-name                     go to state 68
    conversion-function-id           go to state 69
    cv-qualifier                     go to state 70
    decl-specifier                   go to state 71
    decl-specifier-seq               go to state 72
    declaration                      go to state 73
    declaration-seq                  go to state 570
    declarator                       go to state 75
    declarator-id                    go to state 76
    decltype-specifier               go to state 77
    deduction-guide                  go to state 78
    defining-type-specifier          go to state 79
    elaborated-enum-specifier        go to state 80
    elaborated-type-specifier        go to state 81
    empty-declaration                go to state 82
    enum-head                        go to state 83
    enum-key                         go to state 84
    enum-name                        go to state 85
    enum-specifier                   go to state 86
    explicit-instantiation           go to state 87
    explicit-specialization          go to state 88
    explicit-specifier               go to state 89
    export-declaration               go to state 90
    function-definition              go to state 91
    function-specifier               go to state 92
    id-expression                    go to state 94
    linkage-specification            go to state 95
    literal-operator-id              go to state 96
    module-import-declaration        go to state 98
    named-namespace-definition       go to state 99
    namespace-alias                  go to state 100
    namespace-alias-definition       go to state 101
    namespace-body                   go to state 1074
    namespace-definition             go to state 102
    namespace-name                   go to state 103
    nested-name-specifier            go to state 104
    nested-namespace-definition      go to state 105
    nodeclspec-function-declaration  go to state 106
    noptr-declarator                 go to state 107
    opaque-enum-declaration          go to state 108
    operator-function-id             go to state 109
    placeholder-type-specifier       go to state 110
    ptr-declarator                   go to state 111
    ptr-operator                     go to state 112
    qualified-id                     go to state 113
    simple-declaration               go to state 114
    simple-template-id               go to state 115
    simple-type-specifier            go to state 116
    static_assert-declaration        go to state 117
    storage-class-specifier          go to state 118
    template-declaration             go to state 119
    template-head                    go to state 120
    template-id                      go to state 121
    template-name                    go to state 122
    type-constraint                  go to state 124
    type-name                        go to state 125
    type-specifier                   go to state 126
    typedef-name                     go to state 127
    typename-specifier               go to state 128
    unnamed-namespace-definition     go to state 129
    unqualified-id                   go to state 130
    using-declaration                go to state 131
    using-directive                  go to state 132
    using-enum-declaration           go to state 133


State 574

  277 enclosing-namespace-specifier: enclosing-namespace-specifier "::" • IDENTIFIER
  278                              | enclosing-namespace-specifier "::" • "inline" IDENTIFIER
  666 nested-namespace-definition: "namespace" enclosing-namespace-specifier "::" • IDENTIFIER '{' namespace-body '}'
  667                            | "namespace" enclosing-namespace-specifier "::" • "inline" IDENTIFIER '{' namespace-body '}'

    IDENTIFIER  shift, and go to state 1075
    "inline"    shift, and go to state 1076


State 575

  1038 static_assert-declaration: "static_assert" '(' constant-expression • ')' ';'
  1039                          | "static_assert" '(' constant-expression • ',' string-literal ')' ';'

    ')'  shift, and go to state 1077
    ','  shift, and go to state 1078


State 576

  663 nested-name-specifier: nested-name-specifier IDENTIFIER • "::"
  1066 template-name: IDENTIFIER •
  1126 typename-specifier: "typename" nested-name-specifier IDENTIFIER •

    "::"  shift, and go to state 726

    "::"      [reduce using rule 1126 (typename-specifier)]
    '<'       reduce using rule 1066 (template-name)
    '<'       [reduce using rule 1126 (typename-specifier)]
    $default  reduce using rule 1126 (typename-specifier)


State 577

  665 nested-name-specifier: nested-name-specifier "template" • simple-template-id "::"
  1128 typename-specifier: "typename" nested-name-specifier "template" • simple-template-id

    IDENTIFIER  shift, and go to state 315

    simple-template-id  go to state 1079
    template-name       go to state 143


State 578

  664 nested-name-specifier: nested-name-specifier simple-template-id • "::"
  1127 typename-specifier: "typename" nested-name-specifier simple-template-id •

    "::"  shift, and go to state 733

    "::"      [reduce using rule 1127 (typename-specifier)]
    $default  reduce using rule 1127 (typename-specifier)


State 579

  1185 using-directive: attribute-specifier-seq "using" "namespace" • namespace-name ';'
  1187                | attribute-specifier-seq "using" "namespace" • nested-name-specifier namespace-name ';'

    IDENTIFIER  shift, and go to state 258
    "::"        shift, and go to state 9
    "decltype"  shift, and go to state 135

    class-name             go to state 66
    decltype-specifier     go to state 139
    enum-name              go to state 85
    namespace-alias        go to state 100
    namespace-name         go to state 1080
    nested-name-specifier  go to state 1081
    simple-template-id     go to state 142
    template-name          go to state 143
    type-name              go to state 144
    typedef-name           go to state 127


State 580

   21 asm-declaration: attribute-specifier-seq "asm" '(' • string-literal ')' ';'

    "u8"  shift, and go to state 185
    'u'   shift, and go to state 186
    'U'   shift, and go to state 187
    'L'   shift, and go to state 188
    '"'   shift, and go to state 203
    'R'   shift, and go to state 209

    encoding-prefix  go to state 212
    string-literal   go to state 1082


State 581

  980 simple-declaration: attribute-specifier-seq decl-specifier-seq '[' • identifier-list ']' initializer ';'

    IDENTIFIER  shift, and go to state 644

    identifier-list  go to state 1083


State 582

  400 function-definition: attribute-specifier-seq decl-specifier-seq declarator • function-body
  404                    | attribute-specifier-seq decl-specifier-seq declarator • virt-specifier-seq function-body
  408                    | attribute-specifier-seq decl-specifier-seq declarator • requires-clause function-body
  473 init-declarator: declarator •
  474                | declarator • initializer
  475                | declarator • requires-clause

    '='         shift, and go to state 646
    '('         shift, and go to state 647
    ':'         shift, and go to state 293
    '{'         shift, and go to state 648
    "final"     shift, and go to state 295
    "try"       shift, and go to state 296
    "requires"  shift, and go to state 297
    "override"  shift, and go to state 298

    $default  reduce using rule 473 (init-declarator)

    brace-or-equal-initializer  go to state 649
    braced-init-list            go to state 650
    compound-statement          go to state 299
    ctor-initializer            go to state 300
    function-body               go to state 1084
    function-try-block          go to state 302
    initializer                 go to state 652
    requires-clause             go to state 1085
    virt-specifier              go to state 304
    virt-specifier-seq          go to state 1086


State 583

  477 init-declarator-list: init-declarator-list • ',' init-declarator
  979 simple-declaration: attribute-specifier-seq decl-specifier-seq init-declarator-list • ';'

    ';'  shift, and go to state 1087
    ','  shift, and go to state 656


State 584

  982 simple-declaration: attribute-specifier-seq decl-specifier-seq ref-qualifier • '[' identifier-list ']' initializer ';'

    '['  shift, and go to state 1088


State 585

  694 nodeclspec-function-declaration: attribute-specifier-seq declarator ';' •

    $default  reduce using rule 694 (nodeclspec-function-declaration)


State 586

  398 function-definition: attribute-specifier-seq declarator function-body •

    $default  reduce using rule 398 (function-definition)


State 587

  406 function-definition: attribute-specifier-seq declarator requires-clause • function-body

    '='    shift, and go to state 291
    ':'    shift, and go to state 293
    '{'    shift, and go to state 294
    "try"  shift, and go to state 296

    compound-statement  go to state 299
    ctor-initializer    go to state 300
    function-body       go to state 1089
    function-try-block  go to state 302


State 588

  402 function-definition: attribute-specifier-seq declarator virt-specifier-seq • function-body
  1193 virt-specifier-seq: virt-specifier-seq • virt-specifier

    '='         shift, and go to state 291
    ':'         shift, and go to state 293
    '{'         shift, and go to state 294
    "final"     shift, and go to state 295
    "try"       shift, and go to state 296
    "override"  shift, and go to state 298

    compound-statement  go to state 299
    ctor-initializer    go to state 300
    function-body       go to state 1090
    function-try-block  go to state 302
    virt-specifier      go to state 707


State 589

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  285 enum-head: enum-key attribute-specifier-seq •
  287          | enum-key attribute-specifier-seq • enum-head-name
  289          | enum-key attribute-specifier-seq • enum-base
  291          | enum-key attribute-specifier-seq • enum-head-name enum-base

    IDENTIFIER  shift, and go to state 309
    "alignas"   shift, and go to state 4
    "::"        shift, and go to state 9
    '['         shift, and go to state 10
    ':'         shift, and go to state 310
    "decltype"  shift, and go to state 135

    $default  reduce using rule 285 (enum-head)

    alignment-specifier    go to state 58
    attribute-specifier    go to state 265
    class-name             go to state 66
    decltype-specifier     go to state 139
    enum-base              go to state 714
    enum-head-name         go to state 1091
    enum-name              go to state 85
    namespace-alias        go to state 100
    namespace-name         go to state 103
    nested-name-specifier  go to state 314
    simple-template-id     go to state 142
    template-name          go to state 143
    type-name              go to state 144
    typedef-name           go to state 127


State 590

  286 enum-head: enum-key enum-head-name •
  290          | enum-key enum-head-name • enum-base

    ':'  shift, and go to state 310

    $default  reduce using rule 286 (enum-head)

    enum-base  go to state 1092


State 591

  145 class-name: IDENTIFIER •
  163 concept-name: IDENTIFIER •
  297 enum-name: IDENTIFIER •
  609 member-declarator: IDENTIFIER • ':' constant-expression
  611                  | IDENTIFIER • attribute-specifier-seq ':' constant-expression
  613                  | IDENTIFIER • ':' constant-expression brace-or-equal-initializer
  615                  | IDENTIFIER • attribute-specifier-seq ':' constant-expression brace-or-equal-initializer
  651 namespace-alias: IDENTIFIER •
  657 namespace-name: IDENTIFIER •
  1066 template-name: IDENTIFIER •
  1124 typedef-name: IDENTIFIER •
  1154 unqualified-id: IDENTIFIER •

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10
    ':'        shift, and go to state 1093

    IDENTIFIER      reduce using rule 145 (class-name)
    IDENTIFIER      [reduce using rule 297 (enum-name)]
    IDENTIFIER      [reduce using rule 1066 (template-name)]
    IDENTIFIER      [reduce using rule 1124 (typedef-name)]
    '='             reduce using rule 1154 (unqualified-id)
    ';'             reduce using rule 145 (class-name)
    ';'             [reduce using rule 297 (enum-name)]
    ';'             [reduce using rule 1066 (template-name)]
    ';'             [reduce using rule 1124 (typedef-name)]
    ';'             [reduce using rule 1154 (unqualified-id)]
    "alignas"       [reduce using rule 145 (class-name)]
    "alignas"       [reduce using rule 297 (enum-name)]
    "alignas"       [reduce using rule 1066 (template-name)]
    "alignas"       [reduce using rule 1124 (typedef-name)]
    "alignas"       [reduce using rule 1154 (unqualified-id)]
    '('             reduce using rule 145 (class-name)
    '('             [reduce using rule 297 (enum-name)]
    '('             [reduce using rule 1066 (template-name)]
    '('             [reduce using rule 1124 (typedef-name)]
    '('             [reduce using rule 1154 (unqualified-id)]
    "..."           reduce using rule 145 (class-name)
    "..."           [reduce using rule 297 (enum-name)]
    "..."           [reduce using rule 1066 (template-name)]
    "..."           [reduce using rule 1124 (typedef-name)]
    '&'             reduce using rule 145 (class-name)
    '&'             [reduce using rule 297 (enum-name)]
    '&'             [reduce using rule 1066 (template-name)]
    '&'             [reduce using rule 1124 (typedef-name)]
    ','             reduce using rule 1154 (unqualified-id)
    "::"            reduce using rule 145 (class-name)
    "::"            [reduce using rule 297 (enum-name)]
    "::"            [reduce using rule 651 (namespace-alias)]
    "::"            [reduce using rule 657 (namespace-name)]
    "::"            [reduce using rule 1066 (template-name)]
    "::"            [reduce using rule 1124 (typedef-name)]
    '['             [reduce using rule 145 (class-name)]
    '['             [reduce using rule 297 (enum-name)]
    '['             [reduce using rule 1066 (template-name)]
    '['             [reduce using rule 1124 (typedef-name)]
    '['             [reduce using rule 1154 (unqualified-id)]
    ':'             [reduce using rule 145 (class-name)]
    ':'             [reduce using rule 297 (enum-name)]
    ':'             [reduce using rule 1066 (template-name)]
    ':'             [reduce using rule 1124 (typedef-name)]
    ':'             [reduce using rule 1154 (unqualified-id)]
    '{'             reduce using rule 1154 (unqualified-id)
    "virtual"       reduce using rule 145 (class-name)
    "virtual"       [reduce using rule 297 (enum-name)]
    "virtual"       [reduce using rule 1066 (template-name)]
    "virtual"       [reduce using rule 1124 (typedef-name)]
    "class"         reduce using rule 145 (class-name)
    "class"         [reduce using rule 297 (enum-name)]
    "class"         [reduce using rule 1066 (template-name)]
    "class"         [reduce using rule 1124 (typedef-name)]
    "struct"        reduce using rule 145 (class-name)
    "struct"        [reduce using rule 297 (enum-name)]
    "struct"        [reduce using rule 1066 (template-name)]
    "struct"        [reduce using rule 1124 (typedef-name)]
    "union"         reduce using rule 145 (class-name)
    "union"         [reduce using rule 297 (enum-name)]
    "union"         [reduce using rule 1066 (template-name)]
    "union"         [reduce using rule 1124 (typedef-name)]
    "final"         reduce using rule 1154 (unqualified-id)
    "&&"            reduce using rule 145 (class-name)
    "&&"            [reduce using rule 297 (enum-name)]
    "&&"            [reduce using rule 1066 (template-name)]
    "&&"            [reduce using rule 1124 (typedef-name)]
    "operator"      reduce using rule 145 (class-name)
    "operator"      [reduce using rule 297 (enum-name)]
    "operator"      [reduce using rule 1066 (template-name)]
    "operator"      [reduce using rule 1124 (typedef-name)]
    "const"         reduce using rule 145 (class-name)
    "const"         [reduce using rule 297 (enum-name)]
    "const"         [reduce using rule 1066 (template-name)]
    "const"         [reduce using rule 1124 (typedef-name)]
    "volatile"      reduce using rule 145 (class-name)
    "volatile"      [reduce using rule 297 (enum-name)]
    "volatile"      [reduce using rule 1066 (template-name)]
    "volatile"      [reduce using rule 1124 (typedef-name)]
    "friend"        reduce using rule 145 (class-name)
    "friend"        [reduce using rule 297 (enum-name)]
    "friend"        [reduce using rule 1066 (template-name)]
    "friend"        [reduce using rule 1124 (typedef-name)]
    "typedef"       reduce using rule 145 (class-name)
    "typedef"       [reduce using rule 297 (enum-name)]
    "typedef"       [reduce using rule 1066 (template-name)]
    "typedef"       [reduce using rule 1124 (typedef-name)]
    "constexpr"     reduce using rule 145 (class-name)
    "constexpr"     [reduce using rule 297 (enum-name)]
    "constexpr"     [reduce using rule 1066 (template-name)]
    "constexpr"     [reduce using rule 1124 (typedef-name)]
    "consteval"     reduce using rule 145 (class-name)
    "consteval"     [reduce using rule 297 (enum-name)]
    "consteval"     [reduce using rule 1066 (template-name)]
    "consteval"     [reduce using rule 1124 (typedef-name)]
    "constinit"     reduce using rule 145 (class-name)
    "constinit"     [reduce using rule 297 (enum-name)]
    "constinit"     [reduce using rule 1066 (template-name)]
    "constinit"     [reduce using rule 1124 (typedef-name)]
    "inline"        reduce using rule 145 (class-name)
    "inline"        [reduce using rule 297 (enum-name)]
    "inline"        [reduce using rule 1066 (template-name)]
    "inline"        [reduce using rule 1124 (typedef-name)]
    "decltype"      reduce using rule 145 (class-name)
    "decltype"      [reduce using rule 163 (concept-name)]
    "decltype"      [reduce using rule 297 (enum-name)]
    "decltype"      [reduce using rule 1066 (template-name)]
    "decltype"      [reduce using rule 1124 (typedef-name)]
    "enum"          reduce using rule 145 (class-name)
    "enum"          [reduce using rule 297 (enum-name)]
    "enum"          [reduce using rule 1066 (template-name)]
    "enum"          [reduce using rule 1124 (typedef-name)]
    "extern"        reduce using rule 145 (class-name)
    "extern"        [reduce using rule 297 (enum-name)]
    "extern"        [reduce using rule 1066 (template-name)]
    "extern"        [reduce using rule 1124 (typedef-name)]
    '<'             reduce using rule 163 (concept-name)
    '<'             [reduce using rule 1066 (template-name)]
    "explicit"      reduce using rule 145 (class-name)
    "explicit"      [reduce using rule 297 (enum-name)]
    "explicit"      [reduce using rule 1066 (template-name)]
    "explicit"      [reduce using rule 1124 (typedef-name)]
    '*'             reduce using rule 145 (class-name)
    '*'             [reduce using rule 297 (enum-name)]
    '*'             [reduce using rule 1066 (template-name)]
    '*'             [reduce using rule 1124 (typedef-name)]
    "try"           reduce using rule 1154 (unqualified-id)
    "requires"      reduce using rule 1154 (unqualified-id)
    '~'             reduce using rule 145 (class-name)
    '~'             [reduce using rule 297 (enum-name)]
    '~'             [reduce using rule 1066 (template-name)]
    '~'             [reduce using rule 1124 (typedef-name)]
    "auto"          reduce using rule 145 (class-name)
    "auto"          [reduce using rule 163 (concept-name)]
    "auto"          [reduce using rule 297 (enum-name)]
    "auto"          [reduce using rule 1066 (template-name)]
    "auto"          [reduce using rule 1124 (typedef-name)]
    "char"          reduce using rule 145 (class-name)
    "char"          [reduce using rule 297 (enum-name)]
    "char"          [reduce using rule 1066 (template-name)]
    "char"          [reduce using rule 1124 (typedef-name)]
    "char8_t"       reduce using rule 145 (class-name)
    "char8_t"       [reduce using rule 297 (enum-name)]
    "char8_t"       [reduce using rule 1066 (template-name)]
    "char8_t"       [reduce using rule 1124 (typedef-name)]
    "char16_t"      reduce using rule 145 (class-name)
    "char16_t"      [reduce using rule 297 (enum-name)]
    "char16_t"      [reduce using rule 1066 (template-name)]
    "char16_t"      [reduce using rule 1124 (typedef-name)]
    "char32_t"      reduce using rule 145 (class-name)
    "char32_t"      [reduce using rule 297 (enum-name)]
    "char32_t"      [reduce using rule 1066 (template-name)]
    "char32_t"      [reduce using rule 1124 (typedef-name)]
    "wchar_t"       reduce using rule 145 (class-name)
    "wchar_t"       [reduce using rule 297 (enum-name)]
    "wchar_t"       [reduce using rule 1066 (template-name)]
    "wchar_t"       [reduce using rule 1124 (typedef-name)]
    "bool"          reduce using rule 145 (class-name)
    "bool"          [reduce using rule 297 (enum-name)]
    "bool"          [reduce using rule 1066 (template-name)]
    "bool"          [reduce using rule 1124 (typedef-name)]
    "short"         reduce using rule 145 (class-name)
    "short"         [reduce using rule 297 (enum-name)]
    "short"         [reduce using rule 1066 (template-name)]
    "short"         [reduce using rule 1124 (typedef-name)]
    "int"           reduce using rule 145 (class-name)
    "int"           [reduce using rule 297 (enum-name)]
    "int"           [reduce using rule 1066 (template-name)]
    "int"           [reduce using rule 1124 (typedef-name)]
    "long"          reduce using rule 145 (class-name)
    "long"          [reduce using rule 297 (enum-name)]
    "long"          [reduce using rule 1066 (template-name)]
    "long"          [reduce using rule 1124 (typedef-name)]
    "signed"        reduce using rule 145 (class-name)
    "signed"        [reduce using rule 297 (enum-name)]
    "signed"        [reduce using rule 1066 (template-name)]
    "signed"        [reduce using rule 1124 (typedef-name)]
    "unsigned"      reduce using rule 145 (class-name)
    "unsigned"      [reduce using rule 297 (enum-name)]
    "unsigned"      [reduce using rule 1066 (template-name)]
    "unsigned"      [reduce using rule 1124 (typedef-name)]
    "float"         reduce using rule 145 (class-name)
    "float"         [reduce using rule 297 (enum-name)]
    "float"         [reduce using rule 1066 (template-name)]
    "float"         [reduce using rule 1124 (typedef-name)]
    "double"        reduce using rule 145 (class-name)
    "double"        [reduce using rule 297 (enum-name)]
    "double"        [reduce using rule 1066 (template-name)]
    "double"        [reduce using rule 1124 (typedef-name)]
    "void"          reduce using rule 145 (class-name)
    "void"          [reduce using rule 297 (enum-name)]
    "void"          [reduce using rule 1066 (template-name)]
    "void"          [reduce using rule 1124 (typedef-name)]
    "static"        reduce using rule 145 (class-name)
    "static"        [reduce using rule 297 (enum-name)]
    "static"        [reduce using rule 1066 (template-name)]
    "static"        [reduce using rule 1124 (typedef-name)]
    "thread_local"  reduce using rule 145 (class-name)
    "thread_local"  [reduce using rule 297 (enum-name)]
    "thread_local"  [reduce using rule 1066 (template-name)]
    "thread_local"  [reduce using rule 1124 (typedef-name)]
    "mutable"       reduce using rule 145 (class-name)
    "mutable"       [reduce using rule 297 (enum-name)]
    "mutable"       [reduce using rule 1066 (template-name)]
    "mutable"       [reduce using rule 1124 (typedef-name)]
    "typename"      reduce using rule 145 (class-name)
    "typename"      [reduce using rule 297 (enum-name)]
    "typename"      [reduce using rule 1066 (template-name)]
    "typename"      [reduce using rule 1124 (typedef-name)]
    "override"      reduce using rule 1154 (unqualified-id)
    $default        reduce using rule 145 (class-name)

    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 1094


State 592

    7 access-specifier: "private" •

    $default  reduce using rule 7 (access-specifier)


State 593

    8 access-specifier: "protected" •

    $default  reduce using rule 8 (access-specifier)


State 594

    9 access-specifier: "public" •

    $default  reduce using rule 9 (access-specifier)


State 595

   13 alias-declaration: "using" • IDENTIFIER '=' defining-type-id ';'
   14                  | "using" • IDENTIFIER attribute-specifier-seq '=' defining-type-id ';'
  1178 using-declaration: "using" • using-declarator-list ';'
  1189 using-enum-declaration: "using" • elaborated-enum-specifier ';'

    IDENTIFIER  shift, and go to state 134
    "::"        shift, and go to state 9
    "decltype"  shift, and go to state 135
    "enum"      shift, and go to state 136
    "typename"  shift, and go to state 138

    class-name                 go to state 66
    decltype-specifier         go to state 139
    elaborated-enum-specifier  go to state 140
    enum-name                  go to state 85
    namespace-alias            go to state 100
    namespace-name             go to state 103
    nested-name-specifier      go to state 141
    simple-template-id         go to state 142
    template-name              go to state 143
    type-name                  go to state 144
    typedef-name               go to state 127
    using-declarator           go to state 145
    using-declarator-list      go to state 146


State 596

  275 empty-declaration: ';' •
  585 member-declaration: ';' •

    IDENTIFIER       reduce using rule 275 (empty-declaration)
    IDENTIFIER       [reduce using rule 585 (member-declaration)]
    "private"        reduce using rule 275 (empty-declaration)
    "private"        [reduce using rule 585 (member-declaration)]
    "protected"      reduce using rule 275 (empty-declaration)
    "protected"      [reduce using rule 585 (member-declaration)]
    "public"         reduce using rule 275 (empty-declaration)
    "public"         [reduce using rule 585 (member-declaration)]
    "using"          reduce using rule 275 (empty-declaration)
    "using"          [reduce using rule 585 (member-declaration)]
    ';'              reduce using rule 275 (empty-declaration)
    ';'              [reduce using rule 585 (member-declaration)]
    "alignas"        reduce using rule 275 (empty-declaration)
    "alignas"        [reduce using rule 585 (member-declaration)]
    '('              reduce using rule 275 (empty-declaration)
    '('              [reduce using rule 585 (member-declaration)]
    "..."            reduce using rule 275 (empty-declaration)
    "..."            [reduce using rule 585 (member-declaration)]
    '&'              reduce using rule 275 (empty-declaration)
    '&'              [reduce using rule 585 (member-declaration)]
    "::"             reduce using rule 275 (empty-declaration)
    "::"             [reduce using rule 585 (member-declaration)]
    '['              reduce using rule 275 (empty-declaration)
    '['              [reduce using rule 585 (member-declaration)]
    ':'              reduce using rule 275 (empty-declaration)
    ':'              [reduce using rule 585 (member-declaration)]
    '}'              reduce using rule 275 (empty-declaration)
    '}'              [reduce using rule 585 (member-declaration)]
    "virtual"        reduce using rule 275 (empty-declaration)
    "virtual"        [reduce using rule 585 (member-declaration)]
    "class"          reduce using rule 275 (empty-declaration)
    "class"          [reduce using rule 585 (member-declaration)]
    "struct"         reduce using rule 275 (empty-declaration)
    "struct"         [reduce using rule 585 (member-declaration)]
    "union"          reduce using rule 275 (empty-declaration)
    "union"          [reduce using rule 585 (member-declaration)]
    "template"       reduce using rule 275 (empty-declaration)
    "template"       [reduce using rule 585 (member-declaration)]
    "&&"             reduce using rule 275 (empty-declaration)
    "&&"             [reduce using rule 585 (member-declaration)]
    "operator"       reduce using rule 275 (empty-declaration)
    "operator"       [reduce using rule 585 (member-declaration)]
    "const"          reduce using rule 275 (empty-declaration)
    "const"          [reduce using rule 585 (member-declaration)]
    "volatile"       reduce using rule 275 (empty-declaration)
    "volatile"       [reduce using rule 585 (member-declaration)]
    "friend"         reduce using rule 275 (empty-declaration)
    "friend"         [reduce using rule 585 (member-declaration)]
    "typedef"        reduce using rule 275 (empty-declaration)
    "typedef"        [reduce using rule 585 (member-declaration)]
    "constexpr"      reduce using rule 275 (empty-declaration)
    "constexpr"      [reduce using rule 585 (member-declaration)]
    "consteval"      reduce using rule 275 (empty-declaration)
    "consteval"      [reduce using rule 585 (member-declaration)]
    "constinit"      reduce using rule 275 (empty-declaration)
    "constinit"      [reduce using rule 585 (member-declaration)]
    "inline"         reduce using rule 275 (empty-declaration)
    "inline"         [reduce using rule 585 (member-declaration)]
    "decltype"       reduce using rule 275 (empty-declaration)
    "decltype"       [reduce using rule 585 (member-declaration)]
    "enum"           reduce using rule 275 (empty-declaration)
    "enum"           [reduce using rule 585 (member-declaration)]
    "extern"         reduce using rule 275 (empty-declaration)
    "extern"         [reduce using rule 585 (member-declaration)]
    "explicit"       reduce using rule 275 (empty-declaration)
    "explicit"       [reduce using rule 585 (member-declaration)]
    '*'              reduce using rule 275 (empty-declaration)
    '*'              [reduce using rule 585 (member-declaration)]
    '~'              reduce using rule 275 (empty-declaration)
    '~'              [reduce using rule 585 (member-declaration)]
    "auto"           reduce using rule 275 (empty-declaration)
    "auto"           [reduce using rule 585 (member-declaration)]
    "char"           reduce using rule 275 (empty-declaration)
    "char"           [reduce using rule 585 (member-declaration)]
    "char8_t"        reduce using rule 275 (empty-declaration)
    "char8_t"        [reduce using rule 585 (member-declaration)]
    "char16_t"       reduce using rule 275 (empty-declaration)
    "char16_t"       [reduce using rule 585 (member-declaration)]
    "char32_t"       reduce using rule 275 (empty-declaration)
    "char32_t"       [reduce using rule 585 (member-declaration)]
    "wchar_t"        reduce using rule 275 (empty-declaration)
    "wchar_t"        [reduce using rule 585 (member-declaration)]
    "bool"           reduce using rule 275 (empty-declaration)
    "bool"           [reduce using rule 585 (member-declaration)]
    "short"          reduce using rule 275 (empty-declaration)
    "short"          [reduce using rule 585 (member-declaration)]
    "int"            reduce using rule 275 (empty-declaration)
    "int"            [reduce using rule 585 (member-declaration)]
    "long"           reduce using rule 275 (empty-declaration)
    "long"           [reduce using rule 585 (member-declaration)]
    "signed"         reduce using rule 275 (empty-declaration)
    "signed"         [reduce using rule 585 (member-declaration)]
    "unsigned"       reduce using rule 275 (empty-declaration)
    "unsigned"       [reduce using rule 585 (member-declaration)]
    "float"          reduce using rule 275 (empty-declaration)
    "float"          [reduce using rule 585 (member-declaration)]
    "double"         reduce using rule 275 (empty-declaration)
    "double"         [reduce using rule 585 (member-declaration)]
    "void"           reduce using rule 275 (empty-declaration)
    "void"           [reduce using rule 585 (member-declaration)]
    "static_assert"  reduce using rule 275 (empty-declaration)
    "static_assert"  [reduce using rule 585 (member-declaration)]
    "static"         reduce using rule 275 (empty-declaration)
    "static"         [reduce using rule 585 (member-declaration)]
    "thread_local"   reduce using rule 275 (empty-declaration)
    "thread_local"   [reduce using rule 585 (member-declaration)]
    "mutable"        reduce using rule 275 (empty-declaration)
    "mutable"        [reduce using rule 585 (member-declaration)]
    "typename"       reduce using rule 275 (empty-declaration)
    "typename"       [reduce using rule 585 (member-declaration)]
    $default         reduce using rule 275 (empty-declaration)


State 597

  610 member-declarator: ':' • constant-expression
  614                  | ':' • constant-expression brace-or-equal-initializer

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    additive-expression                  go to state 404
    and-expression                       go to state 405
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 412
    constant-expression                  go to state 1095
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 435
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 598

  151 class-specifier: class-head '{' '}' •

    $default  reduce using rule 151 (class-specifier)


State 599

  324 explicit-specialization: "template" • '<' '>' declaration
  1059 template-head: "template" • '<' template-parameter-list '>'
  1060              | "template" • '<' template-parameter-list '>' requires-clause

    '<'  shift, and go to state 157


State 600

  621 member-specification: access-specifier • ':'
  622                     | access-specifier • ':' member-specification

    ':'  shift, and go to state 1096


State 601

  599 member-declaration: alias-declaration •

    $default  reduce using rule 599 (member-declaration)


State 602

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  398 function-definition: attribute-specifier-seq • declarator function-body
  400                    | attribute-specifier-seq • decl-specifier-seq declarator function-body
  402                    | attribute-specifier-seq • declarator virt-specifier-seq function-body
  404                    | attribute-specifier-seq • decl-specifier-seq declarator virt-specifier-seq function-body
  406                    | attribute-specifier-seq • declarator requires-clause function-body
  408                    | attribute-specifier-seq • decl-specifier-seq declarator requires-clause function-body
  584 member-declaration: attribute-specifier-seq • ';'
  586                   | attribute-specifier-seq • decl-specifier-seq ';'
  588                   | attribute-specifier-seq • member-declarator-list ';'
  590                   | attribute-specifier-seq • decl-specifier-seq member-declarator-list ';'
  612 member-declarator: attribute-specifier-seq • ':' constant-expression
  616                  | attribute-specifier-seq • ':' constant-expression brace-or-equal-initializer

    IDENTIFIER      shift, and go to state 591
    ';'             shift, and go to state 1097
    "alignas"       shift, and go to state 4
    '('             shift, and go to state 5
    "..."           shift, and go to state 6
    '&'             shift, and go to state 7
    "::"            shift, and go to state 9
    '['             shift, and go to state 10
    ':'             shift, and go to state 1098
    "virtual"       shift, and go to state 11
    "class"         shift, and go to state 12
    "struct"        shift, and go to state 13
    "union"         shift, and go to state 14
    "&&"            shift, and go to state 16
    "operator"      shift, and go to state 17
    "const"         shift, and go to state 18
    "volatile"      shift, and go to state 19
    "friend"        shift, and go to state 20
    "typedef"       shift, and go to state 21
    "constexpr"     shift, and go to state 22
    "consteval"     shift, and go to state 23
    "constinit"     shift, and go to state 24
    "inline"        shift, and go to state 263
    "decltype"      shift, and go to state 26
    "enum"          shift, and go to state 27
    "extern"        shift, and go to state 264
    "explicit"      shift, and go to state 29
    '*'             shift, and go to state 32
    '~'             shift, and go to state 36
    "auto"          shift, and go to state 37
    "char"          shift, and go to state 38
    "char8_t"       shift, and go to state 39
    "char16_t"      shift, and go to state 40
    "char32_t"      shift, and go to state 41
    "wchar_t"       shift, and go to state 42
    "bool"          shift, and go to state 43
    "short"         shift, and go to state 44
    "int"           shift, and go to state 45
    "long"          shift, and go to state 46
    "signed"        shift, and go to state 47
    "unsigned"      shift, and go to state 48
    "float"         shift, and go to state 49
    "double"        shift, and go to state 50
    "void"          shift, and go to state 51
    "static"        shift, and go to state 53
    "thread_local"  shift, and go to state 54
    "mutable"       shift, and go to state 55
    "typename"      shift, and go to state 56

    alignment-specifier         go to state 58
    attribute-specifier         go to state 1099
    attribute-specifier-seq     go to state 1100
    class-head                  go to state 64
    class-key                   go to state 65
    class-name                  go to state 66
    class-specifier             go to state 67
    concept-name                go to state 68
    conversion-function-id      go to state 69
    cv-qualifier                go to state 70
    decl-specifier              go to state 71
    decl-specifier-seq          go to state 1101
    declarator                  go to state 1102
    declarator-id               go to state 76
    decltype-specifier          go to state 77
    defining-type-specifier     go to state 79
    elaborated-enum-specifier   go to state 80
    elaborated-type-specifier   go to state 81
    enum-head                   go to state 83
    enum-key                    go to state 268
    enum-name                   go to state 85
    enum-specifier              go to state 86
    explicit-specifier          go to state 269
    function-specifier          go to state 92
    id-expression               go to state 94
    literal-operator-id         go to state 96
    member-declarator           go to state 610
    member-declarator-list      go to state 1103
    namespace-alias             go to state 100
    namespace-name              go to state 103
    nested-name-specifier       go to state 104
    noptr-declarator            go to state 107
    operator-function-id        go to state 109
    placeholder-type-specifier  go to state 110
    ptr-declarator              go to state 111
    ptr-operator                go to state 112
    qualified-id                go to state 113
    simple-template-id          go to state 115
    simple-type-specifier       go to state 116
    storage-class-specifier     go to state 118
    template-id                 go to state 121
    template-name               go to state 216
    type-constraint             go to state 124
    type-name                   go to state 125
    type-specifier              go to state 126
    typedef-name                go to state 127
    typename-specifier          go to state 128
    unqualified-id              go to state 130


State 603

  401 function-definition: decl-specifier-seq • declarator function-body
  405                    | decl-specifier-seq • declarator virt-specifier-seq function-body
  409                    | decl-specifier-seq • declarator requires-clause function-body
  587 member-declaration: decl-specifier-seq • ';'
  591                   | decl-specifier-seq • member-declarator-list ';'

    IDENTIFIER  shift, and go to state 1104
    ';'         shift, and go to state 1105
    "alignas"   shift, and go to state 4
    '('         shift, and go to state 5
    "..."       shift, and go to state 6
    '&'         shift, and go to state 7
    "::"        shift, and go to state 9
    '['         shift, and go to state 10
    ':'         shift, and go to state 597
    "&&"        shift, and go to state 16
    "operator"  shift, and go to state 17
    "decltype"  shift, and go to state 135
    '*'         shift, and go to state 32
    '~'         shift, and go to state 36

    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 1100
    class-name               go to state 66
    conversion-function-id   go to state 69
    declarator               go to state 1106
    declarator-id            go to state 76
    decltype-specifier       go to state 139
    enum-name                go to state 85
    id-expression            go to state 94
    literal-operator-id      go to state 96
    member-declarator        go to state 610
    member-declarator-list   go to state 1107
    namespace-alias          go to state 100
    namespace-name           go to state 103
    nested-name-specifier    go to state 149
    noptr-declarator         go to state 107
    operator-function-id     go to state 109
    ptr-declarator           go to state 111
    ptr-operator             go to state 112
    qualified-id             go to state 113
    simple-template-id       go to state 115
    template-id              go to state 121
    template-name            go to state 143
    type-name                go to state 144
    typedef-name             go to state 127
    unqualified-id           go to state 130


State 604

  399 function-definition: declarator • function-body
  403                    | declarator • virt-specifier-seq function-body
  407                    | declarator • requires-clause function-body
  602 member-declarator: declarator •
  603                  | declarator • virt-specifier-seq
  604                  | declarator • pure-specifier
  605                  | declarator • virt-specifier-seq pure-specifier
  606                  | declarator • requires-clause
  607                  | declarator •
  608                  | declarator • brace-or-equal-initializer

    '='         shift, and go to state 1108
    ':'         shift, and go to state 293
    '{'         shift, and go to state 648
    "final"     shift, and go to state 295
    "try"       shift, and go to state 296
    "requires"  shift, and go to state 297
    "override"  shift, and go to state 298

    ';'       reduce using rule 602 (member-declarator)
    ';'       [reduce using rule 607 (member-declarator)]
    ','       reduce using rule 602 (member-declarator)
    ','       [reduce using rule 607 (member-declarator)]
    $default  reduce using rule 602 (member-declarator)

    brace-or-equal-initializer  go to state 1109
    braced-init-list            go to state 650
    compound-statement          go to state 299
    ctor-initializer            go to state 300
    function-body               go to state 301
    function-try-block          go to state 302
    pure-specifier              go to state 1110
    requires-clause             go to state 1111
    virt-specifier              go to state 304
    virt-specifier-seq          go to state 1112


State 605

  598 member-declaration: deduction-guide •

    $default  reduce using rule 598 (member-declaration)


State 606

  601 member-declaration: empty-declaration •

    $default  reduce using rule 601 (member-declaration)


State 607

  597 member-declaration: explicit-specialization •

    $default  reduce using rule 597 (member-declaration)


State 608

  592 member-declaration: function-definition •

    $default  reduce using rule 592 (member-declaration)


State 609

  619 member-specification: member-declaration •
  620                     | member-declaration • member-specification

    IDENTIFIER       shift, and go to state 591
    "private"        shift, and go to state 592
    "protected"      shift, and go to state 593
    "public"         shift, and go to state 594
    "using"          shift, and go to state 595
    ';'              shift, and go to state 596
    "alignas"        shift, and go to state 4
    '('              shift, and go to state 5
    "..."            shift, and go to state 6
    '&'              shift, and go to state 7
    "::"             shift, and go to state 9
    '['              shift, and go to state 10
    ':'              shift, and go to state 597
    "virtual"        shift, and go to state 11
    "class"          shift, and go to state 12
    "struct"         shift, and go to state 13
    "union"          shift, and go to state 14
    "template"       shift, and go to state 599
    "&&"             shift, and go to state 16
    "operator"       shift, and go to state 17
    "const"          shift, and go to state 18
    "volatile"       shift, and go to state 19
    "friend"         shift, and go to state 20
    "typedef"        shift, and go to state 21
    "constexpr"      shift, and go to state 22
    "consteval"      shift, and go to state 23
    "constinit"      shift, and go to state 24
    "inline"         shift, and go to state 263
    "decltype"       shift, and go to state 26
    "enum"           shift, and go to state 27
    "extern"         shift, and go to state 264
    "explicit"       shift, and go to state 29
    '*'              shift, and go to state 32
    '~'              shift, and go to state 36
    "auto"           shift, and go to state 37
    "char"           shift, and go to state 38
    "char8_t"        shift, and go to state 39
    "char16_t"       shift, and go to state 40
    "char32_t"       shift, and go to state 41
    "wchar_t"        shift, and go to state 42
    "bool"           shift, and go to state 43
    "short"          shift, and go to state 44
    "int"            shift, and go to state 45
    "long"           shift, and go to state 46
    "signed"         shift, and go to state 47
    "unsigned"       shift, and go to state 48
    "float"          shift, and go to state 49
    "double"         shift, and go to state 50
    "void"           shift, and go to state 51
    "static_assert"  shift, and go to state 52
    "static"         shift, and go to state 53
    "thread_local"   shift, and go to state 54
    "mutable"        shift, and go to state 55
    "typename"       shift, and go to state 56

    $default  reduce using rule 619 (member-specification)

    access-specifier            go to state 600
    alias-declaration           go to state 601
    alignment-specifier         go to state 58
    attribute-specifier         go to state 61
    attribute-specifier-seq     go to state 602
    class-head                  go to state 64
    class-key                   go to state 65
    class-name                  go to state 66
    class-specifier             go to state 67
    concept-name                go to state 68
    conversion-function-id      go to state 69
    cv-qualifier                go to state 70
    decl-specifier              go to state 71
    decl-specifier-seq          go to state 603
    declarator                  go to state 604
    declarator-id               go to state 76
    decltype-specifier          go to state 77
    deduction-guide             go to state 605
    defining-type-specifier     go to state 79
    elaborated-enum-specifier   go to state 80
    elaborated-type-specifier   go to state 81
    empty-declaration           go to state 606
    enum-head                   go to state 83
    enum-key                    go to state 84
    enum-name                   go to state 85
    enum-specifier              go to state 86
    explicit-specialization     go to state 607
    explicit-specifier          go to state 89
    function-definition         go to state 608
    function-specifier          go to state 92
    id-expression               go to state 94
    literal-operator-id         go to state 96
    member-declaration          go to state 609
    member-declarator           go to state 610
    member-declarator-list      go to state 611
    member-specification        go to state 1113
    namespace-alias             go to state 100
    namespace-name              go to state 103
    nested-name-specifier       go to state 104
    noptr-declarator            go to state 107
    opaque-enum-declaration     go to state 613
    operator-function-id        go to state 109
    placeholder-type-specifier  go to state 110
    ptr-declarator              go to state 111
    ptr-operator                go to state 112
    qualified-id                go to state 113
    simple-template-id          go to state 115
    simple-type-specifier       go to state 116
    static_assert-declaration   go to state 614
    storage-class-specifier     go to state 118
    template-declaration        go to state 615
    template-head               go to state 120
    template-id                 go to state 121
    template-name               go to state 122
    type-constraint             go to state 124
    type-name                   go to state 125
    type-specifier              go to state 126
    typedef-name                go to state 127
    typename-specifier          go to state 128
    unqualified-id              go to state 130
    using-declaration           go to state 616
    using-enum-declaration      go to state 617


State 610

  617 member-declarator-list: member-declarator •

    $default  reduce using rule 617 (member-declarator-list)


State 611

  589 member-declaration: member-declarator-list • ';'
  618 member-declarator-list: member-declarator-list • ',' member-declarator

    ';'  shift, and go to state 1114
    ','  shift, and go to state 1115


State 612

  152 class-specifier: class-head '{' member-specification • '}'

    '}'  shift, and go to state 1116


State 613

  600 member-declaration: opaque-enum-declaration •

    $default  reduce using rule 600 (member-declaration)


State 614

  595 member-declaration: static_assert-declaration •

    $default  reduce using rule 595 (member-declaration)


State 615

  596 member-declaration: template-declaration •

    $default  reduce using rule 596 (member-declaration)


State 616

  593 member-declaration: using-declaration •

    $default  reduce using rule 593 (member-declaration)


State 617

  594 member-declaration: using-enum-declaration •

    $default  reduce using rule 594 (member-declaration)


State 618

   72 base-specifier: "virtual" • class-or-decltype
   74               | "virtual" • access-specifier class-or-decltype

    IDENTIFIER   shift, and go to state 258
    "private"    shift, and go to state 592
    "protected"  shift, and go to state 593
    "public"     shift, and go to state 594
    "::"         shift, and go to state 9
    "decltype"   shift, and go to state 135

    access-specifier       go to state 1117
    class-name             go to state 66
    class-or-decltype      go to state 1118
    decltype-specifier     go to state 624
    enum-name              go to state 85
    namespace-alias        go to state 100
    namespace-name         go to state 103
    nested-name-specifier  go to state 625
    simple-template-id     go to state 142
    template-name          go to state 143
    type-name              go to state 626
    typedef-name           go to state 127


State 619

   76 base-specifier: access-specifier • class-or-decltype
   78               | access-specifier • "virtual" class-or-decltype

    IDENTIFIER  shift, and go to state 258
    "::"        shift, and go to state 9
    "virtual"   shift, and go to state 1119
    "decltype"  shift, and go to state 135

    class-name             go to state 66
    class-or-decltype      go to state 1120
    decltype-specifier     go to state 624
    enum-name              go to state 85
    namespace-alias        go to state 100
    namespace-name         go to state 103
    nested-name-specifier  go to state 625
    simple-template-id     go to state 142
    template-name          go to state 143
    type-name              go to state 626
    typedef-name           go to state 127


State 620

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
   69 base-specifier: attribute-specifier-seq • class-or-decltype
   71               | attribute-specifier-seq • "virtual" class-or-decltype
   73               | attribute-specifier-seq • "virtual" access-specifier class-or-decltype
   75               | attribute-specifier-seq • access-specifier class-or-decltype
   77               | attribute-specifier-seq • access-specifier "virtual" class-or-decltype

    IDENTIFIER   shift, and go to state 258
    "private"    shift, and go to state 592
    "protected"  shift, and go to state 593
    "public"     shift, and go to state 594
    "alignas"    shift, and go to state 4
    "::"         shift, and go to state 9
    '['          shift, and go to state 10
    "virtual"    shift, and go to state 1121
    "decltype"   shift, and go to state 135

    access-specifier       go to state 1122
    alignment-specifier    go to state 58
    attribute-specifier    go to state 265
    class-name             go to state 66
    class-or-decltype      go to state 1123
    decltype-specifier     go to state 624
    enum-name              go to state 85
    namespace-alias        go to state 100
    namespace-name         go to state 103
    nested-name-specifier  go to state 625
    simple-template-id     go to state 142
    template-name          go to state 143
    type-name              go to state 626
    typedef-name           go to state 127


State 621

   79 base-specifier-list: base-specifier •
   80                    | base-specifier • "..."

    "..."  shift, and go to state 1124

    $default  reduce using rule 79 (base-specifier-list)


State 622

   68 base-clause: ':' base-specifier-list •
   81 base-specifier-list: base-specifier-list • ',' base-specifier
   82                    | base-specifier-list • ',' base-specifier "..."

    ','  shift, and go to state 1125

    $default  reduce using rule 68 (base-clause)


State 623

   70 base-specifier: class-or-decltype •

    $default  reduce using rule 70 (base-specifier)


State 624

  150 class-or-decltype: decltype-specifier •
  662 nested-name-specifier: decltype-specifier • "::"

    "::"  shift, and go to state 307

    $default  reduce using rule 150 (class-or-decltype)


State 625

  147 class-or-decltype: nested-name-specifier • type-name
  149                  | nested-name-specifier • "template" simple-template-id
  663 nested-name-specifier: nested-name-specifier • IDENTIFIER "::"
  664                      | nested-name-specifier • simple-template-id "::"
  665                      | nested-name-specifier • "template" simple-template-id "::"

    IDENTIFIER  shift, and go to state 1126
    "template"  shift, and go to state 1127

    class-name          go to state 66
    enum-name           go to state 85
    simple-template-id  go to state 515
    template-name       go to state 143
    type-name           go to state 1128
    typedef-name        go to state 127


State 626

  148 class-or-decltype: type-name •
  660 nested-name-specifier: type-name • "::"

    "::"  shift, and go to state 346

    $default  reduce using rule 148 (class-or-decltype)


State 627

  145 class-name: IDENTIFIER •
  268 elaborated-type-specifier: class-key attribute-specifier-seq IDENTIFIER •
  297 enum-name: IDENTIFIER •
  651 namespace-alias: IDENTIFIER •
  657 namespace-name: IDENTIFIER •
  1066 template-name: IDENTIFIER •
  1124 typedef-name: IDENTIFIER •

    "::"      reduce using rule 145 (class-name)
    "::"      [reduce using rule 268 (elaborated-type-specifier)]
    "::"      [reduce using rule 297 (enum-name)]
    "::"      [reduce using rule 651 (namespace-alias)]
    "::"      [reduce using rule 657 (namespace-name)]
    "::"      [reduce using rule 1124 (typedef-name)]
    ':'       reduce using rule 145 (class-name)
    ':'       [reduce using rule 268 (elaborated-type-specifier)]
    '{'       reduce using rule 145 (class-name)
    '{'       [reduce using rule 268 (elaborated-type-specifier)]
    "final"   reduce using rule 145 (class-name)
    "final"   [reduce using rule 268 (elaborated-type-specifier)]
    '<'       reduce using rule 268 (elaborated-type-specifier)
    '<'       [reduce using rule 1066 (template-name)]
    $default  reduce using rule 268 (elaborated-type-specifier)


State 628

  139 class-head: class-key attribute-specifier-seq base-clause •

    $default  reduce using rule 139 (class-head)


State 629

  129 class-head: class-key attribute-specifier-seq class-head-name •
  131           | class-key attribute-specifier-seq class-head-name • class-virt-specifier
  133           | class-key attribute-specifier-seq class-head-name • base-clause
  135           | class-key attribute-specifier-seq class-head-name • class-virt-specifier base-clause

    ':'      shift, and go to state 272
    "final"  shift, and go to state 631

    $default  reduce using rule 129 (class-head)

    base-clause           go to state 1129
    class-virt-specifier  go to state 1130


State 630

  140 class-head-name: nested-name-specifier • class-name
  270 elaborated-type-specifier: class-key attribute-specifier-seq nested-name-specifier • IDENTIFIER
  663 nested-name-specifier: nested-name-specifier • IDENTIFIER "::"
  664                      | nested-name-specifier • simple-template-id "::"
  665                      | nested-name-specifier • "template" simple-template-id "::"

    IDENTIFIER  shift, and go to state 1131
    "template"  shift, and go to state 355

    class-name          go to state 636
    simple-template-id  go to state 1132
    template-name       go to state 143


State 631

  153 class-virt-specifier: "final" •

    $default  reduce using rule 153 (class-virt-specifier)


State 632

  132 class-head: class-key class-head-name base-clause •

    $default  reduce using rule 132 (class-head)


State 633

  130 class-head: class-key class-head-name class-virt-specifier •
  134           | class-key class-head-name class-virt-specifier • base-clause

    ':'  shift, and go to state 272

    $default  reduce using rule 130 (class-head)

    base-clause  go to state 1133


State 634

  145 class-name: IDENTIFIER •
  269 elaborated-type-specifier: class-key nested-name-specifier IDENTIFIER •
  663 nested-name-specifier: nested-name-specifier IDENTIFIER • "::"
  1066 template-name: IDENTIFIER •

    "::"  shift, and go to state 726

    "::"      [reduce using rule 269 (elaborated-type-specifier)]
    ':'       reduce using rule 145 (class-name)
    ':'       [reduce using rule 269 (elaborated-type-specifier)]
    '{'       reduce using rule 145 (class-name)
    '{'       [reduce using rule 269 (elaborated-type-specifier)]
    "final"   reduce using rule 145 (class-name)
    '<'       reduce using rule 1066 (template-name)
    $default  reduce using rule 269 (elaborated-type-specifier)


State 635

  273 elaborated-type-specifier: class-key nested-name-specifier "template" • simple-template-id
  665 nested-name-specifier: nested-name-specifier "template" • simple-template-id "::"

    IDENTIFIER  shift, and go to state 315

    simple-template-id  go to state 1134
    template-name       go to state 143


State 636

  140 class-head-name: nested-name-specifier class-name •

    $default  reduce using rule 140 (class-head-name)


State 637

  146 class-name: simple-template-id •
  272 elaborated-type-specifier: class-key nested-name-specifier simple-template-id •
  664 nested-name-specifier: nested-name-specifier simple-template-id • "::"

    "::"  shift, and go to state 733

    "::"      [reduce using rule 272 (elaborated-type-specifier)]
    ':'       reduce using rule 146 (class-name)
    ':'       [reduce using rule 272 (elaborated-type-specifier)]
    '{'       reduce using rule 146 (class-name)
    '{'       [reduce using rule 272 (elaborated-type-specifier)]
    "final"   reduce using rule 146 (class-name)
    $default  reduce using rule 272 (elaborated-type-specifier)


State 638

  1087 type-constraint: concept-name '<' '>' •

    $default  reduce using rule 1087 (type-constraint)


State 639

  1050 template-argument: constant-expression •

    $default  reduce using rule 1050 (template-argument)


State 640

  886 primary-expression: id-expression •
  1052 template-argument: id-expression •

    "..."     reduce using rule 886 (primary-expression)
    "..."     [reduce using rule 1052 (template-argument)]
    ','       reduce using rule 886 (primary-expression)
    ','       [reduce using rule 1052 (template-argument)]
    '>'       reduce using rule 886 (primary-expression)
    '>'       [reduce using rule 1052 (template-argument)]
    $default  reduce using rule 886 (primary-expression)


State 641

  1053 template-argument-list: template-argument •
  1054                       | template-argument • "..."

    "..."  shift, and go to state 1135

    $default  reduce using rule 1053 (template-argument-list)


State 642

  1055 template-argument-list: template-argument-list • ',' template-argument
  1056                       | template-argument-list • ',' template-argument "..."
  1089 type-constraint: concept-name '<' template-argument-list • '>'

    ','  shift, and go to state 1136
    '>'  shift, and go to state 1137


State 643

  1051 template-argument: type-id •

    $default  reduce using rule 1051 (template-argument)


State 644

  465 identifier-list: IDENTIFIER •

    $default  reduce using rule 465 (identifier-list)


State 645

  466 identifier-list: identifier-list • ',' IDENTIFIER
  981 simple-declaration: decl-specifier-seq '[' identifier-list • ']' initializer ';'

    ','  shift, and go to state 1138
    ']'  shift, and go to state 1139


State 646

  106 brace-or-equal-initializer: '=' • initializer-clause
  396 function-body: '=' • "default" ';'
  397              | '=' • "delete" ';'

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 939
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 1140
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    "default"           shift, and go to state 659
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 1141
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    braced-init-list                     go to state 1142
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    initializer-clause                   go to state 1143
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 647

  482 initializer: '(' • expression-list ')'

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 939
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 1141
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    braced-init-list                     go to state 1142
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    expression-list                      go to state 1144
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    initializer-clause                   go to state 1145
    initializer-list                     go to state 1146
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 648

  108 braced-init-list: '{' • initializer-list '}'
  109                 | '{' • initializer-list ',' '}'
  110                 | '{' • designated-initializer-list '}'
  111                 | '{' • designated-initializer-list ',' '}'
  112                 | '{' • '}'
  160 compound-statement: '{' • '}'
  161                   | '{' • statement-seq '}'

    IDENTIFIER          shift, and go to state 665
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    "using"             shift, and go to state 2
    ';'                 shift, and go to state 666
    "alignas"           shift, and go to state 4
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "asm"               shift, and go to state 8
    "::"                shift, and go to state 365
    '['                 shift, and go to state 667
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 648
    '}'                 shift, and go to state 1147
    "virtual"           shift, and go to state 11
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "co_return"         shift, and go to state 669
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "friend"            shift, and go to state 20
    "typedef"           shift, and go to state 21
    "constexpr"         shift, and go to state 22
    "consteval"         shift, and go to state 23
    "constinit"         shift, and go to state 24
    "inline"            shift, and go to state 263
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 1148
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 27
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    "extern"            shift, and go to state 264
    "explicit"          shift, and go to state 29
    '*'                 shift, and go to state 386
    "default"           shift, and go to state 670
    "try"               shift, and go to state 671
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "while"             shift, and go to state 672
    "do"                shift, and go to state 673
    "for"               shift, and go to state 674
    "break"             shift, and go to state 675
    "continue"          shift, and go to state 676
    "return"            shift, and go to state 677
    "goto"              shift, and go to state 678
    "case"              shift, and go to state 679
    "namespace"         shift, and go to state 680
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "if"                shift, and go to state 681
    "switch"            shift, and go to state 682
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    "static_assert"     shift, and go to state 52
    "static"            shift, and go to state 53
    "thread_local"      shift, and go to state 54
    "mutable"           shift, and go to state 55
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    alias-declaration                    go to state 57
    alignment-specifier                  go to state 58
    and-expression                       go to state 405
    asm-declaration                      go to state 59
    assignment-expression                go to state 1149
    attribute-specifier                  go to state 61
    attribute-specifier-seq              go to state 683
    await-expression                     go to state 406
    binary-literal                       go to state 407
    block-declaration                    go to state 684
    boolean-literal                      go to state 408
    braced-init-list                     go to state 1142
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-head                           go to state 64
    class-key                            go to state 65
    class-name                           go to state 66
    class-specifier                      go to state 67
    compare-expression                   go to state 411
    compound-statement                   go to state 685
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    coroutine-return-statement           go to state 686
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decl-specifier                       go to state 71
    decl-specifier-seq                   go to state 687
    declaration-statement                go to state 688
    decltype-specifier                   go to state 77
    defining-type-specifier              go to state 79
    delete-expression                    go to state 416
    designated-initializer-clause        go to state 1150
    designated-initializer-list          go to state 1151
    designator                           go to state 1152
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-head                            go to state 83
    enum-key                             go to state 84
    enum-name                            go to state 85
    enum-specifier                       go to state 86
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    explicit-specifier                   go to state 269
    expression                           go to state 689
    expression-statement                 go to state 690
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    function-specifier                   go to state 92
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    initializer-clause                   go to state 1145
    initializer-list                     go to state 1153
    integer-literal                      go to state 430
    iteration-statement                  go to state 691
    jump-statement                       go to state 692
    labeled-statement                    go to state 693
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-alias-definition           go to state 101
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    opaque-enum-declaration              go to state 108
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    selection-statement                  go to state 694
    shift-expression                     go to state 448
    simple-declaration                   go to state 114
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    statement                            go to state 695
    statement-seq                        go to state 696
    static_assert-declaration            go to state 117
    storage-class-specifier              go to state 118
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    try-block                            go to state 697
    type-constraint                      go to state 124
    type-name                            go to state 125
    type-specifier                       go to state 126
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    using-declaration                    go to state 131
    using-directive                      go to state 132
    using-enum-declaration               go to state 133
    yield-expression                     go to state 537


State 649

  481 initializer: brace-or-equal-initializer •

    $default  reduce using rule 481 (initializer)


State 650

  107 brace-or-equal-initializer: braced-init-list •

    $default  reduce using rule 107 (brace-or-equal-initializer)


State 651

  401 function-definition: decl-specifier-seq declarator function-body •

    $default  reduce using rule 401 (function-definition)


State 652

  474 init-declarator: declarator initializer •

    $default  reduce using rule 474 (init-declarator)


State 653

  409 function-definition: decl-specifier-seq declarator requires-clause • function-body
  475 init-declarator: declarator requires-clause •

    '='    shift, and go to state 291
    ':'    shift, and go to state 293
    '{'    shift, and go to state 294
    "try"  shift, and go to state 296

    $default  reduce using rule 475 (init-declarator)

    compound-statement  go to state 299
    ctor-initializer    go to state 300
    function-body       go to state 1154
    function-try-block  go to state 302


State 654

  405 function-definition: decl-specifier-seq declarator virt-specifier-seq • function-body
  1193 virt-specifier-seq: virt-specifier-seq • virt-specifier

    '='         shift, and go to state 291
    ':'         shift, and go to state 293
    '{'         shift, and go to state 294
    "final"     shift, and go to state 295
    "try"       shift, and go to state 296
    "override"  shift, and go to state 298

    compound-statement  go to state 299
    ctor-initializer    go to state 300
    function-body       go to state 1155
    function-try-block  go to state 302
    virt-specifier      go to state 707


State 655

  978 simple-declaration: decl-specifier-seq init-declarator-list ';' •

    $default  reduce using rule 978 (simple-declaration)


State 656

  477 init-declarator-list: init-declarator-list ',' • init-declarator

    IDENTIFIER  shift, and go to state 148
    '('         shift, and go to state 5
    "..."       shift, and go to state 6
    '&'         shift, and go to state 7
    "::"        shift, and go to state 9
    "&&"        shift, and go to state 16
    "operator"  shift, and go to state 17
    "decltype"  shift, and go to state 135
    '*'         shift, and go to state 32
    '~'         shift, and go to state 36

    class-name              go to state 66
    conversion-function-id  go to state 69
    declarator              go to state 1156
    declarator-id           go to state 76
    decltype-specifier      go to state 139
    enum-name               go to state 85
    id-expression           go to state 94
    init-declarator         go to state 1157
    literal-operator-id     go to state 96
    namespace-alias         go to state 100
    namespace-name          go to state 103
    nested-name-specifier   go to state 149
    noptr-declarator        go to state 107
    operator-function-id    go to state 109
    ptr-declarator          go to state 111
    ptr-operator            go to state 112
    qualified-id            go to state 113
    simple-template-id      go to state 115
    template-id             go to state 121
    template-name           go to state 143
    type-name               go to state 144
    typedef-name            go to state 127
    unqualified-id          go to state 130


State 657

  983 simple-declaration: decl-specifier-seq ref-qualifier '[' • identifier-list ']' initializer ';'

    IDENTIFIER  shift, and go to state 644

    identifier-list  go to state 1158


State 658

  397 function-body: '=' "delete" • ';'

    ';'  shift, and go to state 1159


State 659

  396 function-body: '=' "default" • ';'

    ';'  shift, and go to state 1160


State 660

  145 class-name: IDENTIFIER •
  297 enum-name: IDENTIFIER •
  579 mem-initializer-id: IDENTIFIER •
  651 namespace-alias: IDENTIFIER •
  657 namespace-name: IDENTIFIER •
  1066 template-name: IDENTIFIER •
  1124 typedef-name: IDENTIFIER •

    '('       reduce using rule 145 (class-name)
    '('       [reduce using rule 297 (enum-name)]
    '('       [reduce using rule 579 (mem-initializer-id)]
    '('       [reduce using rule 1124 (typedef-name)]
    "::"      reduce using rule 145 (class-name)
    "::"      [reduce using rule 297 (enum-name)]
    "::"      [reduce using rule 651 (namespace-alias)]
    "::"      [reduce using rule 657 (namespace-name)]
    "::"      [reduce using rule 1124 (typedef-name)]
    '{'       reduce using rule 145 (class-name)
    '{'       [reduce using rule 297 (enum-name)]
    '{'       [reduce using rule 579 (mem-initializer-id)]
    '{'       [reduce using rule 1124 (typedef-name)]
    '<'       reduce using rule 1066 (template-name)
    $default  reduce using rule 145 (class-name)


State 661

  578 mem-initializer-id: class-or-decltype •

    $default  reduce using rule 578 (mem-initializer-id)


State 662

  580 mem-initializer-list: mem-initializer •
  581                     | mem-initializer • "..."

    "..."  shift, and go to state 1161

    $default  reduce using rule 580 (mem-initializer-list)


State 663

  575 mem-initializer: mem-initializer-id • '(' ')'
  576                | mem-initializer-id • '(' expression-list ')'
  577                | mem-initializer-id • braced-init-list

    '('  shift, and go to state 1162
    '{'  shift, and go to state 939

    braced-init-list  go to state 1163


State 664

  184 ctor-initializer: ':' mem-initializer-list •
  582 mem-initializer-list: mem-initializer-list • ',' mem-initializer
  583                     | mem-initializer-list • ',' mem-initializer "..."

    ','  shift, and go to state 1164

    $default  reduce using rule 184 (ctor-initializer)


State 665

  145 class-name: IDENTIFIER •
  163 concept-name: IDENTIFIER •
  297 enum-name: IDENTIFIER •
  524 labeled-statement: IDENTIFIER • ':' statement
  651 namespace-alias: IDENTIFIER •
  657 namespace-name: IDENTIFIER •
  1066 template-name: IDENTIFIER •
  1124 typedef-name: IDENTIFIER •
  1154 unqualified-id: IDENTIFIER •

    ':'  shift, and go to state 1165

    IDENTIFIER      reduce using rule 145 (class-name)
    IDENTIFIER      [reduce using rule 297 (enum-name)]
    IDENTIFIER      [reduce using rule 1066 (template-name)]
    IDENTIFIER      [reduce using rule 1124 (typedef-name)]
    '+'             reduce using rule 1154 (unqualified-id)
    '-'             reduce using rule 1154 (unqualified-id)
    '='             reduce using rule 1154 (unqualified-id)
    ';'             reduce using rule 145 (class-name)
    ';'             [reduce using rule 297 (enum-name)]
    ';'             [reduce using rule 1066 (template-name)]
    ';'             [reduce using rule 1124 (typedef-name)]
    ';'             [reduce using rule 1154 (unqualified-id)]
    "alignas"       reduce using rule 145 (class-name)
    "alignas"       [reduce using rule 297 (enum-name)]
    "alignas"       [reduce using rule 1066 (template-name)]
    "alignas"       [reduce using rule 1124 (typedef-name)]
    '('             reduce using rule 145 (class-name)
    '('             [reduce using rule 297 (enum-name)]
    '('             [reduce using rule 1066 (template-name)]
    '('             [reduce using rule 1124 (typedef-name)]
    '('             [reduce using rule 1154 (unqualified-id)]
    "..."           reduce using rule 145 (class-name)
    "..."           [reduce using rule 297 (enum-name)]
    "..."           [reduce using rule 1066 (template-name)]
    "..."           [reduce using rule 1124 (typedef-name)]
    "..."           [reduce using rule 1154 (unqualified-id)]
    '&'             reduce using rule 145 (class-name)
    '&'             [reduce using rule 297 (enum-name)]
    '&'             [reduce using rule 1066 (template-name)]
    '&'             [reduce using rule 1124 (typedef-name)]
    '&'             [reduce using rule 1154 (unqualified-id)]
    "*="            reduce using rule 1154 (unqualified-id)
    "/="            reduce using rule 1154 (unqualified-id)
    "%="            reduce using rule 1154 (unqualified-id)
    "+="            reduce using rule 1154 (unqualified-id)
    "-="            reduce using rule 1154 (unqualified-id)
    ">>="           reduce using rule 1154 (unqualified-id)
    "<<="           reduce using rule 1154 (unqualified-id)
    "&="            reduce using rule 1154 (unqualified-id)
    "^="            reduce using rule 1154 (unqualified-id)
    "|="            reduce using rule 1154 (unqualified-id)
    ','             reduce using rule 1154 (unqualified-id)
    "::"            reduce using rule 145 (class-name)
    "::"            [reduce using rule 297 (enum-name)]
    "::"            [reduce using rule 651 (namespace-alias)]
    "::"            [reduce using rule 657 (namespace-name)]
    "::"            [reduce using rule 1066 (template-name)]
    "::"            [reduce using rule 1124 (typedef-name)]
    '['             reduce using rule 145 (class-name)
    '['             [reduce using rule 297 (enum-name)]
    '['             [reduce using rule 1066 (template-name)]
    '['             [reduce using rule 1124 (typedef-name)]
    '['             [reduce using rule 1154 (unqualified-id)]
    '{'             reduce using rule 145 (class-name)
    '{'             [reduce using rule 297 (enum-name)]
    '{'             [reduce using rule 1066 (template-name)]
    '{'             [reduce using rule 1124 (typedef-name)]
    '}'             reduce using rule 1154 (unqualified-id)
    "virtual"       reduce using rule 145 (class-name)
    "virtual"       [reduce using rule 297 (enum-name)]
    "virtual"       [reduce using rule 1066 (template-name)]
    "virtual"       [reduce using rule 1124 (typedef-name)]
    "class"         reduce using rule 145 (class-name)
    "class"         [reduce using rule 297 (enum-name)]
    "class"         [reduce using rule 1066 (template-name)]
    "class"         [reduce using rule 1124 (typedef-name)]
    "struct"        reduce using rule 145 (class-name)
    "struct"        [reduce using rule 297 (enum-name)]
    "struct"        [reduce using rule 1066 (template-name)]
    "struct"        [reduce using rule 1124 (typedef-name)]
    "union"         reduce using rule 145 (class-name)
    "union"         [reduce using rule 297 (enum-name)]
    "union"         [reduce using rule 1066 (template-name)]
    "union"         [reduce using rule 1124 (typedef-name)]
    "<=>"           reduce using rule 1154 (unqualified-id)
    '?'             reduce using rule 1154 (unqualified-id)
    "&&"            reduce using rule 145 (class-name)
    "&&"            [reduce using rule 297 (enum-name)]
    "&&"            [reduce using rule 1066 (template-name)]
    "&&"            [reduce using rule 1124 (typedef-name)]
    "&&"            [reduce using rule 1154 (unqualified-id)]
    "||"            reduce using rule 1154 (unqualified-id)
    "operator"      reduce using rule 145 (class-name)
    "operator"      [reduce using rule 297 (enum-name)]
    "operator"      [reduce using rule 1066 (template-name)]
    "operator"      [reduce using rule 1124 (typedef-name)]
    "const"         reduce using rule 145 (class-name)
    "const"         [reduce using rule 297 (enum-name)]
    "const"         [reduce using rule 1066 (template-name)]
    "const"         [reduce using rule 1124 (typedef-name)]
    "volatile"      reduce using rule 145 (class-name)
    "volatile"      [reduce using rule 297 (enum-name)]
    "volatile"      [reduce using rule 1066 (template-name)]
    "volatile"      [reduce using rule 1124 (typedef-name)]
    "friend"        reduce using rule 145 (class-name)
    "friend"        [reduce using rule 297 (enum-name)]
    "friend"        [reduce using rule 1066 (template-name)]
    "friend"        [reduce using rule 1124 (typedef-name)]
    "typedef"       reduce using rule 145 (class-name)
    "typedef"       [reduce using rule 297 (enum-name)]
    "typedef"       [reduce using rule 1066 (template-name)]
    "typedef"       [reduce using rule 1124 (typedef-name)]
    "constexpr"     reduce using rule 145 (class-name)
    "constexpr"     [reduce using rule 297 (enum-name)]
    "constexpr"     [reduce using rule 1066 (template-name)]
    "constexpr"     [reduce using rule 1124 (typedef-name)]
    "consteval"     reduce using rule 145 (class-name)
    "consteval"     [reduce using rule 297 (enum-name)]
    "consteval"     [reduce using rule 1066 (template-name)]
    "consteval"     [reduce using rule 1124 (typedef-name)]
    "constinit"     reduce using rule 145 (class-name)
    "constinit"     [reduce using rule 297 (enum-name)]
    "constinit"     [reduce using rule 1066 (template-name)]
    "constinit"     [reduce using rule 1124 (typedef-name)]
    "inline"        reduce using rule 145 (class-name)
    "inline"        [reduce using rule 297 (enum-name)]
    "inline"        [reduce using rule 1066 (template-name)]
    "inline"        [reduce using rule 1124 (typedef-name)]
    "decltype"      reduce using rule 145 (class-name)
    "decltype"      [reduce using rule 163 (concept-name)]
    "decltype"      [reduce using rule 297 (enum-name)]
    "decltype"      [reduce using rule 1066 (template-name)]
    "decltype"      [reduce using rule 1124 (typedef-name)]
    "->"            reduce using rule 1154 (unqualified-id)
    '.'             reduce using rule 1154 (unqualified-id)
    "enum"          reduce using rule 145 (class-name)
    "enum"          [reduce using rule 297 (enum-name)]
    "enum"          [reduce using rule 1066 (template-name)]
    "enum"          [reduce using rule 1124 (typedef-name)]
    "=="            reduce using rule 1154 (unqualified-id)
    "!="            reduce using rule 1154 (unqualified-id)
    '^'             reduce using rule 1154 (unqualified-id)
    "extern"        reduce using rule 145 (class-name)
    "extern"        [reduce using rule 297 (enum-name)]
    "extern"        [reduce using rule 1066 (template-name)]
    "extern"        [reduce using rule 1124 (typedef-name)]
    '<'             reduce using rule 163 (concept-name)
    '<'             [reduce using rule 1066 (template-name)]
    '<'             [reduce using rule 1154 (unqualified-id)]
    '>'             reduce using rule 1154 (unqualified-id)
    "explicit"      reduce using rule 145 (class-name)
    "explicit"      [reduce using rule 297 (enum-name)]
    "explicit"      [reduce using rule 1066 (template-name)]
    "explicit"      [reduce using rule 1124 (typedef-name)]
    '*'             reduce using rule 145 (class-name)
    '*'             [reduce using rule 297 (enum-name)]
    '*'             [reduce using rule 1066 (template-name)]
    '*'             [reduce using rule 1124 (typedef-name)]
    '*'             [reduce using rule 1154 (unqualified-id)]
    '/'             reduce using rule 1154 (unqualified-id)
    '%'             reduce using rule 1154 (unqualified-id)
    '|'             reduce using rule 1154 (unqualified-id)
    "<<"            reduce using rule 1154 (unqualified-id)
    ">>"            reduce using rule 1154 (unqualified-id)
    "<="            reduce using rule 1154 (unqualified-id)
    ">="            reduce using rule 1154 (unqualified-id)
    ".*"            reduce using rule 1154 (unqualified-id)
    "->*"           reduce using rule 1154 (unqualified-id)
    '~'             reduce using rule 145 (class-name)
    '~'             [reduce using rule 297 (enum-name)]
    '~'             [reduce using rule 1066 (template-name)]
    '~'             [reduce using rule 1124 (typedef-name)]
    "++"            reduce using rule 1154 (unqualified-id)
    "--"            reduce using rule 1154 (unqualified-id)
    "auto"          reduce using rule 145 (class-name)
    "auto"          [reduce using rule 163 (concept-name)]
    "auto"          [reduce using rule 297 (enum-name)]
    "auto"          [reduce using rule 1066 (template-name)]
    "auto"          [reduce using rule 1124 (typedef-name)]
    "char"          reduce using rule 145 (class-name)
    "char"          [reduce using rule 297 (enum-name)]
    "char"          [reduce using rule 1066 (template-name)]
    "char"          [reduce using rule 1124 (typedef-name)]
    "char8_t"       reduce using rule 145 (class-name)
    "char8_t"       [reduce using rule 297 (enum-name)]
    "char8_t"       [reduce using rule 1066 (template-name)]
    "char8_t"       [reduce using rule 1124 (typedef-name)]
    "char16_t"      reduce using rule 145 (class-name)
    "char16_t"      [reduce using rule 297 (enum-name)]
    "char16_t"      [reduce using rule 1066 (template-name)]
    "char16_t"      [reduce using rule 1124 (typedef-name)]
    "char32_t"      reduce using rule 145 (class-name)
    "char32_t"      [reduce using rule 297 (enum-name)]
    "char32_t"      [reduce using rule 1066 (template-name)]
    "char32_t"      [reduce using rule 1124 (typedef-name)]
    "wchar_t"       reduce using rule 145 (class-name)
    "wchar_t"       [reduce using rule 297 (enum-name)]
    "wchar_t"       [reduce using rule 1066 (template-name)]
    "wchar_t"       [reduce using rule 1124 (typedef-name)]
    "bool"          reduce using rule 145 (class-name)
    "bool"          [reduce using rule 297 (enum-name)]
    "bool"          [reduce using rule 1066 (template-name)]
    "bool"          [reduce using rule 1124 (typedef-name)]
    "short"         reduce using rule 145 (class-name)
    "short"         [reduce using rule 297 (enum-name)]
    "short"         [reduce using rule 1066 (template-name)]
    "short"         [reduce using rule 1124 (typedef-name)]
    "int"           reduce using rule 145 (class-name)
    "int"           [reduce using rule 297 (enum-name)]
    "int"           [reduce using rule 1066 (template-name)]
    "int"           [reduce using rule 1124 (typedef-name)]
    "long"          reduce using rule 145 (class-name)
    "long"          [reduce using rule 297 (enum-name)]
    "long"          [reduce using rule 1066 (template-name)]
    "long"          [reduce using rule 1124 (typedef-name)]
    "signed"        reduce using rule 145 (class-name)
    "signed"        [reduce using rule 297 (enum-name)]
    "signed"        [reduce using rule 1066 (template-name)]
    "signed"        [reduce using rule 1124 (typedef-name)]
    "unsigned"      reduce using rule 145 (class-name)
    "unsigned"      [reduce using rule 297 (enum-name)]
    "unsigned"      [reduce using rule 1066 (template-name)]
    "unsigned"      [reduce using rule 1124 (typedef-name)]
    "float"         reduce using rule 145 (class-name)
    "float"         [reduce using rule 297 (enum-name)]
    "float"         [reduce using rule 1066 (template-name)]
    "float"         [reduce using rule 1124 (typedef-name)]
    "double"        reduce using rule 145 (class-name)
    "double"        [reduce using rule 297 (enum-name)]
    "double"        [reduce using rule 1066 (template-name)]
    "double"        [reduce using rule 1124 (typedef-name)]
    "void"          reduce using rule 145 (class-name)
    "void"          [reduce using rule 297 (enum-name)]
    "void"          [reduce using rule 1066 (template-name)]
    "void"          [reduce using rule 1124 (typedef-name)]
    "static"        reduce using rule 145 (class-name)
    "static"        [reduce using rule 297 (enum-name)]
    "static"        [reduce using rule 1066 (template-name)]
    "static"        [reduce using rule 1124 (typedef-name)]
    "thread_local"  reduce using rule 145 (class-name)
    "thread_local"  [reduce using rule 297 (enum-name)]
    "thread_local"  [reduce using rule 1066 (template-name)]
    "thread_local"  [reduce using rule 1124 (typedef-name)]
    "mutable"       reduce using rule 145 (class-name)
    "mutable"       [reduce using rule 297 (enum-name)]
    "mutable"       [reduce using rule 1066 (template-name)]
    "mutable"       [reduce using rule 1124 (typedef-name)]
    "typename"      reduce using rule 145 (class-name)
    "typename"      [reduce using rule 297 (enum-name)]
    "typename"      [reduce using rule 1066 (template-name)]
    "typename"      [reduce using rule 1124 (typedef-name)]
    $default        reduce using rule 145 (class-name)


State 666

  341 expression-statement: ';' •

    $default  reduce using rule 341 (expression-statement)


State 667

   50 attribute-specifier: '[' • '[' attribute-list ']' ']'
   51                    | '[' • '[' attribute-using-prefix attribute-list ']' ']'
  538 lambda-introducer: '[' • ']'
  539                  | '[' • lambda-capture ']'

    IDENTIFIER  shift, and go to state 766
    '='         shift, and go to state 767
    "..."       shift, and go to state 768
    '&'         shift, and go to state 769
    '['         shift, and go to state 156
    ']'         shift, and go to state 770
    '*'         shift, and go to state 771
    "this"      shift, and go to state 772

    capture          go to state 773
    capture-default  go to state 774
    capture-list     go to state 775
    init-capture     go to state 776
    lambda-capture   go to state 777
    simple-capture   go to state 778


State 668

  160 compound-statement: '{' '}' •

    $default  reduce using rule 160 (compound-statement)


State 669

  182 coroutine-return-statement: "co_return" • ';'
  183                           | "co_return" • expr-or-braced-init-list ';'

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    ';'                 shift, and go to state 1166
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 939
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 530
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    braced-init-list                     go to state 1167
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    expr-or-braced-init-list             go to state 1168
    expression                           go to state 1169
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 670

  528 labeled-statement: "default" • ':' statement

    ':'  shift, and go to state 1170


State 671

  1083 try-block: "try" • compound-statement handler-seq

    '{'  shift, and go to state 294

    compound-statement  go to state 1171


State 672

  509 iteration-statement: "while" • '(' condition ')' statement

    '('  shift, and go to state 1172


State 673

  510 iteration-statement: "do" • statement "while" '(' expression ')' ';'

    IDENTIFIER          shift, and go to state 665
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    "using"             shift, and go to state 2
    ';'                 shift, and go to state 666
    "alignas"           shift, and go to state 4
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "asm"               shift, and go to state 8
    "::"                shift, and go to state 365
    '['                 shift, and go to state 667
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 294
    "virtual"           shift, and go to state 11
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "co_return"         shift, and go to state 669
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "friend"            shift, and go to state 20
    "typedef"           shift, and go to state 21
    "constexpr"         shift, and go to state 22
    "consteval"         shift, and go to state 23
    "constinit"         shift, and go to state 24
    "inline"            shift, and go to state 263
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 27
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    "extern"            shift, and go to state 264
    "explicit"          shift, and go to state 29
    '*'                 shift, and go to state 386
    "default"           shift, and go to state 670
    "try"               shift, and go to state 671
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "while"             shift, and go to state 672
    "do"                shift, and go to state 673
    "for"               shift, and go to state 674
    "break"             shift, and go to state 675
    "continue"          shift, and go to state 676
    "return"            shift, and go to state 677
    "goto"              shift, and go to state 678
    "case"              shift, and go to state 679
    "namespace"         shift, and go to state 680
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "if"                shift, and go to state 681
    "switch"            shift, and go to state 682
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    "static_assert"     shift, and go to state 52
    "static"            shift, and go to state 53
    "thread_local"      shift, and go to state 54
    "mutable"           shift, and go to state 55
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    alias-declaration                    go to state 57
    alignment-specifier                  go to state 58
    and-expression                       go to state 405
    asm-declaration                      go to state 59
    assignment-expression                go to state 530
    attribute-specifier                  go to state 61
    attribute-specifier-seq              go to state 683
    await-expression                     go to state 406
    binary-literal                       go to state 407
    block-declaration                    go to state 684
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-head                           go to state 64
    class-key                            go to state 65
    class-name                           go to state 66
    class-specifier                      go to state 67
    compare-expression                   go to state 411
    compound-statement                   go to state 685
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    coroutine-return-statement           go to state 686
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decl-specifier                       go to state 71
    decl-specifier-seq                   go to state 687
    declaration-statement                go to state 688
    decltype-specifier                   go to state 77
    defining-type-specifier              go to state 79
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-head                            go to state 83
    enum-key                             go to state 84
    enum-name                            go to state 85
    enum-specifier                       go to state 86
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    explicit-specifier                   go to state 269
    expression                           go to state 689
    expression-statement                 go to state 690
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    function-specifier                   go to state 92
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    iteration-statement                  go to state 691
    jump-statement                       go to state 692
    labeled-statement                    go to state 693
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-alias-definition           go to state 101
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    opaque-enum-declaration              go to state 108
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    selection-statement                  go to state 694
    shift-expression                     go to state 448
    simple-declaration                   go to state 114
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    statement                            go to state 1173
    static_assert-declaration            go to state 117
    storage-class-specifier              go to state 118
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    try-block                            go to state 697
    type-constraint                      go to state 124
    type-name                            go to state 125
    type-specifier                       go to state 126
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    using-declaration                    go to state 131
    using-directive                      go to state 132
    using-enum-declaration               go to state 133
    yield-expression                     go to state 537


State 674

  511 iteration-statement: "for" • '(' init-statement ';' ')' statement
  512                    | "for" • '(' init-statement condition ';' ')' statement
  513                    | "for" • '(' init-statement ';' expression ')' statement
  514                    | "for" • '(' init-statement condition ';' expression ')' statement
  515                    | "for" • '(' for-range-declaration ':' for-range-initializer ')' statement
  516                    | "for" • '(' init-statement for-range-declaration ':' for-range-initializer ')' statement

    '('  shift, and go to state 1174


State 675

  517 jump-statement: "break" • ';'

    ';'  shift, and go to state 1175


State 676

  518 jump-statement: "continue" • ';'

    ';'  shift, and go to state 1176


State 677

  519 jump-statement: "return" • ';'
  520               | "return" • expr-or-braced-init-list ';'

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    ';'                 shift, and go to state 1177
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 939
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 530
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    braced-init-list                     go to state 1167
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    expr-or-braced-init-list             go to state 1178
    expression                           go to state 1169
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 678

  522 jump-statement: "goto" • IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 1179


State 679

  526 labeled-statement: "case" • constant-expression ':' statement

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    additive-expression                  go to state 404
    and-expression                       go to state 405
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 412
    constant-expression                  go to state 1180
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 435
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 680

  652 namespace-alias-definition: "namespace" • IDENTIFIER '=' qualified-namespace-specifier ';'

    IDENTIFIER  shift, and go to state 1181


State 681

  952 selection-statement: "if" • '(' condition ')' statement
  953                    | "if" • "constexpr" '(' condition ')' statement
  954                    | "if" • '(' init-statement condition ')' statement
  955                    | "if" • "constexpr" '(' init-statement condition ')' statement
  956                    | "if" • '(' condition ')' statement "else" statement
  957                    | "if" • "constexpr" '(' condition ')' statement "else" statement
  958                    | "if" • '(' init-statement condition ')' statement "else" statement
  959                    | "if" • "constexpr" '(' init-statement condition ')' statement "else" statement
  960                    | "if" • "consteval" compound-statement
  961                    | "if" • '!' "consteval" compound-statement
  962                    | "if" • "consteval" compound-statement "else" statement
  963                    | "if" • '!' "consteval" compound-statement "else" statement

    '('          shift, and go to state 1182
    "constexpr"  shift, and go to state 1183
    "consteval"  shift, and go to state 1184
    '!'          shift, and go to state 1185


State 682

  964 selection-statement: "switch" • '(' condition ')' statement
  965                    | "switch" • '(' init-statement condition ')' statement

    '('  shift, and go to state 1186


State 683

   21 asm-declaration: attribute-specifier-seq • "asm" '(' string-literal ')' ';'
   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  523 labeled-statement: attribute-specifier-seq • IDENTIFIER ':' statement
  525                  | attribute-specifier-seq • "case" constant-expression ':' statement
  527                  | attribute-specifier-seq • "default" ':' statement
  979 simple-declaration: attribute-specifier-seq • decl-specifier-seq init-declarator-list ';'
  980                   | attribute-specifier-seq • decl-specifier-seq '[' identifier-list ']' initializer ';'
  982                   | attribute-specifier-seq • decl-specifier-seq ref-qualifier '[' identifier-list ']' initializer ';'
  1023 statement: attribute-specifier-seq • expression-statement
  1025          | attribute-specifier-seq • compound-statement
  1027          | attribute-specifier-seq • selection-statement
  1029          | attribute-specifier-seq • iteration-statement
  1031          | attribute-specifier-seq • jump-statement
  1034          | attribute-specifier-seq • try-block
  1185 using-directive: attribute-specifier-seq • "using" "namespace" namespace-name ';'
  1187                | attribute-specifier-seq • "using" "namespace" nested-name-specifier namespace-name ';'

    IDENTIFIER          shift, and go to state 1187
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    "using"             shift, and go to state 260
    ';'                 shift, and go to state 666
    "alignas"           shift, and go to state 4
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "asm"               shift, and go to state 262
    "::"                shift, and go to state 365
    '['                 shift, and go to state 667
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 294
    "virtual"           shift, and go to state 11
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "co_return"         shift, and go to state 669
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "friend"            shift, and go to state 20
    "typedef"           shift, and go to state 21
    "constexpr"         shift, and go to state 22
    "consteval"         shift, and go to state 23
    "constinit"         shift, and go to state 24
    "inline"            shift, and go to state 263
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 27
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    "extern"            shift, and go to state 264
    "explicit"          shift, and go to state 29
    '*'                 shift, and go to state 386
    "default"           shift, and go to state 1188
    "try"               shift, and go to state 671
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "while"             shift, and go to state 672
    "do"                shift, and go to state 673
    "for"               shift, and go to state 674
    "break"             shift, and go to state 675
    "continue"          shift, and go to state 676
    "return"            shift, and go to state 677
    "goto"              shift, and go to state 678
    "case"              shift, and go to state 1189
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "if"                shift, and go to state 681
    "switch"            shift, and go to state 682
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    "static"            shift, and go to state 53
    "thread_local"      shift, and go to state 54
    "mutable"           shift, and go to state 55
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    alignment-specifier                  go to state 58
    and-expression                       go to state 405
    assignment-expression                go to state 530
    attribute-specifier                  go to state 265
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-head                           go to state 64
    class-key                            go to state 65
    class-name                           go to state 66
    class-specifier                      go to state 67
    compare-expression                   go to state 411
    compound-statement                   go to state 1190
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    coroutine-return-statement           go to state 686
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decl-specifier                       go to state 71
    decl-specifier-seq                   go to state 1191
    decltype-specifier                   go to state 77
    defining-type-specifier              go to state 79
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-head                            go to state 83
    enum-key                             go to state 268
    enum-name                            go to state 85
    enum-specifier                       go to state 86
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    explicit-specifier                   go to state 269
    expression                           go to state 689
    expression-statement                 go to state 1192
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    function-specifier                   go to state 92
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    iteration-statement                  go to state 1193
    jump-statement                       go to state 1194
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    selection-statement                  go to state 1195
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    storage-class-specifier              go to state 118
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    try-block                            go to state 1196
    type-constraint                      go to state 124
    type-name                            go to state 125
    type-specifier                       go to state 126
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 684

  228 declaration-statement: block-declaration •

    $default  reduce using rule 228 (declaration-statement)


State 685

  1026 statement: compound-statement •

    $default  reduce using rule 1026 (statement)


State 686

  521 jump-statement: coroutine-return-statement •

    $default  reduce using rule 521 (jump-statement)


State 687

  977 simple-declaration: decl-specifier-seq • ';'
  978                   | decl-specifier-seq • init-declarator-list ';'
  981                   | decl-specifier-seq • '[' identifier-list ']' initializer ';'
  983                   | decl-specifier-seq • ref-qualifier '[' identifier-list ']' initializer ';'

    IDENTIFIER  shift, and go to state 148
    ';'         shift, and go to state 282
    '('         shift, and go to state 5
    "..."       shift, and go to state 6
    '&'         shift, and go to state 283
    "::"        shift, and go to state 9
    '['         shift, and go to state 284
    "&&"        shift, and go to state 285
    "operator"  shift, and go to state 17
    "decltype"  shift, and go to state 135
    '*'         shift, and go to state 32
    '~'         shift, and go to state 36

    class-name              go to state 66
    conversion-function-id  go to state 69
    declarator              go to state 1156
    declarator-id           go to state 76
    decltype-specifier      go to state 139
    enum-name               go to state 85
    id-expression           go to state 94
    init-declarator         go to state 287
    init-declarator-list    go to state 288
    literal-operator-id     go to state 96
    namespace-alias         go to state 100
    namespace-name          go to state 103
    nested-name-specifier   go to state 149
    noptr-declarator        go to state 107
    operator-function-id    go to state 109
    ptr-declarator          go to state 111
    ptr-operator            go to state 112
    qualified-id            go to state 113
    ref-qualifier           go to state 289
    simple-template-id      go to state 115
    template-id             go to state 121
    template-name           go to state 143
    type-name               go to state 144
    typedef-name            go to state 127
    unqualified-id          go to state 130


State 688

  1033 statement: declaration-statement •

    $default  reduce using rule 1033 (statement)


State 689

  338 expression: expression • ',' assignment-expression
  340 expression-statement: expression • ';'

    ';'  shift, and go to state 1197
    ','  shift, and go to state 1037


State 690

  1024 statement: expression-statement •

    $default  reduce using rule 1024 (statement)


State 691

  1030 statement: iteration-statement •

    $default  reduce using rule 1030 (statement)


State 692

  1032 statement: jump-statement •

    $default  reduce using rule 1032 (statement)


State 693

  1022 statement: labeled-statement •

    $default  reduce using rule 1022 (statement)


State 694

  1028 statement: selection-statement •

    $default  reduce using rule 1028 (statement)


State 695

  1036 statement-seq: statement •

    $default  reduce using rule 1036 (statement-seq)


State 696

  161 compound-statement: '{' statement-seq • '}'
  1037 statement-seq: statement-seq • statement

    IDENTIFIER          shift, and go to state 665
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    "using"             shift, and go to state 2
    ';'                 shift, and go to state 666
    "alignas"           shift, and go to state 4
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "asm"               shift, and go to state 8
    "::"                shift, and go to state 365
    '['                 shift, and go to state 667
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 294
    '}'                 shift, and go to state 1198
    "virtual"           shift, and go to state 11
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "co_return"         shift, and go to state 669
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "friend"            shift, and go to state 20
    "typedef"           shift, and go to state 21
    "constexpr"         shift, and go to state 22
    "consteval"         shift, and go to state 23
    "constinit"         shift, and go to state 24
    "inline"            shift, and go to state 263
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 27
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    "extern"            shift, and go to state 264
    "explicit"          shift, and go to state 29
    '*'                 shift, and go to state 386
    "default"           shift, and go to state 670
    "try"               shift, and go to state 671
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "while"             shift, and go to state 672
    "do"                shift, and go to state 673
    "for"               shift, and go to state 674
    "break"             shift, and go to state 675
    "continue"          shift, and go to state 676
    "return"            shift, and go to state 677
    "goto"              shift, and go to state 678
    "case"              shift, and go to state 679
    "namespace"         shift, and go to state 680
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "if"                shift, and go to state 681
    "switch"            shift, and go to state 682
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    "static_assert"     shift, and go to state 52
    "static"            shift, and go to state 53
    "thread_local"      shift, and go to state 54
    "mutable"           shift, and go to state 55
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    alias-declaration                    go to state 57
    alignment-specifier                  go to state 58
    and-expression                       go to state 405
    asm-declaration                      go to state 59
    assignment-expression                go to state 530
    attribute-specifier                  go to state 61
    attribute-specifier-seq              go to state 683
    await-expression                     go to state 406
    binary-literal                       go to state 407
    block-declaration                    go to state 684
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-head                           go to state 64
    class-key                            go to state 65
    class-name                           go to state 66
    class-specifier                      go to state 67
    compare-expression                   go to state 411
    compound-statement                   go to state 685
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    coroutine-return-statement           go to state 686
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decl-specifier                       go to state 71
    decl-specifier-seq                   go to state 687
    declaration-statement                go to state 688
    decltype-specifier                   go to state 77
    defining-type-specifier              go to state 79
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-head                            go to state 83
    enum-key                             go to state 84
    enum-name                            go to state 85
    enum-specifier                       go to state 86
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    explicit-specifier                   go to state 269
    expression                           go to state 689
    expression-statement                 go to state 690
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    function-specifier                   go to state 92
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    iteration-statement                  go to state 691
    jump-statement                       go to state 692
    labeled-statement                    go to state 693
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-alias-definition           go to state 101
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    opaque-enum-declaration              go to state 108
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    selection-statement                  go to state 694
    shift-expression                     go to state 448
    simple-declaration                   go to state 114
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    statement                            go to state 1199
    static_assert-declaration            go to state 117
    storage-class-specifier              go to state 118
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    try-block                            go to state 697
    type-constraint                      go to state 124
    type-name                            go to state 125
    type-specifier                       go to state 126
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    using-declaration                    go to state 131
    using-directive                      go to state 132
    using-enum-declaration               go to state 133
    yield-expression                     go to state 537


State 697

  1035 statement: try-block •

    $default  reduce using rule 1035 (statement)


State 698

  412 function-try-block: "try" compound-statement • handler-seq

    "catch"  shift, and go to state 1200

    handler      go to state 1201
    handler-seq  go to state 1202


State 699

  413 function-try-block: "try" ctor-initializer • compound-statement handler-seq

    '{'  shift, and go to state 294

    compound-statement  go to state 1203


State 700

  348 fold-expression: '(' • cast-expression fold-operator "..." ')'
  349                | '(' • "..." fold-operator cast-expression ')'
  350                | '(' • cast-expression fold-operator "..." fold-operator cast-expression ')'
  885 primary-expression: '(' • expression ')'

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    "..."               shift, and go to state 760
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 530
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 761
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    expression                           go to state 762
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 701

  174 constraint-logical-and-expression: constraint-logical-and-expression • "&&" primary-expression
  175 constraint-logical-or-expression: constraint-logical-and-expression •

    "&&"  shift, and go to state 1204

    "&&"      [reduce using rule 175 (constraint-logical-or-expression)]
    $default  reduce using rule 175 (constraint-logical-or-expression)


State 702

  176 constraint-logical-or-expression: constraint-logical-or-expression • "||" constraint-logical-and-expression
  943 requires-clause: "requires" constraint-logical-or-expression •

    "||"  shift, and go to state 1205

    $default  reduce using rule 943 (requires-clause)


State 703

  173 constraint-logical-and-expression: primary-expression •

    $default  reduce using rule 173 (constraint-logical-and-expression)


State 704

  393 function-body: ctor-initializer compound-statement •

    $default  reduce using rule 393 (function-body)


State 705

  407 function-definition: declarator requires-clause function-body •

    $default  reduce using rule 407 (function-definition)


State 706

  403 function-definition: declarator virt-specifier-seq function-body •

    $default  reduce using rule 403 (function-definition)


State 707

  1193 virt-specifier-seq: virt-specifier-seq virt-specifier •

    $default  reduce using rule 1193 (virt-specifier-seq)


State 708

  301 enumerator: IDENTIFIER •
  302           | IDENTIFIER • attribute-specifier-seq

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    $default  reduce using rule 301 (enumerator)

    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 1206


State 709

  298 enum-specifier: enum-head '{' '}' •

    $default  reduce using rule 298 (enum-specifier)


State 710

  303 enumerator-definition: enumerator •
  304                      | enumerator • '=' constant-expression

    '='  shift, and go to state 1207

    $default  reduce using rule 303 (enumerator-definition)


State 711

  305 enumerator-list: enumerator-definition •

    $default  reduce using rule 305 (enumerator-list)


State 712

  299 enum-specifier: enum-head '{' enumerator-list • '}'
  300               | enum-head '{' enumerator-list • ',' '}'
  306 enumerator-list: enumerator-list • ',' enumerator-definition

    ','  shift, and go to state 1208
    '}'  shift, and go to state 1209


State 713

  283 enum-base: ':' type-specifier-seq •

    $default  reduce using rule 283 (enum-base)


State 714

  289 enum-head: enum-key attribute-specifier-seq enum-base •

    $default  reduce using rule 289 (enum-head)


State 715

  287 enum-head: enum-key attribute-specifier-seq enum-head-name •
  291          | enum-key attribute-specifier-seq enum-head-name • enum-base
  756 opaque-enum-declaration: enum-key attribute-specifier-seq enum-head-name • ';'
  758                        | enum-key attribute-specifier-seq enum-head-name • enum-base ';'

    ';'  shift, and go to state 1210
    ':'  shift, and go to state 310

    $default  reduce using rule 287 (enum-head)

    enum-base  go to state 1211


State 716

  755 opaque-enum-declaration: enum-key enum-head-name ';' •

    $default  reduce using rule 755 (opaque-enum-declaration)


State 717

  290 enum-head: enum-key enum-head-name enum-base •
  757 opaque-enum-declaration: enum-key enum-head-name enum-base • ';'

    ';'  shift, and go to state 1212

    $default  reduce using rule 290 (enum-head)


State 718

  292 enum-head-name: nested-name-specifier IDENTIFIER •
  663 nested-name-specifier: nested-name-specifier IDENTIFIER • "::"
  1066 template-name: IDENTIFIER •

    "::"  shift, and go to state 726

    '<'       reduce using rule 1066 (template-name)
    $default  reduce using rule 292 (enum-head-name)


State 719

  234 deduction-guide: explicit-specifier template-name '(' • parameter-declaration-clause ')' "->" simple-template-id ';'

    IDENTIFIER      shift, and go to state 161
    "alignas"       shift, and go to state 4
    "..."           shift, and go to state 734
    "::"            shift, and go to state 9
    '['             shift, and go to state 10
    "virtual"       shift, and go to state 11
    "class"         shift, and go to state 12
    "struct"        shift, and go to state 13
    "union"         shift, and go to state 14
    "const"         shift, and go to state 18
    "volatile"      shift, and go to state 19
    "friend"        shift, and go to state 20
    "typedef"       shift, and go to state 21
    "constexpr"     shift, and go to state 22
    "consteval"     shift, and go to state 23
    "constinit"     shift, and go to state 24
    "inline"        shift, and go to state 263
    "decltype"      shift, and go to state 26
    "enum"          shift, and go to state 27
    "extern"        shift, and go to state 264
    "explicit"      shift, and go to state 29
    "this"          shift, and go to state 476
    "auto"          shift, and go to state 37
    "char"          shift, and go to state 38
    "char8_t"       shift, and go to state 39
    "char16_t"      shift, and go to state 40
    "char32_t"      shift, and go to state 41
    "wchar_t"       shift, and go to state 42
    "bool"          shift, and go to state 43
    "short"         shift, and go to state 44
    "int"           shift, and go to state 45
    "long"          shift, and go to state 46
    "signed"        shift, and go to state 47
    "unsigned"      shift, and go to state 48
    "float"         shift, and go to state 49
    "double"        shift, and go to state 50
    "void"          shift, and go to state 51
    "static"        shift, and go to state 53
    "thread_local"  shift, and go to state 54
    "mutable"       shift, and go to state 55
    "typename"      shift, and go to state 56

    alignment-specifier           go to state 58
    attribute-specifier           go to state 61
    attribute-specifier-seq       go to state 478
    class-head                    go to state 64
    class-key                     go to state 65
    class-name                    go to state 66
    class-specifier               go to state 67
    concept-name                  go to state 68
    cv-qualifier                  go to state 70
    decl-specifier                go to state 71
    decl-specifier-seq            go to state 479
    decltype-specifier            go to state 77
    defining-type-specifier       go to state 79
    elaborated-enum-specifier     go to state 80
    elaborated-type-specifier     go to state 81
    enum-head                     go to state 83
    enum-key                      go to state 268
    enum-name                     go to state 85
    enum-specifier                go to state 86
    explicit-specifier            go to state 269
    function-specifier            go to state 92
    namespace-alias               go to state 100
    namespace-name                go to state 103
    nested-name-specifier         go to state 213
    parameter-declaration         go to state 735
    parameter-declaration-clause  go to state 1213
    parameter-declaration-list    go to state 737
    placeholder-type-specifier    go to state 110
    simple-template-id            go to state 142
    simple-type-specifier         go to state 116
    storage-class-specifier       go to state 118
    template-name                 go to state 216
    type-constraint               go to state 124
    type-name                     go to state 125
    type-specifier                go to state 126
    typedef-name                  go to state 127
    typename-specifier            go to state 128


State 720

  227 declaration-seq: declaration-seq • declaration
  1077 translation-unit: global-module-fragment module-declaration declaration-seq •
  1081                 | global-module-fragment module-declaration declaration-seq • private-module-fragment

    IDENTIFIER        shift, and go to state 1
    "using"           shift, and go to state 2
    ';'               shift, and go to state 3
    "alignas"         shift, and go to state 4
    '('               shift, and go to state 5
    "..."             shift, and go to state 6
    '&'               shift, and go to state 7
    "asm"             shift, and go to state 8
    "::"              shift, and go to state 9
    '['               shift, and go to state 10
    "virtual"         shift, and go to state 11
    "class"           shift, and go to state 12
    "struct"          shift, and go to state 13
    "union"           shift, and go to state 14
    "template"        shift, and go to state 15
    "&&"              shift, and go to state 16
    "operator"        shift, and go to state 17
    "const"           shift, and go to state 18
    "volatile"        shift, and go to state 19
    "friend"          shift, and go to state 20
    "typedef"         shift, and go to state 21
    "constexpr"       shift, and go to state 22
    "consteval"       shift, and go to state 23
    "constinit"       shift, and go to state 24
    "inline"          shift, and go to state 25
    "decltype"        shift, and go to state 26
    "enum"            shift, and go to state 27
    "extern"          shift, and go to state 28
    "explicit"        shift, and go to state 29
    "export"          shift, and go to state 30
    "export-keyword"  shift, and go to state 158
    '*'               shift, and go to state 32
    "module-keyword"  shift, and go to state 321
    "import-keyword"  shift, and go to state 34
    "namespace"       shift, and go to state 35
    '~'               shift, and go to state 36
    "auto"            shift, and go to state 37
    "char"            shift, and go to state 38
    "char8_t"         shift, and go to state 39
    "char16_t"        shift, and go to state 40
    "char32_t"        shift, and go to state 41
    "wchar_t"         shift, and go to state 42
    "bool"            shift, and go to state 43
    "short"           shift, and go to state 44
    "int"             shift, and go to state 45
    "long"            shift, and go to state 46
    "signed"          shift, and go to state 47
    "unsigned"        shift, and go to state 48
    "float"           shift, and go to state 49
    "double"          shift, and go to state 50
    "void"            shift, and go to state 51
    "static_assert"   shift, and go to state 52
    "static"          shift, and go to state 53
    "thread_local"    shift, and go to state 54
    "mutable"         shift, and go to state 55
    "typename"        shift, and go to state 56

    $default  reduce using rule 1077 (translation-unit)

    alias-declaration                go to state 57
    alignment-specifier              go to state 58
    asm-declaration                  go to state 59
    attribute-declaration            go to state 60
    attribute-specifier              go to state 61
    attribute-specifier-seq          go to state 62
    block-declaration                go to state 63
    class-head                       go to state 64
    class-key                        go to state 65
    class-name                       go to state 66
    class-specifier                  go to state 67
    concept-name                     go to state 68
    conversion-function-id           go to state 69
    cv-qualifier                     go to state 70
    decl-specifier                   go to state 71
    decl-specifier-seq               go to state 72
    declaration                      go to state 290
    declarator                       go to state 75
    declarator-id                    go to state 76
    decltype-specifier               go to state 77
    deduction-guide                  go to state 78
    defining-type-specifier          go to state 79
    elaborated-enum-specifier        go to state 80
    elaborated-type-specifier        go to state 81
    empty-declaration                go to state 82
    enum-head                        go to state 83
    enum-key                         go to state 84
    enum-name                        go to state 85
    enum-specifier                   go to state 86
    explicit-instantiation           go to state 87
    explicit-specialization          go to state 88
    explicit-specifier               go to state 89
    export-declaration               go to state 90
    function-definition              go to state 91
    function-specifier               go to state 92
    id-expression                    go to state 94
    linkage-specification            go to state 95
    literal-operator-id              go to state 96
    module-import-declaration        go to state 98
    named-namespace-definition       go to state 99
    namespace-alias                  go to state 100
    namespace-alias-definition       go to state 101
    namespace-definition             go to state 102
    namespace-name                   go to state 103
    nested-name-specifier            go to state 104
    nested-namespace-definition      go to state 105
    nodeclspec-function-declaration  go to state 106
    noptr-declarator                 go to state 107
    opaque-enum-declaration          go to state 108
    operator-function-id             go to state 109
    placeholder-type-specifier       go to state 110
    private-module-fragment          go to state 1214
    ptr-declarator                   go to state 111
    ptr-operator                     go to state 112
    qualified-id                     go to state 113
    simple-declaration               go to state 114
    simple-template-id               go to state 115
    simple-type-specifier            go to state 116
    static_assert-declaration        go to state 117
    storage-class-specifier          go to state 118
    template-declaration             go to state 119
    template-head                    go to state 120
    template-id                      go to state 121
    template-name                    go to state 122
    type-constraint                  go to state 124
    type-name                        go to state 125
    type-specifier                   go to state 126
    typedef-name                     go to state 127
    typename-specifier               go to state 128
    unnamed-namespace-definition     go to state 129
    unqualified-id                   go to state 130
    using-declaration                go to state 131
    using-directive                  go to state 132
    using-enum-declaration           go to state 133


State 721

  1079 translation-unit: global-module-fragment module-declaration private-module-fragment •

    $default  reduce using rule 1079 (translation-unit)


State 722

  1064 template-id: literal-operator-id '<' '>' •

    $default  reduce using rule 1064 (template-id)


State 723

  1055 template-argument-list: template-argument-list • ',' template-argument
  1056                       | template-argument-list • ',' template-argument "..."
  1065 template-id: literal-operator-id '<' template-argument-list • '>'

    ','  shift, and go to state 1136
    '>'  shift, and go to state 1215


State 724

  890 private-module-fragment: "module-keyword" ':' • "private" ';'
  891                        | "module-keyword" ':' • "private" ';' declaration-seq

    "private"  shift, and go to state 1216


State 725

  1082 translation-unit: module-declaration declaration-seq private-module-fragment •

    $default  reduce using rule 1082 (translation-unit)


State 726

  663 nested-name-specifier: nested-name-specifier IDENTIFIER "::" •

    $default  reduce using rule 663 (nested-name-specifier)


State 727

  1066 template-name: IDENTIFIER •
  1154 unqualified-id: IDENTIFIER •

    '<'       reduce using rule 1066 (template-name)
    '<'       [reduce using rule 1154 (unqualified-id)]
    $default  reduce using rule 1154 (unqualified-id)


State 728

  665 nested-name-specifier: nested-name-specifier "template" simple-template-id • "::"
  1001 simple-type-specifier: nested-name-specifier "template" simple-template-id •
  1061 template-id: simple-template-id •

    "::"  shift, and go to state 1217

    '+'         reduce using rule 1061 (template-id)
    '-'         reduce using rule 1061 (template-id)
    '='         reduce using rule 1001 (simple-type-specifier)
    '='         [reduce using rule 1061 (template-id)]
    ';'         reduce using rule 1001 (simple-type-specifier)
    ';'         [reduce using rule 1061 (template-id)]
    "alignas"   reduce using rule 1001 (simple-type-specifier)
    "alignas"   [reduce using rule 1061 (template-id)]
    '('         reduce using rule 1001 (simple-type-specifier)
    '('         [reduce using rule 1061 (template-id)]
    ')'         reduce using rule 1001 (simple-type-specifier)
    ')'         [reduce using rule 1061 (template-id)]
    "..."       reduce using rule 1001 (simple-type-specifier)
    "..."       [reduce using rule 1061 (template-id)]
    '&'         reduce using rule 1001 (simple-type-specifier)
    '&'         [reduce using rule 1061 (template-id)]
    "*="        reduce using rule 1061 (template-id)
    "/="        reduce using rule 1061 (template-id)
    "%="        reduce using rule 1061 (template-id)
    "+="        reduce using rule 1061 (template-id)
    "-="        reduce using rule 1061 (template-id)
    ">>="       reduce using rule 1061 (template-id)
    "<<="       reduce using rule 1061 (template-id)
    "&="        reduce using rule 1061 (template-id)
    "^="        reduce using rule 1061 (template-id)
    "|="        reduce using rule 1061 (template-id)
    ','         reduce using rule 1001 (simple-type-specifier)
    ','         [reduce using rule 1061 (template-id)]
    "::"        [reduce using rule 1001 (simple-type-specifier)]
    '['         reduce using rule 1001 (simple-type-specifier)
    '['         [reduce using rule 1061 (template-id)]
    ']'         reduce using rule 1061 (template-id)
    ':'         reduce using rule 1001 (simple-type-specifier)
    ':'         [reduce using rule 1061 (template-id)]
    '{'         reduce using rule 1001 (simple-type-specifier)
    '{'         [reduce using rule 1061 (template-id)]
    '}'         reduce using rule 1061 (template-id)
    "final"     reduce using rule 1061 (template-id)
    "<=>"       reduce using rule 1061 (template-id)
    '?'         reduce using rule 1061 (template-id)
    "&&"        reduce using rule 1001 (simple-type-specifier)
    "&&"        [reduce using rule 1061 (template-id)]
    "||"        reduce using rule 1061 (template-id)
    "->"        reduce using rule 1061 (template-id)
    '.'         reduce using rule 1061 (template-id)
    "=="        reduce using rule 1061 (template-id)
    "!="        reduce using rule 1061 (template-id)
    '^'         reduce using rule 1061 (template-id)
    '<'         reduce using rule 1061 (template-id)
    '>'         reduce using rule 1001 (simple-type-specifier)
    '>'         [reduce using rule 1061 (template-id)]
    '*'         reduce using rule 1001 (simple-type-specifier)
    '*'         [reduce using rule 1061 (template-id)]
    '/'         reduce using rule 1061 (template-id)
    '%'         reduce using rule 1061 (template-id)
    '|'         reduce using rule 1061 (template-id)
    "<<"        reduce using rule 1061 (template-id)
    ">>"        reduce using rule 1061 (template-id)
    "<="        reduce using rule 1061 (template-id)
    ">="        reduce using rule 1061 (template-id)
    ".*"        reduce using rule 1061 (template-id)
    "->*"       reduce using rule 1061 (template-id)
    "try"       reduce using rule 1061 (template-id)
    "requires"  reduce using rule 1061 (template-id)
    "++"        reduce using rule 1061 (template-id)
    "--"        reduce using rule 1061 (template-id)
    "override"  reduce using rule 1061 (template-id)
    $default    reduce using rule 1001 (simple-type-specifier)


State 729

  914 qualified-id: nested-name-specifier "template" unqualified-id •

    $default  reduce using rule 914 (qualified-id)


State 730

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  906 ptr-operator: nested-name-specifier '*' attribute-specifier-seq •
  908             | nested-name-specifier '*' attribute-specifier-seq • cv-qualifier-seq

    "alignas"   shift, and go to state 4
    '['         shift, and go to state 10
    "const"     shift, and go to state 18
    "volatile"  shift, and go to state 19

    "alignas"   [reduce using rule 906 (ptr-operator)]
    '['         [reduce using rule 906 (ptr-operator)]
    "const"     [reduce using rule 906 (ptr-operator)]
    "volatile"  [reduce using rule 906 (ptr-operator)]
    $default    reduce using rule 906 (ptr-operator)

    alignment-specifier  go to state 58
    attribute-specifier  go to state 265
    cv-qualifier         go to state 234
    cv-qualifier-seq     go to state 1218


State 731

  907 ptr-operator: nested-name-specifier '*' cv-qualifier-seq •

    $default  reduce using rule 907 (ptr-operator)


State 732

  1086 type-constraint: nested-name-specifier concept-name '<' • '>'
  1088                | nested-name-specifier concept-name '<' • template-argument-list '>'

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 136
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '>'                 shift, and go to state 1219
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    additive-expression                  go to state 404
    and-expression                       go to state 405
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-key                            go to state 210
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 412
    constant-expression                  go to state 639
    conversion-function-id               go to state 69
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 640
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 435
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    string-literal                       go to state 450
    template-argument                    go to state 641
    template-argument-list               go to state 1220
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-id                              go to state 643
    type-name                            go to state 125
    type-specifier                       go to state 217
    type-specifier-seq                   go to state 452
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 733

  664 nested-name-specifier: nested-name-specifier simple-template-id "::" •

    $default  reduce using rule 664 (nested-name-specifier)


State 734

  832 parameter-declaration-clause: "..." •

    $default  reduce using rule 832 (parameter-declaration-clause)


State 735

  834 parameter-declaration-list: parameter-declaration •

    $default  reduce using rule 834 (parameter-declaration-list)


State 736

  836 parameters-and-qualifiers: '(' parameter-declaration-clause • ')'
  837                          | '(' parameter-declaration-clause • ')' cv-qualifier-seq
  838                          | '(' parameter-declaration-clause • ')' ref-qualifier
  839                          | '(' parameter-declaration-clause • ')' cv-qualifier-seq ref-qualifier
  840                          | '(' parameter-declaration-clause • ')' noexcept-specifier
  841                          | '(' parameter-declaration-clause • ')' cv-qualifier-seq noexcept-specifier
  842                          | '(' parameter-declaration-clause • ')' ref-qualifier noexcept-specifier
  843                          | '(' parameter-declaration-clause • ')' cv-qualifier-seq ref-qualifier noexcept-specifier
  844                          | '(' parameter-declaration-clause • ')' attribute-specifier-seq
  845                          | '(' parameter-declaration-clause • ')' cv-qualifier-seq attribute-specifier-seq
  846                          | '(' parameter-declaration-clause • ')' ref-qualifier attribute-specifier-seq
  847                          | '(' parameter-declaration-clause • ')' cv-qualifier-seq ref-qualifier attribute-specifier-seq
  848                          | '(' parameter-declaration-clause • ')' noexcept-specifier attribute-specifier-seq
  849                          | '(' parameter-declaration-clause • ')' cv-qualifier-seq noexcept-specifier attribute-specifier-seq
  850                          | '(' parameter-declaration-clause • ')' ref-qualifier noexcept-specifier attribute-specifier-seq
  851                          | '(' parameter-declaration-clause • ')' cv-qualifier-seq ref-qualifier noexcept-specifier attribute-specifier-seq

    ')'  shift, and go to state 1221


State 737

  830 parameter-declaration-clause: parameter-declaration-list •
  831                             | parameter-declaration-list • "..."
  833                             | parameter-declaration-list • ',' "..."
  835 parameter-declaration-list: parameter-declaration-list • ',' parameter-declaration

    "..."  shift, and go to state 1222
    ','    shift, and go to state 1223

    $default  reduce using rule 830 (parameter-declaration-clause)


State 738

  728 noptr-declarator: noptr-declarator '[' ']' •
  730                 | noptr-declarator '[' ']' • attribute-specifier-seq

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    '['       [reduce using rule 728 (noptr-declarator)]
    $default  reduce using rule 728 (noptr-declarator)

    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 1224


State 739

  729 noptr-declarator: noptr-declarator '[' constant-expression • ']'
  731                 | noptr-declarator '[' constant-expression • ']' attribute-specifier-seq

    ']'  shift, and go to state 1225


State 740

  1073 trailing-return-type: "->" • type-id

    IDENTIFIER  shift, and go to state 161
    "::"        shift, and go to state 9
    "class"     shift, and go to state 12
    "struct"    shift, and go to state 13
    "union"     shift, and go to state 14
    "const"     shift, and go to state 18
    "volatile"  shift, and go to state 19
    "decltype"  shift, and go to state 26
    "enum"      shift, and go to state 136
    "auto"      shift, and go to state 37
    "char"      shift, and go to state 38
    "char8_t"   shift, and go to state 39
    "char16_t"  shift, and go to state 40
    "char32_t"  shift, and go to state 41
    "wchar_t"   shift, and go to state 42
    "bool"      shift, and go to state 43
    "short"     shift, and go to state 44
    "int"       shift, and go to state 45
    "long"      shift, and go to state 46
    "signed"    shift, and go to state 47
    "unsigned"  shift, and go to state 48
    "float"     shift, and go to state 49
    "double"    shift, and go to state 50
    "void"      shift, and go to state 51
    "typename"  shift, and go to state 56

    class-key                   go to state 210
    class-name                  go to state 66
    concept-name                go to state 68
    cv-qualifier                go to state 70
    decltype-specifier          go to state 77
    elaborated-enum-specifier   go to state 80
    elaborated-type-specifier   go to state 81
    enum-name                   go to state 85
    namespace-alias             go to state 100
    namespace-name              go to state 103
    nested-name-specifier       go to state 213
    placeholder-type-specifier  go to state 110
    simple-template-id          go to state 142
    simple-type-specifier       go to state 116
    template-name               go to state 216
    type-constraint             go to state 124
    type-id                     go to state 1226
    type-name                   go to state 125
    type-specifier              go to state 217
    type-specifier-seq          go to state 452
    typedef-name                go to state 127
    typename-specifier          go to state 128


State 741

  230 declarator: noptr-declarator parameters-and-qualifiers trailing-return-type •

    $default  reduce using rule 230 (declarator)


State 742

  1062 template-id: operator-function-id '<' '>' •

    $default  reduce using rule 1062 (template-id)


State 743

  1055 template-argument-list: template-argument-list • ',' template-argument
  1056                       | template-argument-list • ',' template-argument "..."
  1063 template-id: operator-function-id '<' template-argument-list • '>'

    ','  shift, and go to state 1136
    '>'  shift, and go to state 1227


State 744

  163 concept-name: IDENTIFIER •

    $default  reduce using rule 163 (concept-name)


State 745

  162 concept-definition: "concept" concept-name • '=' constraint-expression ';'

    '='  shift, and go to state 1228


State 746

  235 deduction-guide: template-name '(' parameter-declaration-clause • ')' "->" simple-template-id ';'

    ')'  shift, and go to state 1229


State 747

  997 simple-template-id: template-name '<' '>' •

    $default  reduce using rule 997 (simple-template-id)


State 748

  998 simple-template-id: template-name '<' template-argument-list • '>'
  1055 template-argument-list: template-argument-list • ',' template-argument
  1056                       | template-argument-list • ',' template-argument "..."

    ','  shift, and go to state 1136
    '>'  shift, and go to state 1230


State 749

  854 placeholder-type-specifier: type-constraint "decltype" '(' • "auto" ')'

    "auto"  shift, and go to state 1231


State 750

   13 alias-declaration: "using" IDENTIFIER '=' defining-type-id • ';'

    ';'  shift, and go to state 1232


State 751

  241 defining-type-specifier-seq: defining-type-specifier •
  242                            | defining-type-specifier • attribute-specifier-seq
  243                            | defining-type-specifier • defining-type-specifier-seq

    IDENTIFIER  shift, and go to state 161
    "alignas"   shift, and go to state 4
    "::"        shift, and go to state 9
    '['         shift, and go to state 10
    "class"     shift, and go to state 12
    "struct"    shift, and go to state 13
    "union"     shift, and go to state 14
    "const"     shift, and go to state 18
    "volatile"  shift, and go to state 19
    "decltype"  shift, and go to state 26
    "enum"      shift, and go to state 27
    "auto"      shift, and go to state 37
    "char"      shift, and go to state 38
    "char8_t"   shift, and go to state 39
    "char16_t"  shift, and go to state 40
    "char32_t"  shift, and go to state 41
    "wchar_t"   shift, and go to state 42
    "bool"      shift, and go to state 43
    "short"     shift, and go to state 44
    "int"       shift, and go to state 45
    "long"      shift, and go to state 46
    "signed"    shift, and go to state 47
    "unsigned"  shift, and go to state 48
    "float"     shift, and go to state 49
    "double"    shift, and go to state 50
    "void"      shift, and go to state 51
    "typename"  shift, and go to state 56

    IDENTIFIER  [reduce using rule 241 (defining-type-specifier-seq)]
    "::"        [reduce using rule 241 (defining-type-specifier-seq)]
    '['         [reduce using rule 241 (defining-type-specifier-seq)]
    "decltype"  [reduce using rule 241 (defining-type-specifier-seq)]
    $default    reduce using rule 241 (defining-type-specifier-seq)

    alignment-specifier          go to state 58
    attribute-specifier          go to state 61
    attribute-specifier-seq      go to state 1233
    class-head                   go to state 64
    class-key                    go to state 65
    class-name                   go to state 66
    class-specifier              go to state 67
    concept-name                 go to state 68
    cv-qualifier                 go to state 70
    decltype-specifier           go to state 77
    defining-type-specifier      go to state 751
    defining-type-specifier-seq  go to state 1234
    elaborated-enum-specifier    go to state 80
    elaborated-type-specifier    go to state 81
    enum-head                    go to state 83
    enum-key                     go to state 268
    enum-name                    go to state 85
    enum-specifier               go to state 86
    namespace-alias              go to state 100
    namespace-name               go to state 103
    nested-name-specifier        go to state 213
    placeholder-type-specifier   go to state 110
    simple-template-id           go to state 142
    simple-type-specifier        go to state 116
    template-name                go to state 216
    type-constraint              go to state 124
    type-name                    go to state 125
    type-specifier               go to state 126
    typedef-name                 go to state 127
    typename-specifier           go to state 128


State 752

  236 defining-type-id: defining-type-specifier-seq •
  237                 | defining-type-specifier-seq • abstract-declarator

    IDENTIFIER  shift, and go to state 258
    '('         shift, and go to state 943
    "..."       shift, and go to state 944
    '&'         shift, and go to state 7
    "::"        shift, and go to state 9
    '['         shift, and go to state 945
    "&&"        shift, and go to state 16
    "decltype"  shift, and go to state 135
    '*'         shift, and go to state 32

    $default  reduce using rule 236 (defining-type-id)

    abstract-declarator             go to state 1235
    abstract-pack-declarator        go to state 947
    class-name                      go to state 66
    decltype-specifier              go to state 139
    enum-name                       go to state 85
    namespace-alias                 go to state 100
    namespace-name                  go to state 103
    nested-name-specifier           go to state 522
    noptr-abstract-declarator       go to state 948
    noptr-abstract-pack-declarator  go to state 949
    parameters-and-qualifiers       go to state 950
    ptr-abstract-declarator         go to state 951
    ptr-operator                    go to state 952
    simple-template-id              go to state 142
    template-name                   go to state 143
    type-name                       go to state 144
    typedef-name                    go to state 127


State 753

   14 alias-declaration: "using" IDENTIFIER attribute-specifier-seq '=' • defining-type-id ';'

    IDENTIFIER  shift, and go to state 161
    "::"        shift, and go to state 9
    "class"     shift, and go to state 12
    "struct"    shift, and go to state 13
    "union"     shift, and go to state 14
    "const"     shift, and go to state 18
    "volatile"  shift, and go to state 19
    "decltype"  shift, and go to state 26
    "enum"      shift, and go to state 27
    "auto"      shift, and go to state 37
    "char"      shift, and go to state 38
    "char8_t"   shift, and go to state 39
    "char16_t"  shift, and go to state 40
    "char32_t"  shift, and go to state 41
    "wchar_t"   shift, and go to state 42
    "bool"      shift, and go to state 43
    "short"     shift, and go to state 44
    "int"       shift, and go to state 45
    "long"      shift, and go to state 46
    "signed"    shift, and go to state 47
    "unsigned"  shift, and go to state 48
    "float"     shift, and go to state 49
    "double"    shift, and go to state 50
    "void"      shift, and go to state 51
    "typename"  shift, and go to state 56

    class-head                   go to state 64
    class-key                    go to state 65
    class-name                   go to state 66
    class-specifier              go to state 67
    concept-name                 go to state 68
    cv-qualifier                 go to state 70
    decltype-specifier           go to state 77
    defining-type-id             go to state 1236
    defining-type-specifier      go to state 751
    defining-type-specifier-seq  go to state 752
    elaborated-enum-specifier    go to state 80
    elaborated-type-specifier    go to state 81
    enum-head                    go to state 83
    enum-key                     go to state 268
    enum-name                    go to state 85
    enum-specifier               go to state 86
    namespace-alias              go to state 100
    namespace-name               go to state 103
    nested-name-specifier        go to state 213
    placeholder-type-specifier   go to state 110
    simple-template-id           go to state 142
    simple-type-specifier        go to state 116
    template-name                go to state 216
    type-constraint              go to state 124
    type-name                    go to state 125
    type-specifier               go to state 126
    typedef-name                 go to state 127
    typename-specifier           go to state 128


State 754

  1186 using-directive: "using" "namespace" namespace-name ';' •

    $default  reduce using rule 1186 (using-directive)


State 755

  651 namespace-alias: IDENTIFIER •
  657 namespace-name: IDENTIFIER •
  663 nested-name-specifier: nested-name-specifier IDENTIFIER • "::"
  1066 template-name: IDENTIFIER •

    "::"  shift, and go to state 726

    ';'       reduce using rule 651 (namespace-alias)
    ';'       [reduce using rule 657 (namespace-name)]
    '<'       reduce using rule 1066 (template-name)
    $default  reduce using rule 651 (namespace-alias)


State 756

  1188 using-directive: "using" "namespace" nested-name-specifier namespace-name • ';'

    ';'  shift, and go to state 1237


State 757

  1179 using-declarator: "typename" nested-name-specifier unqualified-id •

    $default  reduce using rule 1179 (using-declarator)


State 758

  665 nested-name-specifier: nested-name-specifier "template" simple-template-id • "::"

    "::"  shift, and go to state 1217


State 759

  1183 using-declarator-list: using-declarator-list ',' using-declarator •
  1184                      | using-declarator-list ',' using-declarator • "..."

    "..."  shift, and go to state 1238

    $default  reduce using rule 1183 (using-declarator-list)


State 760

  349 fold-expression: '(' "..." • fold-operator cast-expression ')'

    '+'    shift, and go to state 1239
    '-'    shift, and go to state 1240
    '='    shift, and go to state 1241
    '&'    shift, and go to state 1242
    "*="   shift, and go to state 1243
    "/="   shift, and go to state 1244
    "%="   shift, and go to state 1245
    "+="   shift, and go to state 1246
    "-="   shift, and go to state 1247
    ">>="  shift, and go to state 1248
    "<<="  shift, and go to state 1249
    "&="   shift, and go to state 1250
    "^="   shift, and go to state 1251
    "|="   shift, and go to state 1252
    ','    shift, and go to state 1253
    "&&"   shift, and go to state 1254
    "||"   shift, and go to state 1255
    "=="   shift, and go to state 1256
    "!="   shift, and go to state 1257
    '^'    shift, and go to state 1258
    '<'    shift, and go to state 1259
    '>'    shift, and go to state 1260
    '*'    shift, and go to state 1261
    '/'    shift, and go to state 1262
    '%'    shift, and go to state 1263
    '|'    shift, and go to state 1264
    "<<"   shift, and go to state 1265
    ">>"   shift, and go to state 1266
    "<="   shift, and go to state 1267
    ">="   shift, and go to state 1268
    ".*"   shift, and go to state 1269
    "->*"  shift, and go to state 1270

    fold-operator  go to state 1271


State 761

  348 fold-expression: '(' cast-expression • fold-operator "..." ')'
  350                | '(' cast-expression • fold-operator "..." fold-operator cast-expression ')'
  856 pm-expression: cast-expression •

    '+'    shift, and go to state 1239
    '-'    shift, and go to state 1240
    '='    shift, and go to state 1241
    '&'    shift, and go to state 1242
    "*="   shift, and go to state 1243
    "/="   shift, and go to state 1244
    "%="   shift, and go to state 1245
    "+="   shift, and go to state 1246
    "-="   shift, and go to state 1247
    ">>="  shift, and go to state 1248
    "<<="  shift, and go to state 1249
    "&="   shift, and go to state 1250
    "^="   shift, and go to state 1251
    "|="   shift, and go to state 1252
    ','    shift, and go to state 1253
    "&&"   shift, and go to state 1254
    "||"   shift, and go to state 1255
    "=="   shift, and go to state 1256
    "!="   shift, and go to state 1257
    '^'    shift, and go to state 1258
    '<'    shift, and go to state 1259
    '>'    shift, and go to state 1260
    '*'    shift, and go to state 1261
    '/'    shift, and go to state 1262
    '%'    shift, and go to state 1263
    '|'    shift, and go to state 1264
    "<<"   shift, and go to state 1265
    ">>"   shift, and go to state 1266
    "<="   shift, and go to state 1267
    ">="   shift, and go to state 1268
    ".*"   shift, and go to state 1269
    "->*"  shift, and go to state 1270

    '+'       [reduce using rule 856 (pm-expression)]
    '-'       [reduce using rule 856 (pm-expression)]
    '='       [reduce using rule 856 (pm-expression)]
    '&'       [reduce using rule 856 (pm-expression)]
    "*="      [reduce using rule 856 (pm-expression)]
    "/="      [reduce using rule 856 (pm-expression)]
    "%="      [reduce using rule 856 (pm-expression)]
    "+="      [reduce using rule 856 (pm-expression)]
    "-="      [reduce using rule 856 (pm-expression)]
    ">>="     [reduce using rule 856 (pm-expression)]
    "<<="     [reduce using rule 856 (pm-expression)]
    "&="      [reduce using rule 856 (pm-expression)]
    "^="      [reduce using rule 856 (pm-expression)]
    "|="      [reduce using rule 856 (pm-expression)]
    ','       [reduce using rule 856 (pm-expression)]
    "&&"      [reduce using rule 856 (pm-expression)]
    "||"      [reduce using rule 856 (pm-expression)]
    "=="      [reduce using rule 856 (pm-expression)]
    "!="      [reduce using rule 856 (pm-expression)]
    '^'       [reduce using rule 856 (pm-expression)]
    '<'       [reduce using rule 856 (pm-expression)]
    '>'       [reduce using rule 856 (pm-expression)]
    '*'       [reduce using rule 856 (pm-expression)]
    '/'       [reduce using rule 856 (pm-expression)]
    '%'       [reduce using rule 856 (pm-expression)]
    '|'       [reduce using rule 856 (pm-expression)]
    "<<"      [reduce using rule 856 (pm-expression)]
    ">>"      [reduce using rule 856 (pm-expression)]
    "<="      [reduce using rule 856 (pm-expression)]
    ">="      [reduce using rule 856 (pm-expression)]
    ".*"      [reduce using rule 856 (pm-expression)]
    "->*"     [reduce using rule 856 (pm-expression)]
    $default  reduce using rule 856 (pm-expression)

    fold-operator  go to state 1272


State 762

  338 expression: expression • ',' assignment-expression
  885 primary-expression: '(' expression • ')'

    ')'  shift, and go to state 1273
    ','  shift, and go to state 1037


State 763

  125 cast-expression: '(' type-id • ')' cast-expression

    ')'  shift, and go to state 1274


State 764

  244 delete-expression: "::" "delete" • cast-expression
  246                  | "::" "delete" • '[' ']' cast-expression

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 1275
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 1276
    character-literal                    go to state 410
    class-name                           go to state 66
    concept-name                         go to state 68
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    requires-expression                  go to state 447
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 765

  672 new-expression: "::" "new" • new-type-id
  674               | "::" "new" • new-placement new-type-id
  676               | "::" "new" • new-type-id new-initializer
  678               | "::" "new" • new-placement new-type-id new-initializer
  680               | "::" "new" • '(' type-id ')'
  682               | "::" "new" • new-placement '(' type-id ')'
  684               | "::" "new" • '(' type-id ')' new-initializer
  686               | "::" "new" • new-placement '(' type-id ')' new-initializer

    IDENTIFIER  shift, and go to state 161
    '('         shift, and go to state 1277
    "::"        shift, and go to state 9
    "class"     shift, and go to state 12
    "struct"    shift, and go to state 13
    "union"     shift, and go to state 14
    "const"     shift, and go to state 18
    "volatile"  shift, and go to state 19
    "decltype"  shift, and go to state 26
    "enum"      shift, and go to state 136
    "auto"      shift, and go to state 37
    "char"      shift, and go to state 38
    "char8_t"   shift, and go to state 39
    "char16_t"  shift, and go to state 40
    "char32_t"  shift, and go to state 41
    "wchar_t"   shift, and go to state 42
    "bool"      shift, and go to state 43
    "short"     shift, and go to state 44
    "int"       shift, and go to state 45
    "long"      shift, and go to state 46
    "signed"    shift, and go to state 47
    "unsigned"  shift, and go to state 48
    "float"     shift, and go to state 49
    "double"    shift, and go to state 50
    "void"      shift, and go to state 51
    "typename"  shift, and go to state 56

    class-key                   go to state 210
    class-name                  go to state 66
    concept-name                go to state 68
    cv-qualifier                go to state 70
    decltype-specifier          go to state 77
    elaborated-enum-specifier   go to state 80
    elaborated-type-specifier   go to state 81
    enum-name                   go to state 85
    namespace-alias             go to state 100
    namespace-name              go to state 103
    nested-name-specifier       go to state 213
    new-placement               go to state 1278
    new-type-id                 go to state 1279
    placeholder-type-specifier  go to state 110
    simple-template-id          go to state 142
    simple-type-specifier       go to state 116
    template-name               go to state 216
    type-constraint             go to state 124
    type-name                   go to state 125
    type-specifier              go to state 217
    type-specifier-seq          go to state 811
    typedef-name                go to state 127
    typename-specifier          go to state 128


State 766

  470 init-capture: IDENTIFIER • initializer
  971 simple-capture: IDENTIFIER •
  972               | IDENTIFIER • "..."

    '='    shift, and go to state 1280
    '('    shift, and go to state 647
    "..."  shift, and go to state 1281
    '{'    shift, and go to state 939

    $default  reduce using rule 971 (simple-capture)

    brace-or-equal-initializer  go to state 649
    braced-init-list            go to state 650
    initializer                 go to state 1282


State 767

  121 capture-default: '=' •

    $default  reduce using rule 121 (capture-default)


State 768

  469 init-capture: "..." • IDENTIFIER initializer

    IDENTIFIER  shift, and go to state 1283


State 769

  120 capture-default: '&' •
  471 init-capture: '&' • IDENTIFIER initializer
  472             | '&' • "..." IDENTIFIER initializer
  973 simple-capture: '&' • IDENTIFIER
  974               | '&' • IDENTIFIER "..."

    IDENTIFIER  shift, and go to state 1284
    "..."       shift, and go to state 1285

    $default  reduce using rule 120 (capture-default)


State 770

  538 lambda-introducer: '[' ']' •

    $default  reduce using rule 538 (lambda-introducer)


State 771

  976 simple-capture: '*' • "this"

    "this"  shift, and go to state 1286


State 772

  975 simple-capture: "this" •

    $default  reduce using rule 975 (simple-capture)


State 773

  122 capture-list: capture •

    $default  reduce using rule 122 (capture-list)


State 774

  529 lambda-capture: capture-default •
  531               | capture-default • ',' capture-list

    ','  shift, and go to state 1287

    $default  reduce using rule 529 (lambda-capture)


State 775

  123 capture-list: capture-list • ',' capture
  530 lambda-capture: capture-list •

    ','  shift, and go to state 1288

    $default  reduce using rule 530 (lambda-capture)


State 776

  119 capture: init-capture •

    $default  reduce using rule 119 (capture)


State 777

  539 lambda-introducer: '[' lambda-capture • ']'

    ']'  shift, and go to state 1289


State 778

  118 capture: simple-capture •

    $default  reduce using rule 118 (capture)


State 779

   58 await-expression: "co_await" cast-expression •

    $default  reduce using rule 58 (await-expression)


State 780

   85 binary-digit: '0' •

    $default  reduce using rule 85 (binary-digit)


State 781

   86 binary-digit: '1' •

    $default  reduce using rule 86 (binary-digit)


State 782

   91 binary-literal: "0b" binary-digit •

    $default  reduce using rule 91 (binary-literal)


State 783

   92 binary-literal: "0B" binary-digit •

    $default  reduce using rule 92 (binary-literal)


State 784

   83 basic-c-char: EXCEPT_THE_APOSTROPHE_REVERSE_SOLIDUS_OR_NEW_LINE_CHARACTER •

    $default  reduce using rule 83 (basic-c-char)


State 785

  113 c-char: basic-c-char •

    $default  reduce using rule 113 (c-char)


State 786

  116 c-char-sequence: c-char •

    $default  reduce using rule 116 (c-char-sequence)


State 787

  117 c-char-sequence: c-char-sequence • c-char
  127 character-literal: '\'' c-char-sequence • '\''

    EXCEPT_THE_APOSTROPHE_REVERSE_SOLIDUS_OR_NEW_LINE_CHARACTER  shift, and go to state 784
    '\''                                                         shift, and go to state 1290
    '\\'                                                         shift, and go to state 491
    "\\x"                                                        shift, and go to state 493
    "\\u"                                                        shift, and go to state 494
    "\\U"                                                        shift, and go to state 495

    basic-c-char                 go to state 785
    c-char                       go to state 1291
    conditional-escape-sequence  go to state 497
    escape-sequence              go to state 788
    hexadecimal-escape-sequence  go to state 499
    numeric-escape-sequence      go to state 500
    octal-escape-sequence        go to state 501
    simple-escape-sequence       go to state 504
    universal-character-name     go to state 789


State 788

  114 c-char: escape-sequence •

    $default  reduce using rule 114 (c-char)


State 789

  115 c-char: universal-character-name •

    $default  reduce using rule 115 (c-char)


State 790

  696 noexcept-expression: "noexcept" '(' • expression ')'

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 530
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    expression                           go to state 1292
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 791

  247 delete-expression: "delete" '[' • ']' cast-expression
  538 lambda-introducer: '[' • ']'
  539                  | '[' • lambda-capture ']'

    IDENTIFIER  shift, and go to state 766
    '='         shift, and go to state 767
    "..."       shift, and go to state 768
    '&'         shift, and go to state 769
    ']'         shift, and go to state 1293
    '*'         shift, and go to state 771
    "this"      shift, and go to state 772

    capture          go to state 773
    capture-default  go to state 774
    capture-list     go to state 775
    init-capture     go to state 776
    lambda-capture   go to state 777
    simple-capture   go to state 778


State 792

  245 delete-expression: "delete" cast-expression •

    $default  reduce using rule 245 (delete-expression)


State 793

  252 digit: '0' •

    $default  reduce using rule 252 (digit)


State 794

  253 digit: '1' •

    $default  reduce using rule 253 (digit)


State 795

  254 digit: '2' •

    $default  reduce using rule 254 (digit)


State 796

  255 digit: '3' •

    $default  reduce using rule 255 (digit)


State 797

  256 digit: '4' •

    $default  reduce using rule 256 (digit)


State 798

  257 digit: '5' •

    $default  reduce using rule 257 (digit)


State 799

  258 digit: '6' •

    $default  reduce using rule 258 (digit)


State 800

  259 digit: '7' •

    $default  reduce using rule 259 (digit)


State 801

  260 digit: '8' •

    $default  reduce using rule 260 (digit)


State 802

  261 digit: '9' •

    $default  reduce using rule 261 (digit)


State 803

  263 digit-sequence: digit-sequence • digit
  264               | digit-sequence • '\'' digit
  391 fractional-constant: '.' digit-sequence •

    '0'   shift, and go to state 793
    '1'   shift, and go to state 794
    '\''  shift, and go to state 851
    '2'   shift, and go to state 795
    '3'   shift, and go to state 796
    '4'   shift, and go to state 797
    '5'   shift, and go to state 798
    '6'   shift, and go to state 799
    '7'   shift, and go to state 800
    '8'   shift, and go to state 801
    '9'   shift, and go to state 802

    $default  reduce using rule 391 (fractional-constant)

    digit  go to state 855


State 804

  940 requirement-parameter-list: '(' • parameter-declaration-clause ')'

    IDENTIFIER      shift, and go to state 161
    "alignas"       shift, and go to state 4
    "..."           shift, and go to state 734
    "::"            shift, and go to state 9
    '['             shift, and go to state 10
    "virtual"       shift, and go to state 11
    "class"         shift, and go to state 12
    "struct"        shift, and go to state 13
    "union"         shift, and go to state 14
    "const"         shift, and go to state 18
    "volatile"      shift, and go to state 19
    "friend"        shift, and go to state 20
    "typedef"       shift, and go to state 21
    "constexpr"     shift, and go to state 22
    "consteval"     shift, and go to state 23
    "constinit"     shift, and go to state 24
    "inline"        shift, and go to state 263
    "decltype"      shift, and go to state 26
    "enum"          shift, and go to state 27
    "extern"        shift, and go to state 264
    "explicit"      shift, and go to state 29
    "this"          shift, and go to state 476
    "auto"          shift, and go to state 37
    "char"          shift, and go to state 38
    "char8_t"       shift, and go to state 39
    "char16_t"      shift, and go to state 40
    "char32_t"      shift, and go to state 41
    "wchar_t"       shift, and go to state 42
    "bool"          shift, and go to state 43
    "short"         shift, and go to state 44
    "int"           shift, and go to state 45
    "long"          shift, and go to state 46
    "signed"        shift, and go to state 47
    "unsigned"      shift, and go to state 48
    "float"         shift, and go to state 49
    "double"        shift, and go to state 50
    "void"          shift, and go to state 51
    "static"        shift, and go to state 53
    "thread_local"  shift, and go to state 54
    "mutable"       shift, and go to state 55
    "typename"      shift, and go to state 56

    alignment-specifier           go to state 58
    attribute-specifier           go to state 61
    attribute-specifier-seq       go to state 478
    class-head                    go to state 64
    class-key                     go to state 65
    class-name                    go to state 66
    class-specifier               go to state 67
    concept-name                  go to state 68
    cv-qualifier                  go to state 70
    decl-specifier                go to state 71
    decl-specifier-seq            go to state 479
    decltype-specifier            go to state 77
    defining-type-specifier       go to state 79
    elaborated-enum-specifier     go to state 80
    elaborated-type-specifier     go to state 81
    enum-head                     go to state 83
    enum-key                      go to state 268
    enum-name                     go to state 85
    enum-specifier                go to state 86
    explicit-specifier            go to state 269
    function-specifier            go to state 92
    namespace-alias               go to state 100
    namespace-name                go to state 103
    nested-name-specifier         go to state 213
    parameter-declaration         go to state 735
    parameter-declaration-clause  go to state 1294
    parameter-declaration-list    go to state 737
    placeholder-type-specifier    go to state 110
    simple-template-id            go to state 142
    simple-type-specifier         go to state 116
    storage-class-specifier       go to state 118
    template-name                 go to state 216
    type-constraint               go to state 124
    type-name                     go to state 125
    type-specifier                go to state 126
    typedef-name                  go to state 127
    typename-specifier            go to state 128


State 805

  939 requirement-body: '{' • requirement-seq '}'

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 1295
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 1296
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 1297
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 530
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    compound-requirement                 go to state 1298
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    expression                           go to state 1299
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    nested-requirement                   go to state 1300
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requirement                          go to state 1301
    requirement-seq                      go to state 1302
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-requirement                   go to state 1303
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    type-requirement                     go to state 1304
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 806

  944 requires-expression: "requires" requirement-body •

    $default  reduce using rule 944 (requires-expression)


State 807

  945 requires-expression: "requires" requirement-parameter-list • requirement-body

    '{'  shift, and go to state 805

    requirement-body  go to state 1305


State 808

  681 new-expression: "new" '(' • type-id ')'
  685               | "new" '(' • type-id ')' new-initializer
  691 new-placement: '(' • expression-list ')'

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 939
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 136
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 1141
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    braced-init-list                     go to state 1142
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-key                            go to state 210
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    expression-list                      go to state 1306
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    initializer-clause                   go to state 1145
    initializer-list                     go to state 1146
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-id                              go to state 1307
    type-name                            go to state 125
    type-specifier                       go to state 217
    type-specifier-seq                   go to state 452
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 809

  675 new-expression: "new" new-placement • new-type-id
  679               | "new" new-placement • new-type-id new-initializer
  683               | "new" new-placement • '(' type-id ')'
  687               | "new" new-placement • '(' type-id ')' new-initializer

    IDENTIFIER  shift, and go to state 161
    '('         shift, and go to state 1308
    "::"        shift, and go to state 9
    "class"     shift, and go to state 12
    "struct"    shift, and go to state 13
    "union"     shift, and go to state 14
    "const"     shift, and go to state 18
    "volatile"  shift, and go to state 19
    "decltype"  shift, and go to state 26
    "enum"      shift, and go to state 136
    "auto"      shift, and go to state 37
    "char"      shift, and go to state 38
    "char8_t"   shift, and go to state 39
    "char16_t"  shift, and go to state 40
    "char32_t"  shift, and go to state 41
    "wchar_t"   shift, and go to state 42
    "bool"      shift, and go to state 43
    "short"     shift, and go to state 44
    "int"       shift, and go to state 45
    "long"      shift, and go to state 46
    "signed"    shift, and go to state 47
    "unsigned"  shift, and go to state 48
    "float"     shift, and go to state 49
    "double"    shift, and go to state 50
    "void"      shift, and go to state 51
    "typename"  shift, and go to state 56

    class-key                   go to state 210
    class-name                  go to state 66
    concept-name                go to state 68
    cv-qualifier                go to state 70
    decltype-specifier          go to state 77
    elaborated-enum-specifier   go to state 80
    elaborated-type-specifier   go to state 81
    enum-name                   go to state 85
    namespace-alias             go to state 100
    namespace-name              go to state 103
    nested-name-specifier       go to state 213
    new-type-id                 go to state 1309
    placeholder-type-specifier  go to state 110
    simple-template-id          go to state 142
    simple-type-specifier       go to state 116
    template-name               go to state 216
    type-constraint             go to state 124
    type-name                   go to state 125
    type-specifier              go to state 217
    type-specifier-seq          go to state 811
    typedef-name                go to state 127
    typename-specifier          go to state 128


State 810

  673 new-expression: "new" new-type-id •
  677               | "new" new-type-id • new-initializer

    '('  shift, and go to state 1310
    '{'  shift, and go to state 939

    '{'       [reduce using rule 673 (new-expression)]
    $default  reduce using rule 673 (new-expression)

    braced-init-list  go to state 1311
    new-initializer   go to state 1312


State 811

  692 new-type-id: type-specifier-seq •
  693            | type-specifier-seq • new-declarator

    IDENTIFIER  shift, and go to state 258
    '&'         shift, and go to state 7
    "::"        shift, and go to state 9
    '['         shift, and go to state 1313
    "&&"        shift, and go to state 16
    "decltype"  shift, and go to state 135
    '*'         shift, and go to state 32

    '&'       [reduce using rule 692 (new-type-id)]
    "&&"      [reduce using rule 692 (new-type-id)]
    '*'       [reduce using rule 692 (new-type-id)]
    $default  reduce using rule 692 (new-type-id)

    class-name             go to state 66
    decltype-specifier     go to state 139
    enum-name              go to state 85
    namespace-alias        go to state 100
    namespace-name         go to state 103
    nested-name-specifier  go to state 522
    new-declarator         go to state 1314
    noptr-new-declarator   go to state 1315
    ptr-operator           go to state 1316
    simple-template-id     go to state 142
    template-name          go to state 143
    type-name              go to state 144
    typedef-name           go to state 127


State 812

  1132 unary-expression: "++" cast-expression •

    $default  reduce using rule 1132 (unary-expression)


State 813

  1133 unary-expression: "--" cast-expression •

    $default  reduce using rule 1133 (unary-expression)


State 814

  877 postfix-expression: "dynamic_cast" '<' • type-id '>' '(' expression ')'

    IDENTIFIER  shift, and go to state 161
    "::"        shift, and go to state 9
    "class"     shift, and go to state 12
    "struct"    shift, and go to state 13
    "union"     shift, and go to state 14
    "const"     shift, and go to state 18
    "volatile"  shift, and go to state 19
    "decltype"  shift, and go to state 26
    "enum"      shift, and go to state 136
    "auto"      shift, and go to state 37
    "char"      shift, and go to state 38
    "char8_t"   shift, and go to state 39
    "char16_t"  shift, and go to state 40
    "char32_t"  shift, and go to state 41
    "wchar_t"   shift, and go to state 42
    "bool"      shift, and go to state 43
    "short"     shift, and go to state 44
    "int"       shift, and go to state 45
    "long"      shift, and go to state 46
    "signed"    shift, and go to state 47
    "unsigned"  shift, and go to state 48
    "float"     shift, and go to state 49
    "double"    shift, and go to state 50
    "void"      shift, and go to state 51
    "typename"  shift, and go to state 56

    class-key                   go to state 210
    class-name                  go to state 66
    concept-name                go to state 68
    cv-qualifier                go to state 70
    decltype-specifier          go to state 77
    elaborated-enum-specifier   go to state 80
    elaborated-type-specifier   go to state 81
    enum-name                   go to state 85
    namespace-alias             go to state 100
    namespace-name              go to state 103
    nested-name-specifier       go to state 213
    placeholder-type-specifier  go to state 110
    simple-template-id          go to state 142
    simple-type-specifier       go to state 116
    template-name               go to state 216
    type-constraint             go to state 124
    type-id                     go to state 1317
    type-name                   go to state 125
    type-specifier              go to state 217
    type-specifier-seq          go to state 452
    typedef-name                go to state 127
    typename-specifier          go to state 128


State 815

  878 postfix-expression: "static_cast" '<' • type-id '>' '(' expression ')'

    IDENTIFIER  shift, and go to state 161
    "::"        shift, and go to state 9
    "class"     shift, and go to state 12
    "struct"    shift, and go to state 13
    "union"     shift, and go to state 14
    "const"     shift, and go to state 18
    "volatile"  shift, and go to state 19
    "decltype"  shift, and go to state 26
    "enum"      shift, and go to state 136
    "auto"      shift, and go to state 37
    "char"      shift, and go to state 38
    "char8_t"   shift, and go to state 39
    "char16_t"  shift, and go to state 40
    "char32_t"  shift, and go to state 41
    "wchar_t"   shift, and go to state 42
    "bool"      shift, and go to state 43
    "short"     shift, and go to state 44
    "int"       shift, and go to state 45
    "long"      shift, and go to state 46
    "signed"    shift, and go to state 47
    "unsigned"  shift, and go to state 48
    "float"     shift, and go to state 49
    "double"    shift, and go to state 50
    "void"      shift, and go to state 51
    "typename"  shift, and go to state 56

    class-key                   go to state 210
    class-name                  go to state 66
    concept-name                go to state 68
    cv-qualifier                go to state 70
    decltype-specifier          go to state 77
    elaborated-enum-specifier   go to state 80
    elaborated-type-specifier   go to state 81
    enum-name                   go to state 85
    namespace-alias             go to state 100
    namespace-name              go to state 103
    nested-name-specifier       go to state 213
    placeholder-type-specifier  go to state 110
    simple-template-id          go to state 142
    simple-type-specifier       go to state 116
    template-name               go to state 216
    type-constraint             go to state 124
    type-id                     go to state 1318
    type-name                   go to state 125
    type-specifier              go to state 217
    type-specifier-seq          go to state 452
    typedef-name                go to state 127
    typename-specifier          go to state 128


State 816

  879 postfix-expression: "reinterpret_cast" '<' • type-id '>' '(' expression ')'

    IDENTIFIER  shift, and go to state 161
    "::"        shift, and go to state 9
    "class"     shift, and go to state 12
    "struct"    shift, and go to state 13
    "union"     shift, and go to state 14
    "const"     shift, and go to state 18
    "volatile"  shift, and go to state 19
    "decltype"  shift, and go to state 26
    "enum"      shift, and go to state 136
    "auto"      shift, and go to state 37
    "char"      shift, and go to state 38
    "char8_t"   shift, and go to state 39
    "char16_t"  shift, and go to state 40
    "char32_t"  shift, and go to state 41
    "wchar_t"   shift, and go to state 42
    "bool"      shift, and go to state 43
    "short"     shift, and go to state 44
    "int"       shift, and go to state 45
    "long"      shift, and go to state 46
    "signed"    shift, and go to state 47
    "unsigned"  shift, and go to state 48
    "float"     shift, and go to state 49
    "double"    shift, and go to state 50
    "void"      shift, and go to state 51
    "typename"  shift, and go to state 56

    class-key                   go to state 210
    class-name                  go to state 66
    concept-name                go to state 68
    cv-qualifier                go to state 70
    decltype-specifier          go to state 77
    elaborated-enum-specifier   go to state 80
    elaborated-type-specifier   go to state 81
    enum-name                   go to state 85
    namespace-alias             go to state 100
    namespace-name              go to state 103
    nested-name-specifier       go to state 213
    placeholder-type-specifier  go to state 110
    simple-template-id          go to state 142
    simple-type-specifier       go to state 116
    template-name               go to state 216
    type-constraint             go to state 124
    type-id                     go to state 1319
    type-name                   go to state 125
    type-specifier              go to state 217
    type-specifier-seq          go to state 452
    typedef-name                go to state 127
    typename-specifier          go to state 128


State 817

  880 postfix-expression: "const_cast" '<' • type-id '>' '(' expression ')'

    IDENTIFIER  shift, and go to state 161
    "::"        shift, and go to state 9
    "class"     shift, and go to state 12
    "struct"    shift, and go to state 13
    "union"     shift, and go to state 14
    "const"     shift, and go to state 18
    "volatile"  shift, and go to state 19
    "decltype"  shift, and go to state 26
    "enum"      shift, and go to state 136
    "auto"      shift, and go to state 37
    "char"      shift, and go to state 38
    "char8_t"   shift, and go to state 39
    "char16_t"  shift, and go to state 40
    "char32_t"  shift, and go to state 41
    "wchar_t"   shift, and go to state 42
    "bool"      shift, and go to state 43
    "short"     shift, and go to state 44
    "int"       shift, and go to state 45
    "long"      shift, and go to state 46
    "signed"    shift, and go to state 47
    "unsigned"  shift, and go to state 48
    "float"     shift, and go to state 49
    "double"    shift, and go to state 50
    "void"      shift, and go to state 51
    "typename"  shift, and go to state 56

    class-key                   go to state 210
    class-name                  go to state 66
    concept-name                go to state 68
    cv-qualifier                go to state 70
    decltype-specifier          go to state 77
    elaborated-enum-specifier   go to state 80
    elaborated-type-specifier   go to state 81
    enum-name                   go to state 85
    namespace-alias             go to state 100
    namespace-name              go to state 103
    nested-name-specifier       go to state 213
    placeholder-type-specifier  go to state 110
    simple-template-id          go to state 142
    simple-type-specifier       go to state 116
    template-name               go to state 216
    type-constraint             go to state 124
    type-id                     go to state 1320
    type-name                   go to state 125
    type-specifier              go to state 217
    type-specifier-seq          go to state 452
    typedef-name                go to state 127
    typename-specifier          go to state 128


State 818

  881 postfix-expression: "typeid" '(' • expression ')'
  882                   | "typeid" '(' • type-id ')'

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 136
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 530
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-key                            go to state 210
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    expression                           go to state 1321
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-id                              go to state 1322
    type-name                            go to state 125
    type-specifier                       go to state 217
    type-specifier-seq                   go to state 452
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 819

  348 fold-expression: '(' • cast-expression fold-operator "..." ')'
  349                | '(' • "..." fold-operator cast-expression ')'
  350                | '(' • cast-expression fold-operator "..." fold-operator cast-expression ')'
  885 primary-expression: '(' • expression ')'
  1136 unary-expression: "sizeof" '(' • type-id ')'

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    "..."               shift, and go to state 760
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 136
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 530
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 761
    character-literal                    go to state 410
    class-key                            go to state 210
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    expression                           go to state 762
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-id                              go to state 1323
    type-name                            go to state 125
    type-specifier                       go to state 217
    type-specifier-seq                   go to state 452
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 820

  1137 unary-expression: "sizeof" "..." • '(' IDENTIFIER ')'

    '('  shift, and go to state 1324


State 821

  1135 unary-expression: "sizeof" unary-expression •

    $default  reduce using rule 1135 (unary-expression)


State 822

  1138 unary-expression: "alignof" '(' • type-id ')'

    IDENTIFIER  shift, and go to state 161
    "::"        shift, and go to state 9
    "class"     shift, and go to state 12
    "struct"    shift, and go to state 13
    "union"     shift, and go to state 14
    "const"     shift, and go to state 18
    "volatile"  shift, and go to state 19
    "decltype"  shift, and go to state 26
    "enum"      shift, and go to state 136
    "auto"      shift, and go to state 37
    "char"      shift, and go to state 38
    "char8_t"   shift, and go to state 39
    "char16_t"  shift, and go to state 40
    "char32_t"  shift, and go to state 41
    "wchar_t"   shift, and go to state 42
    "bool"      shift, and go to state 43
    "short"     shift, and go to state 44
    "int"       shift, and go to state 45
    "long"      shift, and go to state 46
    "signed"    shift, and go to state 47
    "unsigned"  shift, and go to state 48
    "float"     shift, and go to state 49
    "double"    shift, and go to state 50
    "void"      shift, and go to state 51
    "typename"  shift, and go to state 56

    class-key                   go to state 210
    class-name                  go to state 66
    concept-name                go to state 68
    cv-qualifier                go to state 70
    decltype-specifier          go to state 77
    elaborated-enum-specifier   go to state 80
    elaborated-type-specifier   go to state 81
    enum-name                   go to state 85
    namespace-alias             go to state 100
    namespace-name              go to state 103
    nested-name-specifier       go to state 213
    placeholder-type-specifier  go to state 110
    simple-template-id          go to state 142
    simple-type-specifier       go to state 116
    template-name               go to state 216
    type-constraint             go to state 124
    type-id                     go to state 1325
    type-name                   go to state 125
    type-specifier              go to state 217
    type-specifier-seq          go to state 452
    typedef-name                go to state 127
    typename-specifier          go to state 128


State 823

   11 additive-expression: additive-expression '+' • multiplicative-expression

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    concept-name                         go to state 68
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    multiplicative-expression            go to state 1326
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    requires-expression                  go to state 447
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 824

   12 additive-expression: additive-expression '-' • multiplicative-expression

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    concept-name                         go to state 68
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    multiplicative-expression            go to state 1327
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    requires-expression                  go to state 447
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 825

   20 and-expression: and-expression '&' • equality-expression

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    additive-expression                  go to state 404
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 1328
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 826

  1129 ud-suffix: IDENTIFIER •

    $default  reduce using rule 1129 (ud-suffix)


State 827

  572 long-long-suffix: LL •

    $default  reduce using rule 572 (long-long-suffix)


State 828

   94 binary-literal: binary-literal '\'' • binary-digit

    '0'  shift, and go to state 780
    '1'  shift, and go to state 781

    binary-digit  go to state 1329


State 829

  1161 unsigned-suffix: 'u' •

    $default  reduce using rule 1161 (unsigned-suffix)


State 830

  1162 unsigned-suffix: 'U' •

    $default  reduce using rule 1162 (unsigned-suffix)


State 831

  574 long-suffix: 'L' •

    $default  reduce using rule 574 (long-suffix)


State 832

  573 long-suffix: 'l' •

    $default  reduce using rule 573 (long-suffix)


State 833

  571 long-long-suffix: "ll" •

    $default  reduce using rule 571 (long-long-suffix)


State 834

  1020 size-suffix: 'z' •

    $default  reduce using rule 1020 (size-suffix)


State 835

  1021 size-suffix: 'Z' •

    $default  reduce using rule 1021 (size-suffix)


State 836

   93 binary-literal: binary-literal binary-digit •

    $default  reduce using rule 93 (binary-literal)


State 837

  490 integer-literal: binary-literal integer-suffix •

    $default  reduce using rule 490 (integer-literal)


State 838

  505 integer-suffix: long-long-suffix •
  506               | long-long-suffix • unsigned-suffix

    'u'  shift, and go to state 829
    'U'  shift, and go to state 830

    $default  reduce using rule 505 (integer-suffix)

    unsigned-suffix  go to state 1330


State 839

  503 integer-suffix: long-suffix •
  504               | long-suffix • unsigned-suffix

    'u'  shift, and go to state 829
    'U'  shift, and go to state 830

    $default  reduce using rule 503 (integer-suffix)

    unsigned-suffix  go to state 1331


State 840

  507 integer-suffix: size-suffix •
  508               | size-suffix • unsigned-suffix

    'u'  shift, and go to state 829
    'U'  shift, and go to state 830

    $default  reduce using rule 507 (integer-suffix)

    unsigned-suffix  go to state 1332


State 841

  1172 user-defined-integer-literal: binary-literal ud-suffix •

    $default  reduce using rule 1172 (user-defined-integer-literal)


State 842

  497 integer-suffix: unsigned-suffix •
  498               | unsigned-suffix • long-suffix
  499               | unsigned-suffix •
  500               | unsigned-suffix • long-long-suffix
  501               | unsigned-suffix •
  502               | unsigned-suffix • size-suffix

    LL    shift, and go to state 827
    'L'   shift, and go to state 831
    'l'   shift, and go to state 832
    "ll"  shift, and go to state 833
    'z'   shift, and go to state 834
    'Z'   shift, and go to state 835

    IDENTIFIER        reduce using rule 497 (integer-suffix)
    IDENTIFIER        [reduce using rule 499 (integer-suffix)]
    IDENTIFIER        [reduce using rule 501 (integer-suffix)]
    '+'               reduce using rule 497 (integer-suffix)
    '+'               [reduce using rule 499 (integer-suffix)]
    '+'               [reduce using rule 501 (integer-suffix)]
    '-'               reduce using rule 497 (integer-suffix)
    '-'               [reduce using rule 499 (integer-suffix)]
    '-'               [reduce using rule 501 (integer-suffix)]
    "using"           reduce using rule 497 (integer-suffix)
    "using"           [reduce using rule 499 (integer-suffix)]
    "using"           [reduce using rule 501 (integer-suffix)]
    '='               reduce using rule 497 (integer-suffix)
    '='               [reduce using rule 499 (integer-suffix)]
    '='               [reduce using rule 501 (integer-suffix)]
    ';'               reduce using rule 497 (integer-suffix)
    ';'               [reduce using rule 499 (integer-suffix)]
    ';'               [reduce using rule 501 (integer-suffix)]
    "alignas"         reduce using rule 497 (integer-suffix)
    "alignas"         [reduce using rule 499 (integer-suffix)]
    "alignas"         [reduce using rule 501 (integer-suffix)]
    '('               reduce using rule 497 (integer-suffix)
    '('               [reduce using rule 499 (integer-suffix)]
    '('               [reduce using rule 501 (integer-suffix)]
    ')'               reduce using rule 497 (integer-suffix)
    ')'               [reduce using rule 499 (integer-suffix)]
    ')'               [reduce using rule 501 (integer-suffix)]
    "..."             reduce using rule 497 (integer-suffix)
    "..."             [reduce using rule 499 (integer-suffix)]
    "..."             [reduce using rule 501 (integer-suffix)]
    '&'               reduce using rule 497 (integer-suffix)
    '&'               [reduce using rule 499 (integer-suffix)]
    '&'               [reduce using rule 501 (integer-suffix)]
    "asm"             reduce using rule 497 (integer-suffix)
    "asm"             [reduce using rule 499 (integer-suffix)]
    "asm"             [reduce using rule 501 (integer-suffix)]
    "*="              reduce using rule 497 (integer-suffix)
    "*="              [reduce using rule 499 (integer-suffix)]
    "*="              [reduce using rule 501 (integer-suffix)]
    "/="              reduce using rule 497 (integer-suffix)
    "/="              [reduce using rule 499 (integer-suffix)]
    "/="              [reduce using rule 501 (integer-suffix)]
    "%="              reduce using rule 497 (integer-suffix)
    "%="              [reduce using rule 499 (integer-suffix)]
    "%="              [reduce using rule 501 (integer-suffix)]
    "+="              reduce using rule 497 (integer-suffix)
    "+="              [reduce using rule 499 (integer-suffix)]
    "+="              [reduce using rule 501 (integer-suffix)]
    "-="              reduce using rule 497 (integer-suffix)
    "-="              [reduce using rule 499 (integer-suffix)]
    "-="              [reduce using rule 501 (integer-suffix)]
    ">>="             reduce using rule 497 (integer-suffix)
    ">>="             [reduce using rule 499 (integer-suffix)]
    ">>="             [reduce using rule 501 (integer-suffix)]
    "<<="             reduce using rule 497 (integer-suffix)
    "<<="             [reduce using rule 499 (integer-suffix)]
    "<<="             [reduce using rule 501 (integer-suffix)]
    "&="              reduce using rule 497 (integer-suffix)
    "&="              [reduce using rule 499 (integer-suffix)]
    "&="              [reduce using rule 501 (integer-suffix)]
    "^="              reduce using rule 497 (integer-suffix)
    "^="              [reduce using rule 499 (integer-suffix)]
    "^="              [reduce using rule 501 (integer-suffix)]
    "|="              reduce using rule 497 (integer-suffix)
    "|="              [reduce using rule 499 (integer-suffix)]
    "|="              [reduce using rule 501 (integer-suffix)]
    ','               reduce using rule 497 (integer-suffix)
    ','               [reduce using rule 499 (integer-suffix)]
    ','               [reduce using rule 501 (integer-suffix)]
    "::"              reduce using rule 497 (integer-suffix)
    "::"              [reduce using rule 499 (integer-suffix)]
    "::"              [reduce using rule 501 (integer-suffix)]
    '['               reduce using rule 497 (integer-suffix)
    '['               [reduce using rule 499 (integer-suffix)]
    '['               [reduce using rule 501 (integer-suffix)]
    ']'               reduce using rule 497 (integer-suffix)
    ']'               [reduce using rule 499 (integer-suffix)]
    ']'               [reduce using rule 501 (integer-suffix)]
    ':'               reduce using rule 497 (integer-suffix)
    ':'               [reduce using rule 499 (integer-suffix)]
    ':'               [reduce using rule 501 (integer-suffix)]
    '{'               reduce using rule 497 (integer-suffix)
    '{'               [reduce using rule 499 (integer-suffix)]
    '{'               [reduce using rule 501 (integer-suffix)]
    '}'               reduce using rule 497 (integer-suffix)
    '}'               [reduce using rule 499 (integer-suffix)]
    '}'               [reduce using rule 501 (integer-suffix)]
    "virtual"         reduce using rule 497 (integer-suffix)
    "virtual"         [reduce using rule 499 (integer-suffix)]
    "virtual"         [reduce using rule 501 (integer-suffix)]
    "class"           reduce using rule 497 (integer-suffix)
    "class"           [reduce using rule 499 (integer-suffix)]
    "class"           [reduce using rule 501 (integer-suffix)]
    "struct"          reduce using rule 497 (integer-suffix)
    "struct"          [reduce using rule 499 (integer-suffix)]
    "struct"          [reduce using rule 501 (integer-suffix)]
    "union"           reduce using rule 497 (integer-suffix)
    "union"           [reduce using rule 499 (integer-suffix)]
    "union"           [reduce using rule 501 (integer-suffix)]
    "template"        reduce using rule 497 (integer-suffix)
    "template"        [reduce using rule 499 (integer-suffix)]
    "template"        [reduce using rule 501 (integer-suffix)]
    "<=>"             reduce using rule 497 (integer-suffix)
    "<=>"             [reduce using rule 499 (integer-suffix)]
    "<=>"             [reduce using rule 501 (integer-suffix)]
    "noexcept"        reduce using rule 497 (integer-suffix)
    "noexcept"        [reduce using rule 499 (integer-suffix)]
    "noexcept"        [reduce using rule 501 (integer-suffix)]
    "concept"         reduce using rule 497 (integer-suffix)
    "concept"         [reduce using rule 499 (integer-suffix)]
    "concept"         [reduce using rule 501 (integer-suffix)]
    '?'               reduce using rule 497 (integer-suffix)
    '?'               [reduce using rule 499 (integer-suffix)]
    '?'               [reduce using rule 501 (integer-suffix)]
    "&&"              reduce using rule 497 (integer-suffix)
    "&&"              [reduce using rule 499 (integer-suffix)]
    "&&"              [reduce using rule 501 (integer-suffix)]
    "||"              reduce using rule 497 (integer-suffix)
    "||"              [reduce using rule 499 (integer-suffix)]
    "||"              [reduce using rule 501 (integer-suffix)]
    "operator"        reduce using rule 497 (integer-suffix)
    "operator"        [reduce using rule 499 (integer-suffix)]
    "operator"        [reduce using rule 501 (integer-suffix)]
    "const"           reduce using rule 497 (integer-suffix)
    "const"           [reduce using rule 499 (integer-suffix)]
    "const"           [reduce using rule 501 (integer-suffix)]
    "volatile"        reduce using rule 497 (integer-suffix)
    "volatile"        [reduce using rule 499 (integer-suffix)]
    "volatile"        [reduce using rule 501 (integer-suffix)]
    "friend"          reduce using rule 497 (integer-suffix)
    "friend"          [reduce using rule 499 (integer-suffix)]
    "friend"          [reduce using rule 501 (integer-suffix)]
    "typedef"         reduce using rule 497 (integer-suffix)
    "typedef"         [reduce using rule 499 (integer-suffix)]
    "typedef"         [reduce using rule 501 (integer-suffix)]
    "constexpr"       reduce using rule 497 (integer-suffix)
    "constexpr"       [reduce using rule 499 (integer-suffix)]
    "constexpr"       [reduce using rule 501 (integer-suffix)]
    "consteval"       reduce using rule 497 (integer-suffix)
    "consteval"       [reduce using rule 499 (integer-suffix)]
    "consteval"       [reduce using rule 501 (integer-suffix)]
    "constinit"       reduce using rule 497 (integer-suffix)
    "constinit"       [reduce using rule 499 (integer-suffix)]
    "constinit"       [reduce using rule 501 (integer-suffix)]
    "inline"          reduce using rule 497 (integer-suffix)
    "inline"          [reduce using rule 499 (integer-suffix)]
    "inline"          [reduce using rule 501 (integer-suffix)]
    "decltype"        reduce using rule 497 (integer-suffix)
    "decltype"        [reduce using rule 499 (integer-suffix)]
    "decltype"        [reduce using rule 501 (integer-suffix)]
    "->"              reduce using rule 497 (integer-suffix)
    "->"              [reduce using rule 499 (integer-suffix)]
    "->"              [reduce using rule 501 (integer-suffix)]
    '.'               reduce using rule 497 (integer-suffix)
    '.'               [reduce using rule 499 (integer-suffix)]
    '.'               [reduce using rule 501 (integer-suffix)]
    "enum"            reduce using rule 497 (integer-suffix)
    "enum"            [reduce using rule 499 (integer-suffix)]
    "enum"            [reduce using rule 501 (integer-suffix)]
    "=="              reduce using rule 497 (integer-suffix)
    "=="              [reduce using rule 499 (integer-suffix)]
    "=="              [reduce using rule 501 (integer-suffix)]
    "!="              reduce using rule 497 (integer-suffix)
    "!="              [reduce using rule 499 (integer-suffix)]
    "!="              [reduce using rule 501 (integer-suffix)]
    '^'               reduce using rule 497 (integer-suffix)
    '^'               [reduce using rule 499 (integer-suffix)]
    '^'               [reduce using rule 501 (integer-suffix)]
    "extern"          reduce using rule 497 (integer-suffix)
    "extern"          [reduce using rule 499 (integer-suffix)]
    "extern"          [reduce using rule 501 (integer-suffix)]
    '<'               reduce using rule 497 (integer-suffix)
    '<'               [reduce using rule 499 (integer-suffix)]
    '<'               [reduce using rule 501 (integer-suffix)]
    '>'               reduce using rule 497 (integer-suffix)
    '>'               [reduce using rule 499 (integer-suffix)]
    '>'               [reduce using rule 501 (integer-suffix)]
    "explicit"        reduce using rule 497 (integer-suffix)
    "explicit"        [reduce using rule 499 (integer-suffix)]
    "explicit"        [reduce using rule 501 (integer-suffix)]
    "export"          reduce using rule 497 (integer-suffix)
    "export"          [reduce using rule 499 (integer-suffix)]
    "export"          [reduce using rule 501 (integer-suffix)]
    "export-keyword"  reduce using rule 497 (integer-suffix)
    "export-keyword"  [reduce using rule 499 (integer-suffix)]
    "export-keyword"  [reduce using rule 501 (integer-suffix)]
    '*'               reduce using rule 497 (integer-suffix)
    '*'               [reduce using rule 499 (integer-suffix)]
    '*'               [reduce using rule 501 (integer-suffix)]
    '/'               reduce using rule 497 (integer-suffix)
    '/'               [reduce using rule 499 (integer-suffix)]
    '/'               [reduce using rule 501 (integer-suffix)]
    '%'               reduce using rule 497 (integer-suffix)
    '%'               [reduce using rule 499 (integer-suffix)]
    '%'               [reduce using rule 501 (integer-suffix)]
    '|'               reduce using rule 497 (integer-suffix)
    '|'               [reduce using rule 499 (integer-suffix)]
    '|'               [reduce using rule 501 (integer-suffix)]
    "<<"              reduce using rule 497 (integer-suffix)
    "<<"              [reduce using rule 499 (integer-suffix)]
    "<<"              [reduce using rule 501 (integer-suffix)]
    ">>"              reduce using rule 497 (integer-suffix)
    ">>"              [reduce using rule 499 (integer-suffix)]
    ">>"              [reduce using rule 501 (integer-suffix)]
    "<="              reduce using rule 497 (integer-suffix)
    "<="              [reduce using rule 499 (integer-suffix)]
    "<="              [reduce using rule 501 (integer-suffix)]
    ">="              reduce using rule 497 (integer-suffix)
    ">="              [reduce using rule 499 (integer-suffix)]
    ">="              [reduce using rule 501 (integer-suffix)]
    ".*"              reduce using rule 497 (integer-suffix)
    ".*"              [reduce using rule 499 (integer-suffix)]
    ".*"              [reduce using rule 501 (integer-suffix)]
    "->*"             reduce using rule 497 (integer-suffix)
    "->*"             [reduce using rule 499 (integer-suffix)]
    "->*"             [reduce using rule 501 (integer-suffix)]
    "try"             reduce using rule 497 (integer-suffix)
    "try"             [reduce using rule 499 (integer-suffix)]
    "try"             [reduce using rule 501 (integer-suffix)]
    "import-keyword"  reduce using rule 497 (integer-suffix)
    "import-keyword"  [reduce using rule 499 (integer-suffix)]
    "import-keyword"  [reduce using rule 501 (integer-suffix)]
    "namespace"       reduce using rule 497 (integer-suffix)
    "namespace"       [reduce using rule 499 (integer-suffix)]
    "namespace"       [reduce using rule 501 (integer-suffix)]
    '~'               reduce using rule 497 (integer-suffix)
    '~'               [reduce using rule 499 (integer-suffix)]
    '~'               [reduce using rule 501 (integer-suffix)]
    "++"              reduce using rule 497 (integer-suffix)
    "++"              [reduce using rule 499 (integer-suffix)]
    "++"              [reduce using rule 501 (integer-suffix)]
    "--"              reduce using rule 497 (integer-suffix)
    "--"              [reduce using rule 499 (integer-suffix)]
    "--"              [reduce using rule 501 (integer-suffix)]
    "auto"            reduce using rule 497 (integer-suffix)
    "auto"            [reduce using rule 499 (integer-suffix)]
    "auto"            [reduce using rule 501 (integer-suffix)]
    "char"            reduce using rule 497 (integer-suffix)
    "char"            [reduce using rule 499 (integer-suffix)]
    "char"            [reduce using rule 501 (integer-suffix)]
    "char8_t"         reduce using rule 497 (integer-suffix)
    "char8_t"         [reduce using rule 499 (integer-suffix)]
    "char8_t"         [reduce using rule 501 (integer-suffix)]
    "char16_t"        reduce using rule 497 (integer-suffix)
    "char16_t"        [reduce using rule 499 (integer-suffix)]
    "char16_t"        [reduce using rule 501 (integer-suffix)]
    "char32_t"        reduce using rule 497 (integer-suffix)
    "char32_t"        [reduce using rule 499 (integer-suffix)]
    "char32_t"        [reduce using rule 501 (integer-suffix)]
    "wchar_t"         reduce using rule 497 (integer-suffix)
    "wchar_t"         [reduce using rule 499 (integer-suffix)]
    "wchar_t"         [reduce using rule 501 (integer-suffix)]
    "bool"            reduce using rule 497 (integer-suffix)
    "bool"            [reduce using rule 499 (integer-suffix)]
    "bool"            [reduce using rule 501 (integer-suffix)]
    "short"           reduce using rule 497 (integer-suffix)
    "short"           [reduce using rule 499 (integer-suffix)]
    "short"           [reduce using rule 501 (integer-suffix)]
    "int"             reduce using rule 497 (integer-suffix)
    "int"             [reduce using rule 499 (integer-suffix)]
    "int"             [reduce using rule 501 (integer-suffix)]
    "long"            reduce using rule 497 (integer-suffix)
    "long"            [reduce using rule 499 (integer-suffix)]
    "long"            [reduce using rule 501 (integer-suffix)]
    "signed"          reduce using rule 497 (integer-suffix)
    "signed"          [reduce using rule 499 (integer-suffix)]
    "signed"          [reduce using rule 501 (integer-suffix)]
    "unsigned"        reduce using rule 497 (integer-suffix)
    "unsigned"        [reduce using rule 499 (integer-suffix)]
    "unsigned"        [reduce using rule 501 (integer-suffix)]
    "float"           reduce using rule 497 (integer-suffix)
    "float"           [reduce using rule 499 (integer-suffix)]
    "float"           [reduce using rule 501 (integer-suffix)]
    "double"          reduce using rule 497 (integer-suffix)
    "double"          [reduce using rule 499 (integer-suffix)]
    "double"          [reduce using rule 501 (integer-suffix)]
    "void"            reduce using rule 497 (integer-suffix)
    "void"            [reduce using rule 499 (integer-suffix)]
    "void"            [reduce using rule 501 (integer-suffix)]
    "static_assert"   reduce using rule 497 (integer-suffix)
    "static_assert"   [reduce using rule 499 (integer-suffix)]
    "static_assert"   [reduce using rule 501 (integer-suffix)]
    "static"          reduce using rule 497 (integer-suffix)
    "static"          [reduce using rule 499 (integer-suffix)]
    "static"          [reduce using rule 501 (integer-suffix)]
    "thread_local"    reduce using rule 497 (integer-suffix)
    "thread_local"    [reduce using rule 499 (integer-suffix)]
    "thread_local"    [reduce using rule 501 (integer-suffix)]
    "mutable"         reduce using rule 497 (integer-suffix)
    "mutable"         [reduce using rule 499 (integer-suffix)]
    "mutable"         [reduce using rule 501 (integer-suffix)]
    "typename"        reduce using rule 497 (integer-suffix)
    "typename"        [reduce using rule 499 (integer-suffix)]
    "typename"        [reduce using rule 501 (integer-suffix)]
    $default          reduce using rule 497 (integer-suffix)

    long-long-suffix  go to state 1333
    long-suffix       go to state 1334
    size-suffix       go to state 1335


State 843

  1163 user-defined-character-literal: character-literal ud-suffix •

    $default  reduce using rule 1163 (user-defined-character-literal)


State 844

  155 compare-expression: compare-expression "<=>" • shift-expression

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    additive-expression                  go to state 404
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    concept-name                         go to state 68
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    requires-expression                  go to state 447
    shift-expression                     go to state 1336
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 845

   17 alignment-specifier: "alignas" '(' constant-expression ')' •

    $default  reduce using rule 17 (alignment-specifier)


State 846

   18 alignment-specifier: "alignas" '(' constant-expression "..." • ')'

    ')'  shift, and go to state 1337


State 847

  200 decimal-literal: decimal-literal '\'' • digit

    '0'  shift, and go to state 793
    '1'  shift, and go to state 794
    '2'  shift, and go to state 795
    '3'  shift, and go to state 796
    '4'  shift, and go to state 797
    '5'  shift, and go to state 798
    '6'  shift, and go to state 799
    '7'  shift, and go to state 800
    '8'  shift, and go to state 801
    '9'  shift, and go to state 802

    digit  go to state 1338


State 848

  199 decimal-literal: decimal-literal digit •

    $default  reduce using rule 199 (decimal-literal)


State 849

  494 integer-literal: decimal-literal integer-suffix •

    $default  reduce using rule 494 (integer-literal)


State 850

  1169 user-defined-integer-literal: decimal-literal ud-suffix •

    $default  reduce using rule 1169 (user-defined-integer-literal)


State 851

  264 digit-sequence: digit-sequence '\'' • digit

    '0'  shift, and go to state 793
    '1'  shift, and go to state 794
    '2'  shift, and go to state 795
    '3'  shift, and go to state 796
    '4'  shift, and go to state 797
    '5'  shift, and go to state 798
    '6'  shift, and go to state 799
    '7'  shift, and go to state 800
    '8'  shift, and go to state 801
    '9'  shift, and go to state 802

    digit  go to state 1339


State 852

  390 fractional-constant: digit-sequence '.' • digit-sequence
  392                    | digit-sequence '.' •

    '0'  shift, and go to state 793
    '1'  shift, and go to state 794
    '2'  shift, and go to state 795
    '3'  shift, and go to state 796
    '4'  shift, and go to state 797
    '5'  shift, and go to state 798
    '6'  shift, and go to state 799
    '7'  shift, and go to state 800
    '8'  shift, and go to state 801
    '9'  shift, and go to state 802

    $default  reduce using rule 392 (fractional-constant)

    digit           go to state 417
    digit-sequence  go to state 1340


State 853

  327 exponent-part: 'e' • digit-sequence
  328              | 'e' • sign digit-sequence

    '+'  shift, and go to state 1341
    '-'  shift, and go to state 1342
    '0'  shift, and go to state 793
    '1'  shift, and go to state 794
    '2'  shift, and go to state 795
    '3'  shift, and go to state 796
    '4'  shift, and go to state 797
    '5'  shift, and go to state 798
    '6'  shift, and go to state 799
    '7'  shift, and go to state 800
    '8'  shift, and go to state 801
    '9'  shift, and go to state 802

    digit           go to state 417
    digit-sequence  go to state 1343
    sign            go to state 1344


State 854

  329 exponent-part: 'E' • digit-sequence
  330              | 'E' • sign digit-sequence

    '+'  shift, and go to state 1341
    '-'  shift, and go to state 1342
    '0'  shift, and go to state 793
    '1'  shift, and go to state 794
    '2'  shift, and go to state 795
    '3'  shift, and go to state 796
    '4'  shift, and go to state 797
    '5'  shift, and go to state 798
    '6'  shift, and go to state 799
    '7'  shift, and go to state 800
    '8'  shift, and go to state 801
    '9'  shift, and go to state 802

    digit           go to state 417
    digit-sequence  go to state 1345
    sign            go to state 1346


State 855

  263 digit-sequence: digit-sequence digit •

    $default  reduce using rule 263 (digit-sequence)


State 856

  196 decimal-floating-point-literal: digit-sequence exponent-part •
  197                               | digit-sequence exponent-part • floating-point-suffix
  1166 user-defined-floating-point-literal: digit-sequence exponent-part • ud-suffix

    IDENTIFIER  shift, and go to state 826
    'L'         shift, and go to state 861
    'f'         shift, and go to state 862
    'l'         shift, and go to state 863
    'F'         shift, and go to state 864

    IDENTIFIER  [reduce using rule 196 (decimal-floating-point-literal)]
    $default    reduce using rule 196 (decimal-floating-point-literal)

    floating-point-suffix  go to state 1347
    ud-suffix              go to state 1348


State 857

  126 character-literal: encoding-prefix '\'' • c-char-sequence '\''

    EXCEPT_THE_APOSTROPHE_REVERSE_SOLIDUS_OR_NEW_LINE_CHARACTER  shift, and go to state 784
    '\\'                                                         shift, and go to state 491
    "\\x"                                                        shift, and go to state 493
    "\\u"                                                        shift, and go to state 494
    "\\U"                                                        shift, and go to state 495

    basic-c-char                 go to state 785
    c-char                       go to state 786
    c-char-sequence              go to state 1349
    conditional-escape-sequence  go to state 497
    escape-sequence              go to state 788
    hexadecimal-escape-sequence  go to state 499
    numeric-escape-sequence      go to state 500
    octal-escape-sequence        go to state 501
    simple-escape-sequence       go to state 504
    universal-character-name     go to state 789


State 858

  308 equality-expression: equality-expression "==" • relational-expression

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    additive-expression                  go to state 404
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 1350
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 859

  309 equality-expression: equality-expression "!=" • relational-expression

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    additive-expression                  go to state 404
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 1351
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 860

  321 exclusive-or-expression: exclusive-or-expression '^' • and-expression

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    additive-expression                  go to state 404
    and-expression                       go to state 1352
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 861

  347 floating-point-suffix: 'L' •

    $default  reduce using rule 347 (floating-point-suffix)


State 862

  344 floating-point-suffix: 'f' •

    $default  reduce using rule 344 (floating-point-suffix)


State 863

  345 floating-point-suffix: 'l' •

    $default  reduce using rule 345 (floating-point-suffix)


State 864

  346 floating-point-suffix: 'F' •

    $default  reduce using rule 346 (floating-point-suffix)


State 865

  193 decimal-floating-point-literal: fractional-constant exponent-part •
  195                               | fractional-constant exponent-part • floating-point-suffix
  1165 user-defined-floating-point-literal: fractional-constant exponent-part • ud-suffix

    IDENTIFIER  shift, and go to state 826
    'L'         shift, and go to state 861
    'f'         shift, and go to state 862
    'l'         shift, and go to state 863
    'F'         shift, and go to state 864

    IDENTIFIER  [reduce using rule 193 (decimal-floating-point-literal)]
    $default    reduce using rule 193 (decimal-floating-point-literal)

    floating-point-suffix  go to state 1353
    ud-suffix              go to state 1354


State 866

  194 decimal-floating-point-literal: fractional-constant floating-point-suffix •

    $default  reduce using rule 194 (decimal-floating-point-literal)


State 867

  1164 user-defined-floating-point-literal: fractional-constant ud-suffix •

    $default  reduce using rule 1164 (user-defined-floating-point-literal)


State 868

  496 integer-literal: hexadecimal-literal integer-suffix •

    $default  reduce using rule 496 (integer-literal)


State 869

  1171 user-defined-integer-literal: hexadecimal-literal ud-suffix •

    $default  reduce using rule 1171 (user-defined-integer-literal)


State 870

  426 hexadecimal-digit: '0' •

    $default  reduce using rule 426 (hexadecimal-digit)


State 871

  427 hexadecimal-digit: '1' •

    $default  reduce using rule 427 (hexadecimal-digit)


State 872

  458 hexadecimal-fractional-constant: '.' • hexadecimal-digit-sequence

    '0'  shift, and go to state 870
    '1'  shift, and go to state 871
    '2'  shift, and go to state 873
    '3'  shift, and go to state 874
    '4'  shift, and go to state 875
    '5'  shift, and go to state 876
    '6'  shift, and go to state 877
    '7'  shift, and go to state 878
    '8'  shift, and go to state 879
    '9'  shift, and go to state 880
    'e'  shift, and go to state 881
    'E'  shift, and go to state 882
    'f'  shift, and go to state 883
    'F'  shift, and go to state 884
    'a'  shift, and go to state 885
    'b'  shift, and go to state 886
    'c'  shift, and go to state 887
    'd'  shift, and go to state 888
    'A'  shift, and go to state 889
    'B'  shift, and go to state 890
    'C'  shift, and go to state 891
    'D'  shift, and go to state 892

    hexadecimal-digit           go to state 893
    hexadecimal-digit-sequence  go to state 1355


State 873

  428 hexadecimal-digit: '2' •

    $default  reduce using rule 428 (hexadecimal-digit)


State 874

  429 hexadecimal-digit: '3' •

    $default  reduce using rule 429 (hexadecimal-digit)


State 875

  430 hexadecimal-digit: '4' •

    $default  reduce using rule 430 (hexadecimal-digit)


State 876

  431 hexadecimal-digit: '5' •

    $default  reduce using rule 431 (hexadecimal-digit)


State 877

  432 hexadecimal-digit: '6' •

    $default  reduce using rule 432 (hexadecimal-digit)


State 878

  433 hexadecimal-digit: '7' •

    $default  reduce using rule 433 (hexadecimal-digit)


State 879

  434 hexadecimal-digit: '8' •

    $default  reduce using rule 434 (hexadecimal-digit)


State 880

  435 hexadecimal-digit: '9' •

    $default  reduce using rule 435 (hexadecimal-digit)


State 881

  440 hexadecimal-digit: 'e' •

    $default  reduce using rule 440 (hexadecimal-digit)


State 882

  446 hexadecimal-digit: 'E' •

    $default  reduce using rule 446 (hexadecimal-digit)


State 883

  441 hexadecimal-digit: 'f' •

    $default  reduce using rule 441 (hexadecimal-digit)


State 884

  447 hexadecimal-digit: 'F' •

    $default  reduce using rule 447 (hexadecimal-digit)


State 885

  436 hexadecimal-digit: 'a' •

    $default  reduce using rule 436 (hexadecimal-digit)


State 886

  437 hexadecimal-digit: 'b' •

    $default  reduce using rule 437 (hexadecimal-digit)


State 887

  438 hexadecimal-digit: 'c' •

    $default  reduce using rule 438 (hexadecimal-digit)


State 888

  439 hexadecimal-digit: 'd' •

    $default  reduce using rule 439 (hexadecimal-digit)


State 889

  442 hexadecimal-digit: 'A' •

    $default  reduce using rule 442 (hexadecimal-digit)


State 890

  443 hexadecimal-digit: 'B' •

    $default  reduce using rule 443 (hexadecimal-digit)


State 891

  444 hexadecimal-digit: 'C' •

    $default  reduce using rule 444 (hexadecimal-digit)


State 892

  445 hexadecimal-digit: 'D' •

    $default  reduce using rule 445 (hexadecimal-digit)


State 893

  448 hexadecimal-digit-sequence: hexadecimal-digit •

    $default  reduce using rule 448 (hexadecimal-digit-sequence)


State 894

  449 hexadecimal-digit-sequence: hexadecimal-digit-sequence • hexadecimal-digit
  450                           | hexadecimal-digit-sequence • '\'' hexadecimal-digit
  455 hexadecimal-floating-point-literal: hexadecimal-prefix hexadecimal-digit-sequence • binary-exponent-part
  456                                   | hexadecimal-prefix hexadecimal-digit-sequence • binary-exponent-part floating-point-suffix
  457 hexadecimal-fractional-constant: hexadecimal-digit-sequence • '.' hexadecimal-digit-sequence
  459                                | hexadecimal-digit-sequence • '.'
  460 hexadecimal-literal: hexadecimal-prefix hexadecimal-digit-sequence •
  1168 user-defined-floating-point-literal: hexadecimal-prefix hexadecimal-digit-sequence • binary-exponent-part ud-suffix

    '0'   shift, and go to state 870
    '1'   shift, and go to state 871
    'p'   shift, and go to state 1356
    'P'   shift, and go to state 1357
    '\''  shift, and go to state 1358
    '.'   shift, and go to state 1359
    '2'   shift, and go to state 873
    '3'   shift, and go to state 874
    '4'   shift, and go to state 875
    '5'   shift, and go to state 876
    '6'   shift, and go to state 877
    '7'   shift, and go to state 878
    '8'   shift, and go to state 879
    '9'   shift, and go to state 880
    'e'   shift, and go to state 881
    'E'   shift, and go to state 882
    'f'   shift, and go to state 883
    'F'   shift, and go to state 884
    'a'   shift, and go to state 885
    'b'   shift, and go to state 886
    'c'   shift, and go to state 887
    'd'   shift, and go to state 888
    'A'   shift, and go to state 889
    'B'   shift, and go to state 890
    'C'   shift, and go to state 891
    'D'   shift, and go to state 892

    '.'       [reduce using rule 460 (hexadecimal-literal)]
    $default  reduce using rule 460 (hexadecimal-literal)

    binary-exponent-part  go to state 1360
    hexadecimal-digit     go to state 1361


State 895

  453 hexadecimal-floating-point-literal: hexadecimal-prefix hexadecimal-fractional-constant • binary-exponent-part
  454                                   | hexadecimal-prefix hexadecimal-fractional-constant • binary-exponent-part floating-point-suffix
  1167 user-defined-floating-point-literal: hexadecimal-prefix hexadecimal-fractional-constant • binary-exponent-part ud-suffix

    'p'  shift, and go to state 1356
    'P'  shift, and go to state 1357

    binary-exponent-part  go to state 1362


State 896

  468 inclusive-or-expression: inclusive-or-expression '|' • exclusive-or-expression

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    additive-expression                  go to state 404
    and-expression                       go to state 405
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 1363
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 897

  533 lambda-declarator: '(' • parameter-declaration-clause ')' lambda-specifiers
  534                  | '(' • parameter-declaration-clause ')' lambda-specifiers requires-clause

    IDENTIFIER      shift, and go to state 161
    "alignas"       shift, and go to state 4
    "..."           shift, and go to state 734
    "::"            shift, and go to state 9
    '['             shift, and go to state 10
    "virtual"       shift, and go to state 11
    "class"         shift, and go to state 12
    "struct"        shift, and go to state 13
    "union"         shift, and go to state 14
    "const"         shift, and go to state 18
    "volatile"      shift, and go to state 19
    "friend"        shift, and go to state 20
    "typedef"       shift, and go to state 21
    "constexpr"     shift, and go to state 22
    "consteval"     shift, and go to state 23
    "constinit"     shift, and go to state 24
    "inline"        shift, and go to state 263
    "decltype"      shift, and go to state 26
    "enum"          shift, and go to state 27
    "extern"        shift, and go to state 264
    "explicit"      shift, and go to state 29
    "this"          shift, and go to state 476
    "auto"          shift, and go to state 37
    "char"          shift, and go to state 38
    "char8_t"       shift, and go to state 39
    "char16_t"      shift, and go to state 40
    "char32_t"      shift, and go to state 41
    "wchar_t"       shift, and go to state 42
    "bool"          shift, and go to state 43
    "short"         shift, and go to state 44
    "int"           shift, and go to state 45
    "long"          shift, and go to state 46
    "signed"        shift, and go to state 47
    "unsigned"      shift, and go to state 48
    "float"         shift, and go to state 49
    "double"        shift, and go to state 50
    "void"          shift, and go to state 51
    "static"        shift, and go to state 53
    "thread_local"  shift, and go to state 54
    "mutable"       shift, and go to state 55
    "typename"      shift, and go to state 56

    alignment-specifier           go to state 58
    attribute-specifier           go to state 61
    attribute-specifier-seq       go to state 478
    class-head                    go to state 64
    class-key                     go to state 65
    class-name                    go to state 66
    class-specifier               go to state 67
    concept-name                  go to state 68
    cv-qualifier                  go to state 70
    decl-specifier                go to state 71
    decl-specifier-seq            go to state 479
    decltype-specifier            go to state 77
    defining-type-specifier       go to state 79
    elaborated-enum-specifier     go to state 80
    elaborated-type-specifier     go to state 81
    enum-head                     go to state 83
    enum-key                      go to state 268
    enum-name                     go to state 85
    enum-specifier                go to state 86
    explicit-specifier            go to state 269
    function-specifier            go to state 92
    namespace-alias               go to state 100
    namespace-name                go to state 103
    nested-name-specifier         go to state 213
    parameter-declaration         go to state 735
    parameter-declaration-clause  go to state 1364
    parameter-declaration-list    go to state 737
    placeholder-type-specifier    go to state 110
    simple-template-id            go to state 142
    simple-type-specifier         go to state 116
    storage-class-specifier       go to state 118
    template-name                 go to state 216
    type-constraint               go to state 124
    type-name                     go to state 125
    type-specifier                go to state 126
    typedef-name                  go to state 127
    typename-specifier            go to state 128


State 898

  697 noexcept-specifier: "noexcept" • '(' constant-expression ')'
  698                   | "noexcept" •

    '('  shift, and go to state 1365

    '('       [reduce using rule 698 (noexcept-specifier)]
    $default  reduce using rule 698 (noexcept-specifier)


State 899

  536 lambda-expression: lambda-introducer '<' • template-parameter-list '>' lambda-declarator compound-statement
  537                  | lambda-introducer '<' • template-parameter-list '>' requires-clause lambda-declarator compound-statement

    IDENTIFIER      shift, and go to state 161
    "alignas"       shift, and go to state 4
    "::"            shift, and go to state 9
    '['             shift, and go to state 10
    "virtual"       shift, and go to state 11
    "class"         shift, and go to state 473
    "struct"        shift, and go to state 13
    "union"         shift, and go to state 14
    "template"      shift, and go to state 474
    "const"         shift, and go to state 18
    "volatile"      shift, and go to state 19
    "friend"        shift, and go to state 20
    "typedef"       shift, and go to state 21
    "constexpr"     shift, and go to state 22
    "consteval"     shift, and go to state 23
    "constinit"     shift, and go to state 24
    "inline"        shift, and go to state 263
    "decltype"      shift, and go to state 26
    "enum"          shift, and go to state 27
    "extern"        shift, and go to state 264
    "explicit"      shift, and go to state 29
    "this"          shift, and go to state 476
    "auto"          shift, and go to state 37
    "char"          shift, and go to state 38
    "char8_t"       shift, and go to state 39
    "char16_t"      shift, and go to state 40
    "char32_t"      shift, and go to state 41
    "wchar_t"       shift, and go to state 42
    "bool"          shift, and go to state 43
    "short"         shift, and go to state 44
    "int"           shift, and go to state 45
    "long"          shift, and go to state 46
    "signed"        shift, and go to state 47
    "unsigned"      shift, and go to state 48
    "float"         shift, and go to state 49
    "double"        shift, and go to state 50
    "void"          shift, and go to state 51
    "static"        shift, and go to state 53
    "thread_local"  shift, and go to state 54
    "mutable"       shift, and go to state 55
    "typename"      shift, and go to state 477

    alignment-specifier         go to state 58
    attribute-specifier         go to state 61
    attribute-specifier-seq     go to state 478
    class-head                  go to state 64
    class-key                   go to state 65
    class-name                  go to state 66
    class-specifier             go to state 67
    concept-name                go to state 68
    cv-qualifier                go to state 70
    decl-specifier              go to state 71
    decl-specifier-seq          go to state 479
    decltype-specifier          go to state 77
    defining-type-specifier     go to state 79
    elaborated-enum-specifier   go to state 80
    elaborated-type-specifier   go to state 81
    enum-head                   go to state 83
    enum-key                    go to state 268
    enum-name                   go to state 85
    enum-specifier              go to state 86
    explicit-specifier          go to state 269
    function-specifier          go to state 92
    namespace-alias             go to state 100
    namespace-name              go to state 103
    nested-name-specifier       go to state 213
    parameter-declaration       go to state 480
    placeholder-type-specifier  go to state 110
    simple-template-id          go to state 142
    simple-type-specifier       go to state 116
    storage-class-specifier     go to state 118
    template-head               go to state 481
    template-name               go to state 216
    template-parameter          go to state 482
    template-parameter-list     go to state 1366
    type-constraint             go to state 484
    type-name                   go to state 125
    type-parameter              go to state 485
    type-parameter-key          go to state 486
    type-specifier              go to state 126
    typedef-name                go to state 127
    typename-specifier          go to state 128


State 900

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  544 lambda-specifiers: attribute-specifier-seq •
  552                  | attribute-specifier-seq • trailing-return-type

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10
    "->"       shift, and go to state 740

    $default  reduce using rule 544 (lambda-specifiers)

    alignment-specifier   go to state 58
    attribute-specifier   go to state 265
    trailing-return-type  go to state 1367


State 901

  540 lambda-specifiers: decl-specifier-seq •
  541                  | decl-specifier-seq • noexcept-specifier
  543                  | decl-specifier-seq • attribute-specifier-seq
  545                  | decl-specifier-seq • noexcept-specifier attribute-specifier-seq
  547                  | decl-specifier-seq • trailing-return-type
  549                  | decl-specifier-seq • noexcept-specifier trailing-return-type
  551                  | decl-specifier-seq • attribute-specifier-seq trailing-return-type
  553                  | decl-specifier-seq • noexcept-specifier attribute-specifier-seq trailing-return-type

    "alignas"   shift, and go to state 4
    '['         shift, and go to state 10
    "noexcept"  shift, and go to state 898
    "->"        shift, and go to state 740

    $default  reduce using rule 540 (lambda-specifiers)

    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 1368
    noexcept-specifier       go to state 1369
    trailing-return-type     go to state 1370


State 902

  535 lambda-expression: lambda-introducer lambda-declarator • compound-statement

    '{'  shift, and go to state 294

    compound-statement  go to state 1371


State 903

  532 lambda-declarator: lambda-specifiers •

    $default  reduce using rule 532 (lambda-declarator)


State 904

  542 lambda-specifiers: noexcept-specifier •
  546                  | noexcept-specifier • attribute-specifier-seq
  550                  | noexcept-specifier • trailing-return-type
  554                  | noexcept-specifier • attribute-specifier-seq trailing-return-type

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10
    "->"       shift, and go to state 740

    $default  reduce using rule 542 (lambda-specifiers)

    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 1372
    trailing-return-type     go to state 1373


State 905

  548 lambda-specifiers: trailing-return-type •

    $default  reduce using rule 548 (lambda-specifiers)


State 906

  568 logical-and-expression: logical-and-expression "&&" • inclusive-or-expression

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    additive-expression                  go to state 404
    and-expression                       go to state 405
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 1374
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 907

  170 conditional-expression: logical-or-expression '?' • expression ':' assignment-expression

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 530
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    expression                           go to state 1375
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 908

  570 logical-or-expression: logical-or-expression "||" • logical-and-expression

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    additive-expression                  go to state 404
    and-expression                       go to state 405
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 1376
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 909

  644 multiplicative-expression: multiplicative-expression '*' • pm-expression

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    concept-name                         go to state 68
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 1377
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    requires-expression                  go to state 447
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 910

  645 multiplicative-expression: multiplicative-expression '/' • pm-expression

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    concept-name                         go to state 68
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 1378
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    requires-expression                  go to state 447
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 911

  646 multiplicative-expression: multiplicative-expression '%' • pm-expression

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    concept-name                         go to state 68
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 1379
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    requires-expression                  go to state 447
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 912

  741 octal-digit: '0' •

    $default  reduce using rule 741 (octal-digit)


State 913

  742 octal-digit: '1' •

    $default  reduce using rule 742 (octal-digit)


State 914

  754 octal-literal: octal-literal '\'' • octal-digit

    '0'  shift, and go to state 912
    '1'  shift, and go to state 913
    '2'  shift, and go to state 915
    '3'  shift, and go to state 916
    '4'  shift, and go to state 917
    '5'  shift, and go to state 918
    '6'  shift, and go to state 919
    '7'  shift, and go to state 920

    octal-digit  go to state 1380


State 915

  743 octal-digit: '2' •

    $default  reduce using rule 743 (octal-digit)


State 916

  744 octal-digit: '3' •

    $default  reduce using rule 744 (octal-digit)


State 917

  745 octal-digit: '4' •

    $default  reduce using rule 745 (octal-digit)


State 918

  746 octal-digit: '5' •

    $default  reduce using rule 746 (octal-digit)


State 919

  747 octal-digit: '6' •

    $default  reduce using rule 747 (octal-digit)


State 920

  748 octal-digit: '7' •

    $default  reduce using rule 748 (octal-digit)


State 921

  492 integer-literal: octal-literal integer-suffix •

    $default  reduce using rule 492 (integer-literal)


State 922

  753 octal-literal: octal-literal octal-digit •

    $default  reduce using rule 753 (octal-literal)


State 923

  1170 user-defined-integer-literal: octal-literal ud-suffix •

    $default  reduce using rule 1170 (user-defined-integer-literal)


State 924

  857 pm-expression: pm-expression ".*" • cast-expression

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 1381
    character-literal                    go to state 410
    class-name                           go to state 66
    concept-name                         go to state 68
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    requires-expression                  go to state 447
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 925

  858 pm-expression: pm-expression "->*" • cast-expression

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 1382
    character-literal                    go to state 410
    class-name                           go to state 66
    concept-name                         go to state 68
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    requires-expression                  go to state 447
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 926

  863 postfix-expression: postfix-expression '(' • ')'
  864                   | postfix-expression '(' • expression-list ')'

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    ')'                 shift, and go to state 1383
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 939
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 1141
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    braced-init-list                     go to state 1142
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    expression-list                      go to state 1384
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    initializer-clause                   go to state 1145
    initializer-list                     go to state 1146
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 927

  861 postfix-expression: postfix-expression '[' • ']'
  862                   | postfix-expression '[' • expression-list ']'

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    ']'                 shift, and go to state 1385
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 939
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 1141
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    braced-init-list                     go to state 1142
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    expression-list                      go to state 1386
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    initializer-clause                   go to state 1145
    initializer-list                     go to state 1146
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 928

  873 postfix-expression: postfix-expression "->" • id-expression
  874                   | postfix-expression "->" • "template" id-expression

    IDENTIFIER  shift, and go to state 148
    "::"        shift, and go to state 9
    "template"  shift, and go to state 1387
    "operator"  shift, and go to state 17
    "decltype"  shift, and go to state 135
    '~'         shift, and go to state 36

    class-name              go to state 66
    conversion-function-id  go to state 69
    decltype-specifier      go to state 139
    enum-name               go to state 85
    id-expression           go to state 1388
    literal-operator-id     go to state 96
    namespace-alias         go to state 100
    namespace-name          go to state 103
    nested-name-specifier   go to state 153
    operator-function-id    go to state 109
    qualified-id            go to state 113
    simple-template-id      go to state 115
    template-id             go to state 121
    template-name           go to state 143
    type-name               go to state 144
    typedef-name            go to state 127
    unqualified-id          go to state 130


State 929

  871 postfix-expression: postfix-expression '.' • id-expression
  872                   | postfix-expression '.' • "template" id-expression

    IDENTIFIER  shift, and go to state 148
    "::"        shift, and go to state 9
    "template"  shift, and go to state 1389
    "operator"  shift, and go to state 17
    "decltype"  shift, and go to state 135
    '~'         shift, and go to state 36

    class-name              go to state 66
    conversion-function-id  go to state 69
    decltype-specifier      go to state 139
    enum-name               go to state 85
    id-expression           go to state 1390
    literal-operator-id     go to state 96
    namespace-alias         go to state 100
    namespace-name          go to state 103
    nested-name-specifier   go to state 153
    operator-function-id    go to state 109
    qualified-id            go to state 113
    simple-template-id      go to state 115
    template-id             go to state 121
    template-name           go to state 143
    type-name               go to state 144
    typedef-name            go to state 127
    unqualified-id          go to state 130


State 930

  875 postfix-expression: postfix-expression "++" •

    $default  reduce using rule 875 (postfix-expression)


State 931

  876 postfix-expression: postfix-expression "--" •

    $default  reduce using rule 876 (postfix-expression)


State 932

  931 relational-expression: relational-expression '<' • compare-expression

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    additive-expression                  go to state 404
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 1391
    concept-name                         go to state 68
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 933

  932 relational-expression: relational-expression '>' • compare-expression

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    additive-expression                  go to state 404
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 1392
    concept-name                         go to state 68
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 934

  933 relational-expression: relational-expression "<=" • compare-expression

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    additive-expression                  go to state 404
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 1393
    concept-name                         go to state 68
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 935

  934 relational-expression: relational-expression ">=" • compare-expression

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    additive-expression                  go to state 404
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 1394
    concept-name                         go to state 68
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 936

  967 shift-expression: shift-expression "<<" • additive-expression

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    additive-expression                  go to state 1395
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    concept-name                         go to state 68
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    requires-expression                  go to state 447
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 937

  968 shift-expression: shift-expression ">>" • additive-expression

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    additive-expression                  go to state 1396
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    concept-name                         go to state 68
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    requires-expression                  go to state 447
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 938

  865 postfix-expression: simple-type-specifier '(' • ')'
  866                   | simple-type-specifier '(' • expression-list ')'

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    ')'                 shift, and go to state 1397
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 939
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 1141
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    braced-init-list                     go to state 1142
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    expression-list                      go to state 1398
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    initializer-clause                   go to state 1145
    initializer-list                     go to state 1146
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 939

  108 braced-init-list: '{' • initializer-list '}'
  109                 | '{' • initializer-list ',' '}'
  110                 | '{' • designated-initializer-list '}'
  111                 | '{' • designated-initializer-list ',' '}'
  112                 | '{' • '}'

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 939
    '}'                 shift, and go to state 1399
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 1148
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 1141
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    braced-init-list                     go to state 1142
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    designated-initializer-clause        go to state 1150
    designated-initializer-list          go to state 1151
    designator                           go to state 1152
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    initializer-clause                   go to state 1145
    initializer-list                     go to state 1153
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 940

  869 postfix-expression: simple-type-specifier braced-init-list •

    $default  reduce using rule 869 (postfix-expression)


State 941

   15 alignment-specifier: "alignas" '(' type-id ')' •

    $default  reduce using rule 15 (alignment-specifier)


State 942

   16 alignment-specifier: "alignas" '(' type-id "..." • ')'

    ')'  shift, and go to state 1400


State 943

  718 noptr-abstract-declarator: '(' • ptr-abstract-declarator ')'
  836 parameters-and-qualifiers: '(' • parameter-declaration-clause ')'
  837                          | '(' • parameter-declaration-clause ')' cv-qualifier-seq
  838                          | '(' • parameter-declaration-clause ')' ref-qualifier
  839                          | '(' • parameter-declaration-clause ')' cv-qualifier-seq ref-qualifier
  840                          | '(' • parameter-declaration-clause ')' noexcept-specifier
  841                          | '(' • parameter-declaration-clause ')' cv-qualifier-seq noexcept-specifier
  842                          | '(' • parameter-declaration-clause ')' ref-qualifier noexcept-specifier
  843                          | '(' • parameter-declaration-clause ')' cv-qualifier-seq ref-qualifier noexcept-specifier
  844                          | '(' • parameter-declaration-clause ')' attribute-specifier-seq
  845                          | '(' • parameter-declaration-clause ')' cv-qualifier-seq attribute-specifier-seq
  846                          | '(' • parameter-declaration-clause ')' ref-qualifier attribute-specifier-seq
  847                          | '(' • parameter-declaration-clause ')' cv-qualifier-seq ref-qualifier attribute-specifier-seq
  848                          | '(' • parameter-declaration-clause ')' noexcept-specifier attribute-specifier-seq
  849                          | '(' • parameter-declaration-clause ')' cv-qualifier-seq noexcept-specifier attribute-specifier-seq
  850                          | '(' • parameter-declaration-clause ')' ref-qualifier noexcept-specifier attribute-specifier-seq
  851                          | '(' • parameter-declaration-clause ')' cv-qualifier-seq ref-qualifier noexcept-specifier attribute-specifier-seq

    IDENTIFIER      shift, and go to state 161
    "alignas"       shift, and go to state 4
    '('             shift, and go to state 943
    "..."           shift, and go to state 734
    '&'             shift, and go to state 7
    "::"            shift, and go to state 9
    '['             shift, and go to state 1401
    "virtual"       shift, and go to state 11
    "class"         shift, and go to state 12
    "struct"        shift, and go to state 13
    "union"         shift, and go to state 14
    "&&"            shift, and go to state 16
    "const"         shift, and go to state 18
    "volatile"      shift, and go to state 19
    "friend"        shift, and go to state 20
    "typedef"       shift, and go to state 21
    "constexpr"     shift, and go to state 22
    "consteval"     shift, and go to state 23
    "constinit"     shift, and go to state 24
    "inline"        shift, and go to state 263
    "decltype"      shift, and go to state 26
    "enum"          shift, and go to state 27
    "extern"        shift, and go to state 264
    "explicit"      shift, and go to state 29
    '*'             shift, and go to state 32
    "this"          shift, and go to state 476
    "auto"          shift, and go to state 37
    "char"          shift, and go to state 38
    "char8_t"       shift, and go to state 39
    "char16_t"      shift, and go to state 40
    "char32_t"      shift, and go to state 41
    "wchar_t"       shift, and go to state 42
    "bool"          shift, and go to state 43
    "short"         shift, and go to state 44
    "int"           shift, and go to state 45
    "long"          shift, and go to state 46
    "signed"        shift, and go to state 47
    "unsigned"      shift, and go to state 48
    "float"         shift, and go to state 49
    "double"        shift, and go to state 50
    "void"          shift, and go to state 51
    "static"        shift, and go to state 53
    "thread_local"  shift, and go to state 54
    "mutable"       shift, and go to state 55
    "typename"      shift, and go to state 56

    alignment-specifier           go to state 58
    attribute-specifier           go to state 61
    attribute-specifier-seq       go to state 478
    class-head                    go to state 64
    class-key                     go to state 65
    class-name                    go to state 66
    class-specifier               go to state 67
    concept-name                  go to state 68
    cv-qualifier                  go to state 70
    decl-specifier                go to state 71
    decl-specifier-seq            go to state 479
    decltype-specifier            go to state 77
    defining-type-specifier       go to state 79
    elaborated-enum-specifier     go to state 80
    elaborated-type-specifier     go to state 81
    enum-head                     go to state 83
    enum-key                      go to state 268
    enum-name                     go to state 85
    enum-specifier                go to state 86
    explicit-specifier            go to state 269
    function-specifier            go to state 92
    namespace-alias               go to state 100
    namespace-name                go to state 103
    nested-name-specifier         go to state 1402
    noptr-abstract-declarator     go to state 1403
    parameter-declaration         go to state 735
    parameter-declaration-clause  go to state 736
    parameter-declaration-list    go to state 737
    parameters-and-qualifiers     go to state 1404
    placeholder-type-specifier    go to state 110
    ptr-abstract-declarator       go to state 1405
    ptr-operator                  go to state 1406
    simple-template-id            go to state 142
    simple-type-specifier         go to state 116
    storage-class-specifier       go to state 118
    template-name                 go to state 216
    type-constraint               go to state 124
    type-name                     go to state 125
    type-specifier                go to state 126
    typedef-name                  go to state 127
    typename-specifier            go to state 128


State 944

  724 noptr-abstract-pack-declarator: "..." •

    $default  reduce using rule 724 (noptr-abstract-pack-declarator)


State 945

  711 noptr-abstract-declarator: '[' • ']'
  713                          | '[' • constant-expression ']'
  715                          | '[' • ']' attribute-specifier-seq
  717                          | '[' • constant-expression ']' attribute-specifier-seq

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    ']'                 shift, and go to state 1407
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    additive-expression                  go to state 404
    and-expression                       go to state 405
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 412
    constant-expression                  go to state 1408
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 435
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 946

  1091 type-id: type-specifier-seq abstract-declarator •

    $default  reduce using rule 1091 (type-id)


State 947

    4 abstract-declarator: abstract-pack-declarator •

    $default  reduce using rule 4 (abstract-declarator)


State 948

    2 abstract-declarator: noptr-abstract-declarator • parameters-and-qualifiers trailing-return-type
  708 noptr-abstract-declarator: noptr-abstract-declarator • parameters-and-qualifiers
  710                          | noptr-abstract-declarator • '[' ']'
  712                          | noptr-abstract-declarator • '[' constant-expression ']'
  714                          | noptr-abstract-declarator • '[' ']' attribute-specifier-seq
  716                          | noptr-abstract-declarator • '[' constant-expression ']' attribute-specifier-seq
  892 ptr-abstract-declarator: noptr-abstract-declarator •

    '('  shift, and go to state 333
    '['  shift, and go to state 1409

    '('       [reduce using rule 892 (ptr-abstract-declarator)]
    $default  reduce using rule 892 (ptr-abstract-declarator)

    parameters-and-qualifiers  go to state 1410


State 949

    5 abstract-pack-declarator: noptr-abstract-pack-declarator •
  719 noptr-abstract-pack-declarator: noptr-abstract-pack-declarator • parameters-and-qualifiers
  720                               | noptr-abstract-pack-declarator • '[' ']'
  721                               | noptr-abstract-pack-declarator • '[' constant-expression ']'
  722                               | noptr-abstract-pack-declarator • '[' ']' attribute-specifier-seq
  723                               | noptr-abstract-pack-declarator • '[' constant-expression ']' attribute-specifier-seq

    '('  shift, and go to state 333
    '['  shift, and go to state 1411

    '('       [reduce using rule 5 (abstract-pack-declarator)]
    $default  reduce using rule 5 (abstract-pack-declarator)

    parameters-and-qualifiers  go to state 1412


State 950

    3 abstract-declarator: parameters-and-qualifiers • trailing-return-type
  709 noptr-abstract-declarator: parameters-and-qualifiers •

    "->"  shift, and go to state 740

    $default  reduce using rule 709 (noptr-abstract-declarator)

    trailing-return-type  go to state 1413


State 951

    1 abstract-declarator: ptr-abstract-declarator •

    $default  reduce using rule 1 (abstract-declarator)


State 952

    6 abstract-pack-declarator: ptr-operator • abstract-pack-declarator
  893 ptr-abstract-declarator: ptr-operator •
  894                        | ptr-operator • ptr-abstract-declarator

    IDENTIFIER  shift, and go to state 258
    '('         shift, and go to state 943
    "..."       shift, and go to state 944
    '&'         shift, and go to state 7
    "::"        shift, and go to state 9
    '['         shift, and go to state 945
    "&&"        shift, and go to state 16
    "decltype"  shift, and go to state 135
    '*'         shift, and go to state 32

    '('       [reduce using rule 893 (ptr-abstract-declarator)]
    "..."     [reduce using rule 893 (ptr-abstract-declarator)]
    $default  reduce using rule 893 (ptr-abstract-declarator)

    abstract-pack-declarator        go to state 1414
    class-name                      go to state 66
    decltype-specifier              go to state 139
    enum-name                       go to state 85
    namespace-alias                 go to state 100
    namespace-name                  go to state 103
    nested-name-specifier           go to state 522
    noptr-abstract-declarator       go to state 1403
    noptr-abstract-pack-declarator  go to state 949
    parameters-and-qualifiers       go to state 1404
    ptr-abstract-declarator         go to state 1415
    ptr-operator                    go to state 952
    simple-template-id              go to state 142
    template-name                   go to state 143
    type-name                       go to state 144
    typedef-name                    go to state 127


State 953

  867 postfix-expression: typename-specifier '(' • ')'
  868                   | typename-specifier '(' • expression-list ')'

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    ')'                 shift, and go to state 1416
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 939
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 1141
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    braced-init-list                     go to state 1142
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    expression-list                      go to state 1417
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    initializer-clause                   go to state 1145
    initializer-list                     go to state 1146
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 954

  870 postfix-expression: typename-specifier braced-init-list •

    $default  reduce using rule 870 (postfix-expression)


State 955

  1131 unary-expression: unary-operator cast-expression •

    $default  reduce using rule 1131 (unary-expression)


State 956

  665 nested-name-specifier: nested-name-specifier "template" simple-template-id • "::"
  1061 template-id: simple-template-id •

    "::"  shift, and go to state 1217

    "::"      [reduce using rule 1061 (template-id)]
    $default  reduce using rule 1061 (template-id)


State 957

   22 asm-declaration: "asm" '(' string-literal ')' • ';'

    ';'  shift, and go to state 1418


State 958

   48 attribute-namespace: IDENTIFIER •

    $default  reduce using rule 48 (attribute-namespace)


State 959

   57 attribute-using-prefix: "using" attribute-namespace • ':'

    ':'  shift, and go to state 1419


State 960

   46 attribute-list: attribute "..." •

    $default  reduce using rule 46 (attribute-list)


State 961

   44 attribute-list: attribute-list ',' •
   45               | attribute-list ',' • attribute
   47               | attribute-list ',' • attribute "..."

    IDENTIFIER  shift, and go to state 465

    $default  reduce using rule 44 (attribute-list)

    attribute               go to state 1420
    attribute-namespace     go to state 469
    attribute-scoped-token  go to state 470
    attribute-token         go to state 471


State 962

   50 attribute-specifier: '[' '[' attribute-list ']' • ']'

    ']'  shift, and go to state 1421


State 963

   49 attribute-scoped-token: attribute-namespace "::" • IDENTIFIER

    IDENTIFIER  shift, and go to state 1422


State 964

   40 attribute-argument-clause: '(' • ')'
   41                          | '(' • balanced-token-seq ')'

    ANY_TOKEN_OTHER_THAN_PARENTHESIS_BRACKET_BRACE  shift, and go to state 1423
    '('                                             shift, and go to state 1424
    ')'                                             shift, and go to state 1425
    '['                                             shift, and go to state 1426
    '{'                                             shift, and go to state 1427

    balanced-token      go to state 1428
    balanced-token-seq  go to state 1429


State 965

   39 attribute: attribute-token attribute-argument-clause •

    $default  reduce using rule 39 (attribute)


State 966

   44 attribute-list: attribute-list • ','
   45               | attribute-list • ',' attribute
   47               | attribute-list • ',' attribute "..."
   51 attribute-specifier: '[' '[' attribute-using-prefix attribute-list • ']' ']'

    ','  shift, and go to state 961
    ']'  shift, and go to state 1430


State 967

  1059 template-head: "template" '<' • template-parameter-list '>'
  1060              | "template" '<' • template-parameter-list '>' requires-clause

    IDENTIFIER      shift, and go to state 161
    "alignas"       shift, and go to state 4
    "::"            shift, and go to state 9
    '['             shift, and go to state 10
    "virtual"       shift, and go to state 11
    "class"         shift, and go to state 473
    "struct"        shift, and go to state 13
    "union"         shift, and go to state 14
    "template"      shift, and go to state 474
    "const"         shift, and go to state 18
    "volatile"      shift, and go to state 19
    "friend"        shift, and go to state 20
    "typedef"       shift, and go to state 21
    "constexpr"     shift, and go to state 22
    "consteval"     shift, and go to state 23
    "constinit"     shift, and go to state 24
    "inline"        shift, and go to state 263
    "decltype"      shift, and go to state 26
    "enum"          shift, and go to state 27
    "extern"        shift, and go to state 264
    "explicit"      shift, and go to state 29
    "this"          shift, and go to state 476
    "auto"          shift, and go to state 37
    "char"          shift, and go to state 38
    "char8_t"       shift, and go to state 39
    "char16_t"      shift, and go to state 40
    "char32_t"      shift, and go to state 41
    "wchar_t"       shift, and go to state 42
    "bool"          shift, and go to state 43
    "short"         shift, and go to state 44
    "int"           shift, and go to state 45
    "long"          shift, and go to state 46
    "signed"        shift, and go to state 47
    "unsigned"      shift, and go to state 48
    "float"         shift, and go to state 49
    "double"        shift, and go to state 50
    "void"          shift, and go to state 51
    "static"        shift, and go to state 53
    "thread_local"  shift, and go to state 54
    "mutable"       shift, and go to state 55
    "typename"      shift, and go to state 477

    alignment-specifier         go to state 58
    attribute-specifier         go to state 61
    attribute-specifier-seq     go to state 478
    class-head                  go to state 64
    class-key                   go to state 65
    class-name                  go to state 66
    class-specifier             go to state 67
    concept-name                go to state 68
    cv-qualifier                go to state 70
    decl-specifier              go to state 71
    decl-specifier-seq          go to state 479
    decltype-specifier          go to state 77
    defining-type-specifier     go to state 79
    elaborated-enum-specifier   go to state 80
    elaborated-type-specifier   go to state 81
    enum-head                   go to state 83
    enum-key                    go to state 268
    enum-name                   go to state 85
    enum-specifier              go to state 86
    explicit-specifier          go to state 269
    function-specifier          go to state 92
    namespace-alias             go to state 100
    namespace-name              go to state 103
    nested-name-specifier       go to state 213
    parameter-declaration       go to state 480
    placeholder-type-specifier  go to state 110
    simple-template-id          go to state 142
    simple-type-specifier       go to state 116
    storage-class-specifier     go to state 118
    template-head               go to state 481
    template-name               go to state 216
    template-parameter          go to state 482
    template-parameter-list     go to state 483
    type-constraint             go to state 484
    type-name                   go to state 125
    type-parameter              go to state 485
    type-parameter-key          go to state 486
    type-specifier              go to state 126
    typedef-name                go to state 127
    typename-specifier          go to state 128


State 968

  324 explicit-specialization: "template" '<' '>' declaration •

    $default  reduce using rule 324 (explicit-specialization)


State 969

  809 parameter-declaration: "this" decl-specifier-seq • declarator
  813                      | "this" decl-specifier-seq • declarator '=' initializer-clause
  817                      | "this" decl-specifier-seq •
  821                      | "this" decl-specifier-seq • abstract-declarator
  825                      | "this" decl-specifier-seq • '=' initializer-clause
  829                      | "this" decl-specifier-seq • abstract-declarator '=' initializer-clause

    IDENTIFIER  shift, and go to state 148
    '='         shift, and go to state 1431
    '('         shift, and go to state 973
    "..."       shift, and go to state 974
    '&'         shift, and go to state 7
    "::"        shift, and go to state 9
    '['         shift, and go to state 945
    "&&"        shift, and go to state 16
    "operator"  shift, and go to state 17
    "decltype"  shift, and go to state 135
    '*'         shift, and go to state 32
    '~'         shift, and go to state 36

    "..."     [reduce using rule 817 (parameter-declaration)]
    $default  reduce using rule 817 (parameter-declaration)

    abstract-declarator             go to state 1432
    abstract-pack-declarator        go to state 947
    class-name                      go to state 66
    conversion-function-id          go to state 69
    declarator                      go to state 1433
    declarator-id                   go to state 76
    decltype-specifier              go to state 139
    enum-name                       go to state 85
    id-expression                   go to state 94
    literal-operator-id             go to state 96
    namespace-alias                 go to state 100
    namespace-name                  go to state 103
    nested-name-specifier           go to state 149
    noptr-abstract-declarator       go to state 948
    noptr-abstract-pack-declarator  go to state 949
    noptr-declarator                go to state 107
    operator-function-id            go to state 109
    parameters-and-qualifiers       go to state 950
    ptr-abstract-declarator         go to state 951
    ptr-declarator                  go to state 111
    ptr-operator                    go to state 977
    qualified-id                    go to state 113
    simple-template-id              go to state 115
    template-id                     go to state 121
    template-name                   go to state 143
    type-name                       go to state 144
    typedef-name                    go to state 127
    unqualified-id                  go to state 130


State 970

  808 parameter-declaration: attribute-specifier-seq "this" • decl-specifier-seq declarator
  812                      | attribute-specifier-seq "this" • decl-specifier-seq declarator '=' initializer-clause
  816                      | attribute-specifier-seq "this" • decl-specifier-seq
  820                      | attribute-specifier-seq "this" • decl-specifier-seq abstract-declarator
  824                      | attribute-specifier-seq "this" • decl-specifier-seq '=' initializer-clause
  828                      | attribute-specifier-seq "this" • decl-specifier-seq abstract-declarator '=' initializer-clause

    IDENTIFIER      shift, and go to state 161
    "::"            shift, and go to state 9
    "virtual"       shift, and go to state 11
    "class"         shift, and go to state 12
    "struct"        shift, and go to state 13
    "union"         shift, and go to state 14
    "const"         shift, and go to state 18
    "volatile"      shift, and go to state 19
    "friend"        shift, and go to state 20
    "typedef"       shift, and go to state 21
    "constexpr"     shift, and go to state 22
    "consteval"     shift, and go to state 23
    "constinit"     shift, and go to state 24
    "inline"        shift, and go to state 263
    "decltype"      shift, and go to state 26
    "enum"          shift, and go to state 27
    "extern"        shift, and go to state 264
    "explicit"      shift, and go to state 29
    "auto"          shift, and go to state 37
    "char"          shift, and go to state 38
    "char8_t"       shift, and go to state 39
    "char16_t"      shift, and go to state 40
    "char32_t"      shift, and go to state 41
    "wchar_t"       shift, and go to state 42
    "bool"          shift, and go to state 43
    "short"         shift, and go to state 44
    "int"           shift, and go to state 45
    "long"          shift, and go to state 46
    "signed"        shift, and go to state 47
    "unsigned"      shift, and go to state 48
    "float"         shift, and go to state 49
    "double"        shift, and go to state 50
    "void"          shift, and go to state 51
    "static"        shift, and go to state 53
    "thread_local"  shift, and go to state 54
    "mutable"       shift, and go to state 55
    "typename"      shift, and go to state 56

    class-head                  go to state 64
    class-key                   go to state 65
    class-name                  go to state 66
    class-specifier             go to state 67
    concept-name                go to state 68
    cv-qualifier                go to state 70
    decl-specifier              go to state 71
    decl-specifier-seq          go to state 1434
    decltype-specifier          go to state 77
    defining-type-specifier     go to state 79
    elaborated-enum-specifier   go to state 80
    elaborated-type-specifier   go to state 81
    enum-head                   go to state 83
    enum-key                    go to state 268
    enum-name                   go to state 85
    enum-specifier              go to state 86
    explicit-specifier          go to state 269
    function-specifier          go to state 92
    namespace-alias             go to state 100
    namespace-name              go to state 103
    nested-name-specifier       go to state 213
    placeholder-type-specifier  go to state 110
    simple-template-id          go to state 142
    simple-type-specifier       go to state 116
    storage-class-specifier     go to state 118
    template-name               go to state 216
    type-constraint             go to state 124
    type-name                   go to state 125
    type-specifier              go to state 126
    typedef-name                go to state 127
    typename-specifier          go to state 128


State 971

  806 parameter-declaration: attribute-specifier-seq decl-specifier-seq • declarator
  810                      | attribute-specifier-seq decl-specifier-seq • declarator '=' initializer-clause
  814                      | attribute-specifier-seq decl-specifier-seq •
  818                      | attribute-specifier-seq decl-specifier-seq • abstract-declarator
  822                      | attribute-specifier-seq decl-specifier-seq • '=' initializer-clause
  826                      | attribute-specifier-seq decl-specifier-seq • abstract-declarator '=' initializer-clause

    IDENTIFIER  shift, and go to state 148
    '='         shift, and go to state 1435
    '('         shift, and go to state 973
    "..."       shift, and go to state 974
    '&'         shift, and go to state 7
    "::"        shift, and go to state 9
    '['         shift, and go to state 945
    "&&"        shift, and go to state 16
    "operator"  shift, and go to state 17
    "decltype"  shift, and go to state 135
    '*'         shift, and go to state 32
    '~'         shift, and go to state 36

    "..."     [reduce using rule 814 (parameter-declaration)]
    $default  reduce using rule 814 (parameter-declaration)

    abstract-declarator             go to state 1436
    abstract-pack-declarator        go to state 947
    class-name                      go to state 66
    conversion-function-id          go to state 69
    declarator                      go to state 1437
    declarator-id                   go to state 76
    decltype-specifier              go to state 139
    enum-name                       go to state 85
    id-expression                   go to state 94
    literal-operator-id             go to state 96
    namespace-alias                 go to state 100
    namespace-name                  go to state 103
    nested-name-specifier           go to state 149
    noptr-abstract-declarator       go to state 948
    noptr-abstract-pack-declarator  go to state 949
    noptr-declarator                go to state 107
    operator-function-id            go to state 109
    parameters-and-qualifiers       go to state 950
    ptr-abstract-declarator         go to state 951
    ptr-declarator                  go to state 111
    ptr-operator                    go to state 977
    qualified-id                    go to state 113
    simple-template-id              go to state 115
    template-id                     go to state 121
    template-name                   go to state 143
    type-name                       go to state 144
    typedef-name                    go to state 127
    unqualified-id                  go to state 130


State 972

  823 parameter-declaration: decl-specifier-seq '=' • initializer-clause

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 939
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 1141
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    braced-init-list                     go to state 1142
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    initializer-clause                   go to state 1438
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 973

  718 noptr-abstract-declarator: '(' • ptr-abstract-declarator ')'
  732 noptr-declarator: '(' • ptr-declarator ')'
  836 parameters-and-qualifiers: '(' • parameter-declaration-clause ')'
  837                          | '(' • parameter-declaration-clause ')' cv-qualifier-seq
  838                          | '(' • parameter-declaration-clause ')' ref-qualifier
  839                          | '(' • parameter-declaration-clause ')' cv-qualifier-seq ref-qualifier
  840                          | '(' • parameter-declaration-clause ')' noexcept-specifier
  841                          | '(' • parameter-declaration-clause ')' cv-qualifier-seq noexcept-specifier
  842                          | '(' • parameter-declaration-clause ')' ref-qualifier noexcept-specifier
  843                          | '(' • parameter-declaration-clause ')' cv-qualifier-seq ref-qualifier noexcept-specifier
  844                          | '(' • parameter-declaration-clause ')' attribute-specifier-seq
  845                          | '(' • parameter-declaration-clause ')' cv-qualifier-seq attribute-specifier-seq
  846                          | '(' • parameter-declaration-clause ')' ref-qualifier attribute-specifier-seq
  847                          | '(' • parameter-declaration-clause ')' cv-qualifier-seq ref-qualifier attribute-specifier-seq
  848                          | '(' • parameter-declaration-clause ')' noexcept-specifier attribute-specifier-seq
  849                          | '(' • parameter-declaration-clause ')' cv-qualifier-seq noexcept-specifier attribute-specifier-seq
  850                          | '(' • parameter-declaration-clause ')' ref-qualifier noexcept-specifier attribute-specifier-seq
  851                          | '(' • parameter-declaration-clause ')' cv-qualifier-seq ref-qualifier noexcept-specifier attribute-specifier-seq

    IDENTIFIER      shift, and go to state 1
    "alignas"       shift, and go to state 4
    '('             shift, and go to state 973
    "..."           shift, and go to state 1439
    '&'             shift, and go to state 7
    "::"            shift, and go to state 9
    '['             shift, and go to state 1401
    "virtual"       shift, and go to state 11
    "class"         shift, and go to state 12
    "struct"        shift, and go to state 13
    "union"         shift, and go to state 14
    "&&"            shift, and go to state 16
    "operator"      shift, and go to state 17
    "const"         shift, and go to state 18
    "volatile"      shift, and go to state 19
    "friend"        shift, and go to state 20
    "typedef"       shift, and go to state 21
    "constexpr"     shift, and go to state 22
    "consteval"     shift, and go to state 23
    "constinit"     shift, and go to state 24
    "inline"        shift, and go to state 263
    "decltype"      shift, and go to state 26
    "enum"          shift, and go to state 27
    "extern"        shift, and go to state 264
    "explicit"      shift, and go to state 29
    '*'             shift, and go to state 32
    '~'             shift, and go to state 36
    "this"          shift, and go to state 476
    "auto"          shift, and go to state 37
    "char"          shift, and go to state 38
    "char8_t"       shift, and go to state 39
    "char16_t"      shift, and go to state 40
    "char32_t"      shift, and go to state 41
    "wchar_t"       shift, and go to state 42
    "bool"          shift, and go to state 43
    "short"         shift, and go to state 44
    "int"           shift, and go to state 45
    "long"          shift, and go to state 46
    "signed"        shift, and go to state 47
    "unsigned"      shift, and go to state 48
    "float"         shift, and go to state 49
    "double"        shift, and go to state 50
    "void"          shift, and go to state 51
    "static"        shift, and go to state 53
    "thread_local"  shift, and go to state 54
    "mutable"       shift, and go to state 55
    "typename"      shift, and go to state 56

    alignment-specifier           go to state 58
    attribute-specifier           go to state 61
    attribute-specifier-seq       go to state 478
    class-head                    go to state 64
    class-key                     go to state 65
    class-name                    go to state 66
    class-specifier               go to state 67
    concept-name                  go to state 68
    conversion-function-id        go to state 69
    cv-qualifier                  go to state 70
    decl-specifier                go to state 71
    decl-specifier-seq            go to state 479
    declarator-id                 go to state 76
    decltype-specifier            go to state 77
    defining-type-specifier       go to state 79
    elaborated-enum-specifier     go to state 80
    elaborated-type-specifier     go to state 81
    enum-head                     go to state 83
    enum-key                      go to state 268
    enum-name                     go to state 85
    enum-specifier                go to state 86
    explicit-specifier            go to state 269
    function-specifier            go to state 92
    id-expression                 go to state 94
    literal-operator-id           go to state 96
    namespace-alias               go to state 100
    namespace-name                go to state 103
    nested-name-specifier         go to state 104
    noptr-abstract-declarator     go to state 1403
    noptr-declarator              go to state 150
    operator-function-id          go to state 109
    parameter-declaration         go to state 735
    parameter-declaration-clause  go to state 736
    parameter-declaration-list    go to state 737
    parameters-and-qualifiers     go to state 1404
    placeholder-type-specifier    go to state 110
    ptr-abstract-declarator       go to state 1405
    ptr-declarator                go to state 151
    ptr-operator                  go to state 1440
    qualified-id                  go to state 113
    simple-template-id            go to state 115
    simple-type-specifier         go to state 116
    storage-class-specifier       go to state 118
    template-id                   go to state 121
    template-name                 go to state 216
    type-constraint               go to state 124
    type-name                     go to state 125
    type-specifier                go to state 126
    typedef-name                  go to state 127
    typename-specifier            go to state 128
    unqualified-id                go to state 130


State 974

  231 declarator-id: "..." • id-expression
  724 noptr-abstract-pack-declarator: "..." •

    IDENTIFIER  shift, and go to state 148
    "::"        shift, and go to state 9
    "operator"  shift, and go to state 17
    "decltype"  shift, and go to state 135
    '~'         shift, and go to state 36

    $default  reduce using rule 724 (noptr-abstract-pack-declarator)

    class-name              go to state 66
    conversion-function-id  go to state 69
    decltype-specifier      go to state 139
    enum-name               go to state 85
    id-expression           go to state 152
    literal-operator-id     go to state 96
    namespace-alias         go to state 100
    namespace-name          go to state 103
    nested-name-specifier   go to state 153
    operator-function-id    go to state 109
    qualified-id            go to state 113
    simple-template-id      go to state 115
    template-id             go to state 121
    template-name           go to state 143
    type-name               go to state 144
    typedef-name            go to state 127
    unqualified-id          go to state 130


State 975

  819 parameter-declaration: decl-specifier-seq abstract-declarator •
  827                      | decl-specifier-seq abstract-declarator • '=' initializer-clause

    '='  shift, and go to state 1441

    $default  reduce using rule 819 (parameter-declaration)


State 976

  807 parameter-declaration: decl-specifier-seq declarator •
  811                      | decl-specifier-seq declarator • '=' initializer-clause

    '='  shift, and go to state 1442

    $default  reduce using rule 807 (parameter-declaration)


State 977

    6 abstract-pack-declarator: ptr-operator • abstract-pack-declarator
  893 ptr-abstract-declarator: ptr-operator •
  894                        | ptr-operator • ptr-abstract-declarator
  896 ptr-declarator: ptr-operator • ptr-declarator

    IDENTIFIER  shift, and go to state 148
    '('         shift, and go to state 973
    "..."       shift, and go to state 974
    '&'         shift, and go to state 7
    "::"        shift, and go to state 9
    '['         shift, and go to state 945
    "&&"        shift, and go to state 16
    "operator"  shift, and go to state 17
    "decltype"  shift, and go to state 135
    '*'         shift, and go to state 32
    '~'         shift, and go to state 36

    "..."     [reduce using rule 893 (ptr-abstract-declarator)]
    $default  reduce using rule 893 (ptr-abstract-declarator)

    abstract-pack-declarator        go to state 1414
    class-name                      go to state 66
    conversion-function-id          go to state 69
    declarator-id                   go to state 76
    decltype-specifier              go to state 139
    enum-name                       go to state 85
    id-expression                   go to state 94
    literal-operator-id             go to state 96
    namespace-alias                 go to state 100
    namespace-name                  go to state 103
    nested-name-specifier           go to state 149
    noptr-abstract-declarator       go to state 1403
    noptr-abstract-pack-declarator  go to state 949
    noptr-declarator                go to state 150
    operator-function-id            go to state 109
    parameters-and-qualifiers       go to state 1404
    ptr-abstract-declarator         go to state 1415
    ptr-declarator                  go to state 337
    ptr-operator                    go to state 977
    qualified-id                    go to state 113
    simple-template-id              go to state 115
    template-id                     go to state 121
    template-name                   go to state 143
    type-name                       go to state 144
    typedef-name                    go to state 127
    unqualified-id                  go to state 130


State 978

  1113 type-parameter-key: "class" •

    $default  reduce using rule 1113 (type-parameter-key)


State 979

  1114 type-parameter-key: "typename" •

    $default  reduce using rule 1114 (type-parameter-key)


State 980

  1107 type-parameter: template-head type-parameter-key •
  1108               | template-head type-parameter-key • "..."
  1109               | template-head type-parameter-key • IDENTIFIER
  1110               | template-head type-parameter-key • "..." IDENTIFIER
  1111               | template-head type-parameter-key • '=' id-expression
  1112               | template-head type-parameter-key • IDENTIFIER '=' id-expression

    IDENTIFIER  shift, and go to state 1443
    '='         shift, and go to state 1444
    "..."       shift, and go to state 1445

    $default  reduce using rule 1107 (type-parameter)


State 981

  1070 template-parameter-list: template-parameter-list ',' • template-parameter

    IDENTIFIER      shift, and go to state 161
    "alignas"       shift, and go to state 4
    "::"            shift, and go to state 9
    '['             shift, and go to state 10
    "virtual"       shift, and go to state 11
    "class"         shift, and go to state 473
    "struct"        shift, and go to state 13
    "union"         shift, and go to state 14
    "template"      shift, and go to state 474
    "const"         shift, and go to state 18
    "volatile"      shift, and go to state 19
    "friend"        shift, and go to state 20
    "typedef"       shift, and go to state 21
    "constexpr"     shift, and go to state 22
    "consteval"     shift, and go to state 23
    "constinit"     shift, and go to state 24
    "inline"        shift, and go to state 263
    "decltype"      shift, and go to state 26
    "enum"          shift, and go to state 27
    "extern"        shift, and go to state 264
    "explicit"      shift, and go to state 29
    "this"          shift, and go to state 476
    "auto"          shift, and go to state 37
    "char"          shift, and go to state 38
    "char8_t"       shift, and go to state 39
    "char16_t"      shift, and go to state 40
    "char32_t"      shift, and go to state 41
    "wchar_t"       shift, and go to state 42
    "bool"          shift, and go to state 43
    "short"         shift, and go to state 44
    "int"           shift, and go to state 45
    "long"          shift, and go to state 46
    "signed"        shift, and go to state 47
    "unsigned"      shift, and go to state 48
    "float"         shift, and go to state 49
    "double"        shift, and go to state 50
    "void"          shift, and go to state 51
    "static"        shift, and go to state 53
    "thread_local"  shift, and go to state 54
    "mutable"       shift, and go to state 55
    "typename"      shift, and go to state 477

    alignment-specifier         go to state 58
    attribute-specifier         go to state 61
    attribute-specifier-seq     go to state 478
    class-head                  go to state 64
    class-key                   go to state 65
    class-name                  go to state 66
    class-specifier             go to state 67
    concept-name                go to state 68
    cv-qualifier                go to state 70
    decl-specifier              go to state 71
    decl-specifier-seq          go to state 479
    decltype-specifier          go to state 77
    defining-type-specifier     go to state 79
    elaborated-enum-specifier   go to state 80
    elaborated-type-specifier   go to state 81
    enum-head                   go to state 83
    enum-key                    go to state 268
    enum-name                   go to state 85
    enum-specifier              go to state 86
    explicit-specifier          go to state 269
    function-specifier          go to state 92
    namespace-alias             go to state 100
    namespace-name              go to state 103
    nested-name-specifier       go to state 213
    parameter-declaration       go to state 480
    placeholder-type-specifier  go to state 110
    simple-template-id          go to state 142
    simple-type-specifier       go to state 116
    storage-class-specifier     go to state 118
    template-head               go to state 481
    template-name               go to state 216
    template-parameter          go to state 1446
    type-constraint             go to state 484
    type-name                   go to state 125
    type-parameter              go to state 485
    type-parameter-key          go to state 486
    type-specifier              go to state 126
    typedef-name                go to state 127
    typename-specifier          go to state 128


State 982

  1059 template-head: "template" '<' template-parameter-list '>' •
  1060              | "template" '<' template-parameter-list '>' • requires-clause

    "requires"  shift, and go to state 297

    $default  reduce using rule 1059 (template-head)

    requires-clause  go to state 1447


State 983

  1103 type-parameter: type-constraint IDENTIFIER •
  1106               | type-constraint IDENTIFIER • '=' type-id

    '='  shift, and go to state 1448

    $default  reduce using rule 1103 (type-parameter)


State 984

  1105 type-parameter: type-constraint '=' • type-id

    IDENTIFIER  shift, and go to state 161
    "::"        shift, and go to state 9
    "class"     shift, and go to state 12
    "struct"    shift, and go to state 13
    "union"     shift, and go to state 14
    "const"     shift, and go to state 18
    "volatile"  shift, and go to state 19
    "decltype"  shift, and go to state 26
    "enum"      shift, and go to state 136
    "auto"      shift, and go to state 37
    "char"      shift, and go to state 38
    "char8_t"   shift, and go to state 39
    "char16_t"  shift, and go to state 40
    "char32_t"  shift, and go to state 41
    "wchar_t"   shift, and go to state 42
    "bool"      shift, and go to state 43
    "short"     shift, and go to state 44
    "int"       shift, and go to state 45
    "long"      shift, and go to state 46
    "signed"    shift, and go to state 47
    "unsigned"  shift, and go to state 48
    "float"     shift, and go to state 49
    "double"    shift, and go to state 50
    "void"      shift, and go to state 51
    "typename"  shift, and go to state 56

    class-key                   go to state 210
    class-name                  go to state 66
    concept-name                go to state 68
    cv-qualifier                go to state 70
    decltype-specifier          go to state 77
    elaborated-enum-specifier   go to state 80
    elaborated-type-specifier   go to state 81
    enum-name                   go to state 85
    namespace-alias             go to state 100
    namespace-name              go to state 103
    nested-name-specifier       go to state 213
    placeholder-type-specifier  go to state 110
    simple-template-id          go to state 142
    simple-type-specifier       go to state 116
    template-name               go to state 216
    type-constraint             go to state 124
    type-id                     go to state 1449
    type-name                   go to state 125
    type-specifier              go to state 217
    type-specifier-seq          go to state 452
    typedef-name                go to state 127
    typename-specifier          go to state 128


State 985

  1102 type-parameter: type-constraint "..." •
  1104               | type-constraint "..." • IDENTIFIER

    IDENTIFIER  shift, and go to state 1450

    $default  reduce using rule 1102 (type-parameter)


State 986

  1097 type-parameter: type-parameter-key IDENTIFIER •
  1100               | type-parameter-key IDENTIFIER • '=' type-id

    '='  shift, and go to state 1451

    $default  reduce using rule 1097 (type-parameter)


State 987

  1099 type-parameter: type-parameter-key '=' • type-id

    IDENTIFIER  shift, and go to state 161
    "::"        shift, and go to state 9
    "class"     shift, and go to state 12
    "struct"    shift, and go to state 13
    "union"     shift, and go to state 14
    "const"     shift, and go to state 18
    "volatile"  shift, and go to state 19
    "decltype"  shift, and go to state 26
    "enum"      shift, and go to state 136
    "auto"      shift, and go to state 37
    "char"      shift, and go to state 38
    "char8_t"   shift, and go to state 39
    "char16_t"  shift, and go to state 40
    "char32_t"  shift, and go to state 41
    "wchar_t"   shift, and go to state 42
    "bool"      shift, and go to state 43
    "short"     shift, and go to state 44
    "int"       shift, and go to state 45
    "long"      shift, and go to state 46
    "signed"    shift, and go to state 47
    "unsigned"  shift, and go to state 48
    "float"     shift, and go to state 49
    "double"    shift, and go to state 50
    "void"      shift, and go to state 51
    "typename"  shift, and go to state 56

    class-key                   go to state 210
    class-name                  go to state 66
    concept-name                go to state 68
    cv-qualifier                go to state 70
    decltype-specifier          go to state 77
    elaborated-enum-specifier   go to state 80
    elaborated-type-specifier   go to state 81
    enum-name                   go to state 85
    namespace-alias             go to state 100
    namespace-name              go to state 103
    nested-name-specifier       go to state 213
    placeholder-type-specifier  go to state 110
    simple-template-id          go to state 142
    simple-type-specifier       go to state 116
    template-name               go to state 216
    type-constraint             go to state 124
    type-id                     go to state 1452
    type-name                   go to state 125
    type-specifier              go to state 217
    type-specifier-seq          go to state 452
    typedef-name                go to state 127
    typename-specifier          go to state 128


State 988

  1096 type-parameter: type-parameter-key "..." •
  1098               | type-parameter-key "..." • IDENTIFIER

    IDENTIFIER  shift, and go to state 1453

    $default  reduce using rule 1096 (type-parameter)


State 989

  765 overloadable-operator: "delete" '[' ']' •

    $default  reduce using rule 765 (overloadable-operator)


State 990

  168 conditional-escape-sequence-char: NOT_AN_OCTAL_DIGIT_A_SIMPLE_ESCAPE_SEQUENCE_CHAR_OR_THE_CHARACTERS_U_U_OR_X •

    $default  reduce using rule 168 (conditional-escape-sequence-char)


State 991

  985 simple-escape-sequence-char: '\'' •

    $default  reduce using rule 985 (simple-escape-sequence-char)


State 992

  988 simple-escape-sequence-char: '\\' •

    $default  reduce using rule 988 (simple-escape-sequence-char)


State 993

  987 simple-escape-sequence-char: '?' •

    $default  reduce using rule 987 (simple-escape-sequence-char)


State 994

  991 simple-escape-sequence-char: 'f' •

    $default  reduce using rule 991 (simple-escape-sequence-char)


State 995

  986 simple-escape-sequence-char: '"' •

    $default  reduce using rule 986 (simple-escape-sequence-char)


State 996

  989 simple-escape-sequence-char: 'a' •

    $default  reduce using rule 989 (simple-escape-sequence-char)


State 997

  990 simple-escape-sequence-char: 'b' •

    $default  reduce using rule 990 (simple-escape-sequence-char)


State 998

  992 simple-escape-sequence-char: 'n' •

    $default  reduce using rule 992 (simple-escape-sequence-char)


State 999

  993 simple-escape-sequence-char: 'r' •

    $default  reduce using rule 993 (simple-escape-sequence-char)


State 1000

  994 simple-escape-sequence-char: 't' •

    $default  reduce using rule 994 (simple-escape-sequence-char)


State 1001

  995 simple-escape-sequence-char: 'v' •

    $default  reduce using rule 995 (simple-escape-sequence-char)


State 1002

  167 conditional-escape-sequence: '\\' conditional-escape-sequence-char •

    $default  reduce using rule 167 (conditional-escape-sequence)


State 1003

  749 octal-escape-sequence: '\\' octal-digit •
  750                      | '\\' octal-digit • octal-digit
  751                      | '\\' octal-digit • octal-digit octal-digit

    '0'  shift, and go to state 912
    '1'  shift, and go to state 913
    '2'  shift, and go to state 915
    '3'  shift, and go to state 916
    '4'  shift, and go to state 917
    '5'  shift, and go to state 918
    '6'  shift, and go to state 919
    '7'  shift, and go to state 920

    $default  reduce using rule 749 (octal-escape-sequence)

    octal-digit  go to state 1454


State 1004

  984 simple-escape-sequence: '\\' simple-escape-sequence-char •

    $default  reduce using rule 984 (simple-escape-sequence)


State 1005

  451 hexadecimal-escape-sequence: "\\x" hexadecimal-digit •

    $default  reduce using rule 451 (hexadecimal-escape-sequence)


State 1006

  1148 universal-character-name: "\\u" hex-quad •

    $default  reduce using rule 1148 (universal-character-name)


State 1007

  425 hex-quad: hexadecimal-digit • hexadecimal-digit hexadecimal-digit hexadecimal-digit

    '0'  shift, and go to state 870
    '1'  shift, and go to state 871
    '2'  shift, and go to state 873
    '3'  shift, and go to state 874
    '4'  shift, and go to state 875
    '5'  shift, and go to state 876
    '6'  shift, and go to state 877
    '7'  shift, and go to state 878
    '8'  shift, and go to state 879
    '9'  shift, and go to state 880
    'e'  shift, and go to state 881
    'E'  shift, and go to state 882
    'f'  shift, and go to state 883
    'F'  shift, and go to state 884
    'a'  shift, and go to state 885
    'b'  shift, and go to state 886
    'c'  shift, and go to state 887
    'd'  shift, and go to state 888
    'A'  shift, and go to state 889
    'B'  shift, and go to state 890
    'C'  shift, and go to state 891
    'D'  shift, and go to state 892

    hexadecimal-digit  go to state 1455


State 1008

  1149 universal-character-name: "\\U" hex-quad • hex-quad

    '0'  shift, and go to state 870
    '1'  shift, and go to state 871
    '2'  shift, and go to state 873
    '3'  shift, and go to state 874
    '4'  shift, and go to state 875
    '5'  shift, and go to state 876
    '6'  shift, and go to state 877
    '7'  shift, and go to state 878
    '8'  shift, and go to state 879
    '9'  shift, and go to state 880
    'e'  shift, and go to state 881
    'E'  shift, and go to state 882
    'f'  shift, and go to state 883
    'F'  shift, and go to state 884
    'a'  shift, and go to state 885
    'b'  shift, and go to state 886
    'c'  shift, and go to state 887
    'd'  shift, and go to state 888
    'A'  shift, and go to state 889
    'B'  shift, and go to state 890
    'C'  shift, and go to state 891
    'D'  shift, and go to state 892

    hex-quad           go to state 1456
    hexadecimal-digit  go to state 1007


State 1009

  452 hexadecimal-escape-sequence: hexadecimal-escape-sequence hexadecimal-digit •

    $default  reduce using rule 452 (hexadecimal-escape-sequence)


State 1010

  1047 string-literal: '"' s-char-sequence '"' •

    $default  reduce using rule 1047 (string-literal)


State 1011

  951 s-char-sequence: s-char-sequence s-char •

    $default  reduce using rule 951 (s-char-sequence)


State 1012

  764 overloadable-operator: "new" '[' ']' •

    $default  reduce using rule 764 (overloadable-operator)


State 1013

  189 d-char: EXCEPT_SPACE_PARENTHESIS_REVERSE_SOLIDUS_TABULATION_LINE_TABULATION_FORM_FEED_AND_NEW_LINE •

    $default  reduce using rule 189 (d-char)


State 1014

  920 raw-string: '"' '(' • ')' '"'
  922           | '"' '(' • r-char-sequence ')' '"'
  924           | '"' '(' • ')' d-char-sequence '"'
  926           | '"' '(' • r-char-sequence ')' d-char-sequence '"'

    EXCEPT_RIGHT_PARENTHESIS_FOLLOWED_BY_THE_INITIAL_D_CHAR_SEQUENCE_FOLLOWED_BY_QUOTATION_MARK  shift, and go to state 1457
    ')'                                                                                          shift, and go to state 1458

    r-char           go to state 1459
    r-char-sequence  go to state 1460


State 1015

  190 d-char-sequence: d-char •

    $default  reduce using rule 190 (d-char-sequence)


State 1016

  191 d-char-sequence: d-char-sequence • d-char
  921 raw-string: '"' d-char-sequence • '(' ')' '"'
  923           | '"' d-char-sequence • '(' r-char-sequence ')' '"'
  925           | '"' d-char-sequence • '(' ')' d-char-sequence '"'
  927           | '"' d-char-sequence • '(' r-char-sequence ')' d-char-sequence '"'

    EXCEPT_SPACE_PARENTHESIS_REVERSE_SOLIDUS_TABULATION_LINE_TABULATION_FORM_FEED_AND_NEW_LINE  shift, and go to state 1013
    '('                                                                                         shift, and go to state 1461

    d-char  go to state 1462


State 1017

  270 elaborated-type-specifier: class-key attribute-specifier-seq nested-name-specifier • IDENTIFIER
  663 nested-name-specifier: nested-name-specifier • IDENTIFIER "::"
  664                      | nested-name-specifier • simple-template-id "::"
  665                      | nested-name-specifier • "template" simple-template-id "::"

    IDENTIFIER  shift, and go to state 1463
    "template"  shift, and go to state 355

    simple-template-id  go to state 539
    template-name       go to state 143


State 1018

  269 elaborated-type-specifier: class-key nested-name-specifier IDENTIFIER •
  663 nested-name-specifier: nested-name-specifier IDENTIFIER • "::"
  1066 template-name: IDENTIFIER •

    "::"  shift, and go to state 726

    "::"      [reduce using rule 269 (elaborated-type-specifier)]
    '<'       reduce using rule 269 (elaborated-type-specifier)
    '<'       [reduce using rule 1066 (template-name)]
    $default  reduce using rule 269 (elaborated-type-specifier)


State 1019

  272 elaborated-type-specifier: class-key nested-name-specifier simple-template-id •
  664 nested-name-specifier: nested-name-specifier simple-template-id • "::"

    "::"  shift, and go to state 733

    "::"      [reduce using rule 272 (elaborated-type-specifier)]
    $default  reduce using rule 272 (elaborated-type-specifier)


State 1020

  1044 string-literal: encoding-prefix '"' '"' •

    $default  reduce using rule 1044 (string-literal)


State 1021

  951 s-char-sequence: s-char-sequence • s-char
  1046 string-literal: encoding-prefix '"' s-char-sequence • '"'

    EXCEPT_THE_QUOTATION_MARK_REVERSE_SOLIDUS_OR_NEW_LINE_CHARACTER  shift, and go to state 490
    '\\'                                                             shift, and go to state 491
    '"'                                                              shift, and go to state 1464
    "\\x"                                                            shift, and go to state 493
    "\\u"                                                            shift, and go to state 494
    "\\U"                                                            shift, and go to state 495

    basic-s-char                 go to state 496
    conditional-escape-sequence  go to state 497
    escape-sequence              go to state 498
    hexadecimal-escape-sequence  go to state 499
    numeric-escape-sequence      go to state 500
    octal-escape-sequence        go to state 501
    s-char                       go to state 1011
    simple-escape-sequence       go to state 504
    universal-character-name     go to state 505


State 1022

  1048 string-literal: encoding-prefix 'R' raw-string •

    $default  reduce using rule 1048 (string-literal)


State 1023

  665 nested-name-specifier: nested-name-specifier "template" simple-template-id • "::"
  1001 simple-type-specifier: nested-name-specifier "template" simple-template-id •

    "::"  shift, and go to state 1217

    "::"      [reduce using rule 1001 (simple-type-specifier)]
    $default  reduce using rule 1001 (simple-type-specifier)


State 1024

  760 operator-function-id: "operator" overloadable-operator '<' '>' •

    $default  reduce using rule 760 (operator-function-id)


State 1025

  761 operator-function-id: "operator" overloadable-operator '<' template-argument-list • '>'
  1055 template-argument-list: template-argument-list • ',' template-argument
  1056                       | template-argument-list • ',' template-argument "..."

    ','  shift, and go to state 1136
    '>'  shift, and go to state 1465


State 1026

  663 nested-name-specifier: nested-name-specifier IDENTIFIER • "::"
  1066 template-name: IDENTIFIER •

    "::"  shift, and go to state 726

    $default  reduce using rule 1066 (template-name)


State 1027

  178 conversion-declarator: ptr-operator conversion-declarator •

    $default  reduce using rule 178 (conversion-declarator)


State 1028

  647 named-namespace-definition: "inline" "namespace" IDENTIFIER '{' • namespace-body '}'

    IDENTIFIER        shift, and go to state 1
    "using"           shift, and go to state 2
    ';'               shift, and go to state 3
    "alignas"         shift, and go to state 4
    '('               shift, and go to state 5
    "..."             shift, and go to state 6
    '&'               shift, and go to state 7
    "asm"             shift, and go to state 8
    "::"              shift, and go to state 9
    '['               shift, and go to state 10
    "virtual"         shift, and go to state 11
    "class"           shift, and go to state 12
    "struct"          shift, and go to state 13
    "union"           shift, and go to state 14
    "template"        shift, and go to state 15
    "&&"              shift, and go to state 16
    "operator"        shift, and go to state 17
    "const"           shift, and go to state 18
    "volatile"        shift, and go to state 19
    "friend"          shift, and go to state 20
    "typedef"         shift, and go to state 21
    "constexpr"       shift, and go to state 22
    "consteval"       shift, and go to state 23
    "constinit"       shift, and go to state 24
    "inline"          shift, and go to state 25
    "decltype"        shift, and go to state 26
    "enum"            shift, and go to state 27
    "extern"          shift, and go to state 28
    "explicit"        shift, and go to state 29
    "export"          shift, and go to state 30
    "export-keyword"  shift, and go to state 158
    '*'               shift, and go to state 32
    "import-keyword"  shift, and go to state 34
    "namespace"       shift, and go to state 35
    '~'               shift, and go to state 36
    "auto"            shift, and go to state 37
    "char"            shift, and go to state 38
    "char8_t"         shift, and go to state 39
    "char16_t"        shift, and go to state 40
    "char32_t"        shift, and go to state 41
    "wchar_t"         shift, and go to state 42
    "bool"            shift, and go to state 43
    "short"           shift, and go to state 44
    "int"             shift, and go to state 45
    "long"            shift, and go to state 46
    "signed"          shift, and go to state 47
    "unsigned"        shift, and go to state 48
    "float"           shift, and go to state 49
    "double"          shift, and go to state 50
    "void"            shift, and go to state 51
    "static_assert"   shift, and go to state 52
    "static"          shift, and go to state 53
    "thread_local"    shift, and go to state 54
    "mutable"         shift, and go to state 55
    "typename"        shift, and go to state 56

    alias-declaration                go to state 57
    alignment-specifier              go to state 58
    asm-declaration                  go to state 59
    attribute-declaration            go to state 60
    attribute-specifier              go to state 61
    attribute-specifier-seq          go to state 62
    block-declaration                go to state 63
    class-head                       go to state 64
    class-key                        go to state 65
    class-name                       go to state 66
    class-specifier                  go to state 67
    concept-name                     go to state 68
    conversion-function-id           go to state 69
    cv-qualifier                     go to state 70
    decl-specifier                   go to state 71
    decl-specifier-seq               go to state 72
    declaration                      go to state 73
    declaration-seq                  go to state 570
    declarator                       go to state 75
    declarator-id                    go to state 76
    decltype-specifier               go to state 77
    deduction-guide                  go to state 78
    defining-type-specifier          go to state 79
    elaborated-enum-specifier        go to state 80
    elaborated-type-specifier        go to state 81
    empty-declaration                go to state 82
    enum-head                        go to state 83
    enum-key                         go to state 84
    enum-name                        go to state 85
    enum-specifier                   go to state 86
    explicit-instantiation           go to state 87
    explicit-specialization          go to state 88
    explicit-specifier               go to state 89
    export-declaration               go to state 90
    function-definition              go to state 91
    function-specifier               go to state 92
    id-expression                    go to state 94
    linkage-specification            go to state 95
    literal-operator-id              go to state 96
    module-import-declaration        go to state 98
    named-namespace-definition       go to state 99
    namespace-alias                  go to state 100
    namespace-alias-definition       go to state 101
    namespace-body                   go to state 1466
    namespace-definition             go to state 102
    namespace-name                   go to state 103
    nested-name-specifier            go to state 104
    nested-namespace-definition      go to state 105
    nodeclspec-function-declaration  go to state 106
    noptr-declarator                 go to state 107
    opaque-enum-declaration          go to state 108
    operator-function-id             go to state 109
    placeholder-type-specifier       go to state 110
    ptr-declarator                   go to state 111
    ptr-operator                     go to state 112
    qualified-id                     go to state 113
    simple-declaration               go to state 114
    simple-template-id               go to state 115
    simple-type-specifier            go to state 116
    static_assert-declaration        go to state 117
    storage-class-specifier          go to state 118
    template-declaration             go to state 119
    template-head                    go to state 120
    template-id                      go to state 121
    template-name                    go to state 122
    type-constraint                  go to state 124
    type-name                        go to state 125
    type-specifier                   go to state 126
    typedef-name                     go to state 127
    typename-specifier               go to state 128
    unnamed-namespace-definition     go to state 129
    unqualified-id                   go to state 130
    using-declaration                go to state 131
    using-directive                  go to state 132
    using-enum-declaration           go to state 133


State 1029

  1150 unnamed-namespace-definition: "inline" "namespace" '{' namespace-body • '}'

    '}'  shift, and go to state 1467


State 1030

  649 named-namespace-definition: "inline" "namespace" attribute-specifier-seq IDENTIFIER • '{' namespace-body '}'

    '{'  shift, and go to state 1468


State 1031

  1152 unnamed-namespace-definition: "inline" "namespace" attribute-specifier-seq '{' • namespace-body '}'

    IDENTIFIER        shift, and go to state 1
    "using"           shift, and go to state 2
    ';'               shift, and go to state 3
    "alignas"         shift, and go to state 4
    '('               shift, and go to state 5
    "..."             shift, and go to state 6
    '&'               shift, and go to state 7
    "asm"             shift, and go to state 8
    "::"              shift, and go to state 9
    '['               shift, and go to state 10
    "virtual"         shift, and go to state 11
    "class"           shift, and go to state 12
    "struct"          shift, and go to state 13
    "union"           shift, and go to state 14
    "template"        shift, and go to state 15
    "&&"              shift, and go to state 16
    "operator"        shift, and go to state 17
    "const"           shift, and go to state 18
    "volatile"        shift, and go to state 19
    "friend"          shift, and go to state 20
    "typedef"         shift, and go to state 21
    "constexpr"       shift, and go to state 22
    "consteval"       shift, and go to state 23
    "constinit"       shift, and go to state 24
    "inline"          shift, and go to state 25
    "decltype"        shift, and go to state 26
    "enum"            shift, and go to state 27
    "extern"          shift, and go to state 28
    "explicit"        shift, and go to state 29
    "export"          shift, and go to state 30
    "export-keyword"  shift, and go to state 158
    '*'               shift, and go to state 32
    "import-keyword"  shift, and go to state 34
    "namespace"       shift, and go to state 35
    '~'               shift, and go to state 36
    "auto"            shift, and go to state 37
    "char"            shift, and go to state 38
    "char8_t"         shift, and go to state 39
    "char16_t"        shift, and go to state 40
    "char32_t"        shift, and go to state 41
    "wchar_t"         shift, and go to state 42
    "bool"            shift, and go to state 43
    "short"           shift, and go to state 44
    "int"             shift, and go to state 45
    "long"            shift, and go to state 46
    "signed"          shift, and go to state 47
    "unsigned"        shift, and go to state 48
    "float"           shift, and go to state 49
    "double"          shift, and go to state 50
    "void"            shift, and go to state 51
    "static_assert"   shift, and go to state 52
    "static"          shift, and go to state 53
    "thread_local"    shift, and go to state 54
    "mutable"         shift, and go to state 55
    "typename"        shift, and go to state 56

    alias-declaration                go to state 57
    alignment-specifier              go to state 58
    asm-declaration                  go to state 59
    attribute-declaration            go to state 60
    attribute-specifier              go to state 61
    attribute-specifier-seq          go to state 62
    block-declaration                go to state 63
    class-head                       go to state 64
    class-key                        go to state 65
    class-name                       go to state 66
    class-specifier                  go to state 67
    concept-name                     go to state 68
    conversion-function-id           go to state 69
    cv-qualifier                     go to state 70
    decl-specifier                   go to state 71
    decl-specifier-seq               go to state 72
    declaration                      go to state 73
    declaration-seq                  go to state 570
    declarator                       go to state 75
    declarator-id                    go to state 76
    decltype-specifier               go to state 77
    deduction-guide                  go to state 78
    defining-type-specifier          go to state 79
    elaborated-enum-specifier        go to state 80
    elaborated-type-specifier        go to state 81
    empty-declaration                go to state 82
    enum-head                        go to state 83
    enum-key                         go to state 84
    enum-name                        go to state 85
    enum-specifier                   go to state 86
    explicit-instantiation           go to state 87
    explicit-specialization          go to state 88
    explicit-specifier               go to state 89
    export-declaration               go to state 90
    function-definition              go to state 91
    function-specifier               go to state 92
    id-expression                    go to state 94
    linkage-specification            go to state 95
    literal-operator-id              go to state 96
    module-import-declaration        go to state 98
    named-namespace-definition       go to state 99
    namespace-alias                  go to state 100
    namespace-alias-definition       go to state 101
    namespace-body                   go to state 1469
    namespace-definition             go to state 102
    namespace-name                   go to state 103
    nested-name-specifier            go to state 104
    nested-namespace-definition      go to state 105
    nodeclspec-function-declaration  go to state 106
    noptr-declarator                 go to state 107
    opaque-enum-declaration          go to state 108
    operator-function-id             go to state 109
    placeholder-type-specifier       go to state 110
    ptr-declarator                   go to state 111
    ptr-operator                     go to state 112
    qualified-id                     go to state 113
    simple-declaration               go to state 114
    simple-template-id               go to state 115
    simple-type-specifier            go to state 116
    static_assert-declaration        go to state 117
    storage-class-specifier          go to state 118
    template-declaration             go to state 119
    template-head                    go to state 120
    template-id                      go to state 121
    template-name                    go to state 122
    type-constraint                  go to state 124
    type-name                        go to state 125
    type-specifier                   go to state 126
    typedef-name                     go to state 127
    typename-specifier               go to state 128
    unnamed-namespace-definition     go to state 129
    unqualified-id                   go to state 130
    using-declaration                go to state 131
    using-directive                  go to state 132
    using-enum-declaration           go to state 133


State 1032

  855 placeholder-type-specifier: "decltype" '(' "auto" ')' •

    $default  reduce using rule 855 (placeholder-type-specifier)


State 1033

  1072 throw-expression: "throw" assignment-expression •

    $default  reduce using rule 1072 (throw-expression)


State 1034

  1194 yield-expression: "co_yield" assignment-expression •

    $default  reduce using rule 1194 (yield-expression)


State 1035

  1195 yield-expression: "co_yield" braced-init-list •

    $default  reduce using rule 1195 (yield-expression)


State 1036

  233 decltype-specifier: "decltype" '(' expression ')' •

    $default  reduce using rule 233 (decltype-specifier)


State 1037

  338 expression: expression ',' • assignment-expression

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 1470
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 1038

   27 assignment-operator: '=' •

    $default  reduce using rule 27 (assignment-operator)


State 1039

   28 assignment-operator: "*=" •

    $default  reduce using rule 28 (assignment-operator)


State 1040

   29 assignment-operator: "/=" •

    $default  reduce using rule 29 (assignment-operator)


State 1041

   30 assignment-operator: "%=" •

    $default  reduce using rule 30 (assignment-operator)


State 1042

   31 assignment-operator: "+=" •

    $default  reduce using rule 31 (assignment-operator)


State 1043

   32 assignment-operator: "-=" •

    $default  reduce using rule 32 (assignment-operator)


State 1044

   33 assignment-operator: ">>=" •

    $default  reduce using rule 33 (assignment-operator)


State 1045

   34 assignment-operator: "<<=" •

    $default  reduce using rule 34 (assignment-operator)


State 1046

   35 assignment-operator: "&=" •

    $default  reduce using rule 35 (assignment-operator)


State 1047

   36 assignment-operator: "^=" •

    $default  reduce using rule 36 (assignment-operator)


State 1048

   37 assignment-operator: "|=" •

    $default  reduce using rule 37 (assignment-operator)


State 1049

   26 assignment-expression: logical-or-expression assignment-operator • initializer-clause

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 939
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 1141
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    braced-init-list                     go to state 1142
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    initializer-clause                   go to state 1471
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 1050

  555 linkage-specification: "extern" string-literal '{' '}' •

    $default  reduce using rule 555 (linkage-specification)


State 1051

  227 declaration-seq: declaration-seq • declaration
  556 linkage-specification: "extern" string-literal '{' declaration-seq • '}'

    IDENTIFIER        shift, and go to state 1
    "using"           shift, and go to state 2
    ';'               shift, and go to state 3
    "alignas"         shift, and go to state 4
    '('               shift, and go to state 5
    "..."             shift, and go to state 6
    '&'               shift, and go to state 7
    "asm"             shift, and go to state 8
    "::"              shift, and go to state 9
    '['               shift, and go to state 10
    '}'               shift, and go to state 1472
    "virtual"         shift, and go to state 11
    "class"           shift, and go to state 12
    "struct"          shift, and go to state 13
    "union"           shift, and go to state 14
    "template"        shift, and go to state 15
    "&&"              shift, and go to state 16
    "operator"        shift, and go to state 17
    "const"           shift, and go to state 18
    "volatile"        shift, and go to state 19
    "friend"          shift, and go to state 20
    "typedef"         shift, and go to state 21
    "constexpr"       shift, and go to state 22
    "consteval"       shift, and go to state 23
    "constinit"       shift, and go to state 24
    "inline"          shift, and go to state 25
    "decltype"        shift, and go to state 26
    "enum"            shift, and go to state 27
    "extern"          shift, and go to state 28
    "explicit"        shift, and go to state 29
    "export"          shift, and go to state 30
    "export-keyword"  shift, and go to state 158
    '*'               shift, and go to state 32
    "import-keyword"  shift, and go to state 34
    "namespace"       shift, and go to state 35
    '~'               shift, and go to state 36
    "auto"            shift, and go to state 37
    "char"            shift, and go to state 38
    "char8_t"         shift, and go to state 39
    "char16_t"        shift, and go to state 40
    "char32_t"        shift, and go to state 41
    "wchar_t"         shift, and go to state 42
    "bool"            shift, and go to state 43
    "short"           shift, and go to state 44
    "int"             shift, and go to state 45
    "long"            shift, and go to state 46
    "signed"          shift, and go to state 47
    "unsigned"        shift, and go to state 48
    "float"           shift, and go to state 49
    "double"          shift, and go to state 50
    "void"            shift, and go to state 51
    "static_assert"   shift, and go to state 52
    "static"          shift, and go to state 53
    "thread_local"    shift, and go to state 54
    "mutable"         shift, and go to state 55
    "typename"        shift, and go to state 56

    alias-declaration                go to state 57
    alignment-specifier              go to state 58
    asm-declaration                  go to state 59
    attribute-declaration            go to state 60
    attribute-specifier              go to state 61
    attribute-specifier-seq          go to state 62
    block-declaration                go to state 63
    class-head                       go to state 64
    class-key                        go to state 65
    class-name                       go to state 66
    class-specifier                  go to state 67
    concept-name                     go to state 68
    conversion-function-id           go to state 69
    cv-qualifier                     go to state 70
    decl-specifier                   go to state 71
    decl-specifier-seq               go to state 72
    declaration                      go to state 290
    declarator                       go to state 75
    declarator-id                    go to state 76
    decltype-specifier               go to state 77
    deduction-guide                  go to state 78
    defining-type-specifier          go to state 79
    elaborated-enum-specifier        go to state 80
    elaborated-type-specifier        go to state 81
    empty-declaration                go to state 82
    enum-head                        go to state 83
    enum-key                         go to state 84
    enum-name                        go to state 85
    enum-specifier                   go to state 86
    explicit-instantiation           go to state 87
    explicit-specialization          go to state 88
    explicit-specifier               go to state 89
    export-declaration               go to state 90
    function-definition              go to state 91
    function-specifier               go to state 92
    id-expression                    go to state 94
    linkage-specification            go to state 95
    literal-operator-id              go to state 96
    module-import-declaration        go to state 98
    named-namespace-definition       go to state 99
    namespace-alias                  go to state 100
    namespace-alias-definition       go to state 101
    namespace-definition             go to state 102
    namespace-name                   go to state 103
    nested-name-specifier            go to state 104
    nested-namespace-definition      go to state 105
    nodeclspec-function-declaration  go to state 106
    noptr-declarator                 go to state 107
    opaque-enum-declaration          go to state 108
    operator-function-id             go to state 109
    placeholder-type-specifier       go to state 110
    ptr-declarator                   go to state 111
    ptr-operator                     go to state 112
    qualified-id                     go to state 113
    simple-declaration               go to state 114
    simple-template-id               go to state 115
    simple-type-specifier            go to state 116
    static_assert-declaration        go to state 117
    storage-class-specifier          go to state 118
    template-declaration             go to state 119
    template-head                    go to state 120
    template-id                      go to state 121
    template-name                    go to state 122
    type-constraint                  go to state 124
    type-name                        go to state 125
    type-specifier                   go to state 126
    typedef-name                     go to state 127
    typename-specifier               go to state 128
    unnamed-namespace-definition     go to state 129
    unqualified-id                   go to state 130
    using-declaration                go to state 131
    using-directive                  go to state 132
    using-enum-declaration           go to state 133


State 1052

  325 explicit-specifier: "explicit" '(' constant-expression ')' •

    $default  reduce using rule 325 (explicit-specifier)


State 1053

  333 export-declaration: "export" '{' declaration-seq '}' •

    $default  reduce using rule 333 (export-declaration)


State 1054

  623 module-declaration: "export-keyword" "module-keyword" module-name ';' •

    $default  reduce using rule 623 (module-declaration)


State 1055

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  627 module-declaration: "export-keyword" "module-keyword" module-name attribute-specifier-seq • ';'

    ';'        shift, and go to state 1473
    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    alignment-specifier  go to state 58
    attribute-specifier  go to state 265


State 1056

  625 module-declaration: "export-keyword" "module-keyword" module-name module-partition • ';'
  629                   | "export-keyword" "module-keyword" module-name module-partition • attribute-specifier-seq ';'

    ';'        shift, and go to state 1474
    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 1475


State 1057

  628 module-declaration: "module-keyword" module-name attribute-specifier-seq ';' •

    $default  reduce using rule 628 (module-declaration)


State 1058

  626 module-declaration: "module-keyword" module-name module-partition ';' •

    $default  reduce using rule 626 (module-declaration)


State 1059

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  630 module-declaration: "module-keyword" module-name module-partition attribute-specifier-seq • ';'

    ';'        shift, and go to state 1476
    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    alignment-specifier  go to state 58
    attribute-specifier  go to state 265


State 1060

  640 module-name-qualifier: module-name-qualifier IDENTIFIER '.' •

    $default  reduce using rule 640 (module-name-qualifier)


State 1061

  640 module-name-qualifier: module-name-qualifier IDENTIFIER • '.'
  642 module-partition: ':' module-name-qualifier IDENTIFIER •

    '.'  shift, and go to state 1060

    $default  reduce using rule 642 (module-partition)


State 1062

  420 header-name: '<' "h-char-sequence" '>' •

    $default  reduce using rule 420 (header-name)


State 1063

  421 header-name: '"' q-char-sequence '"' •

    $default  reduce using rule 421 (header-name)


State 1064

  912 q-char-sequence: q-char-sequence q-char •

    $default  reduce using rule 912 (q-char-sequence)


State 1065

  636 module-import-declaration: "import-keyword" header-name attribute-specifier-seq ';' •

    $default  reduce using rule 636 (module-import-declaration)


State 1066

  632 module-import-declaration: "import-keyword" module-name attribute-specifier-seq ';' •

    $default  reduce using rule 632 (module-import-declaration)


State 1067

  634 module-import-declaration: "import-keyword" module-partition attribute-specifier-seq ';' •

    $default  reduce using rule 634 (module-import-declaration)


State 1068

  661 nested-name-specifier: namespace-name • "::"
  916 qualified-namespace-specifier: namespace-name •

    "::"  shift, and go to state 324

    $default  reduce using rule 916 (qualified-namespace-specifier)


State 1069

  663 nested-name-specifier: nested-name-specifier • IDENTIFIER "::"
  664                      | nested-name-specifier • simple-template-id "::"
  665                      | nested-name-specifier • "template" simple-template-id "::"
  915 qualified-namespace-specifier: nested-name-specifier • namespace-name

    IDENTIFIER  shift, and go to state 755
    "template"  shift, and go to state 355

    namespace-alias     go to state 100
    namespace-name      go to state 1477
    simple-template-id  go to state 539
    template-name       go to state 143


State 1070

  652 namespace-alias-definition: "namespace" IDENTIFIER '=' qualified-namespace-specifier • ';'

    ';'  shift, and go to state 1478


State 1071

  648 named-namespace-definition: "namespace" IDENTIFIER '{' namespace-body • '}'

    '}'  shift, and go to state 1479


State 1072

  1151 unnamed-namespace-definition: "namespace" '{' namespace-body '}' •

    $default  reduce using rule 1151 (unnamed-namespace-definition)


State 1073

  650 named-namespace-definition: "namespace" attribute-specifier-seq IDENTIFIER '{' • namespace-body '}'

    IDENTIFIER        shift, and go to state 1
    "using"           shift, and go to state 2
    ';'               shift, and go to state 3
    "alignas"         shift, and go to state 4
    '('               shift, and go to state 5
    "..."             shift, and go to state 6
    '&'               shift, and go to state 7
    "asm"             shift, and go to state 8
    "::"              shift, and go to state 9
    '['               shift, and go to state 10
    "virtual"         shift, and go to state 11
    "class"           shift, and go to state 12
    "struct"          shift, and go to state 13
    "union"           shift, and go to state 14
    "template"        shift, and go to state 15
    "&&"              shift, and go to state 16
    "operator"        shift, and go to state 17
    "const"           shift, and go to state 18
    "volatile"        shift, and go to state 19
    "friend"          shift, and go to state 20
    "typedef"         shift, and go to state 21
    "constexpr"       shift, and go to state 22
    "consteval"       shift, and go to state 23
    "constinit"       shift, and go to state 24
    "inline"          shift, and go to state 25
    "decltype"        shift, and go to state 26
    "enum"            shift, and go to state 27
    "extern"          shift, and go to state 28
    "explicit"        shift, and go to state 29
    "export"          shift, and go to state 30
    "export-keyword"  shift, and go to state 158
    '*'               shift, and go to state 32
    "import-keyword"  shift, and go to state 34
    "namespace"       shift, and go to state 35
    '~'               shift, and go to state 36
    "auto"            shift, and go to state 37
    "char"            shift, and go to state 38
    "char8_t"         shift, and go to state 39
    "char16_t"        shift, and go to state 40
    "char32_t"        shift, and go to state 41
    "wchar_t"         shift, and go to state 42
    "bool"            shift, and go to state 43
    "short"           shift, and go to state 44
    "int"             shift, and go to state 45
    "long"            shift, and go to state 46
    "signed"          shift, and go to state 47
    "unsigned"        shift, and go to state 48
    "float"           shift, and go to state 49
    "double"          shift, and go to state 50
    "void"            shift, and go to state 51
    "static_assert"   shift, and go to state 52
    "static"          shift, and go to state 53
    "thread_local"    shift, and go to state 54
    "mutable"         shift, and go to state 55
    "typename"        shift, and go to state 56

    alias-declaration                go to state 57
    alignment-specifier              go to state 58
    asm-declaration                  go to state 59
    attribute-declaration            go to state 60
    attribute-specifier              go to state 61
    attribute-specifier-seq          go to state 62
    block-declaration                go to state 63
    class-head                       go to state 64
    class-key                        go to state 65
    class-name                       go to state 66
    class-specifier                  go to state 67
    concept-name                     go to state 68
    conversion-function-id           go to state 69
    cv-qualifier                     go to state 70
    decl-specifier                   go to state 71
    decl-specifier-seq               go to state 72
    declaration                      go to state 73
    declaration-seq                  go to state 570
    declarator                       go to state 75
    declarator-id                    go to state 76
    decltype-specifier               go to state 77
    deduction-guide                  go to state 78
    defining-type-specifier          go to state 79
    elaborated-enum-specifier        go to state 80
    elaborated-type-specifier        go to state 81
    empty-declaration                go to state 82
    enum-head                        go to state 83
    enum-key                         go to state 84
    enum-name                        go to state 85
    enum-specifier                   go to state 86
    explicit-instantiation           go to state 87
    explicit-specialization          go to state 88
    explicit-specifier               go to state 89
    export-declaration               go to state 90
    function-definition              go to state 91
    function-specifier               go to state 92
    id-expression                    go to state 94
    linkage-specification            go to state 95
    literal-operator-id              go to state 96
    module-import-declaration        go to state 98
    named-namespace-definition       go to state 99
    namespace-alias                  go to state 100
    namespace-alias-definition       go to state 101
    namespace-body                   go to state 1480
    namespace-definition             go to state 102
    namespace-name                   go to state 103
    nested-name-specifier            go to state 104
    nested-namespace-definition      go to state 105
    nodeclspec-function-declaration  go to state 106
    noptr-declarator                 go to state 107
    opaque-enum-declaration          go to state 108
    operator-function-id             go to state 109
    placeholder-type-specifier       go to state 110
    ptr-declarator                   go to state 111
    ptr-operator                     go to state 112
    qualified-id                     go to state 113
    simple-declaration               go to state 114
    simple-template-id               go to state 115
    simple-type-specifier            go to state 116
    static_assert-declaration        go to state 117
    storage-class-specifier          go to state 118
    template-declaration             go to state 119
    template-head                    go to state 120
    template-id                      go to state 121
    template-name                    go to state 122
    type-constraint                  go to state 124
    type-name                        go to state 125
    type-specifier                   go to state 126
    typedef-name                     go to state 127
    typename-specifier               go to state 128
    unnamed-namespace-definition     go to state 129
    unqualified-id                   go to state 130
    using-declaration                go to state 131
    using-directive                  go to state 132
    using-enum-declaration           go to state 133


State 1074

  1153 unnamed-namespace-definition: "namespace" attribute-specifier-seq '{' namespace-body • '}'

    '}'  shift, and go to state 1481


State 1075

  277 enclosing-namespace-specifier: enclosing-namespace-specifier "::" IDENTIFIER •
  666 nested-namespace-definition: "namespace" enclosing-namespace-specifier "::" IDENTIFIER • '{' namespace-body '}'

    '{'  shift, and go to state 1482

    $default  reduce using rule 277 (enclosing-namespace-specifier)


State 1076

  278 enclosing-namespace-specifier: enclosing-namespace-specifier "::" "inline" • IDENTIFIER
  667 nested-namespace-definition: "namespace" enclosing-namespace-specifier "::" "inline" • IDENTIFIER '{' namespace-body '}'

    IDENTIFIER  shift, and go to state 1483


State 1077

  1038 static_assert-declaration: "static_assert" '(' constant-expression ')' • ';'

    ';'  shift, and go to state 1484


State 1078

  1039 static_assert-declaration: "static_assert" '(' constant-expression ',' • string-literal ')' ';'

    "u8"  shift, and go to state 185
    'u'   shift, and go to state 186
    'U'   shift, and go to state 187
    'L'   shift, and go to state 188
    '"'   shift, and go to state 203
    'R'   shift, and go to state 209

    encoding-prefix  go to state 212
    string-literal   go to state 1485


State 1079

  665 nested-name-specifier: nested-name-specifier "template" simple-template-id • "::"
  1128 typename-specifier: "typename" nested-name-specifier "template" simple-template-id •

    "::"  shift, and go to state 1217

    "::"      [reduce using rule 1128 (typename-specifier)]
    $default  reduce using rule 1128 (typename-specifier)


State 1080

  661 nested-name-specifier: namespace-name • "::"
  1185 using-directive: attribute-specifier-seq "using" "namespace" namespace-name • ';'

    ';'   shift, and go to state 1486
    "::"  shift, and go to state 324


State 1081

  663 nested-name-specifier: nested-name-specifier • IDENTIFIER "::"
  664                      | nested-name-specifier • simple-template-id "::"
  665                      | nested-name-specifier • "template" simple-template-id "::"
  1187 using-directive: attribute-specifier-seq "using" "namespace" nested-name-specifier • namespace-name ';'

    IDENTIFIER  shift, and go to state 755
    "template"  shift, and go to state 355

    namespace-alias     go to state 100
    namespace-name      go to state 1487
    simple-template-id  go to state 539
    template-name       go to state 143


State 1082

   21 asm-declaration: attribute-specifier-seq "asm" '(' string-literal • ')' ';'

    ')'  shift, and go to state 1488


State 1083

  466 identifier-list: identifier-list • ',' IDENTIFIER
  980 simple-declaration: attribute-specifier-seq decl-specifier-seq '[' identifier-list • ']' initializer ';'

    ','  shift, and go to state 1138
    ']'  shift, and go to state 1489


State 1084

  400 function-definition: attribute-specifier-seq decl-specifier-seq declarator function-body •

    $default  reduce using rule 400 (function-definition)


State 1085

  408 function-definition: attribute-specifier-seq decl-specifier-seq declarator requires-clause • function-body
  475 init-declarator: declarator requires-clause •

    '='    shift, and go to state 291
    ':'    shift, and go to state 293
    '{'    shift, and go to state 294
    "try"  shift, and go to state 296

    $default  reduce using rule 475 (init-declarator)

    compound-statement  go to state 299
    ctor-initializer    go to state 300
    function-body       go to state 1490
    function-try-block  go to state 302


State 1086

  404 function-definition: attribute-specifier-seq decl-specifier-seq declarator virt-specifier-seq • function-body
  1193 virt-specifier-seq: virt-specifier-seq • virt-specifier

    '='         shift, and go to state 291
    ':'         shift, and go to state 293
    '{'         shift, and go to state 294
    "final"     shift, and go to state 295
    "try"       shift, and go to state 296
    "override"  shift, and go to state 298

    compound-statement  go to state 299
    ctor-initializer    go to state 300
    function-body       go to state 1491
    function-try-block  go to state 302
    virt-specifier      go to state 707


State 1087

  979 simple-declaration: attribute-specifier-seq decl-specifier-seq init-declarator-list ';' •

    $default  reduce using rule 979 (simple-declaration)


State 1088

  982 simple-declaration: attribute-specifier-seq decl-specifier-seq ref-qualifier '[' • identifier-list ']' initializer ';'

    IDENTIFIER  shift, and go to state 644

    identifier-list  go to state 1492


State 1089

  406 function-definition: attribute-specifier-seq declarator requires-clause function-body •

    $default  reduce using rule 406 (function-definition)


State 1090

  402 function-definition: attribute-specifier-seq declarator virt-specifier-seq function-body •

    $default  reduce using rule 402 (function-definition)


State 1091

  287 enum-head: enum-key attribute-specifier-seq enum-head-name •
  291          | enum-key attribute-specifier-seq enum-head-name • enum-base

    ':'  shift, and go to state 310

    $default  reduce using rule 287 (enum-head)

    enum-base  go to state 1493


State 1092

  290 enum-head: enum-key enum-head-name enum-base •

    $default  reduce using rule 290 (enum-head)


State 1093

  609 member-declarator: IDENTIFIER ':' • constant-expression
  613                  | IDENTIFIER ':' • constant-expression brace-or-equal-initializer

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    additive-expression                  go to state 404
    and-expression                       go to state 405
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 412
    constant-expression                  go to state 1494
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 435
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 1094

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  611 member-declarator: IDENTIFIER attribute-specifier-seq • ':' constant-expression
  615                  | IDENTIFIER attribute-specifier-seq • ':' constant-expression brace-or-equal-initializer

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10
    ':'        shift, and go to state 1495

    alignment-specifier  go to state 58
    attribute-specifier  go to state 265


State 1095

  610 member-declarator: ':' constant-expression •
  614                  | ':' constant-expression • brace-or-equal-initializer

    '='  shift, and go to state 1280
    '{'  shift, and go to state 939

    $default  reduce using rule 610 (member-declarator)

    brace-or-equal-initializer  go to state 1496
    braced-init-list            go to state 650


State 1096

  621 member-specification: access-specifier ':' •
  622                     | access-specifier ':' • member-specification

    IDENTIFIER       shift, and go to state 591
    "private"        shift, and go to state 592
    "protected"      shift, and go to state 593
    "public"         shift, and go to state 594
    "using"          shift, and go to state 595
    ';'              shift, and go to state 596
    "alignas"        shift, and go to state 4
    '('              shift, and go to state 5
    "..."            shift, and go to state 6
    '&'              shift, and go to state 7
    "::"             shift, and go to state 9
    '['              shift, and go to state 10
    ':'              shift, and go to state 597
    "virtual"        shift, and go to state 11
    "class"          shift, and go to state 12
    "struct"         shift, and go to state 13
    "union"          shift, and go to state 14
    "template"       shift, and go to state 599
    "&&"             shift, and go to state 16
    "operator"       shift, and go to state 17
    "const"          shift, and go to state 18
    "volatile"       shift, and go to state 19
    "friend"         shift, and go to state 20
    "typedef"        shift, and go to state 21
    "constexpr"      shift, and go to state 22
    "consteval"      shift, and go to state 23
    "constinit"      shift, and go to state 24
    "inline"         shift, and go to state 263
    "decltype"       shift, and go to state 26
    "enum"           shift, and go to state 27
    "extern"         shift, and go to state 264
    "explicit"       shift, and go to state 29
    '*'              shift, and go to state 32
    '~'              shift, and go to state 36
    "auto"           shift, and go to state 37
    "char"           shift, and go to state 38
    "char8_t"        shift, and go to state 39
    "char16_t"       shift, and go to state 40
    "char32_t"       shift, and go to state 41
    "wchar_t"        shift, and go to state 42
    "bool"           shift, and go to state 43
    "short"          shift, and go to state 44
    "int"            shift, and go to state 45
    "long"           shift, and go to state 46
    "signed"         shift, and go to state 47
    "unsigned"       shift, and go to state 48
    "float"          shift, and go to state 49
    "double"         shift, and go to state 50
    "void"           shift, and go to state 51
    "static_assert"  shift, and go to state 52
    "static"         shift, and go to state 53
    "thread_local"   shift, and go to state 54
    "mutable"        shift, and go to state 55
    "typename"       shift, and go to state 56

    $default  reduce using rule 621 (member-specification)

    access-specifier            go to state 600
    alias-declaration           go to state 601
    alignment-specifier         go to state 58
    attribute-specifier         go to state 61
    attribute-specifier-seq     go to state 602
    class-head                  go to state 64
    class-key                   go to state 65
    class-name                  go to state 66
    class-specifier             go to state 67
    concept-name                go to state 68
    conversion-function-id      go to state 69
    cv-qualifier                go to state 70
    decl-specifier              go to state 71
    decl-specifier-seq          go to state 603
    declarator                  go to state 604
    declarator-id               go to state 76
    decltype-specifier          go to state 77
    deduction-guide             go to state 605
    defining-type-specifier     go to state 79
    elaborated-enum-specifier   go to state 80
    elaborated-type-specifier   go to state 81
    empty-declaration           go to state 606
    enum-head                   go to state 83
    enum-key                    go to state 84
    enum-name                   go to state 85
    enum-specifier              go to state 86
    explicit-specialization     go to state 607
    explicit-specifier          go to state 89
    function-definition         go to state 608
    function-specifier          go to state 92
    id-expression               go to state 94
    literal-operator-id         go to state 96
    member-declaration          go to state 609
    member-declarator           go to state 610
    member-declarator-list      go to state 611
    member-specification        go to state 1497
    namespace-alias             go to state 100
    namespace-name              go to state 103
    nested-name-specifier       go to state 104
    noptr-declarator            go to state 107
    opaque-enum-declaration     go to state 613
    operator-function-id        go to state 109
    placeholder-type-specifier  go to state 110
    ptr-declarator              go to state 111
    ptr-operator                go to state 112
    qualified-id                go to state 113
    simple-template-id          go to state 115
    simple-type-specifier       go to state 116
    static_assert-declaration   go to state 614
    storage-class-specifier     go to state 118
    template-declaration        go to state 615
    template-head               go to state 120
    template-id                 go to state 121
    template-name               go to state 122
    type-constraint             go to state 124
    type-name                   go to state 125
    type-specifier              go to state 126
    typedef-name                go to state 127
    typename-specifier          go to state 128
    unqualified-id              go to state 130
    using-declaration           go to state 616
    using-enum-declaration      go to state 617


State 1097

  584 member-declaration: attribute-specifier-seq ';' •

    $default  reduce using rule 584 (member-declaration)


State 1098

  610 member-declarator: ':' • constant-expression
  612                  | attribute-specifier-seq ':' • constant-expression
  614                  | ':' • constant-expression brace-or-equal-initializer
  616                  | attribute-specifier-seq ':' • constant-expression brace-or-equal-initializer

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    additive-expression                  go to state 404
    and-expression                       go to state 405
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 412
    constant-expression                  go to state 1498
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 435
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 1099

   53 attribute-specifier-seq: attribute-specifier-seq attribute-specifier •
   54                        | attribute-specifier •

    "alignas"  reduce using rule 53 (attribute-specifier-seq)
    "alignas"  [reduce using rule 54 (attribute-specifier-seq)]
    '['        reduce using rule 53 (attribute-specifier-seq)
    '['        [reduce using rule 54 (attribute-specifier-seq)]
    ':'        reduce using rule 53 (attribute-specifier-seq)
    ':'        [reduce using rule 54 (attribute-specifier-seq)]
    $default   reduce using rule 53 (attribute-specifier-seq)


State 1100

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  612 member-declarator: attribute-specifier-seq • ':' constant-expression
  616                  | attribute-specifier-seq • ':' constant-expression brace-or-equal-initializer

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10
    ':'        shift, and go to state 1499

    alignment-specifier  go to state 58
    attribute-specifier  go to state 265


State 1101

  400 function-definition: attribute-specifier-seq decl-specifier-seq • declarator function-body
  404                    | attribute-specifier-seq decl-specifier-seq • declarator virt-specifier-seq function-body
  408                    | attribute-specifier-seq decl-specifier-seq • declarator requires-clause function-body
  586 member-declaration: attribute-specifier-seq decl-specifier-seq • ';'
  590                   | attribute-specifier-seq decl-specifier-seq • member-declarator-list ';'

    IDENTIFIER  shift, and go to state 1104
    ';'         shift, and go to state 1500
    "alignas"   shift, and go to state 4
    '('         shift, and go to state 5
    "..."       shift, and go to state 6
    '&'         shift, and go to state 7
    "::"        shift, and go to state 9
    '['         shift, and go to state 10
    ':'         shift, and go to state 597
    "&&"        shift, and go to state 16
    "operator"  shift, and go to state 17
    "decltype"  shift, and go to state 135
    '*'         shift, and go to state 32
    '~'         shift, and go to state 36

    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 1100
    class-name               go to state 66
    conversion-function-id   go to state 69
    declarator               go to state 1501
    declarator-id            go to state 76
    decltype-specifier       go to state 139
    enum-name                go to state 85
    id-expression            go to state 94
    literal-operator-id      go to state 96
    member-declarator        go to state 610
    member-declarator-list   go to state 1502
    namespace-alias          go to state 100
    namespace-name           go to state 103
    nested-name-specifier    go to state 149
    noptr-declarator         go to state 107
    operator-function-id     go to state 109
    ptr-declarator           go to state 111
    ptr-operator             go to state 112
    qualified-id             go to state 113
    simple-template-id       go to state 115
    template-id              go to state 121
    template-name            go to state 143
    type-name                go to state 144
    typedef-name             go to state 127
    unqualified-id           go to state 130


State 1102

  398 function-definition: attribute-specifier-seq declarator • function-body
  402                    | attribute-specifier-seq declarator • virt-specifier-seq function-body
  406                    | attribute-specifier-seq declarator • requires-clause function-body
  602 member-declarator: declarator •
  603                  | declarator • virt-specifier-seq
  604                  | declarator • pure-specifier
  605                  | declarator • virt-specifier-seq pure-specifier
  606                  | declarator • requires-clause
  607                  | declarator •
  608                  | declarator • brace-or-equal-initializer

    '='         shift, and go to state 1108
    ':'         shift, and go to state 293
    '{'         shift, and go to state 648
    "final"     shift, and go to state 295
    "try"       shift, and go to state 296
    "requires"  shift, and go to state 297
    "override"  shift, and go to state 298

    ';'       reduce using rule 602 (member-declarator)
    ';'       [reduce using rule 607 (member-declarator)]
    ','       reduce using rule 602 (member-declarator)
    ','       [reduce using rule 607 (member-declarator)]
    $default  reduce using rule 602 (member-declarator)

    brace-or-equal-initializer  go to state 1109
    braced-init-list            go to state 650
    compound-statement          go to state 299
    ctor-initializer            go to state 300
    function-body               go to state 586
    function-try-block          go to state 302
    pure-specifier              go to state 1110
    requires-clause             go to state 1503
    virt-specifier              go to state 304
    virt-specifier-seq          go to state 1504


State 1103

  588 member-declaration: attribute-specifier-seq member-declarator-list • ';'
  618 member-declarator-list: member-declarator-list • ',' member-declarator

    ';'  shift, and go to state 1505
    ','  shift, and go to state 1115


State 1104

  145 class-name: IDENTIFIER •
  297 enum-name: IDENTIFIER •
  609 member-declarator: IDENTIFIER • ':' constant-expression
  611                  | IDENTIFIER • attribute-specifier-seq ':' constant-expression
  613                  | IDENTIFIER • ':' constant-expression brace-or-equal-initializer
  615                  | IDENTIFIER • attribute-specifier-seq ':' constant-expression brace-or-equal-initializer
  651 namespace-alias: IDENTIFIER •
  657 namespace-name: IDENTIFIER •
  1066 template-name: IDENTIFIER •
  1124 typedef-name: IDENTIFIER •
  1154 unqualified-id: IDENTIFIER •

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10
    ':'        shift, and go to state 1093

    "alignas"  [reduce using rule 1154 (unqualified-id)]
    "::"       reduce using rule 145 (class-name)
    "::"       [reduce using rule 297 (enum-name)]
    "::"       [reduce using rule 651 (namespace-alias)]
    "::"       [reduce using rule 657 (namespace-name)]
    "::"       [reduce using rule 1124 (typedef-name)]
    '['        [reduce using rule 1154 (unqualified-id)]
    ':'        [reduce using rule 1154 (unqualified-id)]
    '<'        reduce using rule 1066 (template-name)
    $default   reduce using rule 1154 (unqualified-id)

    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 1094


State 1105

  587 member-declaration: decl-specifier-seq ';' •

    $default  reduce using rule 587 (member-declaration)


State 1106

  401 function-definition: decl-specifier-seq declarator • function-body
  405                    | decl-specifier-seq declarator • virt-specifier-seq function-body
  409                    | decl-specifier-seq declarator • requires-clause function-body
  602 member-declarator: declarator •
  603                  | declarator • virt-specifier-seq
  604                  | declarator • pure-specifier
  605                  | declarator • virt-specifier-seq pure-specifier
  606                  | declarator • requires-clause
  607                  | declarator •
  608                  | declarator • brace-or-equal-initializer

    '='         shift, and go to state 1108
    ':'         shift, and go to state 293
    '{'         shift, and go to state 648
    "final"     shift, and go to state 295
    "try"       shift, and go to state 296
    "requires"  shift, and go to state 297
    "override"  shift, and go to state 298

    ';'       reduce using rule 602 (member-declarator)
    ';'       [reduce using rule 607 (member-declarator)]
    ','       reduce using rule 602 (member-declarator)
    ','       [reduce using rule 607 (member-declarator)]
    $default  reduce using rule 602 (member-declarator)

    brace-or-equal-initializer  go to state 1109
    braced-init-list            go to state 650
    compound-statement          go to state 299
    ctor-initializer            go to state 300
    function-body               go to state 651
    function-try-block          go to state 302
    pure-specifier              go to state 1110
    requires-clause             go to state 1506
    virt-specifier              go to state 304
    virt-specifier-seq          go to state 1507


State 1107

  591 member-declaration: decl-specifier-seq member-declarator-list • ';'
  618 member-declarator-list: member-declarator-list • ',' member-declarator

    ';'  shift, and go to state 1508
    ','  shift, and go to state 1115


State 1108

  106 brace-or-equal-initializer: '=' • initializer-clause
  396 function-body: '=' • "default" ';'
  397              | '=' • "delete" ';'
  909 pure-specifier: '=' • '0'

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 939
    '0'                 shift, and go to state 1509
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 1140
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    "default"           shift, and go to state 659
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 1141
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    braced-init-list                     go to state 1142
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    initializer-clause                   go to state 1143
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 1109

  608 member-declarator: declarator brace-or-equal-initializer •

    $default  reduce using rule 608 (member-declarator)


State 1110

  604 member-declarator: declarator pure-specifier •

    $default  reduce using rule 604 (member-declarator)


State 1111

  407 function-definition: declarator requires-clause • function-body
  606 member-declarator: declarator requires-clause •

    '='    shift, and go to state 291
    ':'    shift, and go to state 293
    '{'    shift, and go to state 294
    "try"  shift, and go to state 296

    $default  reduce using rule 606 (member-declarator)

    compound-statement  go to state 299
    ctor-initializer    go to state 300
    function-body       go to state 705
    function-try-block  go to state 302


State 1112

  403 function-definition: declarator virt-specifier-seq • function-body
  603 member-declarator: declarator virt-specifier-seq •
  605                  | declarator virt-specifier-seq • pure-specifier
  1193 virt-specifier-seq: virt-specifier-seq • virt-specifier

    '='         shift, and go to state 1510
    ':'         shift, and go to state 293
    '{'         shift, and go to state 294
    "final"     shift, and go to state 295
    "try"       shift, and go to state 296
    "override"  shift, and go to state 298

    $default  reduce using rule 603 (member-declarator)

    compound-statement  go to state 299
    ctor-initializer    go to state 300
    function-body       go to state 706
    function-try-block  go to state 302
    pure-specifier      go to state 1511
    virt-specifier      go to state 707


State 1113

  620 member-specification: member-declaration member-specification •

    $default  reduce using rule 620 (member-specification)


State 1114

  589 member-declaration: member-declarator-list ';' •

    $default  reduce using rule 589 (member-declaration)


State 1115

  618 member-declarator-list: member-declarator-list ',' • member-declarator

    IDENTIFIER  shift, and go to state 1104
    "alignas"   shift, and go to state 4
    '('         shift, and go to state 5
    "..."       shift, and go to state 6
    '&'         shift, and go to state 7
    "::"        shift, and go to state 9
    '['         shift, and go to state 10
    ':'         shift, and go to state 597
    "&&"        shift, and go to state 16
    "operator"  shift, and go to state 17
    "decltype"  shift, and go to state 135
    '*'         shift, and go to state 32
    '~'         shift, and go to state 36

    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 1100
    class-name               go to state 66
    conversion-function-id   go to state 69
    declarator               go to state 1512
    declarator-id            go to state 76
    decltype-specifier       go to state 139
    enum-name                go to state 85
    id-expression            go to state 94
    literal-operator-id      go to state 96
    member-declarator        go to state 1513
    namespace-alias          go to state 100
    namespace-name           go to state 103
    nested-name-specifier    go to state 149
    noptr-declarator         go to state 107
    operator-function-id     go to state 109
    ptr-declarator           go to state 111
    ptr-operator             go to state 112
    qualified-id             go to state 113
    simple-template-id       go to state 115
    template-id              go to state 121
    template-name            go to state 143
    type-name                go to state 144
    typedef-name             go to state 127
    unqualified-id           go to state 130


State 1116

  152 class-specifier: class-head '{' member-specification '}' •

    $default  reduce using rule 152 (class-specifier)


State 1117

   74 base-specifier: "virtual" access-specifier • class-or-decltype

    IDENTIFIER  shift, and go to state 258
    "::"        shift, and go to state 9
    "decltype"  shift, and go to state 135

    class-name             go to state 66
    class-or-decltype      go to state 1514
    decltype-specifier     go to state 624
    enum-name              go to state 85
    namespace-alias        go to state 100
    namespace-name         go to state 103
    nested-name-specifier  go to state 625
    simple-template-id     go to state 142
    template-name          go to state 143
    type-name              go to state 626
    typedef-name           go to state 127


State 1118

   72 base-specifier: "virtual" class-or-decltype •

    $default  reduce using rule 72 (base-specifier)


State 1119

   78 base-specifier: access-specifier "virtual" • class-or-decltype

    IDENTIFIER  shift, and go to state 258
    "::"        shift, and go to state 9
    "decltype"  shift, and go to state 135

    class-name             go to state 66
    class-or-decltype      go to state 1515
    decltype-specifier     go to state 624
    enum-name              go to state 85
    namespace-alias        go to state 100
    namespace-name         go to state 103
    nested-name-specifier  go to state 625
    simple-template-id     go to state 142
    template-name          go to state 143
    type-name              go to state 626
    typedef-name           go to state 127


State 1120

   76 base-specifier: access-specifier class-or-decltype •

    $default  reduce using rule 76 (base-specifier)


State 1121

   71 base-specifier: attribute-specifier-seq "virtual" • class-or-decltype
   73               | attribute-specifier-seq "virtual" • access-specifier class-or-decltype

    IDENTIFIER   shift, and go to state 258
    "private"    shift, and go to state 592
    "protected"  shift, and go to state 593
    "public"     shift, and go to state 594
    "::"         shift, and go to state 9
    "decltype"   shift, and go to state 135

    access-specifier       go to state 1516
    class-name             go to state 66
    class-or-decltype      go to state 1517
    decltype-specifier     go to state 624
    enum-name              go to state 85
    namespace-alias        go to state 100
    namespace-name         go to state 103
    nested-name-specifier  go to state 625
    simple-template-id     go to state 142
    template-name          go to state 143
    type-name              go to state 626
    typedef-name           go to state 127


State 1122

   75 base-specifier: attribute-specifier-seq access-specifier • class-or-decltype
   77               | attribute-specifier-seq access-specifier • "virtual" class-or-decltype

    IDENTIFIER  shift, and go to state 258
    "::"        shift, and go to state 9
    "virtual"   shift, and go to state 1518
    "decltype"  shift, and go to state 135

    class-name             go to state 66
    class-or-decltype      go to state 1519
    decltype-specifier     go to state 624
    enum-name              go to state 85
    namespace-alias        go to state 100
    namespace-name         go to state 103
    nested-name-specifier  go to state 625
    simple-template-id     go to state 142
    template-name          go to state 143
    type-name              go to state 626
    typedef-name           go to state 127


State 1123

   69 base-specifier: attribute-specifier-seq class-or-decltype •

    $default  reduce using rule 69 (base-specifier)


State 1124

   80 base-specifier-list: base-specifier "..." •

    $default  reduce using rule 80 (base-specifier-list)


State 1125

   81 base-specifier-list: base-specifier-list ',' • base-specifier
   82                    | base-specifier-list ',' • base-specifier "..."

    IDENTIFIER   shift, and go to state 258
    "private"    shift, and go to state 592
    "protected"  shift, and go to state 593
    "public"     shift, and go to state 594
    "alignas"    shift, and go to state 4
    "::"         shift, and go to state 9
    '['          shift, and go to state 10
    "virtual"    shift, and go to state 618
    "decltype"   shift, and go to state 135

    access-specifier         go to state 619
    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 620
    base-specifier           go to state 1520
    class-name               go to state 66
    class-or-decltype        go to state 623
    decltype-specifier       go to state 624
    enum-name                go to state 85
    namespace-alias          go to state 100
    namespace-name           go to state 103
    nested-name-specifier    go to state 625
    simple-template-id       go to state 142
    template-name            go to state 143
    type-name                go to state 626
    typedef-name             go to state 127


State 1126

  145 class-name: IDENTIFIER •
  297 enum-name: IDENTIFIER •
  663 nested-name-specifier: nested-name-specifier IDENTIFIER • "::"
  1066 template-name: IDENTIFIER •
  1124 typedef-name: IDENTIFIER •

    "::"  shift, and go to state 726

    '('       reduce using rule 145 (class-name)
    '('       [reduce using rule 297 (enum-name)]
    '('       [reduce using rule 1124 (typedef-name)]
    "..."     reduce using rule 145 (class-name)
    "..."     [reduce using rule 297 (enum-name)]
    "..."     [reduce using rule 1124 (typedef-name)]
    ','       reduce using rule 145 (class-name)
    ','       [reduce using rule 297 (enum-name)]
    ','       [reduce using rule 1124 (typedef-name)]
    '{'       reduce using rule 145 (class-name)
    '{'       [reduce using rule 297 (enum-name)]
    '{'       [reduce using rule 1124 (typedef-name)]
    '<'       reduce using rule 1066 (template-name)
    $default  reduce using rule 145 (class-name)


State 1127

  149 class-or-decltype: nested-name-specifier "template" • simple-template-id
  665 nested-name-specifier: nested-name-specifier "template" • simple-template-id "::"

    IDENTIFIER  shift, and go to state 315

    simple-template-id  go to state 1521
    template-name       go to state 143


State 1128

  147 class-or-decltype: nested-name-specifier type-name •

    $default  reduce using rule 147 (class-or-decltype)


State 1129

  133 class-head: class-key attribute-specifier-seq class-head-name base-clause •

    $default  reduce using rule 133 (class-head)


State 1130

  131 class-head: class-key attribute-specifier-seq class-head-name class-virt-specifier •
  135           | class-key attribute-specifier-seq class-head-name class-virt-specifier • base-clause

    ':'  shift, and go to state 272

    $default  reduce using rule 131 (class-head)

    base-clause  go to state 1522


State 1131

  145 class-name: IDENTIFIER •
  270 elaborated-type-specifier: class-key attribute-specifier-seq nested-name-specifier IDENTIFIER •
  663 nested-name-specifier: nested-name-specifier IDENTIFIER • "::"
  1066 template-name: IDENTIFIER •

    "::"  shift, and go to state 726

    "::"      [reduce using rule 270 (elaborated-type-specifier)]
    ':'       reduce using rule 145 (class-name)
    ':'       [reduce using rule 270 (elaborated-type-specifier)]
    '{'       reduce using rule 145 (class-name)
    '{'       [reduce using rule 270 (elaborated-type-specifier)]
    "final"   reduce using rule 145 (class-name)
    '<'       reduce using rule 1066 (template-name)
    $default  reduce using rule 270 (elaborated-type-specifier)


State 1132

  146 class-name: simple-template-id •
  664 nested-name-specifier: nested-name-specifier simple-template-id • "::"

    "::"  shift, and go to state 733

    $default  reduce using rule 146 (class-name)


State 1133

  134 class-head: class-key class-head-name class-virt-specifier base-clause •

    $default  reduce using rule 134 (class-head)


State 1134

  273 elaborated-type-specifier: class-key nested-name-specifier "template" simple-template-id •
  665 nested-name-specifier: nested-name-specifier "template" simple-template-id • "::"

    "::"  shift, and go to state 1217

    "::"      [reduce using rule 273 (elaborated-type-specifier)]
    $default  reduce using rule 273 (elaborated-type-specifier)


State 1135

  1054 template-argument-list: template-argument "..." •

    $default  reduce using rule 1054 (template-argument-list)


State 1136

  1055 template-argument-list: template-argument-list ',' • template-argument
  1056                       | template-argument-list ',' • template-argument "..."

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 136
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    additive-expression                  go to state 404
    and-expression                       go to state 405
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-key                            go to state 210
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 412
    constant-expression                  go to state 639
    conversion-function-id               go to state 69
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 640
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 435
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    string-literal                       go to state 450
    template-argument                    go to state 1523
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-id                              go to state 643
    type-name                            go to state 125
    type-specifier                       go to state 217
    type-specifier-seq                   go to state 452
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 1137

  1089 type-constraint: concept-name '<' template-argument-list '>' •

    $default  reduce using rule 1089 (type-constraint)


State 1138

  466 identifier-list: identifier-list ',' • IDENTIFIER

    IDENTIFIER  shift, and go to state 1524


State 1139

  981 simple-declaration: decl-specifier-seq '[' identifier-list ']' • initializer ';'

    '='  shift, and go to state 1280
    '('  shift, and go to state 647
    '{'  shift, and go to state 939

    brace-or-equal-initializer  go to state 649
    braced-init-list            go to state 650
    initializer                 go to state 1525


State 1140

  245 delete-expression: "delete" • cast-expression
  247                  | "delete" • '[' ']' cast-expression
  397 function-body: '=' "delete" • ';'

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    ';'                 shift, and go to state 1159
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 791
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 792
    character-literal                    go to state 410
    class-name                           go to state 66
    concept-name                         go to state 68
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    requires-expression                  go to state 447
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 1141

  483 initializer-clause: assignment-expression •

    $default  reduce using rule 483 (initializer-clause)


State 1142

  484 initializer-clause: braced-init-list •

    $default  reduce using rule 484 (initializer-clause)


State 1143

  106 brace-or-equal-initializer: '=' initializer-clause •

    $default  reduce using rule 106 (brace-or-equal-initializer)


State 1144

  482 initializer: '(' expression-list • ')'

    ')'  shift, and go to state 1526


State 1145

  485 initializer-list: initializer-clause •
  486                 | initializer-clause • "..."

    "..."  shift, and go to state 1527

    $default  reduce using rule 485 (initializer-list)


State 1146

  339 expression-list: initializer-list •
  487 initializer-list: initializer-list • ',' initializer-clause
  488                 | initializer-list • ',' initializer-clause "..."

    ','  shift, and go to state 1528

    $default  reduce using rule 339 (expression-list)


State 1147

  112 braced-init-list: '{' '}' •
  160 compound-statement: '{' '}' •

    ';'       reduce using rule 112 (braced-init-list)
    ';'       [reduce using rule 160 (compound-statement)]
    "..."     reduce using rule 112 (braced-init-list)
    "..."     [reduce using rule 160 (compound-statement)]
    ','       reduce using rule 112 (braced-init-list)
    '}'       reduce using rule 112 (braced-init-list)
    '}'       [reduce using rule 160 (compound-statement)]
    $default  reduce using rule 160 (compound-statement)


State 1148

  251 designator: '.' • IDENTIFIER
  391 fractional-constant: '.' • digit-sequence

    IDENTIFIER  shift, and go to state 1529
    '0'         shift, and go to state 793
    '1'         shift, and go to state 794
    '2'         shift, and go to state 795
    '3'         shift, and go to state 796
    '4'         shift, and go to state 797
    '5'         shift, and go to state 798
    '6'         shift, and go to state 799
    '7'         shift, and go to state 800
    '8'         shift, and go to state 801
    '9'         shift, and go to state 802

    digit           go to state 417
    digit-sequence  go to state 803


State 1149

  337 expression: assignment-expression •
  483 initializer-clause: assignment-expression •

    "..."     reduce using rule 483 (initializer-clause)
    ','       reduce using rule 337 (expression)
    ','       [reduce using rule 483 (initializer-clause)]
    '}'       reduce using rule 483 (initializer-clause)
    $default  reduce using rule 337 (expression)


State 1150

  249 designated-initializer-list: designated-initializer-clause •

    $default  reduce using rule 249 (designated-initializer-list)


State 1151

  110 braced-init-list: '{' designated-initializer-list • '}'
  111                 | '{' designated-initializer-list • ',' '}'
  250 designated-initializer-list: designated-initializer-list • ',' designated-initializer-clause

    ','  shift, and go to state 1530
    '}'  shift, and go to state 1531


State 1152

  248 designated-initializer-clause: designator • brace-or-equal-initializer

    '='  shift, and go to state 1280
    '{'  shift, and go to state 939

    brace-or-equal-initializer  go to state 1532
    braced-init-list            go to state 650


State 1153

  108 braced-init-list: '{' initializer-list • '}'
  109                 | '{' initializer-list • ',' '}'
  487 initializer-list: initializer-list • ',' initializer-clause
  488                 | initializer-list • ',' initializer-clause "..."

    ','  shift, and go to state 1533
    '}'  shift, and go to state 1534


State 1154

  409 function-definition: decl-specifier-seq declarator requires-clause function-body •

    $default  reduce using rule 409 (function-definition)


State 1155

  405 function-definition: decl-specifier-seq declarator virt-specifier-seq function-body •

    $default  reduce using rule 405 (function-definition)


State 1156

  473 init-declarator: declarator •
  474                | declarator • initializer
  475                | declarator • requires-clause

    '='         shift, and go to state 1280
    '('         shift, and go to state 647
    '{'         shift, and go to state 939
    "requires"  shift, and go to state 297

    $default  reduce using rule 473 (init-declarator)

    brace-or-equal-initializer  go to state 649
    braced-init-list            go to state 650
    initializer                 go to state 652
    requires-clause             go to state 1535


State 1157

  477 init-declarator-list: init-declarator-list ',' init-declarator •

    $default  reduce using rule 477 (init-declarator-list)


State 1158

  466 identifier-list: identifier-list • ',' IDENTIFIER
  983 simple-declaration: decl-specifier-seq ref-qualifier '[' identifier-list • ']' initializer ';'

    ','  shift, and go to state 1138
    ']'  shift, and go to state 1536


State 1159

  397 function-body: '=' "delete" ';' •

    $default  reduce using rule 397 (function-body)


State 1160

  396 function-body: '=' "default" ';' •

    $default  reduce using rule 396 (function-body)


State 1161

  581 mem-initializer-list: mem-initializer "..." •

    $default  reduce using rule 581 (mem-initializer-list)


State 1162

  575 mem-initializer: mem-initializer-id '(' • ')'
  576                | mem-initializer-id '(' • expression-list ')'

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    ')'                 shift, and go to state 1537
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 939
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 1141
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    braced-init-list                     go to state 1142
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    expression-list                      go to state 1538
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    initializer-clause                   go to state 1145
    initializer-list                     go to state 1146
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 1163

  577 mem-initializer: mem-initializer-id braced-init-list •

    $default  reduce using rule 577 (mem-initializer)


State 1164

  582 mem-initializer-list: mem-initializer-list ',' • mem-initializer
  583                     | mem-initializer-list ',' • mem-initializer "..."

    IDENTIFIER  shift, and go to state 660
    "::"        shift, and go to state 9
    "decltype"  shift, and go to state 135

    class-name             go to state 66
    class-or-decltype      go to state 661
    decltype-specifier     go to state 624
    enum-name              go to state 85
    mem-initializer        go to state 1539
    mem-initializer-id     go to state 663
    namespace-alias        go to state 100
    namespace-name         go to state 103
    nested-name-specifier  go to state 625
    simple-template-id     go to state 142
    template-name          go to state 143
    type-name              go to state 626
    typedef-name           go to state 127


State 1165

  524 labeled-statement: IDENTIFIER ':' • statement

    IDENTIFIER          shift, and go to state 665
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    "using"             shift, and go to state 2
    ';'                 shift, and go to state 666
    "alignas"           shift, and go to state 4
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "asm"               shift, and go to state 8
    "::"                shift, and go to state 365
    '['                 shift, and go to state 667
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 294
    "virtual"           shift, and go to state 11
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "co_return"         shift, and go to state 669
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "friend"            shift, and go to state 20
    "typedef"           shift, and go to state 21
    "constexpr"         shift, and go to state 22
    "consteval"         shift, and go to state 23
    "constinit"         shift, and go to state 24
    "inline"            shift, and go to state 263
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 27
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    "extern"            shift, and go to state 264
    "explicit"          shift, and go to state 29
    '*'                 shift, and go to state 386
    "default"           shift, and go to state 670
    "try"               shift, and go to state 671
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "while"             shift, and go to state 672
    "do"                shift, and go to state 673
    "for"               shift, and go to state 674
    "break"             shift, and go to state 675
    "continue"          shift, and go to state 676
    "return"            shift, and go to state 677
    "goto"              shift, and go to state 678
    "case"              shift, and go to state 679
    "namespace"         shift, and go to state 680
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "if"                shift, and go to state 681
    "switch"            shift, and go to state 682
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    "static_assert"     shift, and go to state 52
    "static"            shift, and go to state 53
    "thread_local"      shift, and go to state 54
    "mutable"           shift, and go to state 55
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    alias-declaration                    go to state 57
    alignment-specifier                  go to state 58
    and-expression                       go to state 405
    asm-declaration                      go to state 59
    assignment-expression                go to state 530
    attribute-specifier                  go to state 61
    attribute-specifier-seq              go to state 683
    await-expression                     go to state 406
    binary-literal                       go to state 407
    block-declaration                    go to state 684
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-head                           go to state 64
    class-key                            go to state 65
    class-name                           go to state 66
    class-specifier                      go to state 67
    compare-expression                   go to state 411
    compound-statement                   go to state 685
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    coroutine-return-statement           go to state 686
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decl-specifier                       go to state 71
    decl-specifier-seq                   go to state 687
    declaration-statement                go to state 688
    decltype-specifier                   go to state 77
    defining-type-specifier              go to state 79
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-head                            go to state 83
    enum-key                             go to state 84
    enum-name                            go to state 85
    enum-specifier                       go to state 86
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    explicit-specifier                   go to state 269
    expression                           go to state 689
    expression-statement                 go to state 690
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    function-specifier                   go to state 92
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    iteration-statement                  go to state 691
    jump-statement                       go to state 692
    labeled-statement                    go to state 693
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-alias-definition           go to state 101
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    opaque-enum-declaration              go to state 108
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    selection-statement                  go to state 694
    shift-expression                     go to state 448
    simple-declaration                   go to state 114
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    statement                            go to state 1540
    static_assert-declaration            go to state 117
    storage-class-specifier              go to state 118
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    try-block                            go to state 697
    type-constraint                      go to state 124
    type-name                            go to state 125
    type-specifier                       go to state 126
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    using-declaration                    go to state 131
    using-directive                      go to state 132
    using-enum-declaration               go to state 133
    yield-expression                     go to state 537


State 1166

  182 coroutine-return-statement: "co_return" ';' •

    $default  reduce using rule 182 (coroutine-return-statement)


State 1167

  336 expr-or-braced-init-list: braced-init-list •

    $default  reduce using rule 336 (expr-or-braced-init-list)


State 1168

  183 coroutine-return-statement: "co_return" expr-or-braced-init-list • ';'

    ';'  shift, and go to state 1541


State 1169

  335 expr-or-braced-init-list: expression •
  338 expression: expression • ',' assignment-expression

    ','  shift, and go to state 1037

    $default  reduce using rule 335 (expr-or-braced-init-list)


State 1170

  528 labeled-statement: "default" ':' • statement

    IDENTIFIER          shift, and go to state 665
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    "using"             shift, and go to state 2
    ';'                 shift, and go to state 666
    "alignas"           shift, and go to state 4
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "asm"               shift, and go to state 8
    "::"                shift, and go to state 365
    '['                 shift, and go to state 667
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 294
    "virtual"           shift, and go to state 11
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "co_return"         shift, and go to state 669
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "friend"            shift, and go to state 20
    "typedef"           shift, and go to state 21
    "constexpr"         shift, and go to state 22
    "consteval"         shift, and go to state 23
    "constinit"         shift, and go to state 24
    "inline"            shift, and go to state 263
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 27
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    "extern"            shift, and go to state 264
    "explicit"          shift, and go to state 29
    '*'                 shift, and go to state 386
    "default"           shift, and go to state 670
    "try"               shift, and go to state 671
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "while"             shift, and go to state 672
    "do"                shift, and go to state 673
    "for"               shift, and go to state 674
    "break"             shift, and go to state 675
    "continue"          shift, and go to state 676
    "return"            shift, and go to state 677
    "goto"              shift, and go to state 678
    "case"              shift, and go to state 679
    "namespace"         shift, and go to state 680
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "if"                shift, and go to state 681
    "switch"            shift, and go to state 682
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    "static_assert"     shift, and go to state 52
    "static"            shift, and go to state 53
    "thread_local"      shift, and go to state 54
    "mutable"           shift, and go to state 55
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    alias-declaration                    go to state 57
    alignment-specifier                  go to state 58
    and-expression                       go to state 405
    asm-declaration                      go to state 59
    assignment-expression                go to state 530
    attribute-specifier                  go to state 61
    attribute-specifier-seq              go to state 683
    await-expression                     go to state 406
    binary-literal                       go to state 407
    block-declaration                    go to state 684
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-head                           go to state 64
    class-key                            go to state 65
    class-name                           go to state 66
    class-specifier                      go to state 67
    compare-expression                   go to state 411
    compound-statement                   go to state 685
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    coroutine-return-statement           go to state 686
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decl-specifier                       go to state 71
    decl-specifier-seq                   go to state 687
    declaration-statement                go to state 688
    decltype-specifier                   go to state 77
    defining-type-specifier              go to state 79
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-head                            go to state 83
    enum-key                             go to state 84
    enum-name                            go to state 85
    enum-specifier                       go to state 86
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    explicit-specifier                   go to state 269
    expression                           go to state 689
    expression-statement                 go to state 690
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    function-specifier                   go to state 92
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    iteration-statement                  go to state 691
    jump-statement                       go to state 692
    labeled-statement                    go to state 693
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-alias-definition           go to state 101
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    opaque-enum-declaration              go to state 108
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    selection-statement                  go to state 694
    shift-expression                     go to state 448
    simple-declaration                   go to state 114
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    statement                            go to state 1542
    static_assert-declaration            go to state 117
    storage-class-specifier              go to state 118
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    try-block                            go to state 697
    type-constraint                      go to state 124
    type-name                            go to state 125
    type-specifier                       go to state 126
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    using-declaration                    go to state 131
    using-directive                      go to state 132
    using-enum-declaration               go to state 133
    yield-expression                     go to state 537


State 1171

  1083 try-block: "try" compound-statement • handler-seq

    "catch"  shift, and go to state 1200

    handler      go to state 1201
    handler-seq  go to state 1543


State 1172

  509 iteration-statement: "while" '(' • condition ')' statement

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    "alignas"           shift, and go to state 4
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 667
    "co_await"          shift, and go to state 367
    "virtual"           shift, and go to state 11
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "friend"            shift, and go to state 20
    "typedef"           shift, and go to state 21
    "constexpr"         shift, and go to state 22
    "consteval"         shift, and go to state 23
    "constinit"         shift, and go to state 24
    "inline"            shift, and go to state 263
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 27
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    "extern"            shift, and go to state 264
    "explicit"          shift, and go to state 29
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    "static"            shift, and go to state 53
    "thread_local"      shift, and go to state 54
    "mutable"           shift, and go to state 55
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    alignment-specifier                  go to state 58
    and-expression                       go to state 405
    assignment-expression                go to state 530
    attribute-specifier                  go to state 61
    attribute-specifier-seq              go to state 1544
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-head                           go to state 64
    class-key                            go to state 65
    class-name                           go to state 66
    class-specifier                      go to state 67
    compare-expression                   go to state 411
    concept-name                         go to state 68
    condition                            go to state 1545
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decl-specifier                       go to state 71
    decl-specifier-seq                   go to state 1546
    decltype-specifier                   go to state 77
    defining-type-specifier              go to state 79
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-head                            go to state 83
    enum-key                             go to state 268
    enum-name                            go to state 85
    enum-specifier                       go to state 86
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    explicit-specifier                   go to state 269
    expression                           go to state 1547
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    function-specifier                   go to state 92
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    storage-class-specifier              go to state 118
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    type-specifier                       go to state 126
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 1173

  510 iteration-statement: "do" statement • "while" '(' expression ')' ';'

    "while"  shift, and go to state 1548


State 1174

  511 iteration-statement: "for" '(' • init-statement ';' ')' statement
  512                    | "for" '(' • init-statement condition ';' ')' statement
  513                    | "for" '(' • init-statement ';' expression ')' statement
  514                    | "for" '(' • init-statement condition ';' expression ')' statement
  515                    | "for" '(' • for-range-declaration ':' for-range-initializer ')' statement
  516                    | "for" '(' • init-statement for-range-declaration ':' for-range-initializer ')' statement

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    "using"             shift, and go to state 1549
    ';'                 shift, and go to state 666
    "alignas"           shift, and go to state 4
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 667
    "co_await"          shift, and go to state 367
    "virtual"           shift, and go to state 11
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "friend"            shift, and go to state 20
    "typedef"           shift, and go to state 21
    "constexpr"         shift, and go to state 22
    "consteval"         shift, and go to state 23
    "constinit"         shift, and go to state 24
    "inline"            shift, and go to state 263
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 27
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    "extern"            shift, and go to state 264
    "explicit"          shift, and go to state 29
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    "static"            shift, and go to state 53
    "thread_local"      shift, and go to state 54
    "mutable"           shift, and go to state 55
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    alias-declaration                    go to state 1550
    alignment-specifier                  go to state 58
    and-expression                       go to state 405
    assignment-expression                go to state 530
    attribute-specifier                  go to state 61
    attribute-specifier-seq              go to state 1551
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-head                           go to state 64
    class-key                            go to state 65
    class-name                           go to state 66
    class-specifier                      go to state 67
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decl-specifier                       go to state 71
    decl-specifier-seq                   go to state 1552
    decltype-specifier                   go to state 77
    defining-type-specifier              go to state 79
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-head                            go to state 83
    enum-key                             go to state 268
    enum-name                            go to state 85
    enum-specifier                       go to state 86
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    explicit-specifier                   go to state 269
    expression                           go to state 689
    expression-statement                 go to state 1553
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    for-range-declaration                go to state 1554
    fractional-constant                  go to state 424
    function-specifier                   go to state 92
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    init-statement                       go to state 1555
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-declaration                   go to state 1556
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    storage-class-specifier              go to state 118
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    type-specifier                       go to state 126
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 1175

  517 jump-statement: "break" ';' •

    $default  reduce using rule 517 (jump-statement)


State 1176

  518 jump-statement: "continue" ';' •

    $default  reduce using rule 518 (jump-statement)


State 1177

  519 jump-statement: "return" ';' •

    $default  reduce using rule 519 (jump-statement)


State 1178

  520 jump-statement: "return" expr-or-braced-init-list • ';'

    ';'  shift, and go to state 1557


State 1179

  522 jump-statement: "goto" IDENTIFIER • ';'

    ';'  shift, and go to state 1558


State 1180

  526 labeled-statement: "case" constant-expression • ':' statement

    ':'  shift, and go to state 1559


State 1181

  652 namespace-alias-definition: "namespace" IDENTIFIER • '=' qualified-namespace-specifier ';'

    '='  shift, and go to state 568


State 1182

  952 selection-statement: "if" '(' • condition ')' statement
  954                    | "if" '(' • init-statement condition ')' statement
  956                    | "if" '(' • condition ')' statement "else" statement
  958                    | "if" '(' • init-statement condition ')' statement "else" statement

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    "using"             shift, and go to state 1549
    ';'                 shift, and go to state 666
    "alignas"           shift, and go to state 4
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 667
    "co_await"          shift, and go to state 367
    "virtual"           shift, and go to state 11
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "friend"            shift, and go to state 20
    "typedef"           shift, and go to state 21
    "constexpr"         shift, and go to state 22
    "consteval"         shift, and go to state 23
    "constinit"         shift, and go to state 24
    "inline"            shift, and go to state 263
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 27
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    "extern"            shift, and go to state 264
    "explicit"          shift, and go to state 29
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    "static"            shift, and go to state 53
    "thread_local"      shift, and go to state 54
    "mutable"           shift, and go to state 55
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    alias-declaration                    go to state 1550
    alignment-specifier                  go to state 58
    and-expression                       go to state 405
    assignment-expression                go to state 530
    attribute-specifier                  go to state 61
    attribute-specifier-seq              go to state 1560
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-head                           go to state 64
    class-key                            go to state 65
    class-name                           go to state 66
    class-specifier                      go to state 67
    compare-expression                   go to state 411
    concept-name                         go to state 68
    condition                            go to state 1561
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decl-specifier                       go to state 71
    decl-specifier-seq                   go to state 1562
    decltype-specifier                   go to state 77
    defining-type-specifier              go to state 79
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-head                            go to state 83
    enum-key                             go to state 268
    enum-name                            go to state 85
    enum-specifier                       go to state 86
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    explicit-specifier                   go to state 269
    expression                           go to state 1563
    expression-statement                 go to state 1553
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    function-specifier                   go to state 92
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    init-statement                       go to state 1564
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-declaration                   go to state 1556
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    storage-class-specifier              go to state 118
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    type-specifier                       go to state 126
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 1183

  953 selection-statement: "if" "constexpr" • '(' condition ')' statement
  955                    | "if" "constexpr" • '(' init-statement condition ')' statement
  957                    | "if" "constexpr" • '(' condition ')' statement "else" statement
  959                    | "if" "constexpr" • '(' init-statement condition ')' statement "else" statement

    '('  shift, and go to state 1565


State 1184

  960 selection-statement: "if" "consteval" • compound-statement
  962                    | "if" "consteval" • compound-statement "else" statement

    '{'  shift, and go to state 294

    compound-statement  go to state 1566


State 1185

  961 selection-statement: "if" '!' • "consteval" compound-statement
  963                    | "if" '!' • "consteval" compound-statement "else" statement

    "consteval"  shift, and go to state 1567


State 1186

  964 selection-statement: "switch" '(' • condition ')' statement
  965                    | "switch" '(' • init-statement condition ')' statement

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    "using"             shift, and go to state 1549
    ';'                 shift, and go to state 666
    "alignas"           shift, and go to state 4
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 667
    "co_await"          shift, and go to state 367
    "virtual"           shift, and go to state 11
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "friend"            shift, and go to state 20
    "typedef"           shift, and go to state 21
    "constexpr"         shift, and go to state 22
    "consteval"         shift, and go to state 23
    "constinit"         shift, and go to state 24
    "inline"            shift, and go to state 263
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 27
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    "extern"            shift, and go to state 264
    "explicit"          shift, and go to state 29
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    "static"            shift, and go to state 53
    "thread_local"      shift, and go to state 54
    "mutable"           shift, and go to state 55
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    alias-declaration                    go to state 1550
    alignment-specifier                  go to state 58
    and-expression                       go to state 405
    assignment-expression                go to state 530
    attribute-specifier                  go to state 61
    attribute-specifier-seq              go to state 1560
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-head                           go to state 64
    class-key                            go to state 65
    class-name                           go to state 66
    class-specifier                      go to state 67
    compare-expression                   go to state 411
    concept-name                         go to state 68
    condition                            go to state 1568
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decl-specifier                       go to state 71
    decl-specifier-seq                   go to state 1562
    decltype-specifier                   go to state 77
    defining-type-specifier              go to state 79
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-head                            go to state 83
    enum-key                             go to state 268
    enum-name                            go to state 85
    enum-specifier                       go to state 86
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    explicit-specifier                   go to state 269
    expression                           go to state 1563
    expression-statement                 go to state 1553
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    function-specifier                   go to state 92
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    init-statement                       go to state 1569
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-declaration                   go to state 1556
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    storage-class-specifier              go to state 118
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    type-specifier                       go to state 126
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 1187

  145 class-name: IDENTIFIER •
  163 concept-name: IDENTIFIER •
  297 enum-name: IDENTIFIER •
  523 labeled-statement: attribute-specifier-seq IDENTIFIER • ':' statement
  651 namespace-alias: IDENTIFIER •
  657 namespace-name: IDENTIFIER •
  1066 template-name: IDENTIFIER •
  1124 typedef-name: IDENTIFIER •
  1154 unqualified-id: IDENTIFIER •

    ':'  shift, and go to state 1570

    IDENTIFIER      reduce using rule 145 (class-name)
    IDENTIFIER      [reduce using rule 297 (enum-name)]
    IDENTIFIER      [reduce using rule 1066 (template-name)]
    IDENTIFIER      [reduce using rule 1124 (typedef-name)]
    '+'             reduce using rule 1154 (unqualified-id)
    '-'             reduce using rule 1154 (unqualified-id)
    '='             reduce using rule 1154 (unqualified-id)
    ';'             reduce using rule 1154 (unqualified-id)
    "alignas"       reduce using rule 145 (class-name)
    "alignas"       [reduce using rule 297 (enum-name)]
    "alignas"       [reduce using rule 1066 (template-name)]
    "alignas"       [reduce using rule 1124 (typedef-name)]
    '('             reduce using rule 145 (class-name)
    '('             [reduce using rule 297 (enum-name)]
    '('             [reduce using rule 1066 (template-name)]
    '('             [reduce using rule 1124 (typedef-name)]
    '('             [reduce using rule 1154 (unqualified-id)]
    "..."           reduce using rule 145 (class-name)
    "..."           [reduce using rule 297 (enum-name)]
    "..."           [reduce using rule 1066 (template-name)]
    "..."           [reduce using rule 1124 (typedef-name)]
    '&'             reduce using rule 145 (class-name)
    '&'             [reduce using rule 297 (enum-name)]
    '&'             [reduce using rule 1066 (template-name)]
    '&'             [reduce using rule 1124 (typedef-name)]
    '&'             [reduce using rule 1154 (unqualified-id)]
    "*="            reduce using rule 1154 (unqualified-id)
    "/="            reduce using rule 1154 (unqualified-id)
    "%="            reduce using rule 1154 (unqualified-id)
    "+="            reduce using rule 1154 (unqualified-id)
    "-="            reduce using rule 1154 (unqualified-id)
    ">>="           reduce using rule 1154 (unqualified-id)
    "<<="           reduce using rule 1154 (unqualified-id)
    "&="            reduce using rule 1154 (unqualified-id)
    "^="            reduce using rule 1154 (unqualified-id)
    "|="            reduce using rule 1154 (unqualified-id)
    ','             reduce using rule 1154 (unqualified-id)
    "::"            reduce using rule 145 (class-name)
    "::"            [reduce using rule 297 (enum-name)]
    "::"            [reduce using rule 651 (namespace-alias)]
    "::"            [reduce using rule 657 (namespace-name)]
    "::"            [reduce using rule 1066 (template-name)]
    "::"            [reduce using rule 1124 (typedef-name)]
    '['             reduce using rule 145 (class-name)
    '['             [reduce using rule 297 (enum-name)]
    '['             [reduce using rule 1066 (template-name)]
    '['             [reduce using rule 1124 (typedef-name)]
    '['             [reduce using rule 1154 (unqualified-id)]
    '{'             reduce using rule 145 (class-name)
    '{'             [reduce using rule 297 (enum-name)]
    '{'             [reduce using rule 1066 (template-name)]
    '{'             [reduce using rule 1124 (typedef-name)]
    "virtual"       reduce using rule 145 (class-name)
    "virtual"       [reduce using rule 297 (enum-name)]
    "virtual"       [reduce using rule 1066 (template-name)]
    "virtual"       [reduce using rule 1124 (typedef-name)]
    "class"         reduce using rule 145 (class-name)
    "class"         [reduce using rule 297 (enum-name)]
    "class"         [reduce using rule 1066 (template-name)]
    "class"         [reduce using rule 1124 (typedef-name)]
    "struct"        reduce using rule 145 (class-name)
    "struct"        [reduce using rule 297 (enum-name)]
    "struct"        [reduce using rule 1066 (template-name)]
    "struct"        [reduce using rule 1124 (typedef-name)]
    "union"         reduce using rule 145 (class-name)
    "union"         [reduce using rule 297 (enum-name)]
    "union"         [reduce using rule 1066 (template-name)]
    "union"         [reduce using rule 1124 (typedef-name)]
    "<=>"           reduce using rule 1154 (unqualified-id)
    '?'             reduce using rule 1154 (unqualified-id)
    "&&"            reduce using rule 145 (class-name)
    "&&"            [reduce using rule 297 (enum-name)]
    "&&"            [reduce using rule 1066 (template-name)]
    "&&"            [reduce using rule 1124 (typedef-name)]
    "&&"            [reduce using rule 1154 (unqualified-id)]
    "||"            reduce using rule 1154 (unqualified-id)
    "operator"      reduce using rule 145 (class-name)
    "operator"      [reduce using rule 297 (enum-name)]
    "operator"      [reduce using rule 1066 (template-name)]
    "operator"      [reduce using rule 1124 (typedef-name)]
    "const"         reduce using rule 145 (class-name)
    "const"         [reduce using rule 297 (enum-name)]
    "const"         [reduce using rule 1066 (template-name)]
    "const"         [reduce using rule 1124 (typedef-name)]
    "volatile"      reduce using rule 145 (class-name)
    "volatile"      [reduce using rule 297 (enum-name)]
    "volatile"      [reduce using rule 1066 (template-name)]
    "volatile"      [reduce using rule 1124 (typedef-name)]
    "friend"        reduce using rule 145 (class-name)
    "friend"        [reduce using rule 297 (enum-name)]
    "friend"        [reduce using rule 1066 (template-name)]
    "friend"        [reduce using rule 1124 (typedef-name)]
    "typedef"       reduce using rule 145 (class-name)
    "typedef"       [reduce using rule 297 (enum-name)]
    "typedef"       [reduce using rule 1066 (template-name)]
    "typedef"       [reduce using rule 1124 (typedef-name)]
    "constexpr"     reduce using rule 145 (class-name)
    "constexpr"     [reduce using rule 297 (enum-name)]
    "constexpr"     [reduce using rule 1066 (template-name)]
    "constexpr"     [reduce using rule 1124 (typedef-name)]
    "consteval"     reduce using rule 145 (class-name)
    "consteval"     [reduce using rule 297 (enum-name)]
    "consteval"     [reduce using rule 1066 (template-name)]
    "consteval"     [reduce using rule 1124 (typedef-name)]
    "constinit"     reduce using rule 145 (class-name)
    "constinit"     [reduce using rule 297 (enum-name)]
    "constinit"     [reduce using rule 1066 (template-name)]
    "constinit"     [reduce using rule 1124 (typedef-name)]
    "inline"        reduce using rule 145 (class-name)
    "inline"        [reduce using rule 297 (enum-name)]
    "inline"        [reduce using rule 1066 (template-name)]
    "inline"        [reduce using rule 1124 (typedef-name)]
    "decltype"      reduce using rule 145 (class-name)
    "decltype"      [reduce using rule 163 (concept-name)]
    "decltype"      [reduce using rule 297 (enum-name)]
    "decltype"      [reduce using rule 1066 (template-name)]
    "decltype"      [reduce using rule 1124 (typedef-name)]
    "->"            reduce using rule 1154 (unqualified-id)
    '.'             reduce using rule 1154 (unqualified-id)
    "enum"          reduce using rule 145 (class-name)
    "enum"          [reduce using rule 297 (enum-name)]
    "enum"          [reduce using rule 1066 (template-name)]
    "enum"          [reduce using rule 1124 (typedef-name)]
    "=="            reduce using rule 1154 (unqualified-id)
    "!="            reduce using rule 1154 (unqualified-id)
    '^'             reduce using rule 1154 (unqualified-id)
    "extern"        reduce using rule 145 (class-name)
    "extern"        [reduce using rule 297 (enum-name)]
    "extern"        [reduce using rule 1066 (template-name)]
    "extern"        [reduce using rule 1124 (typedef-name)]
    '<'             reduce using rule 163 (concept-name)
    '<'             [reduce using rule 1066 (template-name)]
    '<'             [reduce using rule 1154 (unqualified-id)]
    '>'             reduce using rule 1154 (unqualified-id)
    "explicit"      reduce using rule 145 (class-name)
    "explicit"      [reduce using rule 297 (enum-name)]
    "explicit"      [reduce using rule 1066 (template-name)]
    "explicit"      [reduce using rule 1124 (typedef-name)]
    '*'             reduce using rule 145 (class-name)
    '*'             [reduce using rule 297 (enum-name)]
    '*'             [reduce using rule 1066 (template-name)]
    '*'             [reduce using rule 1124 (typedef-name)]
    '*'             [reduce using rule 1154 (unqualified-id)]
    '/'             reduce using rule 1154 (unqualified-id)
    '%'             reduce using rule 1154 (unqualified-id)
    '|'             reduce using rule 1154 (unqualified-id)
    "<<"            reduce using rule 1154 (unqualified-id)
    ">>"            reduce using rule 1154 (unqualified-id)
    "<="            reduce using rule 1154 (unqualified-id)
    ">="            reduce using rule 1154 (unqualified-id)
    ".*"            reduce using rule 1154 (unqualified-id)
    "->*"           reduce using rule 1154 (unqualified-id)
    '~'             reduce using rule 145 (class-name)
    '~'             [reduce using rule 297 (enum-name)]
    '~'             [reduce using rule 1066 (template-name)]
    '~'             [reduce using rule 1124 (typedef-name)]
    "++"            reduce using rule 1154 (unqualified-id)
    "--"            reduce using rule 1154 (unqualified-id)
    "auto"          reduce using rule 145 (class-name)
    "auto"          [reduce using rule 163 (concept-name)]
    "auto"          [reduce using rule 297 (enum-name)]
    "auto"          [reduce using rule 1066 (template-name)]
    "auto"          [reduce using rule 1124 (typedef-name)]
    "char"          reduce using rule 145 (class-name)
    "char"          [reduce using rule 297 (enum-name)]
    "char"          [reduce using rule 1066 (template-name)]
    "char"          [reduce using rule 1124 (typedef-name)]
    "char8_t"       reduce using rule 145 (class-name)
    "char8_t"       [reduce using rule 297 (enum-name)]
    "char8_t"       [reduce using rule 1066 (template-name)]
    "char8_t"       [reduce using rule 1124 (typedef-name)]
    "char16_t"      reduce using rule 145 (class-name)
    "char16_t"      [reduce using rule 297 (enum-name)]
    "char16_t"      [reduce using rule 1066 (template-name)]
    "char16_t"      [reduce using rule 1124 (typedef-name)]
    "char32_t"      reduce using rule 145 (class-name)
    "char32_t"      [reduce using rule 297 (enum-name)]
    "char32_t"      [reduce using rule 1066 (template-name)]
    "char32_t"      [reduce using rule 1124 (typedef-name)]
    "wchar_t"       reduce using rule 145 (class-name)
    "wchar_t"       [reduce using rule 297 (enum-name)]
    "wchar_t"       [reduce using rule 1066 (template-name)]
    "wchar_t"       [reduce using rule 1124 (typedef-name)]
    "bool"          reduce using rule 145 (class-name)
    "bool"          [reduce using rule 297 (enum-name)]
    "bool"          [reduce using rule 1066 (template-name)]
    "bool"          [reduce using rule 1124 (typedef-name)]
    "short"         reduce using rule 145 (class-name)
    "short"         [reduce using rule 297 (enum-name)]
    "short"         [reduce using rule 1066 (template-name)]
    "short"         [reduce using rule 1124 (typedef-name)]
    "int"           reduce using rule 145 (class-name)
    "int"           [reduce using rule 297 (enum-name)]
    "int"           [reduce using rule 1066 (template-name)]
    "int"           [reduce using rule 1124 (typedef-name)]
    "long"          reduce using rule 145 (class-name)
    "long"          [reduce using rule 297 (enum-name)]
    "long"          [reduce using rule 1066 (template-name)]
    "long"          [reduce using rule 1124 (typedef-name)]
    "signed"        reduce using rule 145 (class-name)
    "signed"        [reduce using rule 297 (enum-name)]
    "signed"        [reduce using rule 1066 (template-name)]
    "signed"        [reduce using rule 1124 (typedef-name)]
    "unsigned"      reduce using rule 145 (class-name)
    "unsigned"      [reduce using rule 297 (enum-name)]
    "unsigned"      [reduce using rule 1066 (template-name)]
    "unsigned"      [reduce using rule 1124 (typedef-name)]
    "float"         reduce using rule 145 (class-name)
    "float"         [reduce using rule 297 (enum-name)]
    "float"         [reduce using rule 1066 (template-name)]
    "float"         [reduce using rule 1124 (typedef-name)]
    "double"        reduce using rule 145 (class-name)
    "double"        [reduce using rule 297 (enum-name)]
    "double"        [reduce using rule 1066 (template-name)]
    "double"        [reduce using rule 1124 (typedef-name)]
    "void"          reduce using rule 145 (class-name)
    "void"          [reduce using rule 297 (enum-name)]
    "void"          [reduce using rule 1066 (template-name)]
    "void"          [reduce using rule 1124 (typedef-name)]
    "static"        reduce using rule 145 (class-name)
    "static"        [reduce using rule 297 (enum-name)]
    "static"        [reduce using rule 1066 (template-name)]
    "static"        [reduce using rule 1124 (typedef-name)]
    "thread_local"  reduce using rule 145 (class-name)
    "thread_local"  [reduce using rule 297 (enum-name)]
    "thread_local"  [reduce using rule 1066 (template-name)]
    "thread_local"  [reduce using rule 1124 (typedef-name)]
    "mutable"       reduce using rule 145 (class-name)
    "mutable"       [reduce using rule 297 (enum-name)]
    "mutable"       [reduce using rule 1066 (template-name)]
    "mutable"       [reduce using rule 1124 (typedef-name)]
    "typename"      reduce using rule 145 (class-name)
    "typename"      [reduce using rule 297 (enum-name)]
    "typename"      [reduce using rule 1066 (template-name)]
    "typename"      [reduce using rule 1124 (typedef-name)]
    $default        reduce using rule 145 (class-name)


State 1188

  527 labeled-statement: attribute-specifier-seq "default" • ':' statement

    ':'  shift, and go to state 1571


State 1189

  525 labeled-statement: attribute-specifier-seq "case" • constant-expression ':' statement

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    additive-expression                  go to state 404
    and-expression                       go to state 405
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 412
    constant-expression                  go to state 1572
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 435
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 1190

  1025 statement: attribute-specifier-seq compound-statement •

    $default  reduce using rule 1025 (statement)


State 1191

  979 simple-declaration: attribute-specifier-seq decl-specifier-seq • init-declarator-list ';'
  980                   | attribute-specifier-seq decl-specifier-seq • '[' identifier-list ']' initializer ';'
  982                   | attribute-specifier-seq decl-specifier-seq • ref-qualifier '[' identifier-list ']' initializer ';'

    IDENTIFIER  shift, and go to state 148
    '('         shift, and go to state 5
    "..."       shift, and go to state 6
    '&'         shift, and go to state 283
    "::"        shift, and go to state 9
    '['         shift, and go to state 581
    "&&"        shift, and go to state 285
    "operator"  shift, and go to state 17
    "decltype"  shift, and go to state 135
    '*'         shift, and go to state 32
    '~'         shift, and go to state 36

    class-name              go to state 66
    conversion-function-id  go to state 69
    declarator              go to state 1156
    declarator-id           go to state 76
    decltype-specifier      go to state 139
    enum-name               go to state 85
    id-expression           go to state 94
    init-declarator         go to state 287
    init-declarator-list    go to state 583
    literal-operator-id     go to state 96
    namespace-alias         go to state 100
    namespace-name          go to state 103
    nested-name-specifier   go to state 149
    noptr-declarator        go to state 107
    operator-function-id    go to state 109
    ptr-declarator          go to state 111
    ptr-operator            go to state 112
    qualified-id            go to state 113
    ref-qualifier           go to state 584
    simple-template-id      go to state 115
    template-id             go to state 121
    template-name           go to state 143
    type-name               go to state 144
    typedef-name            go to state 127
    unqualified-id          go to state 130


State 1192

  1023 statement: attribute-specifier-seq expression-statement •

    $default  reduce using rule 1023 (statement)


State 1193

  1029 statement: attribute-specifier-seq iteration-statement •

    $default  reduce using rule 1029 (statement)


State 1194

  1031 statement: attribute-specifier-seq jump-statement •

    $default  reduce using rule 1031 (statement)


State 1195

  1027 statement: attribute-specifier-seq selection-statement •

    $default  reduce using rule 1027 (statement)


State 1196

  1034 statement: attribute-specifier-seq try-block •

    $default  reduce using rule 1034 (statement)


State 1197

  340 expression-statement: expression ';' •

    $default  reduce using rule 340 (expression-statement)


State 1198

  161 compound-statement: '{' statement-seq '}' •

    $default  reduce using rule 161 (compound-statement)


State 1199

  1037 statement-seq: statement-seq statement •

    $default  reduce using rule 1037 (statement-seq)


State 1200

  417 handler: "catch" • '(' exception-declaration ')' compound-statement

    '('  shift, and go to state 1573


State 1201

  418 handler-seq: handler •
  419            | handler • handler-seq

    "catch"  shift, and go to state 1200

    $default  reduce using rule 418 (handler-seq)

    handler      go to state 1201
    handler-seq  go to state 1574


State 1202

  412 function-try-block: "try" compound-statement handler-seq •

    $default  reduce using rule 412 (function-try-block)


State 1203

  413 function-try-block: "try" ctor-initializer compound-statement • handler-seq

    "catch"  shift, and go to state 1200

    handler      go to state 1201
    handler-seq  go to state 1575


State 1204

  174 constraint-logical-and-expression: constraint-logical-and-expression "&&" • primary-expression

    IDENTIFIER  shift, and go to state 148
    '('         shift, and go to state 700
    "::"        shift, and go to state 9
    '['         shift, and go to state 366
    '0'         shift, and go to state 368
    '1'         shift, and go to state 369
    "0b"        shift, and go to state 370
    "0B"        shift, and go to state 371
    '\''        shift, and go to state 372
    "false"     shift, and go to state 373
    "true"      shift, and go to state 374
    "operator"  shift, and go to state 17
    "decltype"  shift, and go to state 135
    '.'         shift, and go to state 377
    '2'         shift, and go to state 378
    '3'         shift, and go to state 379
    '4'         shift, and go to state 380
    '5'         shift, and go to state 381
    '6'         shift, and go to state 382
    '7'         shift, and go to state 383
    '8'         shift, and go to state 384
    '9'         shift, and go to state 385
    "u8"        shift, and go to state 185
    'u'         shift, and go to state 186
    'U'         shift, and go to state 187
    'L'         shift, and go to state 188
    '"'         shift, and go to state 203
    "0x"        shift, and go to state 387
    "0X"        shift, and go to state 388
    "requires"  shift, and go to state 389
    '~'         shift, and go to state 36
    "this"      shift, and go to state 395
    "nullptr"   shift, and go to state 396
    'R'         shift, and go to state 209

    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    character-literal                    go to state 410
    class-name                           go to state 66
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 139
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 153
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    pointer-literal                      go to state 443
    primary-expression                   go to state 1576
    qualified-id                         go to state 113
    requires-expression                  go to state 447
    simple-template-id                   go to state 115
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 143
    type-name                            go to state 144
    typedef-name                         go to state 127
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 1205

  176 constraint-logical-or-expression: constraint-logical-or-expression "||" • constraint-logical-and-expression

    IDENTIFIER  shift, and go to state 148
    '('         shift, and go to state 700
    "::"        shift, and go to state 9
    '['         shift, and go to state 366
    '0'         shift, and go to state 368
    '1'         shift, and go to state 369
    "0b"        shift, and go to state 370
    "0B"        shift, and go to state 371
    '\''        shift, and go to state 372
    "false"     shift, and go to state 373
    "true"      shift, and go to state 374
    "operator"  shift, and go to state 17
    "decltype"  shift, and go to state 135
    '.'         shift, and go to state 377
    '2'         shift, and go to state 378
    '3'         shift, and go to state 379
    '4'         shift, and go to state 380
    '5'         shift, and go to state 381
    '6'         shift, and go to state 382
    '7'         shift, and go to state 383
    '8'         shift, and go to state 384
    '9'         shift, and go to state 385
    "u8"        shift, and go to state 185
    'u'         shift, and go to state 186
    'U'         shift, and go to state 187
    'L'         shift, and go to state 188
    '"'         shift, and go to state 203
    "0x"        shift, and go to state 387
    "0X"        shift, and go to state 388
    "requires"  shift, and go to state 389
    '~'         shift, and go to state 36
    "this"      shift, and go to state 395
    "nullptr"   shift, and go to state 396
    'R'         shift, and go to state 209

    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    character-literal                    go to state 410
    class-name                           go to state 66
    constraint-logical-and-expression    go to state 1577
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 139
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 153
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    pointer-literal                      go to state 443
    primary-expression                   go to state 703
    qualified-id                         go to state 113
    requires-expression                  go to state 447
    simple-template-id                   go to state 115
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 143
    type-name                            go to state 144
    typedef-name                         go to state 127
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 1206

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  302 enumerator: IDENTIFIER attribute-specifier-seq •

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    $default  reduce using rule 302 (enumerator)

    alignment-specifier  go to state 58
    attribute-specifier  go to state 265


State 1207

  304 enumerator-definition: enumerator '=' • constant-expression

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    additive-expression                  go to state 404
    and-expression                       go to state 405
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 412
    constant-expression                  go to state 1578
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 435
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 1208

  300 enum-specifier: enum-head '{' enumerator-list ',' • '}'
  306 enumerator-list: enumerator-list ',' • enumerator-definition

    IDENTIFIER  shift, and go to state 708
    '}'         shift, and go to state 1579

    enumerator             go to state 710
    enumerator-definition  go to state 1580


State 1209

  299 enum-specifier: enum-head '{' enumerator-list '}' •

    $default  reduce using rule 299 (enum-specifier)


State 1210

  756 opaque-enum-declaration: enum-key attribute-specifier-seq enum-head-name ';' •

    $default  reduce using rule 756 (opaque-enum-declaration)


State 1211

  291 enum-head: enum-key attribute-specifier-seq enum-head-name enum-base •
  758 opaque-enum-declaration: enum-key attribute-specifier-seq enum-head-name enum-base • ';'

    ';'  shift, and go to state 1581

    $default  reduce using rule 291 (enum-head)


State 1212

  757 opaque-enum-declaration: enum-key enum-head-name enum-base ';' •

    $default  reduce using rule 757 (opaque-enum-declaration)


State 1213

  234 deduction-guide: explicit-specifier template-name '(' parameter-declaration-clause • ')' "->" simple-template-id ';'

    ')'  shift, and go to state 1582


State 1214

  1081 translation-unit: global-module-fragment module-declaration declaration-seq private-module-fragment •

    $default  reduce using rule 1081 (translation-unit)


State 1215

  1065 template-id: literal-operator-id '<' template-argument-list '>' •

    $default  reduce using rule 1065 (template-id)


State 1216

  890 private-module-fragment: "module-keyword" ':' "private" • ';'
  891                        | "module-keyword" ':' "private" • ';' declaration-seq

    ';'  shift, and go to state 1583


State 1217

  665 nested-name-specifier: nested-name-specifier "template" simple-template-id "::" •

    $default  reduce using rule 665 (nested-name-specifier)


State 1218

  908 ptr-operator: nested-name-specifier '*' attribute-specifier-seq cv-qualifier-seq •

    $default  reduce using rule 908 (ptr-operator)


State 1219

  1086 type-constraint: nested-name-specifier concept-name '<' '>' •

    $default  reduce using rule 1086 (type-constraint)


State 1220

  1055 template-argument-list: template-argument-list • ',' template-argument
  1056                       | template-argument-list • ',' template-argument "..."
  1088 type-constraint: nested-name-specifier concept-name '<' template-argument-list • '>'

    ','  shift, and go to state 1136
    '>'  shift, and go to state 1584


State 1221

  836 parameters-and-qualifiers: '(' parameter-declaration-clause ')' •
  837                          | '(' parameter-declaration-clause ')' • cv-qualifier-seq
  838                          | '(' parameter-declaration-clause ')' • ref-qualifier
  839                          | '(' parameter-declaration-clause ')' • cv-qualifier-seq ref-qualifier
  840                          | '(' parameter-declaration-clause ')' • noexcept-specifier
  841                          | '(' parameter-declaration-clause ')' • cv-qualifier-seq noexcept-specifier
  842                          | '(' parameter-declaration-clause ')' • ref-qualifier noexcept-specifier
  843                          | '(' parameter-declaration-clause ')' • cv-qualifier-seq ref-qualifier noexcept-specifier
  844                          | '(' parameter-declaration-clause ')' • attribute-specifier-seq
  845                          | '(' parameter-declaration-clause ')' • cv-qualifier-seq attribute-specifier-seq
  846                          | '(' parameter-declaration-clause ')' • ref-qualifier attribute-specifier-seq
  847                          | '(' parameter-declaration-clause ')' • cv-qualifier-seq ref-qualifier attribute-specifier-seq
  848                          | '(' parameter-declaration-clause ')' • noexcept-specifier attribute-specifier-seq
  849                          | '(' parameter-declaration-clause ')' • cv-qualifier-seq noexcept-specifier attribute-specifier-seq
  850                          | '(' parameter-declaration-clause ')' • ref-qualifier noexcept-specifier attribute-specifier-seq
  851                          | '(' parameter-declaration-clause ')' • cv-qualifier-seq ref-qualifier noexcept-specifier attribute-specifier-seq

    "alignas"   shift, and go to state 4
    '&'         shift, and go to state 1585
    '['         shift, and go to state 10
    "noexcept"  shift, and go to state 898
    "&&"        shift, and go to state 1586
    "const"     shift, and go to state 18
    "volatile"  shift, and go to state 19

    '['       [reduce using rule 836 (parameters-and-qualifiers)]
    $default  reduce using rule 836 (parameters-and-qualifiers)

    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 1587
    cv-qualifier             go to state 234
    cv-qualifier-seq         go to state 1588
    noexcept-specifier       go to state 1589
    ref-qualifier            go to state 1590


State 1222

  831 parameter-declaration-clause: parameter-declaration-list "..." •

    $default  reduce using rule 831 (parameter-declaration-clause)


State 1223

  833 parameter-declaration-clause: parameter-declaration-list ',' • "..."
  835 parameter-declaration-list: parameter-declaration-list ',' • parameter-declaration

    IDENTIFIER      shift, and go to state 161
    "alignas"       shift, and go to state 4
    "..."           shift, and go to state 1591
    "::"            shift, and go to state 9
    '['             shift, and go to state 10
    "virtual"       shift, and go to state 11
    "class"         shift, and go to state 12
    "struct"        shift, and go to state 13
    "union"         shift, and go to state 14
    "const"         shift, and go to state 18
    "volatile"      shift, and go to state 19
    "friend"        shift, and go to state 20
    "typedef"       shift, and go to state 21
    "constexpr"     shift, and go to state 22
    "consteval"     shift, and go to state 23
    "constinit"     shift, and go to state 24
    "inline"        shift, and go to state 263
    "decltype"      shift, and go to state 26
    "enum"          shift, and go to state 27
    "extern"        shift, and go to state 264
    "explicit"      shift, and go to state 29
    "this"          shift, and go to state 476
    "auto"          shift, and go to state 37
    "char"          shift, and go to state 38
    "char8_t"       shift, and go to state 39
    "char16_t"      shift, and go to state 40
    "char32_t"      shift, and go to state 41
    "wchar_t"       shift, and go to state 42
    "bool"          shift, and go to state 43
    "short"         shift, and go to state 44
    "int"           shift, and go to state 45
    "long"          shift, and go to state 46
    "signed"        shift, and go to state 47
    "unsigned"      shift, and go to state 48
    "float"         shift, and go to state 49
    "double"        shift, and go to state 50
    "void"          shift, and go to state 51
    "static"        shift, and go to state 53
    "thread_local"  shift, and go to state 54
    "mutable"       shift, and go to state 55
    "typename"      shift, and go to state 56

    alignment-specifier         go to state 58
    attribute-specifier         go to state 61
    attribute-specifier-seq     go to state 478
    class-head                  go to state 64
    class-key                   go to state 65
    class-name                  go to state 66
    class-specifier             go to state 67
    concept-name                go to state 68
    cv-qualifier                go to state 70
    decl-specifier              go to state 71
    decl-specifier-seq          go to state 479
    decltype-specifier          go to state 77
    defining-type-specifier     go to state 79
    elaborated-enum-specifier   go to state 80
    elaborated-type-specifier   go to state 81
    enum-head                   go to state 83
    enum-key                    go to state 268
    enum-name                   go to state 85
    enum-specifier              go to state 86
    explicit-specifier          go to state 269
    function-specifier          go to state 92
    namespace-alias             go to state 100
    namespace-name              go to state 103
    nested-name-specifier       go to state 213
    parameter-declaration       go to state 1592
    placeholder-type-specifier  go to state 110
    simple-template-id          go to state 142
    simple-type-specifier       go to state 116
    storage-class-specifier     go to state 118
    template-name               go to state 216
    type-constraint             go to state 124
    type-name                   go to state 125
    type-specifier              go to state 126
    typedef-name                go to state 127
    typename-specifier          go to state 128


State 1224

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  730 noptr-declarator: noptr-declarator '[' ']' attribute-specifier-seq •

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    '['       [reduce using rule 730 (noptr-declarator)]
    $default  reduce using rule 730 (noptr-declarator)

    alignment-specifier  go to state 58
    attribute-specifier  go to state 265


State 1225

  729 noptr-declarator: noptr-declarator '[' constant-expression ']' •
  731                 | noptr-declarator '[' constant-expression ']' • attribute-specifier-seq

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    '['       [reduce using rule 729 (noptr-declarator)]
    $default  reduce using rule 729 (noptr-declarator)

    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 1593


State 1226

  1073 trailing-return-type: "->" type-id •

    $default  reduce using rule 1073 (trailing-return-type)


State 1227

  1063 template-id: operator-function-id '<' template-argument-list '>' •

    $default  reduce using rule 1063 (template-id)


State 1228

  162 concept-definition: "concept" concept-name '=' • constraint-expression ';'

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    additive-expression                  go to state 404
    and-expression                       go to state 405
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    constraint-expression                go to state 1594
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 1595
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 1229

  235 deduction-guide: template-name '(' parameter-declaration-clause ')' • "->" simple-template-id ';'

    "->"  shift, and go to state 1596


State 1230

  998 simple-template-id: template-name '<' template-argument-list '>' •

    $default  reduce using rule 998 (simple-template-id)


State 1231

  854 placeholder-type-specifier: type-constraint "decltype" '(' "auto" • ')'

    ')'  shift, and go to state 1597


State 1232

   13 alias-declaration: "using" IDENTIFIER '=' defining-type-id ';' •

    $default  reduce using rule 13 (alias-declaration)


State 1233

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  242 defining-type-specifier-seq: defining-type-specifier attribute-specifier-seq •

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    '['       [reduce using rule 242 (defining-type-specifier-seq)]
    $default  reduce using rule 242 (defining-type-specifier-seq)

    alignment-specifier  go to state 58
    attribute-specifier  go to state 265


State 1234

  243 defining-type-specifier-seq: defining-type-specifier defining-type-specifier-seq •

    $default  reduce using rule 243 (defining-type-specifier-seq)


State 1235

  237 defining-type-id: defining-type-specifier-seq abstract-declarator •

    $default  reduce using rule 237 (defining-type-id)


State 1236

   14 alias-declaration: "using" IDENTIFIER attribute-specifier-seq '=' defining-type-id • ';'

    ';'  shift, and go to state 1598


State 1237

  1188 using-directive: "using" "namespace" nested-name-specifier namespace-name ';' •

    $default  reduce using rule 1188 (using-directive)


State 1238

  1184 using-declarator-list: using-declarator-list ',' using-declarator "..." •

    $default  reduce using rule 1184 (using-declarator-list)


State 1239

  351 fold-operator: '+' •

    $default  reduce using rule 351 (fold-operator)


State 1240

  352 fold-operator: '-' •

    $default  reduce using rule 352 (fold-operator)


State 1241

  371 fold-operator: '=' •

    $default  reduce using rule 371 (fold-operator)


State 1242

  357 fold-operator: '&' •

    $default  reduce using rule 357 (fold-operator)


State 1243

  363 fold-operator: "*=" •

    $default  reduce using rule 363 (fold-operator)


State 1244

  364 fold-operator: "/=" •

    $default  reduce using rule 364 (fold-operator)


State 1245

  365 fold-operator: "%=" •

    $default  reduce using rule 365 (fold-operator)


State 1246

  361 fold-operator: "+=" •

    $default  reduce using rule 361 (fold-operator)


State 1247

  362 fold-operator: "-=" •

    $default  reduce using rule 362 (fold-operator)


State 1248

  370 fold-operator: ">>=" •

    $default  reduce using rule 370 (fold-operator)


State 1249

  369 fold-operator: "<<=" •

    $default  reduce using rule 369 (fold-operator)


State 1250

  367 fold-operator: "&=" •

    $default  reduce using rule 367 (fold-operator)


State 1251

  366 fold-operator: "^=" •

    $default  reduce using rule 366 (fold-operator)


State 1252

  368 fold-operator: "|=" •

    $default  reduce using rule 368 (fold-operator)


State 1253

  380 fold-operator: ',' •

    $default  reduce using rule 380 (fold-operator)


State 1254

  378 fold-operator: "&&" •

    $default  reduce using rule 378 (fold-operator)


State 1255

  379 fold-operator: "||" •

    $default  reduce using rule 379 (fold-operator)


State 1256

  372 fold-operator: "==" •

    $default  reduce using rule 372 (fold-operator)


State 1257

  373 fold-operator: "!=" •

    $default  reduce using rule 373 (fold-operator)


State 1258

  356 fold-operator: '^' •

    $default  reduce using rule 356 (fold-operator)


State 1259

  374 fold-operator: '<' •

    $default  reduce using rule 374 (fold-operator)


State 1260

  375 fold-operator: '>' •

    $default  reduce using rule 375 (fold-operator)


State 1261

  353 fold-operator: '*' •

    $default  reduce using rule 353 (fold-operator)


State 1262

  354 fold-operator: '/' •

    $default  reduce using rule 354 (fold-operator)


State 1263

  355 fold-operator: '%' •

    $default  reduce using rule 355 (fold-operator)


State 1264

  358 fold-operator: '|' •

    $default  reduce using rule 358 (fold-operator)


State 1265

  359 fold-operator: "<<" •

    $default  reduce using rule 359 (fold-operator)


State 1266

  360 fold-operator: ">>" •

    $default  reduce using rule 360 (fold-operator)


State 1267

  376 fold-operator: "<=" •

    $default  reduce using rule 376 (fold-operator)


State 1268

  377 fold-operator: ">=" •

    $default  reduce using rule 377 (fold-operator)


State 1269

  381 fold-operator: ".*" •

    $default  reduce using rule 381 (fold-operator)


State 1270

  382 fold-operator: "->*" •

    $default  reduce using rule 382 (fold-operator)


State 1271

  349 fold-expression: '(' "..." fold-operator • cast-expression ')'

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 1599
    character-literal                    go to state 410
    class-name                           go to state 66
    concept-name                         go to state 68
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    requires-expression                  go to state 447
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 1272

  348 fold-expression: '(' cast-expression fold-operator • "..." ')'
  350                | '(' cast-expression fold-operator • "..." fold-operator cast-expression ')'

    "..."  shift, and go to state 1600


State 1273

  885 primary-expression: '(' expression ')' •

    $default  reduce using rule 885 (primary-expression)


State 1274

  125 cast-expression: '(' type-id ')' • cast-expression

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 1601
    character-literal                    go to state 410
    class-name                           go to state 66
    concept-name                         go to state 68
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    requires-expression                  go to state 447
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 1275

  246 delete-expression: "::" "delete" '[' • ']' cast-expression
  538 lambda-introducer: '[' • ']'
  539                  | '[' • lambda-capture ']'

    IDENTIFIER  shift, and go to state 766
    '='         shift, and go to state 767
    "..."       shift, and go to state 768
    '&'         shift, and go to state 769
    ']'         shift, and go to state 1602
    '*'         shift, and go to state 771
    "this"      shift, and go to state 772

    capture          go to state 773
    capture-default  go to state 774
    capture-list     go to state 775
    init-capture     go to state 776
    lambda-capture   go to state 777
    simple-capture   go to state 778


State 1276

  244 delete-expression: "::" "delete" cast-expression •

    $default  reduce using rule 244 (delete-expression)


State 1277

  680 new-expression: "::" "new" '(' • type-id ')'
  684               | "::" "new" '(' • type-id ')' new-initializer
  691 new-placement: '(' • expression-list ')'

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 939
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 136
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 1141
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    braced-init-list                     go to state 1142
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-key                            go to state 210
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    expression-list                      go to state 1306
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    initializer-clause                   go to state 1145
    initializer-list                     go to state 1146
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-id                              go to state 1603
    type-name                            go to state 125
    type-specifier                       go to state 217
    type-specifier-seq                   go to state 452
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 1278

  674 new-expression: "::" "new" new-placement • new-type-id
  678               | "::" "new" new-placement • new-type-id new-initializer
  682               | "::" "new" new-placement • '(' type-id ')'
  686               | "::" "new" new-placement • '(' type-id ')' new-initializer

    IDENTIFIER  shift, and go to state 161
    '('         shift, and go to state 1604
    "::"        shift, and go to state 9
    "class"     shift, and go to state 12
    "struct"    shift, and go to state 13
    "union"     shift, and go to state 14
    "const"     shift, and go to state 18
    "volatile"  shift, and go to state 19
    "decltype"  shift, and go to state 26
    "enum"      shift, and go to state 136
    "auto"      shift, and go to state 37
    "char"      shift, and go to state 38
    "char8_t"   shift, and go to state 39
    "char16_t"  shift, and go to state 40
    "char32_t"  shift, and go to state 41
    "wchar_t"   shift, and go to state 42
    "bool"      shift, and go to state 43
    "short"     shift, and go to state 44
    "int"       shift, and go to state 45
    "long"      shift, and go to state 46
    "signed"    shift, and go to state 47
    "unsigned"  shift, and go to state 48
    "float"     shift, and go to state 49
    "double"    shift, and go to state 50
    "void"      shift, and go to state 51
    "typename"  shift, and go to state 56

    class-key                   go to state 210
    class-name                  go to state 66
    concept-name                go to state 68
    cv-qualifier                go to state 70
    decltype-specifier          go to state 77
    elaborated-enum-specifier   go to state 80
    elaborated-type-specifier   go to state 81
    enum-name                   go to state 85
    namespace-alias             go to state 100
    namespace-name              go to state 103
    nested-name-specifier       go to state 213
    new-type-id                 go to state 1605
    placeholder-type-specifier  go to state 110
    simple-template-id          go to state 142
    simple-type-specifier       go to state 116
    template-name               go to state 216
    type-constraint             go to state 124
    type-name                   go to state 125
    type-specifier              go to state 217
    type-specifier-seq          go to state 811
    typedef-name                go to state 127
    typename-specifier          go to state 128


State 1279

  672 new-expression: "::" "new" new-type-id •
  676               | "::" "new" new-type-id • new-initializer

    '('  shift, and go to state 1310
    '{'  shift, and go to state 939

    '{'       [reduce using rule 672 (new-expression)]
    $default  reduce using rule 672 (new-expression)

    braced-init-list  go to state 1311
    new-initializer   go to state 1606


State 1280

  106 brace-or-equal-initializer: '=' • initializer-clause

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 939
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 1141
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    braced-init-list                     go to state 1142
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    initializer-clause                   go to state 1143
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 1281

  972 simple-capture: IDENTIFIER "..." •

    $default  reduce using rule 972 (simple-capture)


State 1282

  470 init-capture: IDENTIFIER initializer •

    $default  reduce using rule 470 (init-capture)


State 1283

  469 init-capture: "..." IDENTIFIER • initializer

    '='  shift, and go to state 1280
    '('  shift, and go to state 647
    '{'  shift, and go to state 939

    brace-or-equal-initializer  go to state 649
    braced-init-list            go to state 650
    initializer                 go to state 1607


State 1284

  471 init-capture: '&' IDENTIFIER • initializer
  973 simple-capture: '&' IDENTIFIER •
  974               | '&' IDENTIFIER • "..."

    '='    shift, and go to state 1280
    '('    shift, and go to state 647
    "..."  shift, and go to state 1608
    '{'    shift, and go to state 939

    $default  reduce using rule 973 (simple-capture)

    brace-or-equal-initializer  go to state 649
    braced-init-list            go to state 650
    initializer                 go to state 1609


State 1285

  472 init-capture: '&' "..." • IDENTIFIER initializer

    IDENTIFIER  shift, and go to state 1610


State 1286

  976 simple-capture: '*' "this" •

    $default  reduce using rule 976 (simple-capture)


State 1287

  531 lambda-capture: capture-default ',' • capture-list

    IDENTIFIER  shift, and go to state 766
    "..."       shift, and go to state 768
    '&'         shift, and go to state 1611
    '*'         shift, and go to state 771
    "this"      shift, and go to state 772

    capture         go to state 773
    capture-list    go to state 1612
    init-capture    go to state 776
    simple-capture  go to state 778


State 1288

  123 capture-list: capture-list ',' • capture

    IDENTIFIER  shift, and go to state 766
    "..."       shift, and go to state 768
    '&'         shift, and go to state 1611
    '*'         shift, and go to state 771
    "this"      shift, and go to state 772

    capture         go to state 1613
    init-capture    go to state 776
    simple-capture  go to state 778


State 1289

  539 lambda-introducer: '[' lambda-capture ']' •

    $default  reduce using rule 539 (lambda-introducer)


State 1290

  127 character-literal: '\'' c-char-sequence '\'' •

    $default  reduce using rule 127 (character-literal)


State 1291

  117 c-char-sequence: c-char-sequence c-char •

    $default  reduce using rule 117 (c-char-sequence)


State 1292

  338 expression: expression • ',' assignment-expression
  696 noexcept-expression: "noexcept" '(' expression • ')'

    ')'  shift, and go to state 1614
    ','  shift, and go to state 1037


State 1293

  247 delete-expression: "delete" '[' ']' • cast-expression
  538 lambda-introducer: '[' ']' •

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    IDENTIFIER  [reduce using rule 538 (lambda-introducer)]
    '('         [reduce using rule 538 (lambda-introducer)]
    "::"        [reduce using rule 538 (lambda-introducer)]
    '['         [reduce using rule 538 (lambda-introducer)]
    "noexcept"  [reduce using rule 538 (lambda-introducer)]
    "decltype"  [reduce using rule 538 (lambda-introducer)]
    "auto"      [reduce using rule 538 (lambda-introducer)]
    "char"      [reduce using rule 538 (lambda-introducer)]
    "char8_t"   [reduce using rule 538 (lambda-introducer)]
    "char16_t"  [reduce using rule 538 (lambda-introducer)]
    "char32_t"  [reduce using rule 538 (lambda-introducer)]
    "wchar_t"   [reduce using rule 538 (lambda-introducer)]
    "bool"      [reduce using rule 538 (lambda-introducer)]
    "short"     [reduce using rule 538 (lambda-introducer)]
    "int"       [reduce using rule 538 (lambda-introducer)]
    "long"      [reduce using rule 538 (lambda-introducer)]
    "signed"    [reduce using rule 538 (lambda-introducer)]
    "unsigned"  [reduce using rule 538 (lambda-introducer)]
    "float"     [reduce using rule 538 (lambda-introducer)]
    "double"    [reduce using rule 538 (lambda-introducer)]
    "void"      [reduce using rule 538 (lambda-introducer)]
    "typename"  [reduce using rule 538 (lambda-introducer)]
    $default    reduce using rule 538 (lambda-introducer)

    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 1615
    character-literal                    go to state 410
    class-name                           go to state 66
    concept-name                         go to state 68
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    requires-expression                  go to state 447
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 1294

  940 requirement-parameter-list: '(' parameter-declaration-clause • ')'

    ')'  shift, and go to state 1616


State 1295

  156 compound-requirement: '{' • expression '}' ';'
  157                     | '{' • expression '}' "noexcept" ';'
  158                     | '{' • expression '}' return-type-requirement ';'
  159                     | '{' • expression '}' "noexcept" return-type-requirement ';'

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 530
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    expression                           go to state 1617
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 1296

  668 nested-requirement: "requires" • constraint-expression ';'
  944 requires-expression: "requires" • requirement-body
  945                    | "requires" • requirement-parameter-list requirement-body

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 1618
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 805
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    additive-expression                  go to state 404
    and-expression                       go to state 405
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    constraint-expression                go to state 1619
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 1595
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requirement-body                     go to state 806
    requirement-parameter-list           go to state 807
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 1297

  1115 type-requirement: "typename" • type-name ';'
  1116                 | "typename" • nested-name-specifier type-name ';'
  1126 typename-specifier: "typename" • nested-name-specifier IDENTIFIER
  1127                   | "typename" • nested-name-specifier simple-template-id
  1128                   | "typename" • nested-name-specifier "template" simple-template-id

    IDENTIFIER  shift, and go to state 258
    "::"        shift, and go to state 9
    "decltype"  shift, and go to state 135

    class-name             go to state 66
    decltype-specifier     go to state 139
    enum-name              go to state 85
    namespace-alias        go to state 100
    namespace-name         go to state 103
    nested-name-specifier  go to state 1620
    simple-template-id     go to state 142
    template-name          go to state 143
    type-name              go to state 1621
    typedef-name           go to state 127


State 1298

  937 requirement: compound-requirement •

    $default  reduce using rule 937 (requirement)


State 1299

  338 expression: expression • ',' assignment-expression
  996 simple-requirement: expression • ';'

    ';'  shift, and go to state 1622
    ','  shift, and go to state 1037


State 1300

  938 requirement: nested-requirement •

    $default  reduce using rule 938 (requirement)


State 1301

  941 requirement-seq: requirement •

    $default  reduce using rule 941 (requirement-seq)


State 1302

  939 requirement-body: '{' requirement-seq • '}'
  942 requirement-seq: requirement-seq • requirement

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 1295
    '}'                 shift, and go to state 1623
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 1296
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 1297
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 530
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    compound-requirement                 go to state 1298
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    expression                           go to state 1299
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    nested-requirement                   go to state 1300
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requirement                          go to state 1624
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-requirement                   go to state 1303
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    type-requirement                     go to state 1304
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 1303

  935 requirement: simple-requirement •

    $default  reduce using rule 935 (requirement)


State 1304

  936 requirement: type-requirement •

    $default  reduce using rule 936 (requirement)


State 1305

  945 requires-expression: "requires" requirement-parameter-list requirement-body •

    $default  reduce using rule 945 (requires-expression)


State 1306

  691 new-placement: '(' expression-list • ')'

    ')'  shift, and go to state 1625


State 1307

  681 new-expression: "new" '(' type-id • ')'
  685               | "new" '(' type-id • ')' new-initializer

    ')'  shift, and go to state 1626


State 1308

  683 new-expression: "new" new-placement '(' • type-id ')'
  687               | "new" new-placement '(' • type-id ')' new-initializer

    IDENTIFIER  shift, and go to state 161
    "::"        shift, and go to state 9
    "class"     shift, and go to state 12
    "struct"    shift, and go to state 13
    "union"     shift, and go to state 14
    "const"     shift, and go to state 18
    "volatile"  shift, and go to state 19
    "decltype"  shift, and go to state 26
    "enum"      shift, and go to state 136
    "auto"      shift, and go to state 37
    "char"      shift, and go to state 38
    "char8_t"   shift, and go to state 39
    "char16_t"  shift, and go to state 40
    "char32_t"  shift, and go to state 41
    "wchar_t"   shift, and go to state 42
    "bool"      shift, and go to state 43
    "short"     shift, and go to state 44
    "int"       shift, and go to state 45
    "long"      shift, and go to state 46
    "signed"    shift, and go to state 47
    "unsigned"  shift, and go to state 48
    "float"     shift, and go to state 49
    "double"    shift, and go to state 50
    "void"      shift, and go to state 51
    "typename"  shift, and go to state 56

    class-key                   go to state 210
    class-name                  go to state 66
    concept-name                go to state 68
    cv-qualifier                go to state 70
    decltype-specifier          go to state 77
    elaborated-enum-specifier   go to state 80
    elaborated-type-specifier   go to state 81
    enum-name                   go to state 85
    namespace-alias             go to state 100
    namespace-name              go to state 103
    nested-name-specifier       go to state 213
    placeholder-type-specifier  go to state 110
    simple-template-id          go to state 142
    simple-type-specifier       go to state 116
    template-name               go to state 216
    type-constraint             go to state 124
    type-id                     go to state 1627
    type-name                   go to state 125
    type-specifier              go to state 217
    type-specifier-seq          go to state 452
    typedef-name                go to state 127
    typename-specifier          go to state 128


State 1309

  675 new-expression: "new" new-placement new-type-id •
  679               | "new" new-placement new-type-id • new-initializer

    '('  shift, and go to state 1310
    '{'  shift, and go to state 939

    '{'       [reduce using rule 675 (new-expression)]
    $default  reduce using rule 675 (new-expression)

    braced-init-list  go to state 1311
    new-initializer   go to state 1628


State 1310

  688 new-initializer: '(' • ')'
  689                | '(' • expression-list ')'

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    ')'                 shift, and go to state 1629
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 939
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 1141
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    braced-init-list                     go to state 1142
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    expression-list                      go to state 1630
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    initializer-clause                   go to state 1145
    initializer-list                     go to state 1146
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 1311

  690 new-initializer: braced-init-list •

    $default  reduce using rule 690 (new-initializer)


State 1312

  677 new-expression: "new" new-type-id new-initializer •

    $default  reduce using rule 677 (new-expression)


State 1313

  733 noptr-new-declarator: '[' • ']'
  734                     | '[' • expression ']'
  735                     | '[' • ']' attribute-specifier-seq
  736                     | '[' • expression ']' attribute-specifier-seq

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    ']'                 shift, and go to state 1631
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 530
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    expression                           go to state 1632
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 1314

  693 new-type-id: type-specifier-seq new-declarator •

    $default  reduce using rule 693 (new-type-id)


State 1315

  671 new-declarator: noptr-new-declarator •
  737 noptr-new-declarator: noptr-new-declarator • '[' constant-expression ']'
  738                     | noptr-new-declarator • '[' constant-expression ']' attribute-specifier-seq

    '['  shift, and go to state 1633

    $default  reduce using rule 671 (new-declarator)


State 1316

  669 new-declarator: ptr-operator •
  670               | ptr-operator • new-declarator

    IDENTIFIER  shift, and go to state 258
    '&'         shift, and go to state 7
    "::"        shift, and go to state 9
    '['         shift, and go to state 1313
    "&&"        shift, and go to state 16
    "decltype"  shift, and go to state 135
    '*'         shift, and go to state 32

    '&'       [reduce using rule 669 (new-declarator)]
    "&&"      [reduce using rule 669 (new-declarator)]
    '*'       [reduce using rule 669 (new-declarator)]
    $default  reduce using rule 669 (new-declarator)

    class-name             go to state 66
    decltype-specifier     go to state 139
    enum-name              go to state 85
    namespace-alias        go to state 100
    namespace-name         go to state 103
    nested-name-specifier  go to state 522
    new-declarator         go to state 1634
    noptr-new-declarator   go to state 1315
    ptr-operator           go to state 1316
    simple-template-id     go to state 142
    template-name          go to state 143
    type-name              go to state 144
    typedef-name           go to state 127


State 1317

  877 postfix-expression: "dynamic_cast" '<' type-id • '>' '(' expression ')'

    '>'  shift, and go to state 1635


State 1318

  878 postfix-expression: "static_cast" '<' type-id • '>' '(' expression ')'

    '>'  shift, and go to state 1636


State 1319

  879 postfix-expression: "reinterpret_cast" '<' type-id • '>' '(' expression ')'

    '>'  shift, and go to state 1637


State 1320

  880 postfix-expression: "const_cast" '<' type-id • '>' '(' expression ')'

    '>'  shift, and go to state 1638


State 1321

  338 expression: expression • ',' assignment-expression
  881 postfix-expression: "typeid" '(' expression • ')'

    ')'  shift, and go to state 1639
    ','  shift, and go to state 1037


State 1322

  882 postfix-expression: "typeid" '(' type-id • ')'

    ')'  shift, and go to state 1640


State 1323

  1136 unary-expression: "sizeof" '(' type-id • ')'

    ')'  shift, and go to state 1641


State 1324

  1137 unary-expression: "sizeof" "..." '(' • IDENTIFIER ')'

    IDENTIFIER  shift, and go to state 1642


State 1325

  1138 unary-expression: "alignof" '(' type-id • ')'

    ')'  shift, and go to state 1643


State 1326

   11 additive-expression: additive-expression '+' multiplicative-expression •
  644 multiplicative-expression: multiplicative-expression • '*' pm-expression
  645                          | multiplicative-expression • '/' pm-expression
  646                          | multiplicative-expression • '%' pm-expression

    '*'  shift, and go to state 909
    '/'  shift, and go to state 910
    '%'  shift, and go to state 911

    $default  reduce using rule 11 (additive-expression)


State 1327

   12 additive-expression: additive-expression '-' multiplicative-expression •
  644 multiplicative-expression: multiplicative-expression • '*' pm-expression
  645                          | multiplicative-expression • '/' pm-expression
  646                          | multiplicative-expression • '%' pm-expression

    '*'  shift, and go to state 909
    '/'  shift, and go to state 910
    '%'  shift, and go to state 911

    $default  reduce using rule 12 (additive-expression)


State 1328

   20 and-expression: and-expression '&' equality-expression •
  308 equality-expression: equality-expression • "==" relational-expression
  309                    | equality-expression • "!=" relational-expression

    "=="  shift, and go to state 858
    "!="  shift, and go to state 859

    $default  reduce using rule 20 (and-expression)


State 1329

   94 binary-literal: binary-literal '\'' binary-digit •

    $default  reduce using rule 94 (binary-literal)


State 1330

  506 integer-suffix: long-long-suffix unsigned-suffix •

    $default  reduce using rule 506 (integer-suffix)


State 1331

  504 integer-suffix: long-suffix unsigned-suffix •

    $default  reduce using rule 504 (integer-suffix)


State 1332

  508 integer-suffix: size-suffix unsigned-suffix •

    $default  reduce using rule 508 (integer-suffix)


State 1333

  500 integer-suffix: unsigned-suffix long-long-suffix •

    $default  reduce using rule 500 (integer-suffix)


State 1334

  498 integer-suffix: unsigned-suffix long-suffix •

    $default  reduce using rule 498 (integer-suffix)


State 1335

  502 integer-suffix: unsigned-suffix size-suffix •

    $default  reduce using rule 502 (integer-suffix)


State 1336

  155 compare-expression: compare-expression "<=>" shift-expression •
  967 shift-expression: shift-expression • "<<" additive-expression
  968                 | shift-expression • ">>" additive-expression

    "<<"  shift, and go to state 936
    ">>"  shift, and go to state 937

    $default  reduce using rule 155 (compare-expression)


State 1337

   18 alignment-specifier: "alignas" '(' constant-expression "..." ')' •

    $default  reduce using rule 18 (alignment-specifier)


State 1338

  200 decimal-literal: decimal-literal '\'' digit •

    $default  reduce using rule 200 (decimal-literal)


State 1339

  264 digit-sequence: digit-sequence '\'' digit •

    $default  reduce using rule 264 (digit-sequence)


State 1340

  263 digit-sequence: digit-sequence • digit
  264               | digit-sequence • '\'' digit
  390 fractional-constant: digit-sequence '.' digit-sequence •

    '0'   shift, and go to state 793
    '1'   shift, and go to state 794
    '\''  shift, and go to state 851
    '2'   shift, and go to state 795
    '3'   shift, and go to state 796
    '4'   shift, and go to state 797
    '5'   shift, and go to state 798
    '6'   shift, and go to state 799
    '7'   shift, and go to state 800
    '8'   shift, and go to state 801
    '9'   shift, and go to state 802

    $default  reduce using rule 390 (fractional-constant)

    digit  go to state 855


State 1341

  969 sign: '+' •

    $default  reduce using rule 969 (sign)


State 1342

  970 sign: '-' •

    $default  reduce using rule 970 (sign)


State 1343

  263 digit-sequence: digit-sequence • digit
  264               | digit-sequence • '\'' digit
  327 exponent-part: 'e' digit-sequence •

    '0'   shift, and go to state 793
    '1'   shift, and go to state 794
    '\''  shift, and go to state 851
    '2'   shift, and go to state 795
    '3'   shift, and go to state 796
    '4'   shift, and go to state 797
    '5'   shift, and go to state 798
    '6'   shift, and go to state 799
    '7'   shift, and go to state 800
    '8'   shift, and go to state 801
    '9'   shift, and go to state 802

    $default  reduce using rule 327 (exponent-part)

    digit  go to state 855


State 1344

  328 exponent-part: 'e' sign • digit-sequence

    '0'  shift, and go to state 793
    '1'  shift, and go to state 794
    '2'  shift, and go to state 795
    '3'  shift, and go to state 796
    '4'  shift, and go to state 797
    '5'  shift, and go to state 798
    '6'  shift, and go to state 799
    '7'  shift, and go to state 800
    '8'  shift, and go to state 801
    '9'  shift, and go to state 802

    digit           go to state 417
    digit-sequence  go to state 1644


State 1345

  263 digit-sequence: digit-sequence • digit
  264               | digit-sequence • '\'' digit
  329 exponent-part: 'E' digit-sequence •

    '0'   shift, and go to state 793
    '1'   shift, and go to state 794
    '\''  shift, and go to state 851
    '2'   shift, and go to state 795
    '3'   shift, and go to state 796
    '4'   shift, and go to state 797
    '5'   shift, and go to state 798
    '6'   shift, and go to state 799
    '7'   shift, and go to state 800
    '8'   shift, and go to state 801
    '9'   shift, and go to state 802

    $default  reduce using rule 329 (exponent-part)

    digit  go to state 855


State 1346

  330 exponent-part: 'E' sign • digit-sequence

    '0'  shift, and go to state 793
    '1'  shift, and go to state 794
    '2'  shift, and go to state 795
    '3'  shift, and go to state 796
    '4'  shift, and go to state 797
    '5'  shift, and go to state 798
    '6'  shift, and go to state 799
    '7'  shift, and go to state 800
    '8'  shift, and go to state 801
    '9'  shift, and go to state 802

    digit           go to state 417
    digit-sequence  go to state 1645


State 1347

  197 decimal-floating-point-literal: digit-sequence exponent-part floating-point-suffix •

    $default  reduce using rule 197 (decimal-floating-point-literal)


State 1348

  1166 user-defined-floating-point-literal: digit-sequence exponent-part ud-suffix •

    $default  reduce using rule 1166 (user-defined-floating-point-literal)


State 1349

  117 c-char-sequence: c-char-sequence • c-char
  126 character-literal: encoding-prefix '\'' c-char-sequence • '\''

    EXCEPT_THE_APOSTROPHE_REVERSE_SOLIDUS_OR_NEW_LINE_CHARACTER  shift, and go to state 784
    '\''                                                         shift, and go to state 1646
    '\\'                                                         shift, and go to state 491
    "\\x"                                                        shift, and go to state 493
    "\\u"                                                        shift, and go to state 494
    "\\U"                                                        shift, and go to state 495

    basic-c-char                 go to state 785
    c-char                       go to state 1291
    conditional-escape-sequence  go to state 497
    escape-sequence              go to state 788
    hexadecimal-escape-sequence  go to state 499
    numeric-escape-sequence      go to state 500
    octal-escape-sequence        go to state 501
    simple-escape-sequence       go to state 504
    universal-character-name     go to state 789


State 1350

  308 equality-expression: equality-expression "==" relational-expression •
  931 relational-expression: relational-expression • '<' compare-expression
  932                      | relational-expression • '>' compare-expression
  933                      | relational-expression • "<=" compare-expression
  934                      | relational-expression • ">=" compare-expression

    '<'   shift, and go to state 932
    '>'   shift, and go to state 933
    "<="  shift, and go to state 934
    ">="  shift, and go to state 935

    '>'       [reduce using rule 308 (equality-expression)]
    $default  reduce using rule 308 (equality-expression)


State 1351

  309 equality-expression: equality-expression "!=" relational-expression •
  931 relational-expression: relational-expression • '<' compare-expression
  932                      | relational-expression • '>' compare-expression
  933                      | relational-expression • "<=" compare-expression
  934                      | relational-expression • ">=" compare-expression

    '<'   shift, and go to state 932
    '>'   shift, and go to state 933
    "<="  shift, and go to state 934
    ">="  shift, and go to state 935

    '>'       [reduce using rule 309 (equality-expression)]
    $default  reduce using rule 309 (equality-expression)


State 1352

   20 and-expression: and-expression • '&' equality-expression
  321 exclusive-or-expression: exclusive-or-expression '^' and-expression •

    '&'  shift, and go to state 825

    $default  reduce using rule 321 (exclusive-or-expression)


State 1353

  195 decimal-floating-point-literal: fractional-constant exponent-part floating-point-suffix •

    $default  reduce using rule 195 (decimal-floating-point-literal)


State 1354

  1165 user-defined-floating-point-literal: fractional-constant exponent-part ud-suffix •

    $default  reduce using rule 1165 (user-defined-floating-point-literal)


State 1355

  449 hexadecimal-digit-sequence: hexadecimal-digit-sequence • hexadecimal-digit
  450                           | hexadecimal-digit-sequence • '\'' hexadecimal-digit
  458 hexadecimal-fractional-constant: '.' hexadecimal-digit-sequence •

    '0'   shift, and go to state 870
    '1'   shift, and go to state 871
    '\''  shift, and go to state 1358
    '2'   shift, and go to state 873
    '3'   shift, and go to state 874
    '4'   shift, and go to state 875
    '5'   shift, and go to state 876
    '6'   shift, and go to state 877
    '7'   shift, and go to state 878
    '8'   shift, and go to state 879
    '9'   shift, and go to state 880
    'e'   shift, and go to state 881
    'E'   shift, and go to state 882
    'f'   shift, and go to state 883
    'F'   shift, and go to state 884
    'a'   shift, and go to state 885
    'b'   shift, and go to state 886
    'c'   shift, and go to state 887
    'd'   shift, and go to state 888
    'A'   shift, and go to state 889
    'B'   shift, and go to state 890
    'C'   shift, and go to state 891
    'D'   shift, and go to state 892

    $default  reduce using rule 458 (hexadecimal-fractional-constant)

    hexadecimal-digit  go to state 1361


State 1356

   87 binary-exponent-part: 'p' • digit-sequence
   88                     | 'p' • sign digit-sequence

    '+'  shift, and go to state 1341
    '-'  shift, and go to state 1342
    '0'  shift, and go to state 793
    '1'  shift, and go to state 794
    '2'  shift, and go to state 795
    '3'  shift, and go to state 796
    '4'  shift, and go to state 797
    '5'  shift, and go to state 798
    '6'  shift, and go to state 799
    '7'  shift, and go to state 800
    '8'  shift, and go to state 801
    '9'  shift, and go to state 802

    digit           go to state 417
    digit-sequence  go to state 1647
    sign            go to state 1648


State 1357

   89 binary-exponent-part: 'P' • digit-sequence
   90                     | 'P' • sign digit-sequence

    '+'  shift, and go to state 1341
    '-'  shift, and go to state 1342
    '0'  shift, and go to state 793
    '1'  shift, and go to state 794
    '2'  shift, and go to state 795
    '3'  shift, and go to state 796
    '4'  shift, and go to state 797
    '5'  shift, and go to state 798
    '6'  shift, and go to state 799
    '7'  shift, and go to state 800
    '8'  shift, and go to state 801
    '9'  shift, and go to state 802

    digit           go to state 417
    digit-sequence  go to state 1649
    sign            go to state 1650


State 1358

  450 hexadecimal-digit-sequence: hexadecimal-digit-sequence '\'' • hexadecimal-digit

    '0'  shift, and go to state 870
    '1'  shift, and go to state 871
    '2'  shift, and go to state 873
    '3'  shift, and go to state 874
    '4'  shift, and go to state 875
    '5'  shift, and go to state 876
    '6'  shift, and go to state 877
    '7'  shift, and go to state 878
    '8'  shift, and go to state 879
    '9'  shift, and go to state 880
    'e'  shift, and go to state 881
    'E'  shift, and go to state 882
    'f'  shift, and go to state 883
    'F'  shift, and go to state 884
    'a'  shift, and go to state 885
    'b'  shift, and go to state 886
    'c'  shift, and go to state 887
    'd'  shift, and go to state 888
    'A'  shift, and go to state 889
    'B'  shift, and go to state 890
    'C'  shift, and go to state 891
    'D'  shift, and go to state 892

    hexadecimal-digit  go to state 1651


State 1359

  457 hexadecimal-fractional-constant: hexadecimal-digit-sequence '.' • hexadecimal-digit-sequence
  459                                | hexadecimal-digit-sequence '.' •

    '0'  shift, and go to state 870
    '1'  shift, and go to state 871
    '2'  shift, and go to state 873
    '3'  shift, and go to state 874
    '4'  shift, and go to state 875
    '5'  shift, and go to state 876
    '6'  shift, and go to state 877
    '7'  shift, and go to state 878
    '8'  shift, and go to state 879
    '9'  shift, and go to state 880
    'e'  shift, and go to state 881
    'E'  shift, and go to state 882
    'f'  shift, and go to state 883
    'F'  shift, and go to state 884
    'a'  shift, and go to state 885
    'b'  shift, and go to state 886
    'c'  shift, and go to state 887
    'd'  shift, and go to state 888
    'A'  shift, and go to state 889
    'B'  shift, and go to state 890
    'C'  shift, and go to state 891
    'D'  shift, and go to state 892

    $default  reduce using rule 459 (hexadecimal-fractional-constant)

    hexadecimal-digit           go to state 893
    hexadecimal-digit-sequence  go to state 1652


State 1360

  455 hexadecimal-floating-point-literal: hexadecimal-prefix hexadecimal-digit-sequence binary-exponent-part •
  456                                   | hexadecimal-prefix hexadecimal-digit-sequence binary-exponent-part • floating-point-suffix
  1168 user-defined-floating-point-literal: hexadecimal-prefix hexadecimal-digit-sequence binary-exponent-part • ud-suffix

    IDENTIFIER  shift, and go to state 826
    'L'         shift, and go to state 861
    'f'         shift, and go to state 862
    'l'         shift, and go to state 863
    'F'         shift, and go to state 864

    IDENTIFIER  [reduce using rule 455 (hexadecimal-floating-point-literal)]
    $default    reduce using rule 455 (hexadecimal-floating-point-literal)

    floating-point-suffix  go to state 1653
    ud-suffix              go to state 1654


State 1361

  449 hexadecimal-digit-sequence: hexadecimal-digit-sequence hexadecimal-digit •

    $default  reduce using rule 449 (hexadecimal-digit-sequence)


State 1362

  453 hexadecimal-floating-point-literal: hexadecimal-prefix hexadecimal-fractional-constant binary-exponent-part •
  454                                   | hexadecimal-prefix hexadecimal-fractional-constant binary-exponent-part • floating-point-suffix
  1167 user-defined-floating-point-literal: hexadecimal-prefix hexadecimal-fractional-constant binary-exponent-part • ud-suffix

    IDENTIFIER  shift, and go to state 826
    'L'         shift, and go to state 861
    'f'         shift, and go to state 862
    'l'         shift, and go to state 863
    'F'         shift, and go to state 864

    IDENTIFIER  [reduce using rule 453 (hexadecimal-floating-point-literal)]
    $default    reduce using rule 453 (hexadecimal-floating-point-literal)

    floating-point-suffix  go to state 1655
    ud-suffix              go to state 1656


State 1363

  321 exclusive-or-expression: exclusive-or-expression • '^' and-expression
  468 inclusive-or-expression: inclusive-or-expression '|' exclusive-or-expression •

    '^'  shift, and go to state 860

    $default  reduce using rule 468 (inclusive-or-expression)


State 1364

  533 lambda-declarator: '(' parameter-declaration-clause • ')' lambda-specifiers
  534                  | '(' parameter-declaration-clause • ')' lambda-specifiers requires-clause

    ')'  shift, and go to state 1657


State 1365

  697 noexcept-specifier: "noexcept" '(' • constant-expression ')'

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    additive-expression                  go to state 404
    and-expression                       go to state 405
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 412
    constant-expression                  go to state 1658
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 435
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 1366

  536 lambda-expression: lambda-introducer '<' template-parameter-list • '>' lambda-declarator compound-statement
  537                  | lambda-introducer '<' template-parameter-list • '>' requires-clause lambda-declarator compound-statement
  1070 template-parameter-list: template-parameter-list • ',' template-parameter

    ','  shift, and go to state 981
    '>'  shift, and go to state 1659


State 1367

  552 lambda-specifiers: attribute-specifier-seq trailing-return-type •

    $default  reduce using rule 552 (lambda-specifiers)


State 1368

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  543 lambda-specifiers: decl-specifier-seq attribute-specifier-seq •
  551                  | decl-specifier-seq attribute-specifier-seq • trailing-return-type

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10
    "->"       shift, and go to state 740

    $default  reduce using rule 543 (lambda-specifiers)

    alignment-specifier   go to state 58
    attribute-specifier   go to state 265
    trailing-return-type  go to state 1660


State 1369

  541 lambda-specifiers: decl-specifier-seq noexcept-specifier •
  545                  | decl-specifier-seq noexcept-specifier • attribute-specifier-seq
  549                  | decl-specifier-seq noexcept-specifier • trailing-return-type
  553                  | decl-specifier-seq noexcept-specifier • attribute-specifier-seq trailing-return-type

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10
    "->"       shift, and go to state 740

    $default  reduce using rule 541 (lambda-specifiers)

    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 1661
    trailing-return-type     go to state 1662


State 1370

  547 lambda-specifiers: decl-specifier-seq trailing-return-type •

    $default  reduce using rule 547 (lambda-specifiers)


State 1371

  535 lambda-expression: lambda-introducer lambda-declarator compound-statement •

    $default  reduce using rule 535 (lambda-expression)


State 1372

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  546 lambda-specifiers: noexcept-specifier attribute-specifier-seq •
  554                  | noexcept-specifier attribute-specifier-seq • trailing-return-type

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10
    "->"       shift, and go to state 740

    $default  reduce using rule 546 (lambda-specifiers)

    alignment-specifier   go to state 58
    attribute-specifier   go to state 265
    trailing-return-type  go to state 1663


State 1373

  550 lambda-specifiers: noexcept-specifier trailing-return-type •

    $default  reduce using rule 550 (lambda-specifiers)


State 1374

  468 inclusive-or-expression: inclusive-or-expression • '|' exclusive-or-expression
  568 logical-and-expression: logical-and-expression "&&" inclusive-or-expression •

    '|'  shift, and go to state 896

    $default  reduce using rule 568 (logical-and-expression)


State 1375

  170 conditional-expression: logical-or-expression '?' expression • ':' assignment-expression
  338 expression: expression • ',' assignment-expression

    ','  shift, and go to state 1037
    ':'  shift, and go to state 1664


State 1376

  568 logical-and-expression: logical-and-expression • "&&" inclusive-or-expression
  570 logical-or-expression: logical-or-expression "||" logical-and-expression •

    "&&"  shift, and go to state 906

    $default  reduce using rule 570 (logical-or-expression)


State 1377

  644 multiplicative-expression: multiplicative-expression '*' pm-expression •
  857 pm-expression: pm-expression • ".*" cast-expression
  858              | pm-expression • "->*" cast-expression

    ".*"   shift, and go to state 924
    "->*"  shift, and go to state 925

    $default  reduce using rule 644 (multiplicative-expression)


State 1378

  645 multiplicative-expression: multiplicative-expression '/' pm-expression •
  857 pm-expression: pm-expression • ".*" cast-expression
  858              | pm-expression • "->*" cast-expression

    ".*"   shift, and go to state 924
    "->*"  shift, and go to state 925

    $default  reduce using rule 645 (multiplicative-expression)


State 1379

  646 multiplicative-expression: multiplicative-expression '%' pm-expression •
  857 pm-expression: pm-expression • ".*" cast-expression
  858              | pm-expression • "->*" cast-expression

    ".*"   shift, and go to state 924
    "->*"  shift, and go to state 925

    $default  reduce using rule 646 (multiplicative-expression)


State 1380

  754 octal-literal: octal-literal '\'' octal-digit •

    $default  reduce using rule 754 (octal-literal)


State 1381

  857 pm-expression: pm-expression ".*" cast-expression •

    $default  reduce using rule 857 (pm-expression)


State 1382

  858 pm-expression: pm-expression "->*" cast-expression •

    $default  reduce using rule 858 (pm-expression)


State 1383

  863 postfix-expression: postfix-expression '(' ')' •

    $default  reduce using rule 863 (postfix-expression)


State 1384

  864 postfix-expression: postfix-expression '(' expression-list • ')'

    ')'  shift, and go to state 1665


State 1385

  861 postfix-expression: postfix-expression '[' ']' •

    $default  reduce using rule 861 (postfix-expression)


State 1386

  862 postfix-expression: postfix-expression '[' expression-list • ']'

    ']'  shift, and go to state 1666


State 1387

  874 postfix-expression: postfix-expression "->" "template" • id-expression

    IDENTIFIER  shift, and go to state 148
    "::"        shift, and go to state 9
    "operator"  shift, and go to state 17
    "decltype"  shift, and go to state 135
    '~'         shift, and go to state 36

    class-name              go to state 66
    conversion-function-id  go to state 69
    decltype-specifier      go to state 139
    enum-name               go to state 85
    id-expression           go to state 1667
    literal-operator-id     go to state 96
    namespace-alias         go to state 100
    namespace-name          go to state 103
    nested-name-specifier   go to state 153
    operator-function-id    go to state 109
    qualified-id            go to state 113
    simple-template-id      go to state 115
    template-id             go to state 121
    template-name           go to state 143
    type-name               go to state 144
    typedef-name            go to state 127
    unqualified-id          go to state 130


State 1388

  873 postfix-expression: postfix-expression "->" id-expression •

    $default  reduce using rule 873 (postfix-expression)


State 1389

  872 postfix-expression: postfix-expression '.' "template" • id-expression

    IDENTIFIER  shift, and go to state 148
    "::"        shift, and go to state 9
    "operator"  shift, and go to state 17
    "decltype"  shift, and go to state 135
    '~'         shift, and go to state 36

    class-name              go to state 66
    conversion-function-id  go to state 69
    decltype-specifier      go to state 139
    enum-name               go to state 85
    id-expression           go to state 1668
    literal-operator-id     go to state 96
    namespace-alias         go to state 100
    namespace-name          go to state 103
    nested-name-specifier   go to state 153
    operator-function-id    go to state 109
    qualified-id            go to state 113
    simple-template-id      go to state 115
    template-id             go to state 121
    template-name           go to state 143
    type-name               go to state 144
    typedef-name            go to state 127
    unqualified-id          go to state 130


State 1390

  871 postfix-expression: postfix-expression '.' id-expression •

    $default  reduce using rule 871 (postfix-expression)


State 1391

  155 compare-expression: compare-expression • "<=>" shift-expression
  931 relational-expression: relational-expression '<' compare-expression •

    "<=>"  shift, and go to state 844

    $default  reduce using rule 931 (relational-expression)


State 1392

  155 compare-expression: compare-expression • "<=>" shift-expression
  932 relational-expression: relational-expression '>' compare-expression •

    "<=>"  shift, and go to state 844

    $default  reduce using rule 932 (relational-expression)


State 1393

  155 compare-expression: compare-expression • "<=>" shift-expression
  933 relational-expression: relational-expression "<=" compare-expression •

    "<=>"  shift, and go to state 844

    $default  reduce using rule 933 (relational-expression)


State 1394

  155 compare-expression: compare-expression • "<=>" shift-expression
  934 relational-expression: relational-expression ">=" compare-expression •

    "<=>"  shift, and go to state 844

    $default  reduce using rule 934 (relational-expression)


State 1395

   11 additive-expression: additive-expression • '+' multiplicative-expression
   12                    | additive-expression • '-' multiplicative-expression
  967 shift-expression: shift-expression "<<" additive-expression •

    '+'  shift, and go to state 823
    '-'  shift, and go to state 824

    $default  reduce using rule 967 (shift-expression)


State 1396

   11 additive-expression: additive-expression • '+' multiplicative-expression
   12                    | additive-expression • '-' multiplicative-expression
  968 shift-expression: shift-expression ">>" additive-expression •

    '+'  shift, and go to state 823
    '-'  shift, and go to state 824

    $default  reduce using rule 968 (shift-expression)


State 1397

  865 postfix-expression: simple-type-specifier '(' ')' •

    $default  reduce using rule 865 (postfix-expression)


State 1398

  866 postfix-expression: simple-type-specifier '(' expression-list • ')'

    ')'  shift, and go to state 1669


State 1399

  112 braced-init-list: '{' '}' •

    $default  reduce using rule 112 (braced-init-list)


State 1400

   16 alignment-specifier: "alignas" '(' type-id "..." ')' •

    $default  reduce using rule 16 (alignment-specifier)


State 1401

   50 attribute-specifier: '[' • '[' attribute-list ']' ']'
   51                    | '[' • '[' attribute-using-prefix attribute-list ']' ']'
  711 noptr-abstract-declarator: '[' • ']'
  713                          | '[' • constant-expression ']'
  715                          | '[' • ']' attribute-specifier-seq
  717                          | '[' • constant-expression ']' attribute-specifier-seq

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 1670
    ']'                 shift, and go to state 1407
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    additive-expression                  go to state 404
    and-expression                       go to state 405
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 412
    constant-expression                  go to state 1408
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 435
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 1402

  663 nested-name-specifier: nested-name-specifier • IDENTIFIER "::"
  664                      | nested-name-specifier • simple-template-id "::"
  665                      | nested-name-specifier • "template" simple-template-id "::"
  905 ptr-operator: nested-name-specifier • '*'
  906             | nested-name-specifier • '*' attribute-specifier-seq
  907             | nested-name-specifier • '*' cv-qualifier-seq
  908             | nested-name-specifier • '*' attribute-specifier-seq cv-qualifier-seq
  999 simple-type-specifier: nested-name-specifier • type-name
  1001                      | nested-name-specifier • "template" simple-template-id
  1004                      | nested-name-specifier • template-name
  1084 type-constraint: nested-name-specifier • concept-name
  1086                | nested-name-specifier • concept-name '<' '>'
  1088                | nested-name-specifier • concept-name '<' template-argument-list '>'

    IDENTIFIER  shift, and go to state 513
    "template"  shift, and go to state 514
    '*'         shift, and go to state 327

    class-name          go to state 66
    concept-name        go to state 328
    enum-name           go to state 85
    simple-template-id  go to state 515
    template-name       go to state 330
    type-name           go to state 331
    typedef-name        go to state 127


State 1403

  708 noptr-abstract-declarator: noptr-abstract-declarator • parameters-and-qualifiers
  710                          | noptr-abstract-declarator • '[' ']'
  712                          | noptr-abstract-declarator • '[' constant-expression ']'
  714                          | noptr-abstract-declarator • '[' ']' attribute-specifier-seq
  716                          | noptr-abstract-declarator • '[' constant-expression ']' attribute-specifier-seq
  892 ptr-abstract-declarator: noptr-abstract-declarator •

    '('  shift, and go to state 333
    '['  shift, and go to state 1409

    '('       [reduce using rule 892 (ptr-abstract-declarator)]
    $default  reduce using rule 892 (ptr-abstract-declarator)

    parameters-and-qualifiers  go to state 1671


State 1404

  709 noptr-abstract-declarator: parameters-and-qualifiers •

    $default  reduce using rule 709 (noptr-abstract-declarator)


State 1405

  718 noptr-abstract-declarator: '(' ptr-abstract-declarator • ')'

    ')'  shift, and go to state 1672


State 1406

  893 ptr-abstract-declarator: ptr-operator •
  894                        | ptr-operator • ptr-abstract-declarator

    IDENTIFIER  shift, and go to state 258
    '('         shift, and go to state 943
    '&'         shift, and go to state 7
    "::"        shift, and go to state 9
    '['         shift, and go to state 945
    "&&"        shift, and go to state 16
    "decltype"  shift, and go to state 135
    '*'         shift, and go to state 32

    $default  reduce using rule 893 (ptr-abstract-declarator)

    class-name                 go to state 66
    decltype-specifier         go to state 139
    enum-name                  go to state 85
    namespace-alias            go to state 100
    namespace-name             go to state 103
    nested-name-specifier      go to state 522
    noptr-abstract-declarator  go to state 1403
    parameters-and-qualifiers  go to state 1404
    ptr-abstract-declarator    go to state 1415
    ptr-operator               go to state 1406
    simple-template-id         go to state 142
    template-name              go to state 143
    type-name                  go to state 144
    typedef-name               go to state 127


State 1407

  711 noptr-abstract-declarator: '[' ']' •
  715                          | '[' ']' • attribute-specifier-seq

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    '['       [reduce using rule 711 (noptr-abstract-declarator)]
    $default  reduce using rule 711 (noptr-abstract-declarator)

    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 1673


State 1408

  713 noptr-abstract-declarator: '[' constant-expression • ']'
  717                          | '[' constant-expression • ']' attribute-specifier-seq

    ']'  shift, and go to state 1674


State 1409

  710 noptr-abstract-declarator: noptr-abstract-declarator '[' • ']'
  712                          | noptr-abstract-declarator '[' • constant-expression ']'
  714                          | noptr-abstract-declarator '[' • ']' attribute-specifier-seq
  716                          | noptr-abstract-declarator '[' • constant-expression ']' attribute-specifier-seq

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    ']'                 shift, and go to state 1675
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    additive-expression                  go to state 404
    and-expression                       go to state 405
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 412
    constant-expression                  go to state 1676
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 435
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 1410

    2 abstract-declarator: noptr-abstract-declarator parameters-and-qualifiers • trailing-return-type
  708 noptr-abstract-declarator: noptr-abstract-declarator parameters-and-qualifiers •

    "->"  shift, and go to state 740

    $default  reduce using rule 708 (noptr-abstract-declarator)

    trailing-return-type  go to state 1677


State 1411

  720 noptr-abstract-pack-declarator: noptr-abstract-pack-declarator '[' • ']'
  721                               | noptr-abstract-pack-declarator '[' • constant-expression ']'
  722                               | noptr-abstract-pack-declarator '[' • ']' attribute-specifier-seq
  723                               | noptr-abstract-pack-declarator '[' • constant-expression ']' attribute-specifier-seq

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    ']'                 shift, and go to state 1678
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    additive-expression                  go to state 404
    and-expression                       go to state 405
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 412
    constant-expression                  go to state 1679
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 435
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 1412

  719 noptr-abstract-pack-declarator: noptr-abstract-pack-declarator parameters-and-qualifiers •

    $default  reduce using rule 719 (noptr-abstract-pack-declarator)


State 1413

    3 abstract-declarator: parameters-and-qualifiers trailing-return-type •

    $default  reduce using rule 3 (abstract-declarator)


State 1414

    6 abstract-pack-declarator: ptr-operator abstract-pack-declarator •

    $default  reduce using rule 6 (abstract-pack-declarator)


State 1415

  894 ptr-abstract-declarator: ptr-operator ptr-abstract-declarator •

    $default  reduce using rule 894 (ptr-abstract-declarator)


State 1416

  867 postfix-expression: typename-specifier '(' ')' •

    $default  reduce using rule 867 (postfix-expression)


State 1417

  868 postfix-expression: typename-specifier '(' expression-list • ')'

    ')'  shift, and go to state 1680


State 1418

   22 asm-declaration: "asm" '(' string-literal ')' ';' •

    $default  reduce using rule 22 (asm-declaration)


State 1419

   57 attribute-using-prefix: "using" attribute-namespace ':' •

    $default  reduce using rule 57 (attribute-using-prefix)


State 1420

   45 attribute-list: attribute-list ',' attribute •
   47               | attribute-list ',' attribute • "..."

    "..."  shift, and go to state 1681

    $default  reduce using rule 45 (attribute-list)


State 1421

   50 attribute-specifier: '[' '[' attribute-list ']' ']' •

    $default  reduce using rule 50 (attribute-specifier)


State 1422

   49 attribute-scoped-token: attribute-namespace "::" IDENTIFIER •

    $default  reduce using rule 49 (attribute-scoped-token)


State 1423

   65 balanced-token: ANY_TOKEN_OTHER_THAN_PARENTHESIS_BRACKET_BRACE •

    $default  reduce using rule 65 (balanced-token)


State 1424

   59 balanced-token: '(' • ')'
   60               | '(' • balanced-token-seq ')'

    ANY_TOKEN_OTHER_THAN_PARENTHESIS_BRACKET_BRACE  shift, and go to state 1423
    '('                                             shift, and go to state 1424
    ')'                                             shift, and go to state 1682
    '['                                             shift, and go to state 1426
    '{'                                             shift, and go to state 1427

    balanced-token      go to state 1428
    balanced-token-seq  go to state 1683


State 1425

   40 attribute-argument-clause: '(' ')' •

    $default  reduce using rule 40 (attribute-argument-clause)


State 1426

   61 balanced-token: '[' • ']'
   62               | '[' • balanced-token-seq ']'

    ANY_TOKEN_OTHER_THAN_PARENTHESIS_BRACKET_BRACE  shift, and go to state 1423
    '('                                             shift, and go to state 1424
    '['                                             shift, and go to state 1426
    ']'                                             shift, and go to state 1684
    '{'                                             shift, and go to state 1427

    balanced-token      go to state 1428
    balanced-token-seq  go to state 1685


State 1427

   63 balanced-token: '{' • '}'
   64               | '{' • balanced-token-seq '}'

    ANY_TOKEN_OTHER_THAN_PARENTHESIS_BRACKET_BRACE  shift, and go to state 1423
    '('                                             shift, and go to state 1424
    '['                                             shift, and go to state 1426
    '{'                                             shift, and go to state 1427
    '}'                                             shift, and go to state 1686

    balanced-token      go to state 1428
    balanced-token-seq  go to state 1687


State 1428

   66 balanced-token-seq: balanced-token •

    $default  reduce using rule 66 (balanced-token-seq)


State 1429

   41 attribute-argument-clause: '(' balanced-token-seq • ')'
   67 balanced-token-seq: balanced-token-seq • balanced-token

    ANY_TOKEN_OTHER_THAN_PARENTHESIS_BRACKET_BRACE  shift, and go to state 1423
    '('                                             shift, and go to state 1424
    ')'                                             shift, and go to state 1688
    '['                                             shift, and go to state 1426
    '{'                                             shift, and go to state 1427

    balanced-token  go to state 1689


State 1430

   51 attribute-specifier: '[' '[' attribute-using-prefix attribute-list ']' • ']'

    ']'  shift, and go to state 1690


State 1431

  825 parameter-declaration: "this" decl-specifier-seq '=' • initializer-clause

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 939
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 1141
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    braced-init-list                     go to state 1142
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    initializer-clause                   go to state 1691
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 1432

  821 parameter-declaration: "this" decl-specifier-seq abstract-declarator •
  829                      | "this" decl-specifier-seq abstract-declarator • '=' initializer-clause

    '='  shift, and go to state 1692

    $default  reduce using rule 821 (parameter-declaration)


State 1433

  809 parameter-declaration: "this" decl-specifier-seq declarator •
  813                      | "this" decl-specifier-seq declarator • '=' initializer-clause

    '='  shift, and go to state 1693

    $default  reduce using rule 809 (parameter-declaration)


State 1434

  808 parameter-declaration: attribute-specifier-seq "this" decl-specifier-seq • declarator
  812                      | attribute-specifier-seq "this" decl-specifier-seq • declarator '=' initializer-clause
  816                      | attribute-specifier-seq "this" decl-specifier-seq •
  820                      | attribute-specifier-seq "this" decl-specifier-seq • abstract-declarator
  824                      | attribute-specifier-seq "this" decl-specifier-seq • '=' initializer-clause
  828                      | attribute-specifier-seq "this" decl-specifier-seq • abstract-declarator '=' initializer-clause

    IDENTIFIER  shift, and go to state 148
    '='         shift, and go to state 1694
    '('         shift, and go to state 973
    "..."       shift, and go to state 974
    '&'         shift, and go to state 7
    "::"        shift, and go to state 9
    '['         shift, and go to state 945
    "&&"        shift, and go to state 16
    "operator"  shift, and go to state 17
    "decltype"  shift, and go to state 135
    '*'         shift, and go to state 32
    '~'         shift, and go to state 36

    "..."     [reduce using rule 816 (parameter-declaration)]
    $default  reduce using rule 816 (parameter-declaration)

    abstract-declarator             go to state 1695
    abstract-pack-declarator        go to state 947
    class-name                      go to state 66
    conversion-function-id          go to state 69
    declarator                      go to state 1696
    declarator-id                   go to state 76
    decltype-specifier              go to state 139
    enum-name                       go to state 85
    id-expression                   go to state 94
    literal-operator-id             go to state 96
    namespace-alias                 go to state 100
    namespace-name                  go to state 103
    nested-name-specifier           go to state 149
    noptr-abstract-declarator       go to state 948
    noptr-abstract-pack-declarator  go to state 949
    noptr-declarator                go to state 107
    operator-function-id            go to state 109
    parameters-and-qualifiers       go to state 950
    ptr-abstract-declarator         go to state 951
    ptr-declarator                  go to state 111
    ptr-operator                    go to state 977
    qualified-id                    go to state 113
    simple-template-id              go to state 115
    template-id                     go to state 121
    template-name                   go to state 143
    type-name                       go to state 144
    typedef-name                    go to state 127
    unqualified-id                  go to state 130


State 1435

  822 parameter-declaration: attribute-specifier-seq decl-specifier-seq '=' • initializer-clause

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 939
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 1141
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    braced-init-list                     go to state 1142
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    initializer-clause                   go to state 1697
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 1436

  818 parameter-declaration: attribute-specifier-seq decl-specifier-seq abstract-declarator •
  826                      | attribute-specifier-seq decl-specifier-seq abstract-declarator • '=' initializer-clause

    '='  shift, and go to state 1698

    $default  reduce using rule 818 (parameter-declaration)


State 1437

  806 parameter-declaration: attribute-specifier-seq decl-specifier-seq declarator •
  810                      | attribute-specifier-seq decl-specifier-seq declarator • '=' initializer-clause

    '='  shift, and go to state 1699

    $default  reduce using rule 806 (parameter-declaration)


State 1438

  823 parameter-declaration: decl-specifier-seq '=' initializer-clause •

    $default  reduce using rule 823 (parameter-declaration)


State 1439

  231 declarator-id: "..." • id-expression
  832 parameter-declaration-clause: "..." •

    IDENTIFIER  shift, and go to state 148
    "::"        shift, and go to state 9
    "operator"  shift, and go to state 17
    "decltype"  shift, and go to state 135
    '~'         shift, and go to state 36

    $default  reduce using rule 832 (parameter-declaration-clause)

    class-name              go to state 66
    conversion-function-id  go to state 69
    decltype-specifier      go to state 139
    enum-name               go to state 85
    id-expression           go to state 152
    literal-operator-id     go to state 96
    namespace-alias         go to state 100
    namespace-name          go to state 103
    nested-name-specifier   go to state 153
    operator-function-id    go to state 109
    qualified-id            go to state 113
    simple-template-id      go to state 115
    template-id             go to state 121
    template-name           go to state 143
    type-name               go to state 144
    typedef-name            go to state 127
    unqualified-id          go to state 130


State 1440

  893 ptr-abstract-declarator: ptr-operator •
  894                        | ptr-operator • ptr-abstract-declarator
  896 ptr-declarator: ptr-operator • ptr-declarator

    IDENTIFIER  shift, and go to state 148
    '('         shift, and go to state 973
    "..."       shift, and go to state 6
    '&'         shift, and go to state 7
    "::"        shift, and go to state 9
    '['         shift, and go to state 945
    "&&"        shift, and go to state 16
    "operator"  shift, and go to state 17
    "decltype"  shift, and go to state 135
    '*'         shift, and go to state 32
    '~'         shift, and go to state 36

    $default  reduce using rule 893 (ptr-abstract-declarator)

    class-name                 go to state 66
    conversion-function-id     go to state 69
    declarator-id              go to state 76
    decltype-specifier         go to state 139
    enum-name                  go to state 85
    id-expression              go to state 94
    literal-operator-id        go to state 96
    namespace-alias            go to state 100
    namespace-name             go to state 103
    nested-name-specifier      go to state 149
    noptr-abstract-declarator  go to state 1403
    noptr-declarator           go to state 150
    operator-function-id       go to state 109
    parameters-and-qualifiers  go to state 1404
    ptr-abstract-declarator    go to state 1415
    ptr-declarator             go to state 337
    ptr-operator               go to state 1440
    qualified-id               go to state 113
    simple-template-id         go to state 115
    template-id                go to state 121
    template-name              go to state 143
    type-name                  go to state 144
    typedef-name               go to state 127
    unqualified-id             go to state 130


State 1441

  827 parameter-declaration: decl-specifier-seq abstract-declarator '=' • initializer-clause

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 939
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 1141
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    braced-init-list                     go to state 1142
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    initializer-clause                   go to state 1700
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 1442

  811 parameter-declaration: decl-specifier-seq declarator '=' • initializer-clause

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 939
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 1141
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    braced-init-list                     go to state 1142
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    initializer-clause                   go to state 1701
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 1443

  1109 type-parameter: template-head type-parameter-key IDENTIFIER •
  1112               | template-head type-parameter-key IDENTIFIER • '=' id-expression

    '='  shift, and go to state 1702

    $default  reduce using rule 1109 (type-parameter)


State 1444

  1111 type-parameter: template-head type-parameter-key '=' • id-expression

    IDENTIFIER  shift, and go to state 148
    "::"        shift, and go to state 9
    "operator"  shift, and go to state 17
    "decltype"  shift, and go to state 135
    '~'         shift, and go to state 36

    class-name              go to state 66
    conversion-function-id  go to state 69
    decltype-specifier      go to state 139
    enum-name               go to state 85
    id-expression           go to state 1703
    literal-operator-id     go to state 96
    namespace-alias         go to state 100
    namespace-name          go to state 103
    nested-name-specifier   go to state 153
    operator-function-id    go to state 109
    qualified-id            go to state 113
    simple-template-id      go to state 115
    template-id             go to state 121
    template-name           go to state 143
    type-name               go to state 144
    typedef-name            go to state 127
    unqualified-id          go to state 130


State 1445

  1108 type-parameter: template-head type-parameter-key "..." •
  1110               | template-head type-parameter-key "..." • IDENTIFIER

    IDENTIFIER  shift, and go to state 1704

    $default  reduce using rule 1108 (type-parameter)


State 1446

  1070 template-parameter-list: template-parameter-list ',' template-parameter •

    $default  reduce using rule 1070 (template-parameter-list)


State 1447

  1060 template-head: "template" '<' template-parameter-list '>' requires-clause •

    $default  reduce using rule 1060 (template-head)


State 1448

  1106 type-parameter: type-constraint IDENTIFIER '=' • type-id

    IDENTIFIER  shift, and go to state 161
    "::"        shift, and go to state 9
    "class"     shift, and go to state 12
    "struct"    shift, and go to state 13
    "union"     shift, and go to state 14
    "const"     shift, and go to state 18
    "volatile"  shift, and go to state 19
    "decltype"  shift, and go to state 26
    "enum"      shift, and go to state 136
    "auto"      shift, and go to state 37
    "char"      shift, and go to state 38
    "char8_t"   shift, and go to state 39
    "char16_t"  shift, and go to state 40
    "char32_t"  shift, and go to state 41
    "wchar_t"   shift, and go to state 42
    "bool"      shift, and go to state 43
    "short"     shift, and go to state 44
    "int"       shift, and go to state 45
    "long"      shift, and go to state 46
    "signed"    shift, and go to state 47
    "unsigned"  shift, and go to state 48
    "float"     shift, and go to state 49
    "double"    shift, and go to state 50
    "void"      shift, and go to state 51
    "typename"  shift, and go to state 56

    class-key                   go to state 210
    class-name                  go to state 66
    concept-name                go to state 68
    cv-qualifier                go to state 70
    decltype-specifier          go to state 77
    elaborated-enum-specifier   go to state 80
    elaborated-type-specifier   go to state 81
    enum-name                   go to state 85
    namespace-alias             go to state 100
    namespace-name              go to state 103
    nested-name-specifier       go to state 213
    placeholder-type-specifier  go to state 110
    simple-template-id          go to state 142
    simple-type-specifier       go to state 116
    template-name               go to state 216
    type-constraint             go to state 124
    type-id                     go to state 1705
    type-name                   go to state 125
    type-specifier              go to state 217
    type-specifier-seq          go to state 452
    typedef-name                go to state 127
    typename-specifier          go to state 128


State 1449

  1105 type-parameter: type-constraint '=' type-id •

    $default  reduce using rule 1105 (type-parameter)


State 1450

  1104 type-parameter: type-constraint "..." IDENTIFIER •

    $default  reduce using rule 1104 (type-parameter)


State 1451

  1100 type-parameter: type-parameter-key IDENTIFIER '=' • type-id

    IDENTIFIER  shift, and go to state 161
    "::"        shift, and go to state 9
    "class"     shift, and go to state 12
    "struct"    shift, and go to state 13
    "union"     shift, and go to state 14
    "const"     shift, and go to state 18
    "volatile"  shift, and go to state 19
    "decltype"  shift, and go to state 26
    "enum"      shift, and go to state 136
    "auto"      shift, and go to state 37
    "char"      shift, and go to state 38
    "char8_t"   shift, and go to state 39
    "char16_t"  shift, and go to state 40
    "char32_t"  shift, and go to state 41
    "wchar_t"   shift, and go to state 42
    "bool"      shift, and go to state 43
    "short"     shift, and go to state 44
    "int"       shift, and go to state 45
    "long"      shift, and go to state 46
    "signed"    shift, and go to state 47
    "unsigned"  shift, and go to state 48
    "float"     shift, and go to state 49
    "double"    shift, and go to state 50
    "void"      shift, and go to state 51
    "typename"  shift, and go to state 56

    class-key                   go to state 210
    class-name                  go to state 66
    concept-name                go to state 68
    cv-qualifier                go to state 70
    decltype-specifier          go to state 77
    elaborated-enum-specifier   go to state 80
    elaborated-type-specifier   go to state 81
    enum-name                   go to state 85
    namespace-alias             go to state 100
    namespace-name              go to state 103
    nested-name-specifier       go to state 213
    placeholder-type-specifier  go to state 110
    simple-template-id          go to state 142
    simple-type-specifier       go to state 116
    template-name               go to state 216
    type-constraint             go to state 124
    type-id                     go to state 1706
    type-name                   go to state 125
    type-specifier              go to state 217
    type-specifier-seq          go to state 452
    typedef-name                go to state 127
    typename-specifier          go to state 128


State 1452

  1099 type-parameter: type-parameter-key '=' type-id •

    $default  reduce using rule 1099 (type-parameter)


State 1453

  1098 type-parameter: type-parameter-key "..." IDENTIFIER •

    $default  reduce using rule 1098 (type-parameter)


State 1454

  750 octal-escape-sequence: '\\' octal-digit octal-digit •
  751                      | '\\' octal-digit octal-digit • octal-digit

    '0'  shift, and go to state 912
    '1'  shift, and go to state 913
    '2'  shift, and go to state 915
    '3'  shift, and go to state 916
    '4'  shift, and go to state 917
    '5'  shift, and go to state 918
    '6'  shift, and go to state 919
    '7'  shift, and go to state 920

    $default  reduce using rule 750 (octal-escape-sequence)

    octal-digit  go to state 1707


State 1455

  425 hex-quad: hexadecimal-digit hexadecimal-digit • hexadecimal-digit hexadecimal-digit

    '0'  shift, and go to state 870
    '1'  shift, and go to state 871
    '2'  shift, and go to state 873
    '3'  shift, and go to state 874
    '4'  shift, and go to state 875
    '5'  shift, and go to state 876
    '6'  shift, and go to state 877
    '7'  shift, and go to state 878
    '8'  shift, and go to state 879
    '9'  shift, and go to state 880
    'e'  shift, and go to state 881
    'E'  shift, and go to state 882
    'f'  shift, and go to state 883
    'F'  shift, and go to state 884
    'a'  shift, and go to state 885
    'b'  shift, and go to state 886
    'c'  shift, and go to state 887
    'd'  shift, and go to state 888
    'A'  shift, and go to state 889
    'B'  shift, and go to state 890
    'C'  shift, and go to state 891
    'D'  shift, and go to state 892

    hexadecimal-digit  go to state 1708


State 1456

  1149 universal-character-name: "\\U" hex-quad hex-quad •

    $default  reduce using rule 1149 (universal-character-name)


State 1457

  917 r-char: EXCEPT_RIGHT_PARENTHESIS_FOLLOWED_BY_THE_INITIAL_D_CHAR_SEQUENCE_FOLLOWED_BY_QUOTATION_MARK •

    $default  reduce using rule 917 (r-char)


State 1458

  920 raw-string: '"' '(' ')' • '"'
  924           | '"' '(' ')' • d-char-sequence '"'

    EXCEPT_SPACE_PARENTHESIS_REVERSE_SOLIDUS_TABULATION_LINE_TABULATION_FORM_FEED_AND_NEW_LINE  shift, and go to state 1013
    '"'                                                                                         shift, and go to state 1709

    d-char           go to state 1015
    d-char-sequence  go to state 1710


State 1459

  918 r-char-sequence: r-char •

    $default  reduce using rule 918 (r-char-sequence)


State 1460

  919 r-char-sequence: r-char-sequence • r-char
  922 raw-string: '"' '(' r-char-sequence • ')' '"'
  926           | '"' '(' r-char-sequence • ')' d-char-sequence '"'

    EXCEPT_RIGHT_PARENTHESIS_FOLLOWED_BY_THE_INITIAL_D_CHAR_SEQUENCE_FOLLOWED_BY_QUOTATION_MARK  shift, and go to state 1457
    ')'                                                                                          shift, and go to state 1711

    r-char  go to state 1712


State 1461

  921 raw-string: '"' d-char-sequence '(' • ')' '"'
  923           | '"' d-char-sequence '(' • r-char-sequence ')' '"'
  925           | '"' d-char-sequence '(' • ')' d-char-sequence '"'
  927           | '"' d-char-sequence '(' • r-char-sequence ')' d-char-sequence '"'

    EXCEPT_RIGHT_PARENTHESIS_FOLLOWED_BY_THE_INITIAL_D_CHAR_SEQUENCE_FOLLOWED_BY_QUOTATION_MARK  shift, and go to state 1457
    ')'                                                                                          shift, and go to state 1713

    r-char           go to state 1459
    r-char-sequence  go to state 1714


State 1462

  191 d-char-sequence: d-char-sequence d-char •

    $default  reduce using rule 191 (d-char-sequence)


State 1463

  270 elaborated-type-specifier: class-key attribute-specifier-seq nested-name-specifier IDENTIFIER •
  663 nested-name-specifier: nested-name-specifier IDENTIFIER • "::"
  1066 template-name: IDENTIFIER •

    "::"  shift, and go to state 726

    "::"      [reduce using rule 270 (elaborated-type-specifier)]
    '<'       reduce using rule 270 (elaborated-type-specifier)
    '<'       [reduce using rule 1066 (template-name)]
    $default  reduce using rule 270 (elaborated-type-specifier)


State 1464

  1046 string-literal: encoding-prefix '"' s-char-sequence '"' •

    $default  reduce using rule 1046 (string-literal)


State 1465

  761 operator-function-id: "operator" overloadable-operator '<' template-argument-list '>' •

    $default  reduce using rule 761 (operator-function-id)


State 1466

  647 named-namespace-definition: "inline" "namespace" IDENTIFIER '{' namespace-body • '}'

    '}'  shift, and go to state 1715


State 1467

  1150 unnamed-namespace-definition: "inline" "namespace" '{' namespace-body '}' •

    $default  reduce using rule 1150 (unnamed-namespace-definition)


State 1468

  649 named-namespace-definition: "inline" "namespace" attribute-specifier-seq IDENTIFIER '{' • namespace-body '}'

    IDENTIFIER        shift, and go to state 1
    "using"           shift, and go to state 2
    ';'               shift, and go to state 3
    "alignas"         shift, and go to state 4
    '('               shift, and go to state 5
    "..."             shift, and go to state 6
    '&'               shift, and go to state 7
    "asm"             shift, and go to state 8
    "::"              shift, and go to state 9
    '['               shift, and go to state 10
    "virtual"         shift, and go to state 11
    "class"           shift, and go to state 12
    "struct"          shift, and go to state 13
    "union"           shift, and go to state 14
    "template"        shift, and go to state 15
    "&&"              shift, and go to state 16
    "operator"        shift, and go to state 17
    "const"           shift, and go to state 18
    "volatile"        shift, and go to state 19
    "friend"          shift, and go to state 20
    "typedef"         shift, and go to state 21
    "constexpr"       shift, and go to state 22
    "consteval"       shift, and go to state 23
    "constinit"       shift, and go to state 24
    "inline"          shift, and go to state 25
    "decltype"        shift, and go to state 26
    "enum"            shift, and go to state 27
    "extern"          shift, and go to state 28
    "explicit"        shift, and go to state 29
    "export"          shift, and go to state 30
    "export-keyword"  shift, and go to state 158
    '*'               shift, and go to state 32
    "import-keyword"  shift, and go to state 34
    "namespace"       shift, and go to state 35
    '~'               shift, and go to state 36
    "auto"            shift, and go to state 37
    "char"            shift, and go to state 38
    "char8_t"         shift, and go to state 39
    "char16_t"        shift, and go to state 40
    "char32_t"        shift, and go to state 41
    "wchar_t"         shift, and go to state 42
    "bool"            shift, and go to state 43
    "short"           shift, and go to state 44
    "int"             shift, and go to state 45
    "long"            shift, and go to state 46
    "signed"          shift, and go to state 47
    "unsigned"        shift, and go to state 48
    "float"           shift, and go to state 49
    "double"          shift, and go to state 50
    "void"            shift, and go to state 51
    "static_assert"   shift, and go to state 52
    "static"          shift, and go to state 53
    "thread_local"    shift, and go to state 54
    "mutable"         shift, and go to state 55
    "typename"        shift, and go to state 56

    alias-declaration                go to state 57
    alignment-specifier              go to state 58
    asm-declaration                  go to state 59
    attribute-declaration            go to state 60
    attribute-specifier              go to state 61
    attribute-specifier-seq          go to state 62
    block-declaration                go to state 63
    class-head                       go to state 64
    class-key                        go to state 65
    class-name                       go to state 66
    class-specifier                  go to state 67
    concept-name                     go to state 68
    conversion-function-id           go to state 69
    cv-qualifier                     go to state 70
    decl-specifier                   go to state 71
    decl-specifier-seq               go to state 72
    declaration                      go to state 73
    declaration-seq                  go to state 570
    declarator                       go to state 75
    declarator-id                    go to state 76
    decltype-specifier               go to state 77
    deduction-guide                  go to state 78
    defining-type-specifier          go to state 79
    elaborated-enum-specifier        go to state 80
    elaborated-type-specifier        go to state 81
    empty-declaration                go to state 82
    enum-head                        go to state 83
    enum-key                         go to state 84
    enum-name                        go to state 85
    enum-specifier                   go to state 86
    explicit-instantiation           go to state 87
    explicit-specialization          go to state 88
    explicit-specifier               go to state 89
    export-declaration               go to state 90
    function-definition              go to state 91
    function-specifier               go to state 92
    id-expression                    go to state 94
    linkage-specification            go to state 95
    literal-operator-id              go to state 96
    module-import-declaration        go to state 98
    named-namespace-definition       go to state 99
    namespace-alias                  go to state 100
    namespace-alias-definition       go to state 101
    namespace-body                   go to state 1716
    namespace-definition             go to state 102
    namespace-name                   go to state 103
    nested-name-specifier            go to state 104
    nested-namespace-definition      go to state 105
    nodeclspec-function-declaration  go to state 106
    noptr-declarator                 go to state 107
    opaque-enum-declaration          go to state 108
    operator-function-id             go to state 109
    placeholder-type-specifier       go to state 110
    ptr-declarator                   go to state 111
    ptr-operator                     go to state 112
    qualified-id                     go to state 113
    simple-declaration               go to state 114
    simple-template-id               go to state 115
    simple-type-specifier            go to state 116
    static_assert-declaration        go to state 117
    storage-class-specifier          go to state 118
    template-declaration             go to state 119
    template-head                    go to state 120
    template-id                      go to state 121
    template-name                    go to state 122
    type-constraint                  go to state 124
    type-name                        go to state 125
    type-specifier                   go to state 126
    typedef-name                     go to state 127
    typename-specifier               go to state 128
    unnamed-namespace-definition     go to state 129
    unqualified-id                   go to state 130
    using-declaration                go to state 131
    using-directive                  go to state 132
    using-enum-declaration           go to state 133


State 1469

  1152 unnamed-namespace-definition: "inline" "namespace" attribute-specifier-seq '{' namespace-body • '}'

    '}'  shift, and go to state 1717


State 1470

  338 expression: expression ',' assignment-expression •

    $default  reduce using rule 338 (expression)


State 1471

   26 assignment-expression: logical-or-expression assignment-operator initializer-clause •

    $default  reduce using rule 26 (assignment-expression)


State 1472

  556 linkage-specification: "extern" string-literal '{' declaration-seq '}' •

    $default  reduce using rule 556 (linkage-specification)


State 1473

  627 module-declaration: "export-keyword" "module-keyword" module-name attribute-specifier-seq ';' •

    $default  reduce using rule 627 (module-declaration)


State 1474

  625 module-declaration: "export-keyword" "module-keyword" module-name module-partition ';' •

    $default  reduce using rule 625 (module-declaration)


State 1475

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  629 module-declaration: "export-keyword" "module-keyword" module-name module-partition attribute-specifier-seq • ';'

    ';'        shift, and go to state 1718
    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    alignment-specifier  go to state 58
    attribute-specifier  go to state 265


State 1476

  630 module-declaration: "module-keyword" module-name module-partition attribute-specifier-seq ';' •

    $default  reduce using rule 630 (module-declaration)


State 1477

  915 qualified-namespace-specifier: nested-name-specifier namespace-name •

    $default  reduce using rule 915 (qualified-namespace-specifier)


State 1478

  652 namespace-alias-definition: "namespace" IDENTIFIER '=' qualified-namespace-specifier ';' •

    $default  reduce using rule 652 (namespace-alias-definition)


State 1479

  648 named-namespace-definition: "namespace" IDENTIFIER '{' namespace-body '}' •

    $default  reduce using rule 648 (named-namespace-definition)


State 1480

  650 named-namespace-definition: "namespace" attribute-specifier-seq IDENTIFIER '{' namespace-body • '}'

    '}'  shift, and go to state 1719


State 1481

  1153 unnamed-namespace-definition: "namespace" attribute-specifier-seq '{' namespace-body '}' •

    $default  reduce using rule 1153 (unnamed-namespace-definition)


State 1482

  666 nested-namespace-definition: "namespace" enclosing-namespace-specifier "::" IDENTIFIER '{' • namespace-body '}'

    IDENTIFIER        shift, and go to state 1
    "using"           shift, and go to state 2
    ';'               shift, and go to state 3
    "alignas"         shift, and go to state 4
    '('               shift, and go to state 5
    "..."             shift, and go to state 6
    '&'               shift, and go to state 7
    "asm"             shift, and go to state 8
    "::"              shift, and go to state 9
    '['               shift, and go to state 10
    "virtual"         shift, and go to state 11
    "class"           shift, and go to state 12
    "struct"          shift, and go to state 13
    "union"           shift, and go to state 14
    "template"        shift, and go to state 15
    "&&"              shift, and go to state 16
    "operator"        shift, and go to state 17
    "const"           shift, and go to state 18
    "volatile"        shift, and go to state 19
    "friend"          shift, and go to state 20
    "typedef"         shift, and go to state 21
    "constexpr"       shift, and go to state 22
    "consteval"       shift, and go to state 23
    "constinit"       shift, and go to state 24
    "inline"          shift, and go to state 25
    "decltype"        shift, and go to state 26
    "enum"            shift, and go to state 27
    "extern"          shift, and go to state 28
    "explicit"        shift, and go to state 29
    "export"          shift, and go to state 30
    "export-keyword"  shift, and go to state 158
    '*'               shift, and go to state 32
    "import-keyword"  shift, and go to state 34
    "namespace"       shift, and go to state 35
    '~'               shift, and go to state 36
    "auto"            shift, and go to state 37
    "char"            shift, and go to state 38
    "char8_t"         shift, and go to state 39
    "char16_t"        shift, and go to state 40
    "char32_t"        shift, and go to state 41
    "wchar_t"         shift, and go to state 42
    "bool"            shift, and go to state 43
    "short"           shift, and go to state 44
    "int"             shift, and go to state 45
    "long"            shift, and go to state 46
    "signed"          shift, and go to state 47
    "unsigned"        shift, and go to state 48
    "float"           shift, and go to state 49
    "double"          shift, and go to state 50
    "void"            shift, and go to state 51
    "static_assert"   shift, and go to state 52
    "static"          shift, and go to state 53
    "thread_local"    shift, and go to state 54
    "mutable"         shift, and go to state 55
    "typename"        shift, and go to state 56

    alias-declaration                go to state 57
    alignment-specifier              go to state 58
    asm-declaration                  go to state 59
    attribute-declaration            go to state 60
    attribute-specifier              go to state 61
    attribute-specifier-seq          go to state 62
    block-declaration                go to state 63
    class-head                       go to state 64
    class-key                        go to state 65
    class-name                       go to state 66
    class-specifier                  go to state 67
    concept-name                     go to state 68
    conversion-function-id           go to state 69
    cv-qualifier                     go to state 70
    decl-specifier                   go to state 71
    decl-specifier-seq               go to state 72
    declaration                      go to state 73
    declaration-seq                  go to state 570
    declarator                       go to state 75
    declarator-id                    go to state 76
    decltype-specifier               go to state 77
    deduction-guide                  go to state 78
    defining-type-specifier          go to state 79
    elaborated-enum-specifier        go to state 80
    elaborated-type-specifier        go to state 81
    empty-declaration                go to state 82
    enum-head                        go to state 83
    enum-key                         go to state 84
    enum-name                        go to state 85
    enum-specifier                   go to state 86
    explicit-instantiation           go to state 87
    explicit-specialization          go to state 88
    explicit-specifier               go to state 89
    export-declaration               go to state 90
    function-definition              go to state 91
    function-specifier               go to state 92
    id-expression                    go to state 94
    linkage-specification            go to state 95
    literal-operator-id              go to state 96
    module-import-declaration        go to state 98
    named-namespace-definition       go to state 99
    namespace-alias                  go to state 100
    namespace-alias-definition       go to state 101
    namespace-body                   go to state 1720
    namespace-definition             go to state 102
    namespace-name                   go to state 103
    nested-name-specifier            go to state 104
    nested-namespace-definition      go to state 105
    nodeclspec-function-declaration  go to state 106
    noptr-declarator                 go to state 107
    opaque-enum-declaration          go to state 108
    operator-function-id             go to state 109
    placeholder-type-specifier       go to state 110
    ptr-declarator                   go to state 111
    ptr-operator                     go to state 112
    qualified-id                     go to state 113
    simple-declaration               go to state 114
    simple-template-id               go to state 115
    simple-type-specifier            go to state 116
    static_assert-declaration        go to state 117
    storage-class-specifier          go to state 118
    template-declaration             go to state 119
    template-head                    go to state 120
    template-id                      go to state 121
    template-name                    go to state 122
    type-constraint                  go to state 124
    type-name                        go to state 125
    type-specifier                   go to state 126
    typedef-name                     go to state 127
    typename-specifier               go to state 128
    unnamed-namespace-definition     go to state 129
    unqualified-id                   go to state 130
    using-declaration                go to state 131
    using-directive                  go to state 132
    using-enum-declaration           go to state 133


State 1483

  278 enclosing-namespace-specifier: enclosing-namespace-specifier "::" "inline" IDENTIFIER •
  667 nested-namespace-definition: "namespace" enclosing-namespace-specifier "::" "inline" IDENTIFIER • '{' namespace-body '}'

    '{'  shift, and go to state 1721

    $default  reduce using rule 278 (enclosing-namespace-specifier)


State 1484

  1038 static_assert-declaration: "static_assert" '(' constant-expression ')' ';' •

    $default  reduce using rule 1038 (static_assert-declaration)


State 1485

  1039 static_assert-declaration: "static_assert" '(' constant-expression ',' string-literal • ')' ';'

    ')'  shift, and go to state 1722


State 1486

  1185 using-directive: attribute-specifier-seq "using" "namespace" namespace-name ';' •

    $default  reduce using rule 1185 (using-directive)


State 1487

  1187 using-directive: attribute-specifier-seq "using" "namespace" nested-name-specifier namespace-name • ';'

    ';'  shift, and go to state 1723


State 1488

   21 asm-declaration: attribute-specifier-seq "asm" '(' string-literal ')' • ';'

    ';'  shift, and go to state 1724


State 1489

  980 simple-declaration: attribute-specifier-seq decl-specifier-seq '[' identifier-list ']' • initializer ';'

    '='  shift, and go to state 1280
    '('  shift, and go to state 647
    '{'  shift, and go to state 939

    brace-or-equal-initializer  go to state 649
    braced-init-list            go to state 650
    initializer                 go to state 1725


State 1490

  408 function-definition: attribute-specifier-seq decl-specifier-seq declarator requires-clause function-body •

    $default  reduce using rule 408 (function-definition)


State 1491

  404 function-definition: attribute-specifier-seq decl-specifier-seq declarator virt-specifier-seq function-body •

    $default  reduce using rule 404 (function-definition)


State 1492

  466 identifier-list: identifier-list • ',' IDENTIFIER
  982 simple-declaration: attribute-specifier-seq decl-specifier-seq ref-qualifier '[' identifier-list • ']' initializer ';'

    ','  shift, and go to state 1138
    ']'  shift, and go to state 1726


State 1493

  291 enum-head: enum-key attribute-specifier-seq enum-head-name enum-base •

    $default  reduce using rule 291 (enum-head)


State 1494

  609 member-declarator: IDENTIFIER ':' constant-expression •
  613                  | IDENTIFIER ':' constant-expression • brace-or-equal-initializer

    '='  shift, and go to state 1280
    '{'  shift, and go to state 939

    $default  reduce using rule 609 (member-declarator)

    brace-or-equal-initializer  go to state 1727
    braced-init-list            go to state 650


State 1495

  611 member-declarator: IDENTIFIER attribute-specifier-seq ':' • constant-expression
  615                  | IDENTIFIER attribute-specifier-seq ':' • constant-expression brace-or-equal-initializer

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    additive-expression                  go to state 404
    and-expression                       go to state 405
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 412
    constant-expression                  go to state 1728
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 435
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 1496

  614 member-declarator: ':' constant-expression brace-or-equal-initializer •

    $default  reduce using rule 614 (member-declarator)


State 1497

  622 member-specification: access-specifier ':' member-specification •

    $default  reduce using rule 622 (member-specification)


State 1498

  610 member-declarator: ':' constant-expression •
  612                  | attribute-specifier-seq ':' constant-expression •
  614                  | ':' constant-expression • brace-or-equal-initializer
  616                  | attribute-specifier-seq ':' constant-expression • brace-or-equal-initializer

    '='  shift, and go to state 1280
    '{'  shift, and go to state 939

    ';'       reduce using rule 610 (member-declarator)
    ';'       [reduce using rule 612 (member-declarator)]
    ','       reduce using rule 610 (member-declarator)
    ','       [reduce using rule 612 (member-declarator)]
    $default  reduce using rule 610 (member-declarator)

    brace-or-equal-initializer  go to state 1729
    braced-init-list            go to state 650


State 1499

  612 member-declarator: attribute-specifier-seq ':' • constant-expression
  616                  | attribute-specifier-seq ':' • constant-expression brace-or-equal-initializer

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    additive-expression                  go to state 404
    and-expression                       go to state 405
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 412
    constant-expression                  go to state 1730
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 435
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 1500

  586 member-declaration: attribute-specifier-seq decl-specifier-seq ';' •

    $default  reduce using rule 586 (member-declaration)


State 1501

  400 function-definition: attribute-specifier-seq decl-specifier-seq declarator • function-body
  404                    | attribute-specifier-seq decl-specifier-seq declarator • virt-specifier-seq function-body
  408                    | attribute-specifier-seq decl-specifier-seq declarator • requires-clause function-body
  602 member-declarator: declarator •
  603                  | declarator • virt-specifier-seq
  604                  | declarator • pure-specifier
  605                  | declarator • virt-specifier-seq pure-specifier
  606                  | declarator • requires-clause
  607                  | declarator •
  608                  | declarator • brace-or-equal-initializer

    '='         shift, and go to state 1108
    ':'         shift, and go to state 293
    '{'         shift, and go to state 648
    "final"     shift, and go to state 295
    "try"       shift, and go to state 296
    "requires"  shift, and go to state 297
    "override"  shift, and go to state 298

    ';'       reduce using rule 602 (member-declarator)
    ';'       [reduce using rule 607 (member-declarator)]
    ','       reduce using rule 602 (member-declarator)
    ','       [reduce using rule 607 (member-declarator)]
    $default  reduce using rule 602 (member-declarator)

    brace-or-equal-initializer  go to state 1109
    braced-init-list            go to state 650
    compound-statement          go to state 299
    ctor-initializer            go to state 300
    function-body               go to state 1084
    function-try-block          go to state 302
    pure-specifier              go to state 1110
    requires-clause             go to state 1731
    virt-specifier              go to state 304
    virt-specifier-seq          go to state 1732


State 1502

  590 member-declaration: attribute-specifier-seq decl-specifier-seq member-declarator-list • ';'
  618 member-declarator-list: member-declarator-list • ',' member-declarator

    ';'  shift, and go to state 1733
    ','  shift, and go to state 1115


State 1503

  406 function-definition: attribute-specifier-seq declarator requires-clause • function-body
  606 member-declarator: declarator requires-clause •

    '='    shift, and go to state 291
    ':'    shift, and go to state 293
    '{'    shift, and go to state 294
    "try"  shift, and go to state 296

    $default  reduce using rule 606 (member-declarator)

    compound-statement  go to state 299
    ctor-initializer    go to state 300
    function-body       go to state 1089
    function-try-block  go to state 302


State 1504

  402 function-definition: attribute-specifier-seq declarator virt-specifier-seq • function-body
  603 member-declarator: declarator virt-specifier-seq •
  605                  | declarator virt-specifier-seq • pure-specifier
  1193 virt-specifier-seq: virt-specifier-seq • virt-specifier

    '='         shift, and go to state 1510
    ':'         shift, and go to state 293
    '{'         shift, and go to state 294
    "final"     shift, and go to state 295
    "try"       shift, and go to state 296
    "override"  shift, and go to state 298

    $default  reduce using rule 603 (member-declarator)

    compound-statement  go to state 299
    ctor-initializer    go to state 300
    function-body       go to state 1090
    function-try-block  go to state 302
    pure-specifier      go to state 1511
    virt-specifier      go to state 707


State 1505

  588 member-declaration: attribute-specifier-seq member-declarator-list ';' •

    $default  reduce using rule 588 (member-declaration)


State 1506

  409 function-definition: decl-specifier-seq declarator requires-clause • function-body
  606 member-declarator: declarator requires-clause •

    '='    shift, and go to state 291
    ':'    shift, and go to state 293
    '{'    shift, and go to state 294
    "try"  shift, and go to state 296

    $default  reduce using rule 606 (member-declarator)

    compound-statement  go to state 299
    ctor-initializer    go to state 300
    function-body       go to state 1154
    function-try-block  go to state 302


State 1507

  405 function-definition: decl-specifier-seq declarator virt-specifier-seq • function-body
  603 member-declarator: declarator virt-specifier-seq •
  605                  | declarator virt-specifier-seq • pure-specifier
  1193 virt-specifier-seq: virt-specifier-seq • virt-specifier

    '='         shift, and go to state 1510
    ':'         shift, and go to state 293
    '{'         shift, and go to state 294
    "final"     shift, and go to state 295
    "try"       shift, and go to state 296
    "override"  shift, and go to state 298

    $default  reduce using rule 603 (member-declarator)

    compound-statement  go to state 299
    ctor-initializer    go to state 300
    function-body       go to state 1155
    function-try-block  go to state 302
    pure-specifier      go to state 1511
    virt-specifier      go to state 707


State 1508

  591 member-declaration: decl-specifier-seq member-declarator-list ';' •

    $default  reduce using rule 591 (member-declaration)


State 1509

  252 digit: '0' •
  752 octal-literal: '0' •
  909 pure-specifier: '=' '0' •

    ';'       reduce using rule 752 (octal-literal)
    ';'       [reduce using rule 909 (pure-specifier)]
    ','       reduce using rule 752 (octal-literal)
    ','       [reduce using rule 909 (pure-specifier)]
    '0'       reduce using rule 252 (digit)
    '0'       [reduce using rule 752 (octal-literal)]
    '1'       reduce using rule 252 (digit)
    '1'       [reduce using rule 752 (octal-literal)]
    '\''      reduce using rule 252 (digit)
    '\''      [reduce using rule 752 (octal-literal)]
    '.'       reduce using rule 252 (digit)
    '.'       [reduce using rule 752 (octal-literal)]
    '2'       reduce using rule 252 (digit)
    '2'       [reduce using rule 752 (octal-literal)]
    '3'       reduce using rule 252 (digit)
    '3'       [reduce using rule 752 (octal-literal)]
    '4'       reduce using rule 252 (digit)
    '4'       [reduce using rule 752 (octal-literal)]
    '5'       reduce using rule 252 (digit)
    '5'       [reduce using rule 752 (octal-literal)]
    '6'       reduce using rule 252 (digit)
    '6'       [reduce using rule 752 (octal-literal)]
    '7'       reduce using rule 252 (digit)
    '7'       [reduce using rule 752 (octal-literal)]
    '8'       reduce using rule 252 (digit)
    '9'       reduce using rule 252 (digit)
    'e'       reduce using rule 252 (digit)
    'E'       reduce using rule 252 (digit)
    $default  reduce using rule 752 (octal-literal)


State 1510

  396 function-body: '=' • "default" ';'
  397              | '=' • "delete" ';'
  909 pure-specifier: '=' • '0'

    '0'        shift, and go to state 1734
    "delete"   shift, and go to state 658
    "default"  shift, and go to state 659


State 1511

  605 member-declarator: declarator virt-specifier-seq pure-specifier •

    $default  reduce using rule 605 (member-declarator)


State 1512

  602 member-declarator: declarator •
  603                  | declarator • virt-specifier-seq
  604                  | declarator • pure-specifier
  605                  | declarator • virt-specifier-seq pure-specifier
  606                  | declarator • requires-clause
  607                  | declarator •
  608                  | declarator • brace-or-equal-initializer

    '='         shift, and go to state 1735
    '{'         shift, and go to state 939
    "final"     shift, and go to state 295
    "requires"  shift, and go to state 297
    "override"  shift, and go to state 298

    ';'       reduce using rule 602 (member-declarator)
    ';'       [reduce using rule 607 (member-declarator)]
    ','       reduce using rule 602 (member-declarator)
    ','       [reduce using rule 607 (member-declarator)]
    $default  reduce using rule 602 (member-declarator)

    brace-or-equal-initializer  go to state 1109
    braced-init-list            go to state 650
    pure-specifier              go to state 1110
    requires-clause             go to state 1736
    virt-specifier              go to state 304
    virt-specifier-seq          go to state 1737


State 1513

  618 member-declarator-list: member-declarator-list ',' member-declarator •

    $default  reduce using rule 618 (member-declarator-list)


State 1514

   74 base-specifier: "virtual" access-specifier class-or-decltype •

    $default  reduce using rule 74 (base-specifier)


State 1515

   78 base-specifier: access-specifier "virtual" class-or-decltype •

    $default  reduce using rule 78 (base-specifier)


State 1516

   73 base-specifier: attribute-specifier-seq "virtual" access-specifier • class-or-decltype

    IDENTIFIER  shift, and go to state 258
    "::"        shift, and go to state 9
    "decltype"  shift, and go to state 135

    class-name             go to state 66
    class-or-decltype      go to state 1738
    decltype-specifier     go to state 624
    enum-name              go to state 85
    namespace-alias        go to state 100
    namespace-name         go to state 103
    nested-name-specifier  go to state 625
    simple-template-id     go to state 142
    template-name          go to state 143
    type-name              go to state 626
    typedef-name           go to state 127


State 1517

   71 base-specifier: attribute-specifier-seq "virtual" class-or-decltype •

    $default  reduce using rule 71 (base-specifier)


State 1518

   77 base-specifier: attribute-specifier-seq access-specifier "virtual" • class-or-decltype

    IDENTIFIER  shift, and go to state 258
    "::"        shift, and go to state 9
    "decltype"  shift, and go to state 135

    class-name             go to state 66
    class-or-decltype      go to state 1739
    decltype-specifier     go to state 624
    enum-name              go to state 85
    namespace-alias        go to state 100
    namespace-name         go to state 103
    nested-name-specifier  go to state 625
    simple-template-id     go to state 142
    template-name          go to state 143
    type-name              go to state 626
    typedef-name           go to state 127


State 1519

   75 base-specifier: attribute-specifier-seq access-specifier class-or-decltype •

    $default  reduce using rule 75 (base-specifier)


State 1520

   81 base-specifier-list: base-specifier-list ',' base-specifier •
   82                    | base-specifier-list ',' base-specifier • "..."

    "..."  shift, and go to state 1740

    $default  reduce using rule 81 (base-specifier-list)


State 1521

  149 class-or-decltype: nested-name-specifier "template" simple-template-id •
  665 nested-name-specifier: nested-name-specifier "template" simple-template-id • "::"

    "::"  shift, and go to state 1217

    $default  reduce using rule 149 (class-or-decltype)


State 1522

  135 class-head: class-key attribute-specifier-seq class-head-name class-virt-specifier base-clause •

    $default  reduce using rule 135 (class-head)


State 1523

  1055 template-argument-list: template-argument-list ',' template-argument •
  1056                       | template-argument-list ',' template-argument • "..."

    "..."  shift, and go to state 1741

    $default  reduce using rule 1055 (template-argument-list)


State 1524

  466 identifier-list: identifier-list ',' IDENTIFIER •

    $default  reduce using rule 466 (identifier-list)


State 1525

  981 simple-declaration: decl-specifier-seq '[' identifier-list ']' initializer • ';'

    ';'  shift, and go to state 1742


State 1526

  482 initializer: '(' expression-list ')' •

    $default  reduce using rule 482 (initializer)


State 1527

  486 initializer-list: initializer-clause "..." •

    $default  reduce using rule 486 (initializer-list)


State 1528

  487 initializer-list: initializer-list ',' • initializer-clause
  488                 | initializer-list ',' • initializer-clause "..."

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 939
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 1141
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    braced-init-list                     go to state 1142
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    initializer-clause                   go to state 1743
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 1529

  251 designator: '.' IDENTIFIER •

    $default  reduce using rule 251 (designator)


State 1530

  111 braced-init-list: '{' designated-initializer-list ',' • '}'
  250 designated-initializer-list: designated-initializer-list ',' • designated-initializer-clause

    '}'  shift, and go to state 1744
    '.'  shift, and go to state 1745

    designated-initializer-clause  go to state 1746
    designator                     go to state 1152


State 1531

  110 braced-init-list: '{' designated-initializer-list '}' •

    $default  reduce using rule 110 (braced-init-list)


State 1532

  248 designated-initializer-clause: designator brace-or-equal-initializer •

    $default  reduce using rule 248 (designated-initializer-clause)


State 1533

  109 braced-init-list: '{' initializer-list ',' • '}'
  487 initializer-list: initializer-list ',' • initializer-clause
  488                 | initializer-list ',' • initializer-clause "..."

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 939
    '}'                 shift, and go to state 1747
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 1141
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    braced-init-list                     go to state 1142
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    initializer-clause                   go to state 1743
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 1534

  108 braced-init-list: '{' initializer-list '}' •

    $default  reduce using rule 108 (braced-init-list)


State 1535

  475 init-declarator: declarator requires-clause •

    $default  reduce using rule 475 (init-declarator)


State 1536

  983 simple-declaration: decl-specifier-seq ref-qualifier '[' identifier-list ']' • initializer ';'

    '='  shift, and go to state 1280
    '('  shift, and go to state 647
    '{'  shift, and go to state 939

    brace-or-equal-initializer  go to state 649
    braced-init-list            go to state 650
    initializer                 go to state 1748


State 1537

  575 mem-initializer: mem-initializer-id '(' ')' •

    $default  reduce using rule 575 (mem-initializer)


State 1538

  576 mem-initializer: mem-initializer-id '(' expression-list • ')'

    ')'  shift, and go to state 1749


State 1539

  582 mem-initializer-list: mem-initializer-list ',' mem-initializer •
  583                     | mem-initializer-list ',' mem-initializer • "..."

    "..."  shift, and go to state 1750

    $default  reduce using rule 582 (mem-initializer-list)


State 1540

  524 labeled-statement: IDENTIFIER ':' statement •

    $default  reduce using rule 524 (labeled-statement)


State 1541

  183 coroutine-return-statement: "co_return" expr-or-braced-init-list ';' •

    $default  reduce using rule 183 (coroutine-return-statement)


State 1542

  528 labeled-statement: "default" ':' statement •

    $default  reduce using rule 528 (labeled-statement)


State 1543

  1083 try-block: "try" compound-statement handler-seq •

    $default  reduce using rule 1083 (try-block)


State 1544

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  165 condition: attribute-specifier-seq • decl-specifier-seq declarator brace-or-equal-initializer

    IDENTIFIER      shift, and go to state 161
    "alignas"       shift, and go to state 4
    "::"            shift, and go to state 9
    '['             shift, and go to state 10
    "virtual"       shift, and go to state 11
    "class"         shift, and go to state 12
    "struct"        shift, and go to state 13
    "union"         shift, and go to state 14
    "const"         shift, and go to state 18
    "volatile"      shift, and go to state 19
    "friend"        shift, and go to state 20
    "typedef"       shift, and go to state 21
    "constexpr"     shift, and go to state 22
    "consteval"     shift, and go to state 23
    "constinit"     shift, and go to state 24
    "inline"        shift, and go to state 263
    "decltype"      shift, and go to state 26
    "enum"          shift, and go to state 27
    "extern"        shift, and go to state 264
    "explicit"      shift, and go to state 29
    "auto"          shift, and go to state 37
    "char"          shift, and go to state 38
    "char8_t"       shift, and go to state 39
    "char16_t"      shift, and go to state 40
    "char32_t"      shift, and go to state 41
    "wchar_t"       shift, and go to state 42
    "bool"          shift, and go to state 43
    "short"         shift, and go to state 44
    "int"           shift, and go to state 45
    "long"          shift, and go to state 46
    "signed"        shift, and go to state 47
    "unsigned"      shift, and go to state 48
    "float"         shift, and go to state 49
    "double"        shift, and go to state 50
    "void"          shift, and go to state 51
    "static"        shift, and go to state 53
    "thread_local"  shift, and go to state 54
    "mutable"       shift, and go to state 55
    "typename"      shift, and go to state 56

    alignment-specifier         go to state 58
    attribute-specifier         go to state 265
    class-head                  go to state 64
    class-key                   go to state 65
    class-name                  go to state 66
    class-specifier             go to state 67
    concept-name                go to state 68
    cv-qualifier                go to state 70
    decl-specifier              go to state 71
    decl-specifier-seq          go to state 1751
    decltype-specifier          go to state 77
    defining-type-specifier     go to state 79
    elaborated-enum-specifier   go to state 80
    elaborated-type-specifier   go to state 81
    enum-head                   go to state 83
    enum-key                    go to state 268
    enum-name                   go to state 85
    enum-specifier              go to state 86
    explicit-specifier          go to state 269
    function-specifier          go to state 92
    namespace-alias             go to state 100
    namespace-name              go to state 103
    nested-name-specifier       go to state 213
    placeholder-type-specifier  go to state 110
    simple-template-id          go to state 142
    simple-type-specifier       go to state 116
    storage-class-specifier     go to state 118
    template-name               go to state 216
    type-constraint             go to state 124
    type-name                   go to state 125
    type-specifier              go to state 126
    typedef-name                go to state 127
    typename-specifier          go to state 128


State 1545

  509 iteration-statement: "while" '(' condition • ')' statement

    ')'  shift, and go to state 1752


State 1546

  166 condition: decl-specifier-seq • declarator brace-or-equal-initializer

    IDENTIFIER  shift, and go to state 148
    '('         shift, and go to state 5
    "..."       shift, and go to state 6
    '&'         shift, and go to state 7
    "::"        shift, and go to state 9
    "&&"        shift, and go to state 16
    "operator"  shift, and go to state 17
    "decltype"  shift, and go to state 135
    '*'         shift, and go to state 32
    '~'         shift, and go to state 36

    class-name              go to state 66
    conversion-function-id  go to state 69
    declarator              go to state 1753
    declarator-id           go to state 76
    decltype-specifier      go to state 139
    enum-name               go to state 85
    id-expression           go to state 94
    literal-operator-id     go to state 96
    namespace-alias         go to state 100
    namespace-name          go to state 103
    nested-name-specifier   go to state 149
    noptr-declarator        go to state 107
    operator-function-id    go to state 109
    ptr-declarator          go to state 111
    ptr-operator            go to state 112
    qualified-id            go to state 113
    simple-template-id      go to state 115
    template-id             go to state 121
    template-name           go to state 143
    type-name               go to state 144
    typedef-name            go to state 127
    unqualified-id          go to state 130


State 1547

  164 condition: expression •
  338 expression: expression • ',' assignment-expression

    ','  shift, and go to state 1037

    $default  reduce using rule 164 (condition)


State 1548

  510 iteration-statement: "do" statement "while" • '(' expression ')' ';'

    '('  shift, and go to state 1754


State 1549

   13 alias-declaration: "using" • IDENTIFIER '=' defining-type-id ';'
   14                  | "using" • IDENTIFIER attribute-specifier-seq '=' defining-type-id ';'

    IDENTIFIER  shift, and go to state 1755


State 1550

  480 init-statement: alias-declaration •

    $default  reduce using rule 480 (init-statement)


State 1551

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  383 for-range-declaration: attribute-specifier-seq • decl-specifier-seq declarator
  385                      | attribute-specifier-seq • decl-specifier-seq '[' identifier-list ']'
  387                      | attribute-specifier-seq • decl-specifier-seq ref-qualifier '[' identifier-list ']'
  979 simple-declaration: attribute-specifier-seq • decl-specifier-seq init-declarator-list ';'
  980                   | attribute-specifier-seq • decl-specifier-seq '[' identifier-list ']' initializer ';'
  982                   | attribute-specifier-seq • decl-specifier-seq ref-qualifier '[' identifier-list ']' initializer ';'

    IDENTIFIER      shift, and go to state 161
    "alignas"       shift, and go to state 4
    "::"            shift, and go to state 9
    '['             shift, and go to state 10
    "virtual"       shift, and go to state 11
    "class"         shift, and go to state 12
    "struct"        shift, and go to state 13
    "union"         shift, and go to state 14
    "const"         shift, and go to state 18
    "volatile"      shift, and go to state 19
    "friend"        shift, and go to state 20
    "typedef"       shift, and go to state 21
    "constexpr"     shift, and go to state 22
    "consteval"     shift, and go to state 23
    "constinit"     shift, and go to state 24
    "inline"        shift, and go to state 263
    "decltype"      shift, and go to state 26
    "enum"          shift, and go to state 27
    "extern"        shift, and go to state 264
    "explicit"      shift, and go to state 29
    "auto"          shift, and go to state 37
    "char"          shift, and go to state 38
    "char8_t"       shift, and go to state 39
    "char16_t"      shift, and go to state 40
    "char32_t"      shift, and go to state 41
    "wchar_t"       shift, and go to state 42
    "bool"          shift, and go to state 43
    "short"         shift, and go to state 44
    "int"           shift, and go to state 45
    "long"          shift, and go to state 46
    "signed"        shift, and go to state 47
    "unsigned"      shift, and go to state 48
    "float"         shift, and go to state 49
    "double"        shift, and go to state 50
    "void"          shift, and go to state 51
    "static"        shift, and go to state 53
    "thread_local"  shift, and go to state 54
    "mutable"       shift, and go to state 55
    "typename"      shift, and go to state 56

    alignment-specifier         go to state 58
    attribute-specifier         go to state 265
    class-head                  go to state 64
    class-key                   go to state 65
    class-name                  go to state 66
    class-specifier             go to state 67
    concept-name                go to state 68
    cv-qualifier                go to state 70
    decl-specifier              go to state 71
    decl-specifier-seq          go to state 1756
    decltype-specifier          go to state 77
    defining-type-specifier     go to state 79
    elaborated-enum-specifier   go to state 80
    elaborated-type-specifier   go to state 81
    enum-head                   go to state 83
    enum-key                    go to state 268
    enum-name                   go to state 85
    enum-specifier              go to state 86
    explicit-specifier          go to state 269
    function-specifier          go to state 92
    namespace-alias             go to state 100
    namespace-name              go to state 103
    nested-name-specifier       go to state 213
    placeholder-type-specifier  go to state 110
    simple-template-id          go to state 142
    simple-type-specifier       go to state 116
    storage-class-specifier     go to state 118
    template-name               go to state 216
    type-constraint             go to state 124
    type-name                   go to state 125
    type-specifier              go to state 126
    typedef-name                go to state 127
    typename-specifier          go to state 128


State 1552

  384 for-range-declaration: decl-specifier-seq • declarator
  386                      | decl-specifier-seq • '[' identifier-list ']'
  388                      | decl-specifier-seq • ref-qualifier '[' identifier-list ']'
  977 simple-declaration: decl-specifier-seq • ';'
  978                   | decl-specifier-seq • init-declarator-list ';'
  981                   | decl-specifier-seq • '[' identifier-list ']' initializer ';'
  983                   | decl-specifier-seq • ref-qualifier '[' identifier-list ']' initializer ';'

    IDENTIFIER  shift, and go to state 148
    ';'         shift, and go to state 282
    '('         shift, and go to state 5
    "..."       shift, and go to state 6
    '&'         shift, and go to state 283
    "::"        shift, and go to state 9
    '['         shift, and go to state 1757
    "&&"        shift, and go to state 285
    "operator"  shift, and go to state 17
    "decltype"  shift, and go to state 135
    '*'         shift, and go to state 32
    '~'         shift, and go to state 36

    class-name              go to state 66
    conversion-function-id  go to state 69
    declarator              go to state 1758
    declarator-id           go to state 76
    decltype-specifier      go to state 139
    enum-name               go to state 85
    id-expression           go to state 94
    init-declarator         go to state 287
    init-declarator-list    go to state 288
    literal-operator-id     go to state 96
    namespace-alias         go to state 100
    namespace-name          go to state 103
    nested-name-specifier   go to state 149
    noptr-declarator        go to state 107
    operator-function-id    go to state 109
    ptr-declarator          go to state 111
    ptr-operator            go to state 112
    qualified-id            go to state 113
    ref-qualifier           go to state 1759
    simple-template-id      go to state 115
    template-id             go to state 121
    template-name           go to state 143
    type-name               go to state 144
    typedef-name            go to state 127
    unqualified-id          go to state 130


State 1553

  478 init-statement: expression-statement •

    $default  reduce using rule 478 (init-statement)


State 1554

  515 iteration-statement: "for" '(' for-range-declaration • ':' for-range-initializer ')' statement

    ':'  shift, and go to state 1760


State 1555

  511 iteration-statement: "for" '(' init-statement • ';' ')' statement
  512                    | "for" '(' init-statement • condition ';' ')' statement
  513                    | "for" '(' init-statement • ';' expression ')' statement
  514                    | "for" '(' init-statement • condition ';' expression ')' statement
  516                    | "for" '(' init-statement • for-range-declaration ':' for-range-initializer ')' statement

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    ';'                 shift, and go to state 1761
    "alignas"           shift, and go to state 4
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 667
    "co_await"          shift, and go to state 367
    "virtual"           shift, and go to state 11
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "friend"            shift, and go to state 20
    "typedef"           shift, and go to state 21
    "constexpr"         shift, and go to state 22
    "consteval"         shift, and go to state 23
    "constinit"         shift, and go to state 24
    "inline"            shift, and go to state 263
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 27
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    "extern"            shift, and go to state 264
    "explicit"          shift, and go to state 29
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    "static"            shift, and go to state 53
    "thread_local"      shift, and go to state 54
    "mutable"           shift, and go to state 55
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    alignment-specifier                  go to state 58
    and-expression                       go to state 405
    assignment-expression                go to state 530
    attribute-specifier                  go to state 61
    attribute-specifier-seq              go to state 1762
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-head                           go to state 64
    class-key                            go to state 65
    class-name                           go to state 66
    class-specifier                      go to state 67
    compare-expression                   go to state 411
    concept-name                         go to state 68
    condition                            go to state 1763
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decl-specifier                       go to state 71
    decl-specifier-seq                   go to state 1764
    decltype-specifier                   go to state 77
    defining-type-specifier              go to state 79
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-head                            go to state 83
    enum-key                             go to state 268
    enum-name                            go to state 85
    enum-specifier                       go to state 86
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    explicit-specifier                   go to state 269
    expression                           go to state 1547
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    for-range-declaration                go to state 1765
    fractional-constant                  go to state 424
    function-specifier                   go to state 92
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    storage-class-specifier              go to state 118
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    type-specifier                       go to state 126
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 1556

  479 init-statement: simple-declaration •

    $default  reduce using rule 479 (init-statement)


State 1557

  520 jump-statement: "return" expr-or-braced-init-list ';' •

    $default  reduce using rule 520 (jump-statement)


State 1558

  522 jump-statement: "goto" IDENTIFIER ';' •

    $default  reduce using rule 522 (jump-statement)


State 1559

  526 labeled-statement: "case" constant-expression ':' • statement

    IDENTIFIER          shift, and go to state 665
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    "using"             shift, and go to state 2
    ';'                 shift, and go to state 666
    "alignas"           shift, and go to state 4
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "asm"               shift, and go to state 8
    "::"                shift, and go to state 365
    '['                 shift, and go to state 667
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 294
    "virtual"           shift, and go to state 11
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "co_return"         shift, and go to state 669
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "friend"            shift, and go to state 20
    "typedef"           shift, and go to state 21
    "constexpr"         shift, and go to state 22
    "consteval"         shift, and go to state 23
    "constinit"         shift, and go to state 24
    "inline"            shift, and go to state 263
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 27
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    "extern"            shift, and go to state 264
    "explicit"          shift, and go to state 29
    '*'                 shift, and go to state 386
    "default"           shift, and go to state 670
    "try"               shift, and go to state 671
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "while"             shift, and go to state 672
    "do"                shift, and go to state 673
    "for"               shift, and go to state 674
    "break"             shift, and go to state 675
    "continue"          shift, and go to state 676
    "return"            shift, and go to state 677
    "goto"              shift, and go to state 678
    "case"              shift, and go to state 679
    "namespace"         shift, and go to state 680
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "if"                shift, and go to state 681
    "switch"            shift, and go to state 682
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    "static_assert"     shift, and go to state 52
    "static"            shift, and go to state 53
    "thread_local"      shift, and go to state 54
    "mutable"           shift, and go to state 55
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    alias-declaration                    go to state 57
    alignment-specifier                  go to state 58
    and-expression                       go to state 405
    asm-declaration                      go to state 59
    assignment-expression                go to state 530
    attribute-specifier                  go to state 61
    attribute-specifier-seq              go to state 683
    await-expression                     go to state 406
    binary-literal                       go to state 407
    block-declaration                    go to state 684
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-head                           go to state 64
    class-key                            go to state 65
    class-name                           go to state 66
    class-specifier                      go to state 67
    compare-expression                   go to state 411
    compound-statement                   go to state 685
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    coroutine-return-statement           go to state 686
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decl-specifier                       go to state 71
    decl-specifier-seq                   go to state 687
    declaration-statement                go to state 688
    decltype-specifier                   go to state 77
    defining-type-specifier              go to state 79
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-head                            go to state 83
    enum-key                             go to state 84
    enum-name                            go to state 85
    enum-specifier                       go to state 86
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    explicit-specifier                   go to state 269
    expression                           go to state 689
    expression-statement                 go to state 690
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    function-specifier                   go to state 92
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    iteration-statement                  go to state 691
    jump-statement                       go to state 692
    labeled-statement                    go to state 693
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-alias-definition           go to state 101
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    opaque-enum-declaration              go to state 108
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    selection-statement                  go to state 694
    shift-expression                     go to state 448
    simple-declaration                   go to state 114
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    statement                            go to state 1766
    static_assert-declaration            go to state 117
    storage-class-specifier              go to state 118
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    try-block                            go to state 697
    type-constraint                      go to state 124
    type-name                            go to state 125
    type-specifier                       go to state 126
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    using-declaration                    go to state 131
    using-directive                      go to state 132
    using-enum-declaration               go to state 133
    yield-expression                     go to state 537


State 1560

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  165 condition: attribute-specifier-seq • decl-specifier-seq declarator brace-or-equal-initializer
  979 simple-declaration: attribute-specifier-seq • decl-specifier-seq init-declarator-list ';'
  980                   | attribute-specifier-seq • decl-specifier-seq '[' identifier-list ']' initializer ';'
  982                   | attribute-specifier-seq • decl-specifier-seq ref-qualifier '[' identifier-list ']' initializer ';'

    IDENTIFIER      shift, and go to state 161
    "alignas"       shift, and go to state 4
    "::"            shift, and go to state 9
    '['             shift, and go to state 10
    "virtual"       shift, and go to state 11
    "class"         shift, and go to state 12
    "struct"        shift, and go to state 13
    "union"         shift, and go to state 14
    "const"         shift, and go to state 18
    "volatile"      shift, and go to state 19
    "friend"        shift, and go to state 20
    "typedef"       shift, and go to state 21
    "constexpr"     shift, and go to state 22
    "consteval"     shift, and go to state 23
    "constinit"     shift, and go to state 24
    "inline"        shift, and go to state 263
    "decltype"      shift, and go to state 26
    "enum"          shift, and go to state 27
    "extern"        shift, and go to state 264
    "explicit"      shift, and go to state 29
    "auto"          shift, and go to state 37
    "char"          shift, and go to state 38
    "char8_t"       shift, and go to state 39
    "char16_t"      shift, and go to state 40
    "char32_t"      shift, and go to state 41
    "wchar_t"       shift, and go to state 42
    "bool"          shift, and go to state 43
    "short"         shift, and go to state 44
    "int"           shift, and go to state 45
    "long"          shift, and go to state 46
    "signed"        shift, and go to state 47
    "unsigned"      shift, and go to state 48
    "float"         shift, and go to state 49
    "double"        shift, and go to state 50
    "void"          shift, and go to state 51
    "static"        shift, and go to state 53
    "thread_local"  shift, and go to state 54
    "mutable"       shift, and go to state 55
    "typename"      shift, and go to state 56

    alignment-specifier         go to state 58
    attribute-specifier         go to state 265
    class-head                  go to state 64
    class-key                   go to state 65
    class-name                  go to state 66
    class-specifier             go to state 67
    concept-name                go to state 68
    cv-qualifier                go to state 70
    decl-specifier              go to state 71
    decl-specifier-seq          go to state 1767
    decltype-specifier          go to state 77
    defining-type-specifier     go to state 79
    elaborated-enum-specifier   go to state 80
    elaborated-type-specifier   go to state 81
    enum-head                   go to state 83
    enum-key                    go to state 268
    enum-name                   go to state 85
    enum-specifier              go to state 86
    explicit-specifier          go to state 269
    function-specifier          go to state 92
    namespace-alias             go to state 100
    namespace-name              go to state 103
    nested-name-specifier       go to state 213
    placeholder-type-specifier  go to state 110
    simple-template-id          go to state 142
    simple-type-specifier       go to state 116
    storage-class-specifier     go to state 118
    template-name               go to state 216
    type-constraint             go to state 124
    type-name                   go to state 125
    type-specifier              go to state 126
    typedef-name                go to state 127
    typename-specifier          go to state 128


State 1561

  952 selection-statement: "if" '(' condition • ')' statement
  956                    | "if" '(' condition • ')' statement "else" statement

    ')'  shift, and go to state 1768


State 1562

  166 condition: decl-specifier-seq • declarator brace-or-equal-initializer
  977 simple-declaration: decl-specifier-seq • ';'
  978                   | decl-specifier-seq • init-declarator-list ';'
  981                   | decl-specifier-seq • '[' identifier-list ']' initializer ';'
  983                   | decl-specifier-seq • ref-qualifier '[' identifier-list ']' initializer ';'

    IDENTIFIER  shift, and go to state 148
    ';'         shift, and go to state 282
    '('         shift, and go to state 5
    "..."       shift, and go to state 6
    '&'         shift, and go to state 283
    "::"        shift, and go to state 9
    '['         shift, and go to state 284
    "&&"        shift, and go to state 285
    "operator"  shift, and go to state 17
    "decltype"  shift, and go to state 135
    '*'         shift, and go to state 32
    '~'         shift, and go to state 36

    class-name              go to state 66
    conversion-function-id  go to state 69
    declarator              go to state 1769
    declarator-id           go to state 76
    decltype-specifier      go to state 139
    enum-name               go to state 85
    id-expression           go to state 94
    init-declarator         go to state 287
    init-declarator-list    go to state 288
    literal-operator-id     go to state 96
    namespace-alias         go to state 100
    namespace-name          go to state 103
    nested-name-specifier   go to state 149
    noptr-declarator        go to state 107
    operator-function-id    go to state 109
    ptr-declarator          go to state 111
    ptr-operator            go to state 112
    qualified-id            go to state 113
    ref-qualifier           go to state 289
    simple-template-id      go to state 115
    template-id             go to state 121
    template-name           go to state 143
    type-name               go to state 144
    typedef-name            go to state 127
    unqualified-id          go to state 130


State 1563

  164 condition: expression •
  338 expression: expression • ',' assignment-expression
  340 expression-statement: expression • ';'

    ';'  shift, and go to state 1197
    ','  shift, and go to state 1037

    $default  reduce using rule 164 (condition)


State 1564

  954 selection-statement: "if" '(' init-statement • condition ')' statement
  958                    | "if" '(' init-statement • condition ')' statement "else" statement

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    "alignas"           shift, and go to state 4
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 667
    "co_await"          shift, and go to state 367
    "virtual"           shift, and go to state 11
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "friend"            shift, and go to state 20
    "typedef"           shift, and go to state 21
    "constexpr"         shift, and go to state 22
    "consteval"         shift, and go to state 23
    "constinit"         shift, and go to state 24
    "inline"            shift, and go to state 263
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 27
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    "extern"            shift, and go to state 264
    "explicit"          shift, and go to state 29
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    "static"            shift, and go to state 53
    "thread_local"      shift, and go to state 54
    "mutable"           shift, and go to state 55
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    alignment-specifier                  go to state 58
    and-expression                       go to state 405
    assignment-expression                go to state 530
    attribute-specifier                  go to state 61
    attribute-specifier-seq              go to state 1544
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-head                           go to state 64
    class-key                            go to state 65
    class-name                           go to state 66
    class-specifier                      go to state 67
    compare-expression                   go to state 411
    concept-name                         go to state 68
    condition                            go to state 1770
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decl-specifier                       go to state 71
    decl-specifier-seq                   go to state 1546
    decltype-specifier                   go to state 77
    defining-type-specifier              go to state 79
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-head                            go to state 83
    enum-key                             go to state 268
    enum-name                            go to state 85
    enum-specifier                       go to state 86
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    explicit-specifier                   go to state 269
    expression                           go to state 1547
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    function-specifier                   go to state 92
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    storage-class-specifier              go to state 118
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    type-specifier                       go to state 126
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 1565

  953 selection-statement: "if" "constexpr" '(' • condition ')' statement
  955                    | "if" "constexpr" '(' • init-statement condition ')' statement
  957                    | "if" "constexpr" '(' • condition ')' statement "else" statement
  959                    | "if" "constexpr" '(' • init-statement condition ')' statement "else" statement

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    "using"             shift, and go to state 1549
    ';'                 shift, and go to state 666
    "alignas"           shift, and go to state 4
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 667
    "co_await"          shift, and go to state 367
    "virtual"           shift, and go to state 11
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "friend"            shift, and go to state 20
    "typedef"           shift, and go to state 21
    "constexpr"         shift, and go to state 22
    "consteval"         shift, and go to state 23
    "constinit"         shift, and go to state 24
    "inline"            shift, and go to state 263
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 27
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    "extern"            shift, and go to state 264
    "explicit"          shift, and go to state 29
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    "static"            shift, and go to state 53
    "thread_local"      shift, and go to state 54
    "mutable"           shift, and go to state 55
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    alias-declaration                    go to state 1550
    alignment-specifier                  go to state 58
    and-expression                       go to state 405
    assignment-expression                go to state 530
    attribute-specifier                  go to state 61
    attribute-specifier-seq              go to state 1560
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-head                           go to state 64
    class-key                            go to state 65
    class-name                           go to state 66
    class-specifier                      go to state 67
    compare-expression                   go to state 411
    concept-name                         go to state 68
    condition                            go to state 1771
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decl-specifier                       go to state 71
    decl-specifier-seq                   go to state 1562
    decltype-specifier                   go to state 77
    defining-type-specifier              go to state 79
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-head                            go to state 83
    enum-key                             go to state 268
    enum-name                            go to state 85
    enum-specifier                       go to state 86
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    explicit-specifier                   go to state 269
    expression                           go to state 1563
    expression-statement                 go to state 1553
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    function-specifier                   go to state 92
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    init-statement                       go to state 1772
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-declaration                   go to state 1556
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    storage-class-specifier              go to state 118
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    type-specifier                       go to state 126
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 1566

  960 selection-statement: "if" "consteval" compound-statement •
  962                    | "if" "consteval" compound-statement • "else" statement

    "else"  shift, and go to state 1773

    "else"    [reduce using rule 960 (selection-statement)]
    $default  reduce using rule 960 (selection-statement)


State 1567

  961 selection-statement: "if" '!' "consteval" • compound-statement
  963                    | "if" '!' "consteval" • compound-statement "else" statement

    '{'  shift, and go to state 294

    compound-statement  go to state 1774


State 1568

  964 selection-statement: "switch" '(' condition • ')' statement

    ')'  shift, and go to state 1775


State 1569

  965 selection-statement: "switch" '(' init-statement • condition ')' statement

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    "alignas"           shift, and go to state 4
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 667
    "co_await"          shift, and go to state 367
    "virtual"           shift, and go to state 11
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "friend"            shift, and go to state 20
    "typedef"           shift, and go to state 21
    "constexpr"         shift, and go to state 22
    "consteval"         shift, and go to state 23
    "constinit"         shift, and go to state 24
    "inline"            shift, and go to state 263
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 27
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    "extern"            shift, and go to state 264
    "explicit"          shift, and go to state 29
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    "static"            shift, and go to state 53
    "thread_local"      shift, and go to state 54
    "mutable"           shift, and go to state 55
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    alignment-specifier                  go to state 58
    and-expression                       go to state 405
    assignment-expression                go to state 530
    attribute-specifier                  go to state 61
    attribute-specifier-seq              go to state 1544
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-head                           go to state 64
    class-key                            go to state 65
    class-name                           go to state 66
    class-specifier                      go to state 67
    compare-expression                   go to state 411
    concept-name                         go to state 68
    condition                            go to state 1776
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decl-specifier                       go to state 71
    decl-specifier-seq                   go to state 1546
    decltype-specifier                   go to state 77
    defining-type-specifier              go to state 79
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-head                            go to state 83
    enum-key                             go to state 268
    enum-name                            go to state 85
    enum-specifier                       go to state 86
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    explicit-specifier                   go to state 269
    expression                           go to state 1547
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    function-specifier                   go to state 92
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    storage-class-specifier              go to state 118
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    type-specifier                       go to state 126
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 1570

  523 labeled-statement: attribute-specifier-seq IDENTIFIER ':' • statement

    IDENTIFIER          shift, and go to state 665
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    "using"             shift, and go to state 2
    ';'                 shift, and go to state 666
    "alignas"           shift, and go to state 4
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "asm"               shift, and go to state 8
    "::"                shift, and go to state 365
    '['                 shift, and go to state 667
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 294
    "virtual"           shift, and go to state 11
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "co_return"         shift, and go to state 669
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "friend"            shift, and go to state 20
    "typedef"           shift, and go to state 21
    "constexpr"         shift, and go to state 22
    "consteval"         shift, and go to state 23
    "constinit"         shift, and go to state 24
    "inline"            shift, and go to state 263
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 27
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    "extern"            shift, and go to state 264
    "explicit"          shift, and go to state 29
    '*'                 shift, and go to state 386
    "default"           shift, and go to state 670
    "try"               shift, and go to state 671
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "while"             shift, and go to state 672
    "do"                shift, and go to state 673
    "for"               shift, and go to state 674
    "break"             shift, and go to state 675
    "continue"          shift, and go to state 676
    "return"            shift, and go to state 677
    "goto"              shift, and go to state 678
    "case"              shift, and go to state 679
    "namespace"         shift, and go to state 680
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "if"                shift, and go to state 681
    "switch"            shift, and go to state 682
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    "static_assert"     shift, and go to state 52
    "static"            shift, and go to state 53
    "thread_local"      shift, and go to state 54
    "mutable"           shift, and go to state 55
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    alias-declaration                    go to state 57
    alignment-specifier                  go to state 58
    and-expression                       go to state 405
    asm-declaration                      go to state 59
    assignment-expression                go to state 530
    attribute-specifier                  go to state 61
    attribute-specifier-seq              go to state 683
    await-expression                     go to state 406
    binary-literal                       go to state 407
    block-declaration                    go to state 684
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-head                           go to state 64
    class-key                            go to state 65
    class-name                           go to state 66
    class-specifier                      go to state 67
    compare-expression                   go to state 411
    compound-statement                   go to state 685
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    coroutine-return-statement           go to state 686
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decl-specifier                       go to state 71
    decl-specifier-seq                   go to state 687
    declaration-statement                go to state 688
    decltype-specifier                   go to state 77
    defining-type-specifier              go to state 79
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-head                            go to state 83
    enum-key                             go to state 84
    enum-name                            go to state 85
    enum-specifier                       go to state 86
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    explicit-specifier                   go to state 269
    expression                           go to state 689
    expression-statement                 go to state 690
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    function-specifier                   go to state 92
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    iteration-statement                  go to state 691
    jump-statement                       go to state 692
    labeled-statement                    go to state 693
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-alias-definition           go to state 101
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    opaque-enum-declaration              go to state 108
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    selection-statement                  go to state 694
    shift-expression                     go to state 448
    simple-declaration                   go to state 114
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    statement                            go to state 1777
    static_assert-declaration            go to state 117
    storage-class-specifier              go to state 118
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    try-block                            go to state 697
    type-constraint                      go to state 124
    type-name                            go to state 125
    type-specifier                       go to state 126
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    using-declaration                    go to state 131
    using-directive                      go to state 132
    using-enum-declaration               go to state 133
    yield-expression                     go to state 537


State 1571

  527 labeled-statement: attribute-specifier-seq "default" ':' • statement

    IDENTIFIER          shift, and go to state 665
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    "using"             shift, and go to state 2
    ';'                 shift, and go to state 666
    "alignas"           shift, and go to state 4
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "asm"               shift, and go to state 8
    "::"                shift, and go to state 365
    '['                 shift, and go to state 667
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 294
    "virtual"           shift, and go to state 11
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "co_return"         shift, and go to state 669
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "friend"            shift, and go to state 20
    "typedef"           shift, and go to state 21
    "constexpr"         shift, and go to state 22
    "consteval"         shift, and go to state 23
    "constinit"         shift, and go to state 24
    "inline"            shift, and go to state 263
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 27
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    "extern"            shift, and go to state 264
    "explicit"          shift, and go to state 29
    '*'                 shift, and go to state 386
    "default"           shift, and go to state 670
    "try"               shift, and go to state 671
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "while"             shift, and go to state 672
    "do"                shift, and go to state 673
    "for"               shift, and go to state 674
    "break"             shift, and go to state 675
    "continue"          shift, and go to state 676
    "return"            shift, and go to state 677
    "goto"              shift, and go to state 678
    "case"              shift, and go to state 679
    "namespace"         shift, and go to state 680
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "if"                shift, and go to state 681
    "switch"            shift, and go to state 682
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    "static_assert"     shift, and go to state 52
    "static"            shift, and go to state 53
    "thread_local"      shift, and go to state 54
    "mutable"           shift, and go to state 55
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    alias-declaration                    go to state 57
    alignment-specifier                  go to state 58
    and-expression                       go to state 405
    asm-declaration                      go to state 59
    assignment-expression                go to state 530
    attribute-specifier                  go to state 61
    attribute-specifier-seq              go to state 683
    await-expression                     go to state 406
    binary-literal                       go to state 407
    block-declaration                    go to state 684
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-head                           go to state 64
    class-key                            go to state 65
    class-name                           go to state 66
    class-specifier                      go to state 67
    compare-expression                   go to state 411
    compound-statement                   go to state 685
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    coroutine-return-statement           go to state 686
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decl-specifier                       go to state 71
    decl-specifier-seq                   go to state 687
    declaration-statement                go to state 688
    decltype-specifier                   go to state 77
    defining-type-specifier              go to state 79
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-head                            go to state 83
    enum-key                             go to state 84
    enum-name                            go to state 85
    enum-specifier                       go to state 86
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    explicit-specifier                   go to state 269
    expression                           go to state 689
    expression-statement                 go to state 690
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    function-specifier                   go to state 92
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    iteration-statement                  go to state 691
    jump-statement                       go to state 692
    labeled-statement                    go to state 693
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-alias-definition           go to state 101
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    opaque-enum-declaration              go to state 108
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    selection-statement                  go to state 694
    shift-expression                     go to state 448
    simple-declaration                   go to state 114
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    statement                            go to state 1778
    static_assert-declaration            go to state 117
    storage-class-specifier              go to state 118
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    try-block                            go to state 697
    type-constraint                      go to state 124
    type-name                            go to state 125
    type-specifier                       go to state 126
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    using-declaration                    go to state 131
    using-directive                      go to state 132
    using-enum-declaration               go to state 133
    yield-expression                     go to state 537


State 1572

  525 labeled-statement: attribute-specifier-seq "case" constant-expression • ':' statement

    ':'  shift, and go to state 1779


State 1573

  417 handler: "catch" '(' • exception-declaration ')' compound-statement

    IDENTIFIER  shift, and go to state 161
    "alignas"   shift, and go to state 4
    "..."       shift, and go to state 1780
    "::"        shift, and go to state 9
    '['         shift, and go to state 10
    "class"     shift, and go to state 12
    "struct"    shift, and go to state 13
    "union"     shift, and go to state 14
    "const"     shift, and go to state 18
    "volatile"  shift, and go to state 19
    "decltype"  shift, and go to state 26
    "enum"      shift, and go to state 136
    "auto"      shift, and go to state 37
    "char"      shift, and go to state 38
    "char8_t"   shift, and go to state 39
    "char16_t"  shift, and go to state 40
    "char32_t"  shift, and go to state 41
    "wchar_t"   shift, and go to state 42
    "bool"      shift, and go to state 43
    "short"     shift, and go to state 44
    "int"       shift, and go to state 45
    "long"      shift, and go to state 46
    "signed"    shift, and go to state 47
    "unsigned"  shift, and go to state 48
    "float"     shift, and go to state 49
    "double"    shift, and go to state 50
    "void"      shift, and go to state 51
    "typename"  shift, and go to state 56

    alignment-specifier         go to state 58
    attribute-specifier         go to state 61
    attribute-specifier-seq     go to state 1781
    class-key                   go to state 210
    class-name                  go to state 66
    concept-name                go to state 68
    cv-qualifier                go to state 70
    decltype-specifier          go to state 77
    elaborated-enum-specifier   go to state 80
    elaborated-type-specifier   go to state 81
    enum-name                   go to state 85
    exception-declaration       go to state 1782
    namespace-alias             go to state 100
    namespace-name              go to state 103
    nested-name-specifier       go to state 213
    placeholder-type-specifier  go to state 110
    simple-template-id          go to state 142
    simple-type-specifier       go to state 116
    template-name               go to state 216
    type-constraint             go to state 124
    type-name                   go to state 125
    type-specifier              go to state 217
    type-specifier-seq          go to state 1783
    typedef-name                go to state 127
    typename-specifier          go to state 128


State 1574

  419 handler-seq: handler handler-seq •

    $default  reduce using rule 419 (handler-seq)


State 1575

  413 function-try-block: "try" ctor-initializer compound-statement handler-seq •

    $default  reduce using rule 413 (function-try-block)


State 1576

  174 constraint-logical-and-expression: constraint-logical-and-expression "&&" primary-expression •

    $default  reduce using rule 174 (constraint-logical-and-expression)


State 1577

  174 constraint-logical-and-expression: constraint-logical-and-expression • "&&" primary-expression
  176 constraint-logical-or-expression: constraint-logical-or-expression "||" constraint-logical-and-expression •

    "&&"  shift, and go to state 1204

    "&&"      [reduce using rule 176 (constraint-logical-or-expression)]
    $default  reduce using rule 176 (constraint-logical-or-expression)


State 1578

  304 enumerator-definition: enumerator '=' constant-expression •

    $default  reduce using rule 304 (enumerator-definition)


State 1579

  300 enum-specifier: enum-head '{' enumerator-list ',' '}' •

    $default  reduce using rule 300 (enum-specifier)


State 1580

  306 enumerator-list: enumerator-list ',' enumerator-definition •

    $default  reduce using rule 306 (enumerator-list)


State 1581

  758 opaque-enum-declaration: enum-key attribute-specifier-seq enum-head-name enum-base ';' •

    $default  reduce using rule 758 (opaque-enum-declaration)


State 1582

  234 deduction-guide: explicit-specifier template-name '(' parameter-declaration-clause ')' • "->" simple-template-id ';'

    "->"  shift, and go to state 1784


State 1583

  890 private-module-fragment: "module-keyword" ':' "private" ';' •
  891                        | "module-keyword" ':' "private" ';' • declaration-seq

    IDENTIFIER        shift, and go to state 1
    "using"           shift, and go to state 2
    ';'               shift, and go to state 3
    "alignas"         shift, and go to state 4
    '('               shift, and go to state 5
    "..."             shift, and go to state 6
    '&'               shift, and go to state 7
    "asm"             shift, and go to state 8
    "::"              shift, and go to state 9
    '['               shift, and go to state 10
    "virtual"         shift, and go to state 11
    "class"           shift, and go to state 12
    "struct"          shift, and go to state 13
    "union"           shift, and go to state 14
    "template"        shift, and go to state 15
    "&&"              shift, and go to state 16
    "operator"        shift, and go to state 17
    "const"           shift, and go to state 18
    "volatile"        shift, and go to state 19
    "friend"          shift, and go to state 20
    "typedef"         shift, and go to state 21
    "constexpr"       shift, and go to state 22
    "consteval"       shift, and go to state 23
    "constinit"       shift, and go to state 24
    "inline"          shift, and go to state 25
    "decltype"        shift, and go to state 26
    "enum"            shift, and go to state 27
    "extern"          shift, and go to state 28
    "explicit"        shift, and go to state 29
    "export"          shift, and go to state 30
    "export-keyword"  shift, and go to state 158
    '*'               shift, and go to state 32
    "import-keyword"  shift, and go to state 34
    "namespace"       shift, and go to state 35
    '~'               shift, and go to state 36
    "auto"            shift, and go to state 37
    "char"            shift, and go to state 38
    "char8_t"         shift, and go to state 39
    "char16_t"        shift, and go to state 40
    "char32_t"        shift, and go to state 41
    "wchar_t"         shift, and go to state 42
    "bool"            shift, and go to state 43
    "short"           shift, and go to state 44
    "int"             shift, and go to state 45
    "long"            shift, and go to state 46
    "signed"          shift, and go to state 47
    "unsigned"        shift, and go to state 48
    "float"           shift, and go to state 49
    "double"          shift, and go to state 50
    "void"            shift, and go to state 51
    "static_assert"   shift, and go to state 52
    "static"          shift, and go to state 53
    "thread_local"    shift, and go to state 54
    "mutable"         shift, and go to state 55
    "typename"        shift, and go to state 56

    $default  reduce using rule 890 (private-module-fragment)

    alias-declaration                go to state 57
    alignment-specifier              go to state 58
    asm-declaration                  go to state 59
    attribute-declaration            go to state 60
    attribute-specifier              go to state 61
    attribute-specifier-seq          go to state 62
    block-declaration                go to state 63
    class-head                       go to state 64
    class-key                        go to state 65
    class-name                       go to state 66
    class-specifier                  go to state 67
    concept-name                     go to state 68
    conversion-function-id           go to state 69
    cv-qualifier                     go to state 70
    decl-specifier                   go to state 71
    decl-specifier-seq               go to state 72
    declaration                      go to state 73
    declaration-seq                  go to state 1785
    declarator                       go to state 75
    declarator-id                    go to state 76
    decltype-specifier               go to state 77
    deduction-guide                  go to state 78
    defining-type-specifier          go to state 79
    elaborated-enum-specifier        go to state 80
    elaborated-type-specifier        go to state 81
    empty-declaration                go to state 82
    enum-head                        go to state 83
    enum-key                         go to state 84
    enum-name                        go to state 85
    enum-specifier                   go to state 86
    explicit-instantiation           go to state 87
    explicit-specialization          go to state 88
    explicit-specifier               go to state 89
    export-declaration               go to state 90
    function-definition              go to state 91
    function-specifier               go to state 92
    id-expression                    go to state 94
    linkage-specification            go to state 95
    literal-operator-id              go to state 96
    module-import-declaration        go to state 98
    named-namespace-definition       go to state 99
    namespace-alias                  go to state 100
    namespace-alias-definition       go to state 101
    namespace-definition             go to state 102
    namespace-name                   go to state 103
    nested-name-specifier            go to state 104
    nested-namespace-definition      go to state 105
    nodeclspec-function-declaration  go to state 106
    noptr-declarator                 go to state 107
    opaque-enum-declaration          go to state 108
    operator-function-id             go to state 109
    placeholder-type-specifier       go to state 110
    ptr-declarator                   go to state 111
    ptr-operator                     go to state 112
    qualified-id                     go to state 113
    simple-declaration               go to state 114
    simple-template-id               go to state 115
    simple-type-specifier            go to state 116
    static_assert-declaration        go to state 117
    storage-class-specifier          go to state 118
    template-declaration             go to state 119
    template-head                    go to state 120
    template-id                      go to state 121
    template-name                    go to state 122
    type-constraint                  go to state 124
    type-name                        go to state 125
    type-specifier                   go to state 126
    typedef-name                     go to state 127
    typename-specifier               go to state 128
    unnamed-namespace-definition     go to state 129
    unqualified-id                   go to state 130
    using-declaration                go to state 131
    using-directive                  go to state 132
    using-enum-declaration           go to state 133


State 1584

  1088 type-constraint: nested-name-specifier concept-name '<' template-argument-list '>' •

    $default  reduce using rule 1088 (type-constraint)


State 1585

  928 ref-qualifier: '&' •

    $default  reduce using rule 928 (ref-qualifier)


State 1586

  929 ref-qualifier: "&&" •

    $default  reduce using rule 929 (ref-qualifier)


State 1587

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  844 parameters-and-qualifiers: '(' parameter-declaration-clause ')' attribute-specifier-seq •

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    '['       [reduce using rule 844 (parameters-and-qualifiers)]
    $default  reduce using rule 844 (parameters-and-qualifiers)

    alignment-specifier  go to state 58
    attribute-specifier  go to state 265


State 1588

  837 parameters-and-qualifiers: '(' parameter-declaration-clause ')' cv-qualifier-seq •
  839                          | '(' parameter-declaration-clause ')' cv-qualifier-seq • ref-qualifier
  841                          | '(' parameter-declaration-clause ')' cv-qualifier-seq • noexcept-specifier
  843                          | '(' parameter-declaration-clause ')' cv-qualifier-seq • ref-qualifier noexcept-specifier
  845                          | '(' parameter-declaration-clause ')' cv-qualifier-seq • attribute-specifier-seq
  847                          | '(' parameter-declaration-clause ')' cv-qualifier-seq • ref-qualifier attribute-specifier-seq
  849                          | '(' parameter-declaration-clause ')' cv-qualifier-seq • noexcept-specifier attribute-specifier-seq
  851                          | '(' parameter-declaration-clause ')' cv-qualifier-seq • ref-qualifier noexcept-specifier attribute-specifier-seq

    "alignas"   shift, and go to state 4
    '&'         shift, and go to state 1585
    '['         shift, and go to state 10
    "noexcept"  shift, and go to state 898
    "&&"        shift, and go to state 1586

    '['       [reduce using rule 837 (parameters-and-qualifiers)]
    $default  reduce using rule 837 (parameters-and-qualifiers)

    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 1786
    noexcept-specifier       go to state 1787
    ref-qualifier            go to state 1788


State 1589

  840 parameters-and-qualifiers: '(' parameter-declaration-clause ')' noexcept-specifier •
  848                          | '(' parameter-declaration-clause ')' noexcept-specifier • attribute-specifier-seq

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    '['       [reduce using rule 840 (parameters-and-qualifiers)]
    $default  reduce using rule 840 (parameters-and-qualifiers)

    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 1789


State 1590

  838 parameters-and-qualifiers: '(' parameter-declaration-clause ')' ref-qualifier •
  842                          | '(' parameter-declaration-clause ')' ref-qualifier • noexcept-specifier
  846                          | '(' parameter-declaration-clause ')' ref-qualifier • attribute-specifier-seq
  850                          | '(' parameter-declaration-clause ')' ref-qualifier • noexcept-specifier attribute-specifier-seq

    "alignas"   shift, and go to state 4
    '['         shift, and go to state 10
    "noexcept"  shift, and go to state 898

    '['       [reduce using rule 838 (parameters-and-qualifiers)]
    $default  reduce using rule 838 (parameters-and-qualifiers)

    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 1790
    noexcept-specifier       go to state 1791


State 1591

  833 parameter-declaration-clause: parameter-declaration-list ',' "..." •

    $default  reduce using rule 833 (parameter-declaration-clause)


State 1592

  835 parameter-declaration-list: parameter-declaration-list ',' parameter-declaration •

    $default  reduce using rule 835 (parameter-declaration-list)


State 1593

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  731 noptr-declarator: noptr-declarator '[' constant-expression ']' attribute-specifier-seq •

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    '['       [reduce using rule 731 (noptr-declarator)]
    $default  reduce using rule 731 (noptr-declarator)

    alignment-specifier  go to state 58
    attribute-specifier  go to state 265


State 1594

  162 concept-definition: "concept" concept-name '=' constraint-expression • ';'

    ';'  shift, and go to state 1792


State 1595

  172 constraint-expression: logical-or-expression •
  570 logical-or-expression: logical-or-expression • "||" logical-and-expression

    "||"  shift, and go to state 908

    $default  reduce using rule 172 (constraint-expression)


State 1596

  235 deduction-guide: template-name '(' parameter-declaration-clause ')' "->" • simple-template-id ';'

    IDENTIFIER  shift, and go to state 315

    simple-template-id  go to state 1793
    template-name       go to state 143


State 1597

  854 placeholder-type-specifier: type-constraint "decltype" '(' "auto" ')' •

    $default  reduce using rule 854 (placeholder-type-specifier)


State 1598

   14 alias-declaration: "using" IDENTIFIER attribute-specifier-seq '=' defining-type-id ';' •

    $default  reduce using rule 14 (alias-declaration)


State 1599

  349 fold-expression: '(' "..." fold-operator cast-expression • ')'

    ')'  shift, and go to state 1794


State 1600

  348 fold-expression: '(' cast-expression fold-operator "..." • ')'
  350                | '(' cast-expression fold-operator "..." • fold-operator cast-expression ')'

    '+'    shift, and go to state 1239
    '-'    shift, and go to state 1240
    '='    shift, and go to state 1241
    ')'    shift, and go to state 1795
    '&'    shift, and go to state 1242
    "*="   shift, and go to state 1243
    "/="   shift, and go to state 1244
    "%="   shift, and go to state 1245
    "+="   shift, and go to state 1246
    "-="   shift, and go to state 1247
    ">>="  shift, and go to state 1248
    "<<="  shift, and go to state 1249
    "&="   shift, and go to state 1250
    "^="   shift, and go to state 1251
    "|="   shift, and go to state 1252
    ','    shift, and go to state 1253
    "&&"   shift, and go to state 1254
    "||"   shift, and go to state 1255
    "=="   shift, and go to state 1256
    "!="   shift, and go to state 1257
    '^'    shift, and go to state 1258
    '<'    shift, and go to state 1259
    '>'    shift, and go to state 1260
    '*'    shift, and go to state 1261
    '/'    shift, and go to state 1262
    '%'    shift, and go to state 1263
    '|'    shift, and go to state 1264
    "<<"   shift, and go to state 1265
    ">>"   shift, and go to state 1266
    "<="   shift, and go to state 1267
    ">="   shift, and go to state 1268
    ".*"   shift, and go to state 1269
    "->*"  shift, and go to state 1270

    fold-operator  go to state 1796


State 1601

  125 cast-expression: '(' type-id ')' cast-expression •

    $default  reduce using rule 125 (cast-expression)


State 1602

  246 delete-expression: "::" "delete" '[' ']' • cast-expression
  538 lambda-introducer: '[' ']' •

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    IDENTIFIER  [reduce using rule 538 (lambda-introducer)]
    '('         [reduce using rule 538 (lambda-introducer)]
    "::"        [reduce using rule 538 (lambda-introducer)]
    '['         [reduce using rule 538 (lambda-introducer)]
    "noexcept"  [reduce using rule 538 (lambda-introducer)]
    "decltype"  [reduce using rule 538 (lambda-introducer)]
    "auto"      [reduce using rule 538 (lambda-introducer)]
    "char"      [reduce using rule 538 (lambda-introducer)]
    "char8_t"   [reduce using rule 538 (lambda-introducer)]
    "char16_t"  [reduce using rule 538 (lambda-introducer)]
    "char32_t"  [reduce using rule 538 (lambda-introducer)]
    "wchar_t"   [reduce using rule 538 (lambda-introducer)]
    "bool"      [reduce using rule 538 (lambda-introducer)]
    "short"     [reduce using rule 538 (lambda-introducer)]
    "int"       [reduce using rule 538 (lambda-introducer)]
    "long"      [reduce using rule 538 (lambda-introducer)]
    "signed"    [reduce using rule 538 (lambda-introducer)]
    "unsigned"  [reduce using rule 538 (lambda-introducer)]
    "float"     [reduce using rule 538 (lambda-introducer)]
    "double"    [reduce using rule 538 (lambda-introducer)]
    "void"      [reduce using rule 538 (lambda-introducer)]
    "typename"  [reduce using rule 538 (lambda-introducer)]
    $default    reduce using rule 538 (lambda-introducer)

    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 1797
    character-literal                    go to state 410
    class-name                           go to state 66
    concept-name                         go to state 68
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    requires-expression                  go to state 447
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 1603

  680 new-expression: "::" "new" '(' type-id • ')'
  684               | "::" "new" '(' type-id • ')' new-initializer

    ')'  shift, and go to state 1798


State 1604

  682 new-expression: "::" "new" new-placement '(' • type-id ')'
  686               | "::" "new" new-placement '(' • type-id ')' new-initializer

    IDENTIFIER  shift, and go to state 161
    "::"        shift, and go to state 9
    "class"     shift, and go to state 12
    "struct"    shift, and go to state 13
    "union"     shift, and go to state 14
    "const"     shift, and go to state 18
    "volatile"  shift, and go to state 19
    "decltype"  shift, and go to state 26
    "enum"      shift, and go to state 136
    "auto"      shift, and go to state 37
    "char"      shift, and go to state 38
    "char8_t"   shift, and go to state 39
    "char16_t"  shift, and go to state 40
    "char32_t"  shift, and go to state 41
    "wchar_t"   shift, and go to state 42
    "bool"      shift, and go to state 43
    "short"     shift, and go to state 44
    "int"       shift, and go to state 45
    "long"      shift, and go to state 46
    "signed"    shift, and go to state 47
    "unsigned"  shift, and go to state 48
    "float"     shift, and go to state 49
    "double"    shift, and go to state 50
    "void"      shift, and go to state 51
    "typename"  shift, and go to state 56

    class-key                   go to state 210
    class-name                  go to state 66
    concept-name                go to state 68
    cv-qualifier                go to state 70
    decltype-specifier          go to state 77
    elaborated-enum-specifier   go to state 80
    elaborated-type-specifier   go to state 81
    enum-name                   go to state 85
    namespace-alias             go to state 100
    namespace-name              go to state 103
    nested-name-specifier       go to state 213
    placeholder-type-specifier  go to state 110
    simple-template-id          go to state 142
    simple-type-specifier       go to state 116
    template-name               go to state 216
    type-constraint             go to state 124
    type-id                     go to state 1799
    type-name                   go to state 125
    type-specifier              go to state 217
    type-specifier-seq          go to state 452
    typedef-name                go to state 127
    typename-specifier          go to state 128


State 1605

  674 new-expression: "::" "new" new-placement new-type-id •
  678               | "::" "new" new-placement new-type-id • new-initializer

    '('  shift, and go to state 1310
    '{'  shift, and go to state 939

    '{'       [reduce using rule 674 (new-expression)]
    $default  reduce using rule 674 (new-expression)

    braced-init-list  go to state 1311
    new-initializer   go to state 1800


State 1606

  676 new-expression: "::" "new" new-type-id new-initializer •

    $default  reduce using rule 676 (new-expression)


State 1607

  469 init-capture: "..." IDENTIFIER initializer •

    $default  reduce using rule 469 (init-capture)


State 1608

  974 simple-capture: '&' IDENTIFIER "..." •

    $default  reduce using rule 974 (simple-capture)


State 1609

  471 init-capture: '&' IDENTIFIER initializer •

    $default  reduce using rule 471 (init-capture)


State 1610

  472 init-capture: '&' "..." IDENTIFIER • initializer

    '='  shift, and go to state 1280
    '('  shift, and go to state 647
    '{'  shift, and go to state 939

    brace-or-equal-initializer  go to state 649
    braced-init-list            go to state 650
    initializer                 go to state 1801


State 1611

  471 init-capture: '&' • IDENTIFIER initializer
  472             | '&' • "..." IDENTIFIER initializer
  973 simple-capture: '&' • IDENTIFIER
  974               | '&' • IDENTIFIER "..."

    IDENTIFIER  shift, and go to state 1284
    "..."       shift, and go to state 1285


State 1612

  123 capture-list: capture-list • ',' capture
  531 lambda-capture: capture-default ',' capture-list •

    ','  shift, and go to state 1288

    $default  reduce using rule 531 (lambda-capture)


State 1613

  123 capture-list: capture-list ',' capture •

    $default  reduce using rule 123 (capture-list)


State 1614

  696 noexcept-expression: "noexcept" '(' expression ')' •

    $default  reduce using rule 696 (noexcept-expression)


State 1615

  247 delete-expression: "delete" '[' ']' cast-expression •

    $default  reduce using rule 247 (delete-expression)


State 1616

  940 requirement-parameter-list: '(' parameter-declaration-clause ')' •

    $default  reduce using rule 940 (requirement-parameter-list)


State 1617

  156 compound-requirement: '{' expression • '}' ';'
  157                     | '{' expression • '}' "noexcept" ';'
  158                     | '{' expression • '}' return-type-requirement ';'
  159                     | '{' expression • '}' "noexcept" return-type-requirement ';'
  338 expression: expression • ',' assignment-expression

    ','  shift, and go to state 1037
    '}'  shift, and go to state 1802


State 1618

  125 cast-expression: '(' • type-id ')' cast-expression
  348 fold-expression: '(' • cast-expression fold-operator "..." ')'
  349                | '(' • "..." fold-operator cast-expression ')'
  350                | '(' • cast-expression fold-operator "..." fold-operator cast-expression ')'
  885 primary-expression: '(' • expression ')'
  940 requirement-parameter-list: '(' • parameter-declaration-clause ')'

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    "alignas"           shift, and go to state 4
    '('                 shift, and go to state 363
    "..."               shift, and go to state 1803
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 667
    "co_await"          shift, and go to state 367
    "virtual"           shift, and go to state 11
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "friend"            shift, and go to state 20
    "typedef"           shift, and go to state 21
    "constexpr"         shift, and go to state 22
    "consteval"         shift, and go to state 23
    "constinit"         shift, and go to state 24
    "inline"            shift, and go to state 263
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 27
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    "extern"            shift, and go to state 264
    "explicit"          shift, and go to state 29
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 1804
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    "static"            shift, and go to state 53
    "thread_local"      shift, and go to state 54
    "mutable"           shift, and go to state 55
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    alignment-specifier                  go to state 58
    and-expression                       go to state 405
    assignment-expression                go to state 530
    attribute-specifier                  go to state 61
    attribute-specifier-seq              go to state 478
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 761
    character-literal                    go to state 410
    class-head                           go to state 64
    class-key                            go to state 65
    class-name                           go to state 66
    class-specifier                      go to state 67
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decl-specifier                       go to state 71
    decl-specifier-seq                   go to state 479
    decltype-specifier                   go to state 77
    defining-type-specifier              go to state 79
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-head                            go to state 83
    enum-key                             go to state 268
    enum-name                            go to state 85
    enum-specifier                       go to state 86
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    explicit-specifier                   go to state 269
    expression                           go to state 762
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    function-specifier                   go to state 92
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    parameter-declaration                go to state 735
    parameter-declaration-clause         go to state 1294
    parameter-declaration-list           go to state 737
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    storage-class-specifier              go to state 118
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-id                              go to state 763
    type-name                            go to state 125
    type-specifier                       go to state 1805
    type-specifier-seq                   go to state 452
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 1619

  668 nested-requirement: "requires" constraint-expression • ';'

    ';'  shift, and go to state 1806


State 1620

  663 nested-name-specifier: nested-name-specifier • IDENTIFIER "::"
  664                      | nested-name-specifier • simple-template-id "::"
  665                      | nested-name-specifier • "template" simple-template-id "::"
  1116 type-requirement: "typename" nested-name-specifier • type-name ';'
  1126 typename-specifier: "typename" nested-name-specifier • IDENTIFIER
  1127                   | "typename" nested-name-specifier • simple-template-id
  1128                   | "typename" nested-name-specifier • "template" simple-template-id

    IDENTIFIER  shift, and go to state 1807
    "template"  shift, and go to state 577

    class-name          go to state 66
    enum-name           go to state 85
    simple-template-id  go to state 1808
    template-name       go to state 143
    type-name           go to state 1809
    typedef-name        go to state 127


State 1621

  660 nested-name-specifier: type-name • "::"
  1115 type-requirement: "typename" type-name • ';'

    ';'   shift, and go to state 1810
    "::"  shift, and go to state 346


State 1622

  996 simple-requirement: expression ';' •

    $default  reduce using rule 996 (simple-requirement)


State 1623

  939 requirement-body: '{' requirement-seq '}' •

    $default  reduce using rule 939 (requirement-body)


State 1624

  942 requirement-seq: requirement-seq requirement •

    $default  reduce using rule 942 (requirement-seq)


State 1625

  691 new-placement: '(' expression-list ')' •

    $default  reduce using rule 691 (new-placement)


State 1626

  681 new-expression: "new" '(' type-id ')' •
  685               | "new" '(' type-id ')' • new-initializer

    '('  shift, and go to state 1310
    '{'  shift, and go to state 939

    '{'       [reduce using rule 681 (new-expression)]
    $default  reduce using rule 681 (new-expression)

    braced-init-list  go to state 1311
    new-initializer   go to state 1811


State 1627

  683 new-expression: "new" new-placement '(' type-id • ')'
  687               | "new" new-placement '(' type-id • ')' new-initializer

    ')'  shift, and go to state 1812


State 1628

  679 new-expression: "new" new-placement new-type-id new-initializer •

    $default  reduce using rule 679 (new-expression)


State 1629

  688 new-initializer: '(' ')' •

    $default  reduce using rule 688 (new-initializer)


State 1630

  689 new-initializer: '(' expression-list • ')'

    ')'  shift, and go to state 1813


State 1631

  733 noptr-new-declarator: '[' ']' •
  735                     | '[' ']' • attribute-specifier-seq

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    '['       [reduce using rule 733 (noptr-new-declarator)]
    $default  reduce using rule 733 (noptr-new-declarator)

    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 1814


State 1632

  338 expression: expression • ',' assignment-expression
  734 noptr-new-declarator: '[' expression • ']'
  736                     | '[' expression • ']' attribute-specifier-seq

    ','  shift, and go to state 1037
    ']'  shift, and go to state 1815


State 1633

  737 noptr-new-declarator: noptr-new-declarator '[' • constant-expression ']'
  738                     | noptr-new-declarator '[' • constant-expression ']' attribute-specifier-seq

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    additive-expression                  go to state 404
    and-expression                       go to state 405
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 412
    constant-expression                  go to state 1816
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 435
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 1634

  670 new-declarator: ptr-operator new-declarator •

    $default  reduce using rule 670 (new-declarator)


State 1635

  877 postfix-expression: "dynamic_cast" '<' type-id '>' • '(' expression ')'

    '('  shift, and go to state 1817


State 1636

  878 postfix-expression: "static_cast" '<' type-id '>' • '(' expression ')'

    '('  shift, and go to state 1818


State 1637

  879 postfix-expression: "reinterpret_cast" '<' type-id '>' • '(' expression ')'

    '('  shift, and go to state 1819


State 1638

  880 postfix-expression: "const_cast" '<' type-id '>' • '(' expression ')'

    '('  shift, and go to state 1820


State 1639

  881 postfix-expression: "typeid" '(' expression ')' •

    $default  reduce using rule 881 (postfix-expression)


State 1640

  882 postfix-expression: "typeid" '(' type-id ')' •

    $default  reduce using rule 882 (postfix-expression)


State 1641

  1136 unary-expression: "sizeof" '(' type-id ')' •

    $default  reduce using rule 1136 (unary-expression)


State 1642

  1137 unary-expression: "sizeof" "..." '(' IDENTIFIER • ')'

    ')'  shift, and go to state 1821


State 1643

  1138 unary-expression: "alignof" '(' type-id ')' •

    $default  reduce using rule 1138 (unary-expression)


State 1644

  263 digit-sequence: digit-sequence • digit
  264               | digit-sequence • '\'' digit
  328 exponent-part: 'e' sign digit-sequence •

    '0'   shift, and go to state 793
    '1'   shift, and go to state 794
    '\''  shift, and go to state 851
    '2'   shift, and go to state 795
    '3'   shift, and go to state 796
    '4'   shift, and go to state 797
    '5'   shift, and go to state 798
    '6'   shift, and go to state 799
    '7'   shift, and go to state 800
    '8'   shift, and go to state 801
    '9'   shift, and go to state 802

    $default  reduce using rule 328 (exponent-part)

    digit  go to state 855


State 1645

  263 digit-sequence: digit-sequence • digit
  264               | digit-sequence • '\'' digit
  330 exponent-part: 'E' sign digit-sequence •

    '0'   shift, and go to state 793
    '1'   shift, and go to state 794
    '\''  shift, and go to state 851
    '2'   shift, and go to state 795
    '3'   shift, and go to state 796
    '4'   shift, and go to state 797
    '5'   shift, and go to state 798
    '6'   shift, and go to state 799
    '7'   shift, and go to state 800
    '8'   shift, and go to state 801
    '9'   shift, and go to state 802

    $default  reduce using rule 330 (exponent-part)

    digit  go to state 855


State 1646

  126 character-literal: encoding-prefix '\'' c-char-sequence '\'' •

    $default  reduce using rule 126 (character-literal)


State 1647

   87 binary-exponent-part: 'p' digit-sequence •
  263 digit-sequence: digit-sequence • digit
  264               | digit-sequence • '\'' digit

    '0'   shift, and go to state 793
    '1'   shift, and go to state 794
    '\''  shift, and go to state 851
    '2'   shift, and go to state 795
    '3'   shift, and go to state 796
    '4'   shift, and go to state 797
    '5'   shift, and go to state 798
    '6'   shift, and go to state 799
    '7'   shift, and go to state 800
    '8'   shift, and go to state 801
    '9'   shift, and go to state 802

    $default  reduce using rule 87 (binary-exponent-part)

    digit  go to state 855


State 1648

   88 binary-exponent-part: 'p' sign • digit-sequence

    '0'  shift, and go to state 793
    '1'  shift, and go to state 794
    '2'  shift, and go to state 795
    '3'  shift, and go to state 796
    '4'  shift, and go to state 797
    '5'  shift, and go to state 798
    '6'  shift, and go to state 799
    '7'  shift, and go to state 800
    '8'  shift, and go to state 801
    '9'  shift, and go to state 802

    digit           go to state 417
    digit-sequence  go to state 1822


State 1649

   89 binary-exponent-part: 'P' digit-sequence •
  263 digit-sequence: digit-sequence • digit
  264               | digit-sequence • '\'' digit

    '0'   shift, and go to state 793
    '1'   shift, and go to state 794
    '\''  shift, and go to state 851
    '2'   shift, and go to state 795
    '3'   shift, and go to state 796
    '4'   shift, and go to state 797
    '5'   shift, and go to state 798
    '6'   shift, and go to state 799
    '7'   shift, and go to state 800
    '8'   shift, and go to state 801
    '9'   shift, and go to state 802

    $default  reduce using rule 89 (binary-exponent-part)

    digit  go to state 855


State 1650

   90 binary-exponent-part: 'P' sign • digit-sequence

    '0'  shift, and go to state 793
    '1'  shift, and go to state 794
    '2'  shift, and go to state 795
    '3'  shift, and go to state 796
    '4'  shift, and go to state 797
    '5'  shift, and go to state 798
    '6'  shift, and go to state 799
    '7'  shift, and go to state 800
    '8'  shift, and go to state 801
    '9'  shift, and go to state 802

    digit           go to state 417
    digit-sequence  go to state 1823


State 1651

  450 hexadecimal-digit-sequence: hexadecimal-digit-sequence '\'' hexadecimal-digit •

    $default  reduce using rule 450 (hexadecimal-digit-sequence)


State 1652

  449 hexadecimal-digit-sequence: hexadecimal-digit-sequence • hexadecimal-digit
  450                           | hexadecimal-digit-sequence • '\'' hexadecimal-digit
  457 hexadecimal-fractional-constant: hexadecimal-digit-sequence '.' hexadecimal-digit-sequence •

    '0'   shift, and go to state 870
    '1'   shift, and go to state 871
    '\''  shift, and go to state 1358
    '2'   shift, and go to state 873
    '3'   shift, and go to state 874
    '4'   shift, and go to state 875
    '5'   shift, and go to state 876
    '6'   shift, and go to state 877
    '7'   shift, and go to state 878
    '8'   shift, and go to state 879
    '9'   shift, and go to state 880
    'e'   shift, and go to state 881
    'E'   shift, and go to state 882
    'f'   shift, and go to state 883
    'F'   shift, and go to state 884
    'a'   shift, and go to state 885
    'b'   shift, and go to state 886
    'c'   shift, and go to state 887
    'd'   shift, and go to state 888
    'A'   shift, and go to state 889
    'B'   shift, and go to state 890
    'C'   shift, and go to state 891
    'D'   shift, and go to state 892

    $default  reduce using rule 457 (hexadecimal-fractional-constant)

    hexadecimal-digit  go to state 1361


State 1653

  456 hexadecimal-floating-point-literal: hexadecimal-prefix hexadecimal-digit-sequence binary-exponent-part floating-point-suffix •

    $default  reduce using rule 456 (hexadecimal-floating-point-literal)


State 1654

  1168 user-defined-floating-point-literal: hexadecimal-prefix hexadecimal-digit-sequence binary-exponent-part ud-suffix •

    $default  reduce using rule 1168 (user-defined-floating-point-literal)


State 1655

  454 hexadecimal-floating-point-literal: hexadecimal-prefix hexadecimal-fractional-constant binary-exponent-part floating-point-suffix •

    $default  reduce using rule 454 (hexadecimal-floating-point-literal)


State 1656

  1167 user-defined-floating-point-literal: hexadecimal-prefix hexadecimal-fractional-constant binary-exponent-part ud-suffix •

    $default  reduce using rule 1167 (user-defined-floating-point-literal)


State 1657

  533 lambda-declarator: '(' parameter-declaration-clause ')' • lambda-specifiers
  534                  | '(' parameter-declaration-clause ')' • lambda-specifiers requires-clause

    IDENTIFIER      shift, and go to state 161
    "alignas"       shift, and go to state 4
    "::"            shift, and go to state 9
    '['             shift, and go to state 10
    "virtual"       shift, and go to state 11
    "class"         shift, and go to state 12
    "struct"        shift, and go to state 13
    "union"         shift, and go to state 14
    "noexcept"      shift, and go to state 898
    "const"         shift, and go to state 18
    "volatile"      shift, and go to state 19
    "friend"        shift, and go to state 20
    "typedef"       shift, and go to state 21
    "constexpr"     shift, and go to state 22
    "consteval"     shift, and go to state 23
    "constinit"     shift, and go to state 24
    "inline"        shift, and go to state 263
    "decltype"      shift, and go to state 26
    "->"            shift, and go to state 740
    "enum"          shift, and go to state 27
    "extern"        shift, and go to state 264
    "explicit"      shift, and go to state 29
    "auto"          shift, and go to state 37
    "char"          shift, and go to state 38
    "char8_t"       shift, and go to state 39
    "char16_t"      shift, and go to state 40
    "char32_t"      shift, and go to state 41
    "wchar_t"       shift, and go to state 42
    "bool"          shift, and go to state 43
    "short"         shift, and go to state 44
    "int"           shift, and go to state 45
    "long"          shift, and go to state 46
    "signed"        shift, and go to state 47
    "unsigned"      shift, and go to state 48
    "float"         shift, and go to state 49
    "double"        shift, and go to state 50
    "void"          shift, and go to state 51
    "static"        shift, and go to state 53
    "thread_local"  shift, and go to state 54
    "mutable"       shift, and go to state 55
    "typename"      shift, and go to state 56

    alignment-specifier         go to state 58
    attribute-specifier         go to state 61
    attribute-specifier-seq     go to state 900
    class-head                  go to state 64
    class-key                   go to state 65
    class-name                  go to state 66
    class-specifier             go to state 67
    concept-name                go to state 68
    cv-qualifier                go to state 70
    decl-specifier              go to state 71
    decl-specifier-seq          go to state 901
    decltype-specifier          go to state 77
    defining-type-specifier     go to state 79
    elaborated-enum-specifier   go to state 80
    elaborated-type-specifier   go to state 81
    enum-head                   go to state 83
    enum-key                    go to state 268
    enum-name                   go to state 85
    enum-specifier              go to state 86
    explicit-specifier          go to state 269
    function-specifier          go to state 92
    lambda-specifiers           go to state 1824
    namespace-alias             go to state 100
    namespace-name              go to state 103
    nested-name-specifier       go to state 213
    noexcept-specifier          go to state 904
    placeholder-type-specifier  go to state 110
    simple-template-id          go to state 142
    simple-type-specifier       go to state 116
    storage-class-specifier     go to state 118
    template-name               go to state 216
    trailing-return-type        go to state 905
    type-constraint             go to state 124
    type-name                   go to state 125
    type-specifier              go to state 126
    typedef-name                go to state 127
    typename-specifier          go to state 128


State 1658

  697 noexcept-specifier: "noexcept" '(' constant-expression • ')'

    ')'  shift, and go to state 1825


State 1659

  536 lambda-expression: lambda-introducer '<' template-parameter-list '>' • lambda-declarator compound-statement
  537                  | lambda-introducer '<' template-parameter-list '>' • requires-clause lambda-declarator compound-statement

    IDENTIFIER      shift, and go to state 161
    "alignas"       shift, and go to state 4
    '('             shift, and go to state 897
    "::"            shift, and go to state 9
    '['             shift, and go to state 10
    "virtual"       shift, and go to state 11
    "class"         shift, and go to state 12
    "struct"        shift, and go to state 13
    "union"         shift, and go to state 14
    "noexcept"      shift, and go to state 898
    "const"         shift, and go to state 18
    "volatile"      shift, and go to state 19
    "friend"        shift, and go to state 20
    "typedef"       shift, and go to state 21
    "constexpr"     shift, and go to state 22
    "consteval"     shift, and go to state 23
    "constinit"     shift, and go to state 24
    "inline"        shift, and go to state 263
    "decltype"      shift, and go to state 26
    "->"            shift, and go to state 740
    "enum"          shift, and go to state 27
    "extern"        shift, and go to state 264
    "explicit"      shift, and go to state 29
    "requires"      shift, and go to state 297
    "auto"          shift, and go to state 37
    "char"          shift, and go to state 38
    "char8_t"       shift, and go to state 39
    "char16_t"      shift, and go to state 40
    "char32_t"      shift, and go to state 41
    "wchar_t"       shift, and go to state 42
    "bool"          shift, and go to state 43
    "short"         shift, and go to state 44
    "int"           shift, and go to state 45
    "long"          shift, and go to state 46
    "signed"        shift, and go to state 47
    "unsigned"      shift, and go to state 48
    "float"         shift, and go to state 49
    "double"        shift, and go to state 50
    "void"          shift, and go to state 51
    "static"        shift, and go to state 53
    "thread_local"  shift, and go to state 54
    "mutable"       shift, and go to state 55
    "typename"      shift, and go to state 56

    alignment-specifier         go to state 58
    attribute-specifier         go to state 61
    attribute-specifier-seq     go to state 900
    class-head                  go to state 64
    class-key                   go to state 65
    class-name                  go to state 66
    class-specifier             go to state 67
    concept-name                go to state 68
    cv-qualifier                go to state 70
    decl-specifier              go to state 71
    decl-specifier-seq          go to state 901
    decltype-specifier          go to state 77
    defining-type-specifier     go to state 79
    elaborated-enum-specifier   go to state 80
    elaborated-type-specifier   go to state 81
    enum-head                   go to state 83
    enum-key                    go to state 268
    enum-name                   go to state 85
    enum-specifier              go to state 86
    explicit-specifier          go to state 269
    function-specifier          go to state 92
    lambda-declarator           go to state 1826
    lambda-specifiers           go to state 903
    namespace-alias             go to state 100
    namespace-name              go to state 103
    nested-name-specifier       go to state 213
    noexcept-specifier          go to state 904
    placeholder-type-specifier  go to state 110
    requires-clause             go to state 1827
    simple-template-id          go to state 142
    simple-type-specifier       go to state 116
    storage-class-specifier     go to state 118
    template-name               go to state 216
    trailing-return-type        go to state 905
    type-constraint             go to state 124
    type-name                   go to state 125
    type-specifier              go to state 126
    typedef-name                go to state 127
    typename-specifier          go to state 128


State 1660

  551 lambda-specifiers: decl-specifier-seq attribute-specifier-seq trailing-return-type •

    $default  reduce using rule 551 (lambda-specifiers)


State 1661

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  545 lambda-specifiers: decl-specifier-seq noexcept-specifier attribute-specifier-seq •
  553                  | decl-specifier-seq noexcept-specifier attribute-specifier-seq • trailing-return-type

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10
    "->"       shift, and go to state 740

    $default  reduce using rule 545 (lambda-specifiers)

    alignment-specifier   go to state 58
    attribute-specifier   go to state 265
    trailing-return-type  go to state 1828


State 1662

  549 lambda-specifiers: decl-specifier-seq noexcept-specifier trailing-return-type •

    $default  reduce using rule 549 (lambda-specifiers)


State 1663

  554 lambda-specifiers: noexcept-specifier attribute-specifier-seq trailing-return-type •

    $default  reduce using rule 554 (lambda-specifiers)


State 1664

  170 conditional-expression: logical-or-expression '?' expression ':' • assignment-expression

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 1829
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 1665

  864 postfix-expression: postfix-expression '(' expression-list ')' •

    $default  reduce using rule 864 (postfix-expression)


State 1666

  862 postfix-expression: postfix-expression '[' expression-list ']' •

    $default  reduce using rule 862 (postfix-expression)


State 1667

  874 postfix-expression: postfix-expression "->" "template" id-expression •

    $default  reduce using rule 874 (postfix-expression)


State 1668

  872 postfix-expression: postfix-expression '.' "template" id-expression •

    $default  reduce using rule 872 (postfix-expression)


State 1669

  866 postfix-expression: simple-type-specifier '(' expression-list ')' •

    $default  reduce using rule 866 (postfix-expression)


State 1670

   50 attribute-specifier: '[' '[' • attribute-list ']' ']'
   51                    | '[' '[' • attribute-using-prefix attribute-list ']' ']'
  538 lambda-introducer: '[' • ']'
  539                  | '[' • lambda-capture ']'

    IDENTIFIER  shift, and go to state 1830
    "using"     shift, and go to state 466
    '='         shift, and go to state 767
    "..."       shift, and go to state 768
    '&'         shift, and go to state 769
    ']'         shift, and go to state 770
    '*'         shift, and go to state 771
    "this"      shift, and go to state 772

    attribute               go to state 467
    attribute-list          go to state 468
    attribute-namespace     go to state 469
    attribute-scoped-token  go to state 470
    attribute-token         go to state 471
    attribute-using-prefix  go to state 472
    capture                 go to state 773
    capture-default         go to state 774
    capture-list            go to state 775
    init-capture            go to state 776
    lambda-capture          go to state 777
    simple-capture          go to state 778


State 1671

  708 noptr-abstract-declarator: noptr-abstract-declarator parameters-and-qualifiers •

    $default  reduce using rule 708 (noptr-abstract-declarator)


State 1672

  718 noptr-abstract-declarator: '(' ptr-abstract-declarator ')' •

    $default  reduce using rule 718 (noptr-abstract-declarator)


State 1673

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  715 noptr-abstract-declarator: '[' ']' attribute-specifier-seq •

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    '['       [reduce using rule 715 (noptr-abstract-declarator)]
    $default  reduce using rule 715 (noptr-abstract-declarator)

    alignment-specifier  go to state 58
    attribute-specifier  go to state 265


State 1674

  713 noptr-abstract-declarator: '[' constant-expression ']' •
  717                          | '[' constant-expression ']' • attribute-specifier-seq

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    '['       [reduce using rule 713 (noptr-abstract-declarator)]
    $default  reduce using rule 713 (noptr-abstract-declarator)

    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 1831


State 1675

  710 noptr-abstract-declarator: noptr-abstract-declarator '[' ']' •
  714                          | noptr-abstract-declarator '[' ']' • attribute-specifier-seq

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    '['       [reduce using rule 710 (noptr-abstract-declarator)]
    $default  reduce using rule 710 (noptr-abstract-declarator)

    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 1832


State 1676

  712 noptr-abstract-declarator: noptr-abstract-declarator '[' constant-expression • ']'
  716                          | noptr-abstract-declarator '[' constant-expression • ']' attribute-specifier-seq

    ']'  shift, and go to state 1833


State 1677

    2 abstract-declarator: noptr-abstract-declarator parameters-and-qualifiers trailing-return-type •

    $default  reduce using rule 2 (abstract-declarator)


State 1678

  720 noptr-abstract-pack-declarator: noptr-abstract-pack-declarator '[' ']' •
  722                               | noptr-abstract-pack-declarator '[' ']' • attribute-specifier-seq

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    '['       [reduce using rule 720 (noptr-abstract-pack-declarator)]
    $default  reduce using rule 720 (noptr-abstract-pack-declarator)

    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 1834


State 1679

  721 noptr-abstract-pack-declarator: noptr-abstract-pack-declarator '[' constant-expression • ']'
  723                               | noptr-abstract-pack-declarator '[' constant-expression • ']' attribute-specifier-seq

    ']'  shift, and go to state 1835


State 1680

  868 postfix-expression: typename-specifier '(' expression-list ')' •

    $default  reduce using rule 868 (postfix-expression)


State 1681

   47 attribute-list: attribute-list ',' attribute "..." •

    $default  reduce using rule 47 (attribute-list)


State 1682

   59 balanced-token: '(' ')' •

    $default  reduce using rule 59 (balanced-token)


State 1683

   60 balanced-token: '(' balanced-token-seq • ')'
   67 balanced-token-seq: balanced-token-seq • balanced-token

    ANY_TOKEN_OTHER_THAN_PARENTHESIS_BRACKET_BRACE  shift, and go to state 1423
    '('                                             shift, and go to state 1424
    ')'                                             shift, and go to state 1836
    '['                                             shift, and go to state 1426
    '{'                                             shift, and go to state 1427

    balanced-token  go to state 1689


State 1684

   61 balanced-token: '[' ']' •

    $default  reduce using rule 61 (balanced-token)


State 1685

   62 balanced-token: '[' balanced-token-seq • ']'
   67 balanced-token-seq: balanced-token-seq • balanced-token

    ANY_TOKEN_OTHER_THAN_PARENTHESIS_BRACKET_BRACE  shift, and go to state 1423
    '('                                             shift, and go to state 1424
    '['                                             shift, and go to state 1426
    ']'                                             shift, and go to state 1837
    '{'                                             shift, and go to state 1427

    balanced-token  go to state 1689


State 1686

   63 balanced-token: '{' '}' •

    $default  reduce using rule 63 (balanced-token)


State 1687

   64 balanced-token: '{' balanced-token-seq • '}'
   67 balanced-token-seq: balanced-token-seq • balanced-token

    ANY_TOKEN_OTHER_THAN_PARENTHESIS_BRACKET_BRACE  shift, and go to state 1423
    '('                                             shift, and go to state 1424
    '['                                             shift, and go to state 1426
    '{'                                             shift, and go to state 1427
    '}'                                             shift, and go to state 1838

    balanced-token  go to state 1689


State 1688

   41 attribute-argument-clause: '(' balanced-token-seq ')' •

    $default  reduce using rule 41 (attribute-argument-clause)


State 1689

   67 balanced-token-seq: balanced-token-seq balanced-token •

    $default  reduce using rule 67 (balanced-token-seq)


State 1690

   51 attribute-specifier: '[' '[' attribute-using-prefix attribute-list ']' ']' •

    $default  reduce using rule 51 (attribute-specifier)


State 1691

  825 parameter-declaration: "this" decl-specifier-seq '=' initializer-clause •

    $default  reduce using rule 825 (parameter-declaration)


State 1692

  829 parameter-declaration: "this" decl-specifier-seq abstract-declarator '=' • initializer-clause

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 939
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 1141
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    braced-init-list                     go to state 1142
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    initializer-clause                   go to state 1839
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 1693

  813 parameter-declaration: "this" decl-specifier-seq declarator '=' • initializer-clause

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 939
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 1141
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    braced-init-list                     go to state 1142
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    initializer-clause                   go to state 1840
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 1694

  824 parameter-declaration: attribute-specifier-seq "this" decl-specifier-seq '=' • initializer-clause

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 939
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 1141
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    braced-init-list                     go to state 1142
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    initializer-clause                   go to state 1841
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 1695

  820 parameter-declaration: attribute-specifier-seq "this" decl-specifier-seq abstract-declarator •
  828                      | attribute-specifier-seq "this" decl-specifier-seq abstract-declarator • '=' initializer-clause

    '='  shift, and go to state 1842

    $default  reduce using rule 820 (parameter-declaration)


State 1696

  808 parameter-declaration: attribute-specifier-seq "this" decl-specifier-seq declarator •
  812                      | attribute-specifier-seq "this" decl-specifier-seq declarator • '=' initializer-clause

    '='  shift, and go to state 1843

    $default  reduce using rule 808 (parameter-declaration)


State 1697

  822 parameter-declaration: attribute-specifier-seq decl-specifier-seq '=' initializer-clause •

    $default  reduce using rule 822 (parameter-declaration)


State 1698

  826 parameter-declaration: attribute-specifier-seq decl-specifier-seq abstract-declarator '=' • initializer-clause

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 939
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 1141
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    braced-init-list                     go to state 1142
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    initializer-clause                   go to state 1844
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 1699

  810 parameter-declaration: attribute-specifier-seq decl-specifier-seq declarator '=' • initializer-clause

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 939
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 1141
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    braced-init-list                     go to state 1142
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    initializer-clause                   go to state 1845
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 1700

  827 parameter-declaration: decl-specifier-seq abstract-declarator '=' initializer-clause •

    $default  reduce using rule 827 (parameter-declaration)


State 1701

  811 parameter-declaration: decl-specifier-seq declarator '=' initializer-clause •

    $default  reduce using rule 811 (parameter-declaration)


State 1702

  1112 type-parameter: template-head type-parameter-key IDENTIFIER '=' • id-expression

    IDENTIFIER  shift, and go to state 148
    "::"        shift, and go to state 9
    "operator"  shift, and go to state 17
    "decltype"  shift, and go to state 135
    '~'         shift, and go to state 36

    class-name              go to state 66
    conversion-function-id  go to state 69
    decltype-specifier      go to state 139
    enum-name               go to state 85
    id-expression           go to state 1846
    literal-operator-id     go to state 96
    namespace-alias         go to state 100
    namespace-name          go to state 103
    nested-name-specifier   go to state 153
    operator-function-id    go to state 109
    qualified-id            go to state 113
    simple-template-id      go to state 115
    template-id             go to state 121
    template-name           go to state 143
    type-name               go to state 144
    typedef-name            go to state 127
    unqualified-id          go to state 130


State 1703

  1111 type-parameter: template-head type-parameter-key '=' id-expression •

    $default  reduce using rule 1111 (type-parameter)


State 1704

  1110 type-parameter: template-head type-parameter-key "..." IDENTIFIER •

    $default  reduce using rule 1110 (type-parameter)


State 1705

  1106 type-parameter: type-constraint IDENTIFIER '=' type-id •

    $default  reduce using rule 1106 (type-parameter)


State 1706

  1100 type-parameter: type-parameter-key IDENTIFIER '=' type-id •

    $default  reduce using rule 1100 (type-parameter)


State 1707

  751 octal-escape-sequence: '\\' octal-digit octal-digit octal-digit •

    $default  reduce using rule 751 (octal-escape-sequence)


State 1708

  425 hex-quad: hexadecimal-digit hexadecimal-digit hexadecimal-digit • hexadecimal-digit

    '0'  shift, and go to state 870
    '1'  shift, and go to state 871
    '2'  shift, and go to state 873
    '3'  shift, and go to state 874
    '4'  shift, and go to state 875
    '5'  shift, and go to state 876
    '6'  shift, and go to state 877
    '7'  shift, and go to state 878
    '8'  shift, and go to state 879
    '9'  shift, and go to state 880
    'e'  shift, and go to state 881
    'E'  shift, and go to state 882
    'f'  shift, and go to state 883
    'F'  shift, and go to state 884
    'a'  shift, and go to state 885
    'b'  shift, and go to state 886
    'c'  shift, and go to state 887
    'd'  shift, and go to state 888
    'A'  shift, and go to state 889
    'B'  shift, and go to state 890
    'C'  shift, and go to state 891
    'D'  shift, and go to state 892

    hexadecimal-digit  go to state 1847


State 1709

  920 raw-string: '"' '(' ')' '"' •

    $default  reduce using rule 920 (raw-string)


State 1710

  191 d-char-sequence: d-char-sequence • d-char
  924 raw-string: '"' '(' ')' d-char-sequence • '"'

    EXCEPT_SPACE_PARENTHESIS_REVERSE_SOLIDUS_TABULATION_LINE_TABULATION_FORM_FEED_AND_NEW_LINE  shift, and go to state 1013
    '"'                                                                                         shift, and go to state 1848

    d-char  go to state 1462


State 1711

  922 raw-string: '"' '(' r-char-sequence ')' • '"'
  926           | '"' '(' r-char-sequence ')' • d-char-sequence '"'

    EXCEPT_SPACE_PARENTHESIS_REVERSE_SOLIDUS_TABULATION_LINE_TABULATION_FORM_FEED_AND_NEW_LINE  shift, and go to state 1013
    '"'                                                                                         shift, and go to state 1849

    d-char           go to state 1015
    d-char-sequence  go to state 1850


State 1712

  919 r-char-sequence: r-char-sequence r-char •

    $default  reduce using rule 919 (r-char-sequence)


State 1713

  921 raw-string: '"' d-char-sequence '(' ')' • '"'
  925           | '"' d-char-sequence '(' ')' • d-char-sequence '"'

    EXCEPT_SPACE_PARENTHESIS_REVERSE_SOLIDUS_TABULATION_LINE_TABULATION_FORM_FEED_AND_NEW_LINE  shift, and go to state 1013
    '"'                                                                                         shift, and go to state 1851

    d-char           go to state 1015
    d-char-sequence  go to state 1852


State 1714

  919 r-char-sequence: r-char-sequence • r-char
  923 raw-string: '"' d-char-sequence '(' r-char-sequence • ')' '"'
  927           | '"' d-char-sequence '(' r-char-sequence • ')' d-char-sequence '"'

    EXCEPT_RIGHT_PARENTHESIS_FOLLOWED_BY_THE_INITIAL_D_CHAR_SEQUENCE_FOLLOWED_BY_QUOTATION_MARK  shift, and go to state 1457
    ')'                                                                                          shift, and go to state 1853

    r-char  go to state 1712


State 1715

  647 named-namespace-definition: "inline" "namespace" IDENTIFIER '{' namespace-body '}' •

    $default  reduce using rule 647 (named-namespace-definition)


State 1716

  649 named-namespace-definition: "inline" "namespace" attribute-specifier-seq IDENTIFIER '{' namespace-body • '}'

    '}'  shift, and go to state 1854


State 1717

  1152 unnamed-namespace-definition: "inline" "namespace" attribute-specifier-seq '{' namespace-body '}' •

    $default  reduce using rule 1152 (unnamed-namespace-definition)


State 1718

  629 module-declaration: "export-keyword" "module-keyword" module-name module-partition attribute-specifier-seq ';' •

    $default  reduce using rule 629 (module-declaration)


State 1719

  650 named-namespace-definition: "namespace" attribute-specifier-seq IDENTIFIER '{' namespace-body '}' •

    $default  reduce using rule 650 (named-namespace-definition)


State 1720

  666 nested-namespace-definition: "namespace" enclosing-namespace-specifier "::" IDENTIFIER '{' namespace-body • '}'

    '}'  shift, and go to state 1855


State 1721

  667 nested-namespace-definition: "namespace" enclosing-namespace-specifier "::" "inline" IDENTIFIER '{' • namespace-body '}'

    IDENTIFIER        shift, and go to state 1
    "using"           shift, and go to state 2
    ';'               shift, and go to state 3
    "alignas"         shift, and go to state 4
    '('               shift, and go to state 5
    "..."             shift, and go to state 6
    '&'               shift, and go to state 7
    "asm"             shift, and go to state 8
    "::"              shift, and go to state 9
    '['               shift, and go to state 10
    "virtual"         shift, and go to state 11
    "class"           shift, and go to state 12
    "struct"          shift, and go to state 13
    "union"           shift, and go to state 14
    "template"        shift, and go to state 15
    "&&"              shift, and go to state 16
    "operator"        shift, and go to state 17
    "const"           shift, and go to state 18
    "volatile"        shift, and go to state 19
    "friend"          shift, and go to state 20
    "typedef"         shift, and go to state 21
    "constexpr"       shift, and go to state 22
    "consteval"       shift, and go to state 23
    "constinit"       shift, and go to state 24
    "inline"          shift, and go to state 25
    "decltype"        shift, and go to state 26
    "enum"            shift, and go to state 27
    "extern"          shift, and go to state 28
    "explicit"        shift, and go to state 29
    "export"          shift, and go to state 30
    "export-keyword"  shift, and go to state 158
    '*'               shift, and go to state 32
    "import-keyword"  shift, and go to state 34
    "namespace"       shift, and go to state 35
    '~'               shift, and go to state 36
    "auto"            shift, and go to state 37
    "char"            shift, and go to state 38
    "char8_t"         shift, and go to state 39
    "char16_t"        shift, and go to state 40
    "char32_t"        shift, and go to state 41
    "wchar_t"         shift, and go to state 42
    "bool"            shift, and go to state 43
    "short"           shift, and go to state 44
    "int"             shift, and go to state 45
    "long"            shift, and go to state 46
    "signed"          shift, and go to state 47
    "unsigned"        shift, and go to state 48
    "float"           shift, and go to state 49
    "double"          shift, and go to state 50
    "void"            shift, and go to state 51
    "static_assert"   shift, and go to state 52
    "static"          shift, and go to state 53
    "thread_local"    shift, and go to state 54
    "mutable"         shift, and go to state 55
    "typename"        shift, and go to state 56

    alias-declaration                go to state 57
    alignment-specifier              go to state 58
    asm-declaration                  go to state 59
    attribute-declaration            go to state 60
    attribute-specifier              go to state 61
    attribute-specifier-seq          go to state 62
    block-declaration                go to state 63
    class-head                       go to state 64
    class-key                        go to state 65
    class-name                       go to state 66
    class-specifier                  go to state 67
    concept-name                     go to state 68
    conversion-function-id           go to state 69
    cv-qualifier                     go to state 70
    decl-specifier                   go to state 71
    decl-specifier-seq               go to state 72
    declaration                      go to state 73
    declaration-seq                  go to state 570
    declarator                       go to state 75
    declarator-id                    go to state 76
    decltype-specifier               go to state 77
    deduction-guide                  go to state 78
    defining-type-specifier          go to state 79
    elaborated-enum-specifier        go to state 80
    elaborated-type-specifier        go to state 81
    empty-declaration                go to state 82
    enum-head                        go to state 83
    enum-key                         go to state 84
    enum-name                        go to state 85
    enum-specifier                   go to state 86
    explicit-instantiation           go to state 87
    explicit-specialization          go to state 88
    explicit-specifier               go to state 89
    export-declaration               go to state 90
    function-definition              go to state 91
    function-specifier               go to state 92
    id-expression                    go to state 94
    linkage-specification            go to state 95
    literal-operator-id              go to state 96
    module-import-declaration        go to state 98
    named-namespace-definition       go to state 99
    namespace-alias                  go to state 100
    namespace-alias-definition       go to state 101
    namespace-body                   go to state 1856
    namespace-definition             go to state 102
    namespace-name                   go to state 103
    nested-name-specifier            go to state 104
    nested-namespace-definition      go to state 105
    nodeclspec-function-declaration  go to state 106
    noptr-declarator                 go to state 107
    opaque-enum-declaration          go to state 108
    operator-function-id             go to state 109
    placeholder-type-specifier       go to state 110
    ptr-declarator                   go to state 111
    ptr-operator                     go to state 112
    qualified-id                     go to state 113
    simple-declaration               go to state 114
    simple-template-id               go to state 115
    simple-type-specifier            go to state 116
    static_assert-declaration        go to state 117
    storage-class-specifier          go to state 118
    template-declaration             go to state 119
    template-head                    go to state 120
    template-id                      go to state 121
    template-name                    go to state 122
    type-constraint                  go to state 124
    type-name                        go to state 125
    type-specifier                   go to state 126
    typedef-name                     go to state 127
    typename-specifier               go to state 128
    unnamed-namespace-definition     go to state 129
    unqualified-id                   go to state 130
    using-declaration                go to state 131
    using-directive                  go to state 132
    using-enum-declaration           go to state 133


State 1722

  1039 static_assert-declaration: "static_assert" '(' constant-expression ',' string-literal ')' • ';'

    ';'  shift, and go to state 1857


State 1723

  1187 using-directive: attribute-specifier-seq "using" "namespace" nested-name-specifier namespace-name ';' •

    $default  reduce using rule 1187 (using-directive)


State 1724

   21 asm-declaration: attribute-specifier-seq "asm" '(' string-literal ')' ';' •

    $default  reduce using rule 21 (asm-declaration)


State 1725

  980 simple-declaration: attribute-specifier-seq decl-specifier-seq '[' identifier-list ']' initializer • ';'

    ';'  shift, and go to state 1858


State 1726

  982 simple-declaration: attribute-specifier-seq decl-specifier-seq ref-qualifier '[' identifier-list ']' • initializer ';'

    '='  shift, and go to state 1280
    '('  shift, and go to state 647
    '{'  shift, and go to state 939

    brace-or-equal-initializer  go to state 649
    braced-init-list            go to state 650
    initializer                 go to state 1859


State 1727

  613 member-declarator: IDENTIFIER ':' constant-expression brace-or-equal-initializer •

    $default  reduce using rule 613 (member-declarator)


State 1728

  611 member-declarator: IDENTIFIER attribute-specifier-seq ':' constant-expression •
  615                  | IDENTIFIER attribute-specifier-seq ':' constant-expression • brace-or-equal-initializer

    '='  shift, and go to state 1280
    '{'  shift, and go to state 939

    $default  reduce using rule 611 (member-declarator)

    brace-or-equal-initializer  go to state 1860
    braced-init-list            go to state 650


State 1729

  614 member-declarator: ':' constant-expression brace-or-equal-initializer •
  616                  | attribute-specifier-seq ':' constant-expression brace-or-equal-initializer •

    ';'       reduce using rule 614 (member-declarator)
    ';'       [reduce using rule 616 (member-declarator)]
    ','       reduce using rule 614 (member-declarator)
    ','       [reduce using rule 616 (member-declarator)]
    $default  reduce using rule 614 (member-declarator)


State 1730

  612 member-declarator: attribute-specifier-seq ':' constant-expression •
  616                  | attribute-specifier-seq ':' constant-expression • brace-or-equal-initializer

    '='  shift, and go to state 1280
    '{'  shift, and go to state 939

    $default  reduce using rule 612 (member-declarator)

    brace-or-equal-initializer  go to state 1861
    braced-init-list            go to state 650


State 1731

  408 function-definition: attribute-specifier-seq decl-specifier-seq declarator requires-clause • function-body
  606 member-declarator: declarator requires-clause •

    '='    shift, and go to state 291
    ':'    shift, and go to state 293
    '{'    shift, and go to state 294
    "try"  shift, and go to state 296

    $default  reduce using rule 606 (member-declarator)

    compound-statement  go to state 299
    ctor-initializer    go to state 300
    function-body       go to state 1490
    function-try-block  go to state 302


State 1732

  404 function-definition: attribute-specifier-seq decl-specifier-seq declarator virt-specifier-seq • function-body
  603 member-declarator: declarator virt-specifier-seq •
  605                  | declarator virt-specifier-seq • pure-specifier
  1193 virt-specifier-seq: virt-specifier-seq • virt-specifier

    '='         shift, and go to state 1510
    ':'         shift, and go to state 293
    '{'         shift, and go to state 294
    "final"     shift, and go to state 295
    "try"       shift, and go to state 296
    "override"  shift, and go to state 298

    $default  reduce using rule 603 (member-declarator)

    compound-statement  go to state 299
    ctor-initializer    go to state 300
    function-body       go to state 1491
    function-try-block  go to state 302
    pure-specifier      go to state 1511
    virt-specifier      go to state 707


State 1733

  590 member-declaration: attribute-specifier-seq decl-specifier-seq member-declarator-list ';' •

    $default  reduce using rule 590 (member-declaration)


State 1734

  909 pure-specifier: '=' '0' •

    $default  reduce using rule 909 (pure-specifier)


State 1735

  106 brace-or-equal-initializer: '=' • initializer-clause
  909 pure-specifier: '=' • '0'

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 939
    '0'                 shift, and go to state 1509
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 1141
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    braced-init-list                     go to state 1142
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    initializer-clause                   go to state 1143
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 1736

  606 member-declarator: declarator requires-clause •

    $default  reduce using rule 606 (member-declarator)


State 1737

  603 member-declarator: declarator virt-specifier-seq •
  605                  | declarator virt-specifier-seq • pure-specifier
  1193 virt-specifier-seq: virt-specifier-seq • virt-specifier

    '='         shift, and go to state 1862
    "final"     shift, and go to state 295
    "override"  shift, and go to state 298

    $default  reduce using rule 603 (member-declarator)

    pure-specifier  go to state 1511
    virt-specifier  go to state 707


State 1738

   73 base-specifier: attribute-specifier-seq "virtual" access-specifier class-or-decltype •

    $default  reduce using rule 73 (base-specifier)


State 1739

   77 base-specifier: attribute-specifier-seq access-specifier "virtual" class-or-decltype •

    $default  reduce using rule 77 (base-specifier)


State 1740

   82 base-specifier-list: base-specifier-list ',' base-specifier "..." •

    $default  reduce using rule 82 (base-specifier-list)


State 1741

  1056 template-argument-list: template-argument-list ',' template-argument "..." •

    $default  reduce using rule 1056 (template-argument-list)


State 1742

  981 simple-declaration: decl-specifier-seq '[' identifier-list ']' initializer ';' •

    $default  reduce using rule 981 (simple-declaration)


State 1743

  487 initializer-list: initializer-list ',' initializer-clause •
  488                 | initializer-list ',' initializer-clause • "..."

    "..."  shift, and go to state 1863

    $default  reduce using rule 487 (initializer-list)


State 1744

  111 braced-init-list: '{' designated-initializer-list ',' '}' •

    $default  reduce using rule 111 (braced-init-list)


State 1745

  251 designator: '.' • IDENTIFIER

    IDENTIFIER  shift, and go to state 1529


State 1746

  250 designated-initializer-list: designated-initializer-list ',' designated-initializer-clause •

    $default  reduce using rule 250 (designated-initializer-list)


State 1747

  109 braced-init-list: '{' initializer-list ',' '}' •

    $default  reduce using rule 109 (braced-init-list)


State 1748

  983 simple-declaration: decl-specifier-seq ref-qualifier '[' identifier-list ']' initializer • ';'

    ';'  shift, and go to state 1864


State 1749

  576 mem-initializer: mem-initializer-id '(' expression-list ')' •

    $default  reduce using rule 576 (mem-initializer)


State 1750

  583 mem-initializer-list: mem-initializer-list ',' mem-initializer "..." •

    $default  reduce using rule 583 (mem-initializer-list)


State 1751

  165 condition: attribute-specifier-seq decl-specifier-seq • declarator brace-or-equal-initializer

    IDENTIFIER  shift, and go to state 148
    '('         shift, and go to state 5
    "..."       shift, and go to state 6
    '&'         shift, and go to state 7
    "::"        shift, and go to state 9
    "&&"        shift, and go to state 16
    "operator"  shift, and go to state 17
    "decltype"  shift, and go to state 135
    '*'         shift, and go to state 32
    '~'         shift, and go to state 36

    class-name              go to state 66
    conversion-function-id  go to state 69
    declarator              go to state 1865
    declarator-id           go to state 76
    decltype-specifier      go to state 139
    enum-name               go to state 85
    id-expression           go to state 94
    literal-operator-id     go to state 96
    namespace-alias         go to state 100
    namespace-name          go to state 103
    nested-name-specifier   go to state 149
    noptr-declarator        go to state 107
    operator-function-id    go to state 109
    ptr-declarator          go to state 111
    ptr-operator            go to state 112
    qualified-id            go to state 113
    simple-template-id      go to state 115
    template-id             go to state 121
    template-name           go to state 143
    type-name               go to state 144
    typedef-name            go to state 127
    unqualified-id          go to state 130


State 1752

  509 iteration-statement: "while" '(' condition ')' • statement

    IDENTIFIER          shift, and go to state 665
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    "using"             shift, and go to state 2
    ';'                 shift, and go to state 666
    "alignas"           shift, and go to state 4
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "asm"               shift, and go to state 8
    "::"                shift, and go to state 365
    '['                 shift, and go to state 667
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 294
    "virtual"           shift, and go to state 11
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "co_return"         shift, and go to state 669
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "friend"            shift, and go to state 20
    "typedef"           shift, and go to state 21
    "constexpr"         shift, and go to state 22
    "consteval"         shift, and go to state 23
    "constinit"         shift, and go to state 24
    "inline"            shift, and go to state 263
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 27
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    "extern"            shift, and go to state 264
    "explicit"          shift, and go to state 29
    '*'                 shift, and go to state 386
    "default"           shift, and go to state 670
    "try"               shift, and go to state 671
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "while"             shift, and go to state 672
    "do"                shift, and go to state 673
    "for"               shift, and go to state 674
    "break"             shift, and go to state 675
    "continue"          shift, and go to state 676
    "return"            shift, and go to state 677
    "goto"              shift, and go to state 678
    "case"              shift, and go to state 679
    "namespace"         shift, and go to state 680
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "if"                shift, and go to state 681
    "switch"            shift, and go to state 682
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    "static_assert"     shift, and go to state 52
    "static"            shift, and go to state 53
    "thread_local"      shift, and go to state 54
    "mutable"           shift, and go to state 55
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    alias-declaration                    go to state 57
    alignment-specifier                  go to state 58
    and-expression                       go to state 405
    asm-declaration                      go to state 59
    assignment-expression                go to state 530
    attribute-specifier                  go to state 61
    attribute-specifier-seq              go to state 683
    await-expression                     go to state 406
    binary-literal                       go to state 407
    block-declaration                    go to state 684
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-head                           go to state 64
    class-key                            go to state 65
    class-name                           go to state 66
    class-specifier                      go to state 67
    compare-expression                   go to state 411
    compound-statement                   go to state 685
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    coroutine-return-statement           go to state 686
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decl-specifier                       go to state 71
    decl-specifier-seq                   go to state 687
    declaration-statement                go to state 688
    decltype-specifier                   go to state 77
    defining-type-specifier              go to state 79
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-head                            go to state 83
    enum-key                             go to state 84
    enum-name                            go to state 85
    enum-specifier                       go to state 86
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    explicit-specifier                   go to state 269
    expression                           go to state 689
    expression-statement                 go to state 690
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    function-specifier                   go to state 92
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    iteration-statement                  go to state 691
    jump-statement                       go to state 692
    labeled-statement                    go to state 693
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-alias-definition           go to state 101
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    opaque-enum-declaration              go to state 108
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    selection-statement                  go to state 694
    shift-expression                     go to state 448
    simple-declaration                   go to state 114
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    statement                            go to state 1866
    static_assert-declaration            go to state 117
    storage-class-specifier              go to state 118
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    try-block                            go to state 697
    type-constraint                      go to state 124
    type-name                            go to state 125
    type-specifier                       go to state 126
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    using-declaration                    go to state 131
    using-directive                      go to state 132
    using-enum-declaration               go to state 133
    yield-expression                     go to state 537


State 1753

  166 condition: decl-specifier-seq declarator • brace-or-equal-initializer

    '='  shift, and go to state 1280
    '{'  shift, and go to state 939

    brace-or-equal-initializer  go to state 1867
    braced-init-list            go to state 650


State 1754

  510 iteration-statement: "do" statement "while" '(' • expression ')' ';'

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 530
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    expression                           go to state 1868
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 1755

   13 alias-declaration: "using" IDENTIFIER • '=' defining-type-id ';'
   14                  | "using" IDENTIFIER • attribute-specifier-seq '=' defining-type-id ';'

    '='        shift, and go to state 347
    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 348


State 1756

  383 for-range-declaration: attribute-specifier-seq decl-specifier-seq • declarator
  385                      | attribute-specifier-seq decl-specifier-seq • '[' identifier-list ']'
  387                      | attribute-specifier-seq decl-specifier-seq • ref-qualifier '[' identifier-list ']'
  979 simple-declaration: attribute-specifier-seq decl-specifier-seq • init-declarator-list ';'
  980                   | attribute-specifier-seq decl-specifier-seq • '[' identifier-list ']' initializer ';'
  982                   | attribute-specifier-seq decl-specifier-seq • ref-qualifier '[' identifier-list ']' initializer ';'

    IDENTIFIER  shift, and go to state 148
    '('         shift, and go to state 5
    "..."       shift, and go to state 6
    '&'         shift, and go to state 283
    "::"        shift, and go to state 9
    '['         shift, and go to state 1869
    "&&"        shift, and go to state 285
    "operator"  shift, and go to state 17
    "decltype"  shift, and go to state 135
    '*'         shift, and go to state 32
    '~'         shift, and go to state 36

    class-name              go to state 66
    conversion-function-id  go to state 69
    declarator              go to state 1870
    declarator-id           go to state 76
    decltype-specifier      go to state 139
    enum-name               go to state 85
    id-expression           go to state 94
    init-declarator         go to state 287
    init-declarator-list    go to state 583
    literal-operator-id     go to state 96
    namespace-alias         go to state 100
    namespace-name          go to state 103
    nested-name-specifier   go to state 149
    noptr-declarator        go to state 107
    operator-function-id    go to state 109
    ptr-declarator          go to state 111
    ptr-operator            go to state 112
    qualified-id            go to state 113
    ref-qualifier           go to state 1871
    simple-template-id      go to state 115
    template-id             go to state 121
    template-name           go to state 143
    type-name               go to state 144
    typedef-name            go to state 127
    unqualified-id          go to state 130


State 1757

  386 for-range-declaration: decl-specifier-seq '[' • identifier-list ']'
  981 simple-declaration: decl-specifier-seq '[' • identifier-list ']' initializer ';'

    IDENTIFIER  shift, and go to state 644

    identifier-list  go to state 1872


State 1758

  384 for-range-declaration: decl-specifier-seq declarator •
  473 init-declarator: declarator •
  474                | declarator • initializer
  475                | declarator • requires-clause

    '='         shift, and go to state 1280
    '('         shift, and go to state 647
    '{'         shift, and go to state 939
    "requires"  shift, and go to state 297

    ':'       reduce using rule 384 (for-range-declaration)
    $default  reduce using rule 473 (init-declarator)

    brace-or-equal-initializer  go to state 649
    braced-init-list            go to state 650
    initializer                 go to state 652
    requires-clause             go to state 1535


State 1759

  388 for-range-declaration: decl-specifier-seq ref-qualifier • '[' identifier-list ']'
  983 simple-declaration: decl-specifier-seq ref-qualifier • '[' identifier-list ']' initializer ';'

    '['  shift, and go to state 1873


State 1760

  515 iteration-statement: "for" '(' for-range-declaration ':' • for-range-initializer ')' statement

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 939
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 530
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    braced-init-list                     go to state 1167
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    expr-or-braced-init-list             go to state 1874
    expression                           go to state 1169
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    for-range-initializer                go to state 1875
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 1761

  511 iteration-statement: "for" '(' init-statement ';' • ')' statement
  513                    | "for" '(' init-statement ';' • expression ')' statement

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    ')'                 shift, and go to state 1876
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 530
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    expression                           go to state 1877
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 1762

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  165 condition: attribute-specifier-seq • decl-specifier-seq declarator brace-or-equal-initializer
  383 for-range-declaration: attribute-specifier-seq • decl-specifier-seq declarator
  385                      | attribute-specifier-seq • decl-specifier-seq '[' identifier-list ']'
  387                      | attribute-specifier-seq • decl-specifier-seq ref-qualifier '[' identifier-list ']'

    IDENTIFIER      shift, and go to state 161
    "alignas"       shift, and go to state 4
    "::"            shift, and go to state 9
    '['             shift, and go to state 10
    "virtual"       shift, and go to state 11
    "class"         shift, and go to state 12
    "struct"        shift, and go to state 13
    "union"         shift, and go to state 14
    "const"         shift, and go to state 18
    "volatile"      shift, and go to state 19
    "friend"        shift, and go to state 20
    "typedef"       shift, and go to state 21
    "constexpr"     shift, and go to state 22
    "consteval"     shift, and go to state 23
    "constinit"     shift, and go to state 24
    "inline"        shift, and go to state 263
    "decltype"      shift, and go to state 26
    "enum"          shift, and go to state 27
    "extern"        shift, and go to state 264
    "explicit"      shift, and go to state 29
    "auto"          shift, and go to state 37
    "char"          shift, and go to state 38
    "char8_t"       shift, and go to state 39
    "char16_t"      shift, and go to state 40
    "char32_t"      shift, and go to state 41
    "wchar_t"       shift, and go to state 42
    "bool"          shift, and go to state 43
    "short"         shift, and go to state 44
    "int"           shift, and go to state 45
    "long"          shift, and go to state 46
    "signed"        shift, and go to state 47
    "unsigned"      shift, and go to state 48
    "float"         shift, and go to state 49
    "double"        shift, and go to state 50
    "void"          shift, and go to state 51
    "static"        shift, and go to state 53
    "thread_local"  shift, and go to state 54
    "mutable"       shift, and go to state 55
    "typename"      shift, and go to state 56

    alignment-specifier         go to state 58
    attribute-specifier         go to state 265
    class-head                  go to state 64
    class-key                   go to state 65
    class-name                  go to state 66
    class-specifier             go to state 67
    concept-name                go to state 68
    cv-qualifier                go to state 70
    decl-specifier              go to state 71
    decl-specifier-seq          go to state 1878
    decltype-specifier          go to state 77
    defining-type-specifier     go to state 79
    elaborated-enum-specifier   go to state 80
    elaborated-type-specifier   go to state 81
    enum-head                   go to state 83
    enum-key                    go to state 268
    enum-name                   go to state 85
    enum-specifier              go to state 86
    explicit-specifier          go to state 269
    function-specifier          go to state 92
    namespace-alias             go to state 100
    namespace-name              go to state 103
    nested-name-specifier       go to state 213
    placeholder-type-specifier  go to state 110
    simple-template-id          go to state 142
    simple-type-specifier       go to state 116
    storage-class-specifier     go to state 118
    template-name               go to state 216
    type-constraint             go to state 124
    type-name                   go to state 125
    type-specifier              go to state 126
    typedef-name                go to state 127
    typename-specifier          go to state 128


State 1763

  512 iteration-statement: "for" '(' init-statement condition • ';' ')' statement
  514                    | "for" '(' init-statement condition • ';' expression ')' statement

    ';'  shift, and go to state 1879


State 1764

  166 condition: decl-specifier-seq • declarator brace-or-equal-initializer
  384 for-range-declaration: decl-specifier-seq • declarator
  386                      | decl-specifier-seq • '[' identifier-list ']'
  388                      | decl-specifier-seq • ref-qualifier '[' identifier-list ']'

    IDENTIFIER  shift, and go to state 148
    '('         shift, and go to state 5
    "..."       shift, and go to state 6
    '&'         shift, and go to state 283
    "::"        shift, and go to state 9
    '['         shift, and go to state 1880
    "&&"        shift, and go to state 285
    "operator"  shift, and go to state 17
    "decltype"  shift, and go to state 135
    '*'         shift, and go to state 32
    '~'         shift, and go to state 36

    class-name              go to state 66
    conversion-function-id  go to state 69
    declarator              go to state 1881
    declarator-id           go to state 76
    decltype-specifier      go to state 139
    enum-name               go to state 85
    id-expression           go to state 94
    literal-operator-id     go to state 96
    namespace-alias         go to state 100
    namespace-name          go to state 103
    nested-name-specifier   go to state 149
    noptr-declarator        go to state 107
    operator-function-id    go to state 109
    ptr-declarator          go to state 111
    ptr-operator            go to state 112
    qualified-id            go to state 113
    ref-qualifier           go to state 1882
    simple-template-id      go to state 115
    template-id             go to state 121
    template-name           go to state 143
    type-name               go to state 144
    typedef-name            go to state 127
    unqualified-id          go to state 130


State 1765

  516 iteration-statement: "for" '(' init-statement for-range-declaration • ':' for-range-initializer ')' statement

    ':'  shift, and go to state 1883


State 1766

  526 labeled-statement: "case" constant-expression ':' statement •

    $default  reduce using rule 526 (labeled-statement)


State 1767

  165 condition: attribute-specifier-seq decl-specifier-seq • declarator brace-or-equal-initializer
  979 simple-declaration: attribute-specifier-seq decl-specifier-seq • init-declarator-list ';'
  980                   | attribute-specifier-seq decl-specifier-seq • '[' identifier-list ']' initializer ';'
  982                   | attribute-specifier-seq decl-specifier-seq • ref-qualifier '[' identifier-list ']' initializer ';'

    IDENTIFIER  shift, and go to state 148
    '('         shift, and go to state 5
    "..."       shift, and go to state 6
    '&'         shift, and go to state 283
    "::"        shift, and go to state 9
    '['         shift, and go to state 581
    "&&"        shift, and go to state 285
    "operator"  shift, and go to state 17
    "decltype"  shift, and go to state 135
    '*'         shift, and go to state 32
    '~'         shift, and go to state 36

    class-name              go to state 66
    conversion-function-id  go to state 69
    declarator              go to state 1884
    declarator-id           go to state 76
    decltype-specifier      go to state 139
    enum-name               go to state 85
    id-expression           go to state 94
    init-declarator         go to state 287
    init-declarator-list    go to state 583
    literal-operator-id     go to state 96
    namespace-alias         go to state 100
    namespace-name          go to state 103
    nested-name-specifier   go to state 149
    noptr-declarator        go to state 107
    operator-function-id    go to state 109
    ptr-declarator          go to state 111
    ptr-operator            go to state 112
    qualified-id            go to state 113
    ref-qualifier           go to state 584
    simple-template-id      go to state 115
    template-id             go to state 121
    template-name           go to state 143
    type-name               go to state 144
    typedef-name            go to state 127
    unqualified-id          go to state 130


State 1768

  952 selection-statement: "if" '(' condition ')' • statement
  956                    | "if" '(' condition ')' • statement "else" statement

    IDENTIFIER          shift, and go to state 665
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    "using"             shift, and go to state 2
    ';'                 shift, and go to state 666
    "alignas"           shift, and go to state 4
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "asm"               shift, and go to state 8
    "::"                shift, and go to state 365
    '['                 shift, and go to state 667
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 294
    "virtual"           shift, and go to state 11
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "co_return"         shift, and go to state 669
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "friend"            shift, and go to state 20
    "typedef"           shift, and go to state 21
    "constexpr"         shift, and go to state 22
    "consteval"         shift, and go to state 23
    "constinit"         shift, and go to state 24
    "inline"            shift, and go to state 263
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 27
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    "extern"            shift, and go to state 264
    "explicit"          shift, and go to state 29
    '*'                 shift, and go to state 386
    "default"           shift, and go to state 670
    "try"               shift, and go to state 671
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "while"             shift, and go to state 672
    "do"                shift, and go to state 673
    "for"               shift, and go to state 674
    "break"             shift, and go to state 675
    "continue"          shift, and go to state 676
    "return"            shift, and go to state 677
    "goto"              shift, and go to state 678
    "case"              shift, and go to state 679
    "namespace"         shift, and go to state 680
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "if"                shift, and go to state 681
    "switch"            shift, and go to state 682
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    "static_assert"     shift, and go to state 52
    "static"            shift, and go to state 53
    "thread_local"      shift, and go to state 54
    "mutable"           shift, and go to state 55
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    alias-declaration                    go to state 57
    alignment-specifier                  go to state 58
    and-expression                       go to state 405
    asm-declaration                      go to state 59
    assignment-expression                go to state 530
    attribute-specifier                  go to state 61
    attribute-specifier-seq              go to state 683
    await-expression                     go to state 406
    binary-literal                       go to state 407
    block-declaration                    go to state 684
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-head                           go to state 64
    class-key                            go to state 65
    class-name                           go to state 66
    class-specifier                      go to state 67
    compare-expression                   go to state 411
    compound-statement                   go to state 685
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    coroutine-return-statement           go to state 686
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decl-specifier                       go to state 71
    decl-specifier-seq                   go to state 687
    declaration-statement                go to state 688
    decltype-specifier                   go to state 77
    defining-type-specifier              go to state 79
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-head                            go to state 83
    enum-key                             go to state 84
    enum-name                            go to state 85
    enum-specifier                       go to state 86
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    explicit-specifier                   go to state 269
    expression                           go to state 689
    expression-statement                 go to state 690
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    function-specifier                   go to state 92
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    iteration-statement                  go to state 691
    jump-statement                       go to state 692
    labeled-statement                    go to state 693
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-alias-definition           go to state 101
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    opaque-enum-declaration              go to state 108
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    selection-statement                  go to state 694
    shift-expression                     go to state 448
    simple-declaration                   go to state 114
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    statement                            go to state 1885
    static_assert-declaration            go to state 117
    storage-class-specifier              go to state 118
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    try-block                            go to state 697
    type-constraint                      go to state 124
    type-name                            go to state 125
    type-specifier                       go to state 126
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    using-declaration                    go to state 131
    using-directive                      go to state 132
    using-enum-declaration               go to state 133
    yield-expression                     go to state 537


State 1769

  166 condition: decl-specifier-seq declarator • brace-or-equal-initializer
  473 init-declarator: declarator •
  474                | declarator • initializer
  475                | declarator • requires-clause

    '='         shift, and go to state 1280
    '('         shift, and go to state 647
    '{'         shift, and go to state 939
    "requires"  shift, and go to state 297

    $default  reduce using rule 473 (init-declarator)

    brace-or-equal-initializer  go to state 1886
    braced-init-list            go to state 650
    initializer                 go to state 652
    requires-clause             go to state 1535


State 1770

  954 selection-statement: "if" '(' init-statement condition • ')' statement
  958                    | "if" '(' init-statement condition • ')' statement "else" statement

    ')'  shift, and go to state 1887


State 1771

  953 selection-statement: "if" "constexpr" '(' condition • ')' statement
  957                    | "if" "constexpr" '(' condition • ')' statement "else" statement

    ')'  shift, and go to state 1888


State 1772

  955 selection-statement: "if" "constexpr" '(' init-statement • condition ')' statement
  959                    | "if" "constexpr" '(' init-statement • condition ')' statement "else" statement

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    "alignas"           shift, and go to state 4
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 667
    "co_await"          shift, and go to state 367
    "virtual"           shift, and go to state 11
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "friend"            shift, and go to state 20
    "typedef"           shift, and go to state 21
    "constexpr"         shift, and go to state 22
    "consteval"         shift, and go to state 23
    "constinit"         shift, and go to state 24
    "inline"            shift, and go to state 263
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 27
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    "extern"            shift, and go to state 264
    "explicit"          shift, and go to state 29
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    "static"            shift, and go to state 53
    "thread_local"      shift, and go to state 54
    "mutable"           shift, and go to state 55
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    alignment-specifier                  go to state 58
    and-expression                       go to state 405
    assignment-expression                go to state 530
    attribute-specifier                  go to state 61
    attribute-specifier-seq              go to state 1544
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-head                           go to state 64
    class-key                            go to state 65
    class-name                           go to state 66
    class-specifier                      go to state 67
    compare-expression                   go to state 411
    concept-name                         go to state 68
    condition                            go to state 1889
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decl-specifier                       go to state 71
    decl-specifier-seq                   go to state 1546
    decltype-specifier                   go to state 77
    defining-type-specifier              go to state 79
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-head                            go to state 83
    enum-key                             go to state 268
    enum-name                            go to state 85
    enum-specifier                       go to state 86
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    explicit-specifier                   go to state 269
    expression                           go to state 1547
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    function-specifier                   go to state 92
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    storage-class-specifier              go to state 118
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    type-specifier                       go to state 126
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 1773

  962 selection-statement: "if" "consteval" compound-statement "else" • statement

    IDENTIFIER          shift, and go to state 665
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    "using"             shift, and go to state 2
    ';'                 shift, and go to state 666
    "alignas"           shift, and go to state 4
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "asm"               shift, and go to state 8
    "::"                shift, and go to state 365
    '['                 shift, and go to state 667
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 294
    "virtual"           shift, and go to state 11
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "co_return"         shift, and go to state 669
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "friend"            shift, and go to state 20
    "typedef"           shift, and go to state 21
    "constexpr"         shift, and go to state 22
    "consteval"         shift, and go to state 23
    "constinit"         shift, and go to state 24
    "inline"            shift, and go to state 263
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 27
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    "extern"            shift, and go to state 264
    "explicit"          shift, and go to state 29
    '*'                 shift, and go to state 386
    "default"           shift, and go to state 670
    "try"               shift, and go to state 671
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "while"             shift, and go to state 672
    "do"                shift, and go to state 673
    "for"               shift, and go to state 674
    "break"             shift, and go to state 675
    "continue"          shift, and go to state 676
    "return"            shift, and go to state 677
    "goto"              shift, and go to state 678
    "case"              shift, and go to state 679
    "namespace"         shift, and go to state 680
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "if"                shift, and go to state 681
    "switch"            shift, and go to state 682
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    "static_assert"     shift, and go to state 52
    "static"            shift, and go to state 53
    "thread_local"      shift, and go to state 54
    "mutable"           shift, and go to state 55
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    alias-declaration                    go to state 57
    alignment-specifier                  go to state 58
    and-expression                       go to state 405
    asm-declaration                      go to state 59
    assignment-expression                go to state 530
    attribute-specifier                  go to state 61
    attribute-specifier-seq              go to state 683
    await-expression                     go to state 406
    binary-literal                       go to state 407
    block-declaration                    go to state 684
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-head                           go to state 64
    class-key                            go to state 65
    class-name                           go to state 66
    class-specifier                      go to state 67
    compare-expression                   go to state 411
    compound-statement                   go to state 685
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    coroutine-return-statement           go to state 686
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decl-specifier                       go to state 71
    decl-specifier-seq                   go to state 687
    declaration-statement                go to state 688
    decltype-specifier                   go to state 77
    defining-type-specifier              go to state 79
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-head                            go to state 83
    enum-key                             go to state 84
    enum-name                            go to state 85
    enum-specifier                       go to state 86
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    explicit-specifier                   go to state 269
    expression                           go to state 689
    expression-statement                 go to state 690
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    function-specifier                   go to state 92
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    iteration-statement                  go to state 691
    jump-statement                       go to state 692
    labeled-statement                    go to state 693
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-alias-definition           go to state 101
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    opaque-enum-declaration              go to state 108
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    selection-statement                  go to state 694
    shift-expression                     go to state 448
    simple-declaration                   go to state 114
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    statement                            go to state 1890
    static_assert-declaration            go to state 117
    storage-class-specifier              go to state 118
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    try-block                            go to state 697
    type-constraint                      go to state 124
    type-name                            go to state 125
    type-specifier                       go to state 126
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    using-declaration                    go to state 131
    using-directive                      go to state 132
    using-enum-declaration               go to state 133
    yield-expression                     go to state 537


State 1774

  961 selection-statement: "if" '!' "consteval" compound-statement •
  963                    | "if" '!' "consteval" compound-statement • "else" statement

    "else"  shift, and go to state 1891

    "else"    [reduce using rule 961 (selection-statement)]
    $default  reduce using rule 961 (selection-statement)


State 1775

  964 selection-statement: "switch" '(' condition ')' • statement

    IDENTIFIER          shift, and go to state 665
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    "using"             shift, and go to state 2
    ';'                 shift, and go to state 666
    "alignas"           shift, and go to state 4
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "asm"               shift, and go to state 8
    "::"                shift, and go to state 365
    '['                 shift, and go to state 667
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 294
    "virtual"           shift, and go to state 11
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "co_return"         shift, and go to state 669
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "friend"            shift, and go to state 20
    "typedef"           shift, and go to state 21
    "constexpr"         shift, and go to state 22
    "consteval"         shift, and go to state 23
    "constinit"         shift, and go to state 24
    "inline"            shift, and go to state 263
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 27
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    "extern"            shift, and go to state 264
    "explicit"          shift, and go to state 29
    '*'                 shift, and go to state 386
    "default"           shift, and go to state 670
    "try"               shift, and go to state 671
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "while"             shift, and go to state 672
    "do"                shift, and go to state 673
    "for"               shift, and go to state 674
    "break"             shift, and go to state 675
    "continue"          shift, and go to state 676
    "return"            shift, and go to state 677
    "goto"              shift, and go to state 678
    "case"              shift, and go to state 679
    "namespace"         shift, and go to state 680
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "if"                shift, and go to state 681
    "switch"            shift, and go to state 682
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    "static_assert"     shift, and go to state 52
    "static"            shift, and go to state 53
    "thread_local"      shift, and go to state 54
    "mutable"           shift, and go to state 55
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    alias-declaration                    go to state 57
    alignment-specifier                  go to state 58
    and-expression                       go to state 405
    asm-declaration                      go to state 59
    assignment-expression                go to state 530
    attribute-specifier                  go to state 61
    attribute-specifier-seq              go to state 683
    await-expression                     go to state 406
    binary-literal                       go to state 407
    block-declaration                    go to state 684
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-head                           go to state 64
    class-key                            go to state 65
    class-name                           go to state 66
    class-specifier                      go to state 67
    compare-expression                   go to state 411
    compound-statement                   go to state 685
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    coroutine-return-statement           go to state 686
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decl-specifier                       go to state 71
    decl-specifier-seq                   go to state 687
    declaration-statement                go to state 688
    decltype-specifier                   go to state 77
    defining-type-specifier              go to state 79
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-head                            go to state 83
    enum-key                             go to state 84
    enum-name                            go to state 85
    enum-specifier                       go to state 86
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    explicit-specifier                   go to state 269
    expression                           go to state 689
    expression-statement                 go to state 690
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    function-specifier                   go to state 92
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    iteration-statement                  go to state 691
    jump-statement                       go to state 692
    labeled-statement                    go to state 693
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-alias-definition           go to state 101
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    opaque-enum-declaration              go to state 108
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    selection-statement                  go to state 694
    shift-expression                     go to state 448
    simple-declaration                   go to state 114
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    statement                            go to state 1892
    static_assert-declaration            go to state 117
    storage-class-specifier              go to state 118
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    try-block                            go to state 697
    type-constraint                      go to state 124
    type-name                            go to state 125
    type-specifier                       go to state 126
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    using-declaration                    go to state 131
    using-directive                      go to state 132
    using-enum-declaration               go to state 133
    yield-expression                     go to state 537


State 1776

  965 selection-statement: "switch" '(' init-statement condition • ')' statement

    ')'  shift, and go to state 1893


State 1777

  523 labeled-statement: attribute-specifier-seq IDENTIFIER ':' statement •

    $default  reduce using rule 523 (labeled-statement)


State 1778

  527 labeled-statement: attribute-specifier-seq "default" ':' statement •

    $default  reduce using rule 527 (labeled-statement)


State 1779

  525 labeled-statement: attribute-specifier-seq "case" constant-expression ':' • statement

    IDENTIFIER          shift, and go to state 665
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    "using"             shift, and go to state 2
    ';'                 shift, and go to state 666
    "alignas"           shift, and go to state 4
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "asm"               shift, and go to state 8
    "::"                shift, and go to state 365
    '['                 shift, and go to state 667
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 294
    "virtual"           shift, and go to state 11
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "co_return"         shift, and go to state 669
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "friend"            shift, and go to state 20
    "typedef"           shift, and go to state 21
    "constexpr"         shift, and go to state 22
    "consteval"         shift, and go to state 23
    "constinit"         shift, and go to state 24
    "inline"            shift, and go to state 263
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 27
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    "extern"            shift, and go to state 264
    "explicit"          shift, and go to state 29
    '*'                 shift, and go to state 386
    "default"           shift, and go to state 670
    "try"               shift, and go to state 671
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "while"             shift, and go to state 672
    "do"                shift, and go to state 673
    "for"               shift, and go to state 674
    "break"             shift, and go to state 675
    "continue"          shift, and go to state 676
    "return"            shift, and go to state 677
    "goto"              shift, and go to state 678
    "case"              shift, and go to state 679
    "namespace"         shift, and go to state 680
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "if"                shift, and go to state 681
    "switch"            shift, and go to state 682
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    "static_assert"     shift, and go to state 52
    "static"            shift, and go to state 53
    "thread_local"      shift, and go to state 54
    "mutable"           shift, and go to state 55
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    alias-declaration                    go to state 57
    alignment-specifier                  go to state 58
    and-expression                       go to state 405
    asm-declaration                      go to state 59
    assignment-expression                go to state 530
    attribute-specifier                  go to state 61
    attribute-specifier-seq              go to state 683
    await-expression                     go to state 406
    binary-literal                       go to state 407
    block-declaration                    go to state 684
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-head                           go to state 64
    class-key                            go to state 65
    class-name                           go to state 66
    class-specifier                      go to state 67
    compare-expression                   go to state 411
    compound-statement                   go to state 685
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    coroutine-return-statement           go to state 686
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decl-specifier                       go to state 71
    decl-specifier-seq                   go to state 687
    declaration-statement                go to state 688
    decltype-specifier                   go to state 77
    defining-type-specifier              go to state 79
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-head                            go to state 83
    enum-key                             go to state 84
    enum-name                            go to state 85
    enum-specifier                       go to state 86
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    explicit-specifier                   go to state 269
    expression                           go to state 689
    expression-statement                 go to state 690
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    function-specifier                   go to state 92
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    iteration-statement                  go to state 691
    jump-statement                       go to state 692
    labeled-statement                    go to state 693
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-alias-definition           go to state 101
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    opaque-enum-declaration              go to state 108
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    selection-statement                  go to state 694
    shift-expression                     go to state 448
    simple-declaration                   go to state 114
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    statement                            go to state 1894
    static_assert-declaration            go to state 117
    storage-class-specifier              go to state 118
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    try-block                            go to state 697
    type-constraint                      go to state 124
    type-name                            go to state 125
    type-specifier                       go to state 126
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    using-declaration                    go to state 131
    using-directive                      go to state 132
    using-enum-declaration               go to state 133
    yield-expression                     go to state 537


State 1780

  319 exception-declaration: "..." •

    $default  reduce using rule 319 (exception-declaration)


State 1781

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  313 exception-declaration: attribute-specifier-seq • type-specifier-seq declarator
  315                      | attribute-specifier-seq • type-specifier-seq
  317                      | attribute-specifier-seq • type-specifier-seq abstract-declarator

    IDENTIFIER  shift, and go to state 161
    "alignas"   shift, and go to state 4
    "::"        shift, and go to state 9
    '['         shift, and go to state 10
    "class"     shift, and go to state 12
    "struct"    shift, and go to state 13
    "union"     shift, and go to state 14
    "const"     shift, and go to state 18
    "volatile"  shift, and go to state 19
    "decltype"  shift, and go to state 26
    "enum"      shift, and go to state 136
    "auto"      shift, and go to state 37
    "char"      shift, and go to state 38
    "char8_t"   shift, and go to state 39
    "char16_t"  shift, and go to state 40
    "char32_t"  shift, and go to state 41
    "wchar_t"   shift, and go to state 42
    "bool"      shift, and go to state 43
    "short"     shift, and go to state 44
    "int"       shift, and go to state 45
    "long"      shift, and go to state 46
    "signed"    shift, and go to state 47
    "unsigned"  shift, and go to state 48
    "float"     shift, and go to state 49
    "double"    shift, and go to state 50
    "void"      shift, and go to state 51
    "typename"  shift, and go to state 56

    alignment-specifier         go to state 58
    attribute-specifier         go to state 265
    class-key                   go to state 210
    class-name                  go to state 66
    concept-name                go to state 68
    cv-qualifier                go to state 70
    decltype-specifier          go to state 77
    elaborated-enum-specifier   go to state 80
    elaborated-type-specifier   go to state 81
    enum-name                   go to state 85
    namespace-alias             go to state 100
    namespace-name              go to state 103
    nested-name-specifier       go to state 213
    placeholder-type-specifier  go to state 110
    simple-template-id          go to state 142
    simple-type-specifier       go to state 116
    template-name               go to state 216
    type-constraint             go to state 124
    type-name                   go to state 125
    type-specifier              go to state 217
    type-specifier-seq          go to state 1895
    typedef-name                go to state 127
    typename-specifier          go to state 128


State 1782

  417 handler: "catch" '(' exception-declaration • ')' compound-statement

    ')'  shift, and go to state 1896


State 1783

  314 exception-declaration: type-specifier-seq • declarator
  316                      | type-specifier-seq •
  318                      | type-specifier-seq • abstract-declarator

    IDENTIFIER  shift, and go to state 148
    '('         shift, and go to state 973
    "..."       shift, and go to state 974
    '&'         shift, and go to state 7
    "::"        shift, and go to state 9
    '['         shift, and go to state 945
    "&&"        shift, and go to state 16
    "operator"  shift, and go to state 17
    "decltype"  shift, and go to state 135
    '*'         shift, and go to state 32
    '~'         shift, and go to state 36

    $default  reduce using rule 316 (exception-declaration)

    abstract-declarator             go to state 1897
    abstract-pack-declarator        go to state 947
    class-name                      go to state 66
    conversion-function-id          go to state 69
    declarator                      go to state 1898
    declarator-id                   go to state 76
    decltype-specifier              go to state 139
    enum-name                       go to state 85
    id-expression                   go to state 94
    literal-operator-id             go to state 96
    namespace-alias                 go to state 100
    namespace-name                  go to state 103
    nested-name-specifier           go to state 149
    noptr-abstract-declarator       go to state 948
    noptr-abstract-pack-declarator  go to state 949
    noptr-declarator                go to state 107
    operator-function-id            go to state 109
    parameters-and-qualifiers       go to state 950
    ptr-abstract-declarator         go to state 951
    ptr-declarator                  go to state 111
    ptr-operator                    go to state 977
    qualified-id                    go to state 113
    simple-template-id              go to state 115
    template-id                     go to state 121
    template-name                   go to state 143
    type-name                       go to state 144
    typedef-name                    go to state 127
    unqualified-id                  go to state 130


State 1784

  234 deduction-guide: explicit-specifier template-name '(' parameter-declaration-clause ')' "->" • simple-template-id ';'

    IDENTIFIER  shift, and go to state 315

    simple-template-id  go to state 1899
    template-name       go to state 143


State 1785

  227 declaration-seq: declaration-seq • declaration
  891 private-module-fragment: "module-keyword" ':' "private" ';' declaration-seq •

    IDENTIFIER        shift, and go to state 1
    "using"           shift, and go to state 2
    ';'               shift, and go to state 3
    "alignas"         shift, and go to state 4
    '('               shift, and go to state 5
    "..."             shift, and go to state 6
    '&'               shift, and go to state 7
    "asm"             shift, and go to state 8
    "::"              shift, and go to state 9
    '['               shift, and go to state 10
    "virtual"         shift, and go to state 11
    "class"           shift, and go to state 12
    "struct"          shift, and go to state 13
    "union"           shift, and go to state 14
    "template"        shift, and go to state 15
    "&&"              shift, and go to state 16
    "operator"        shift, and go to state 17
    "const"           shift, and go to state 18
    "volatile"        shift, and go to state 19
    "friend"          shift, and go to state 20
    "typedef"         shift, and go to state 21
    "constexpr"       shift, and go to state 22
    "consteval"       shift, and go to state 23
    "constinit"       shift, and go to state 24
    "inline"          shift, and go to state 25
    "decltype"        shift, and go to state 26
    "enum"            shift, and go to state 27
    "extern"          shift, and go to state 28
    "explicit"        shift, and go to state 29
    "export"          shift, and go to state 30
    "export-keyword"  shift, and go to state 158
    '*'               shift, and go to state 32
    "import-keyword"  shift, and go to state 34
    "namespace"       shift, and go to state 35
    '~'               shift, and go to state 36
    "auto"            shift, and go to state 37
    "char"            shift, and go to state 38
    "char8_t"         shift, and go to state 39
    "char16_t"        shift, and go to state 40
    "char32_t"        shift, and go to state 41
    "wchar_t"         shift, and go to state 42
    "bool"            shift, and go to state 43
    "short"           shift, and go to state 44
    "int"             shift, and go to state 45
    "long"            shift, and go to state 46
    "signed"          shift, and go to state 47
    "unsigned"        shift, and go to state 48
    "float"           shift, and go to state 49
    "double"          shift, and go to state 50
    "void"            shift, and go to state 51
    "static_assert"   shift, and go to state 52
    "static"          shift, and go to state 53
    "thread_local"    shift, and go to state 54
    "mutable"         shift, and go to state 55
    "typename"        shift, and go to state 56

    $default  reduce using rule 891 (private-module-fragment)

    alias-declaration                go to state 57
    alignment-specifier              go to state 58
    asm-declaration                  go to state 59
    attribute-declaration            go to state 60
    attribute-specifier              go to state 61
    attribute-specifier-seq          go to state 62
    block-declaration                go to state 63
    class-head                       go to state 64
    class-key                        go to state 65
    class-name                       go to state 66
    class-specifier                  go to state 67
    concept-name                     go to state 68
    conversion-function-id           go to state 69
    cv-qualifier                     go to state 70
    decl-specifier                   go to state 71
    decl-specifier-seq               go to state 72
    declaration                      go to state 290
    declarator                       go to state 75
    declarator-id                    go to state 76
    decltype-specifier               go to state 77
    deduction-guide                  go to state 78
    defining-type-specifier          go to state 79
    elaborated-enum-specifier        go to state 80
    elaborated-type-specifier        go to state 81
    empty-declaration                go to state 82
    enum-head                        go to state 83
    enum-key                         go to state 84
    enum-name                        go to state 85
    enum-specifier                   go to state 86
    explicit-instantiation           go to state 87
    explicit-specialization          go to state 88
    explicit-specifier               go to state 89
    export-declaration               go to state 90
    function-definition              go to state 91
    function-specifier               go to state 92
    id-expression                    go to state 94
    linkage-specification            go to state 95
    literal-operator-id              go to state 96
    module-import-declaration        go to state 98
    named-namespace-definition       go to state 99
    namespace-alias                  go to state 100
    namespace-alias-definition       go to state 101
    namespace-definition             go to state 102
    namespace-name                   go to state 103
    nested-name-specifier            go to state 104
    nested-namespace-definition      go to state 105
    nodeclspec-function-declaration  go to state 106
    noptr-declarator                 go to state 107
    opaque-enum-declaration          go to state 108
    operator-function-id             go to state 109
    placeholder-type-specifier       go to state 110
    ptr-declarator                   go to state 111
    ptr-operator                     go to state 112
    qualified-id                     go to state 113
    simple-declaration               go to state 114
    simple-template-id               go to state 115
    simple-type-specifier            go to state 116
    static_assert-declaration        go to state 117
    storage-class-specifier          go to state 118
    template-declaration             go to state 119
    template-head                    go to state 120
    template-id                      go to state 121
    template-name                    go to state 122
    type-constraint                  go to state 124
    type-name                        go to state 125
    type-specifier                   go to state 126
    typedef-name                     go to state 127
    typename-specifier               go to state 128
    unnamed-namespace-definition     go to state 129
    unqualified-id                   go to state 130
    using-declaration                go to state 131
    using-directive                  go to state 132
    using-enum-declaration           go to state 133


State 1786

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  845 parameters-and-qualifiers: '(' parameter-declaration-clause ')' cv-qualifier-seq attribute-specifier-seq •

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    '['       [reduce using rule 845 (parameters-and-qualifiers)]
    $default  reduce using rule 845 (parameters-and-qualifiers)

    alignment-specifier  go to state 58
    attribute-specifier  go to state 265


State 1787

  841 parameters-and-qualifiers: '(' parameter-declaration-clause ')' cv-qualifier-seq noexcept-specifier •
  849                          | '(' parameter-declaration-clause ')' cv-qualifier-seq noexcept-specifier • attribute-specifier-seq

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    '['       [reduce using rule 841 (parameters-and-qualifiers)]
    $default  reduce using rule 841 (parameters-and-qualifiers)

    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 1900


State 1788

  839 parameters-and-qualifiers: '(' parameter-declaration-clause ')' cv-qualifier-seq ref-qualifier •
  843                          | '(' parameter-declaration-clause ')' cv-qualifier-seq ref-qualifier • noexcept-specifier
  847                          | '(' parameter-declaration-clause ')' cv-qualifier-seq ref-qualifier • attribute-specifier-seq
  851                          | '(' parameter-declaration-clause ')' cv-qualifier-seq ref-qualifier • noexcept-specifier attribute-specifier-seq

    "alignas"   shift, and go to state 4
    '['         shift, and go to state 10
    "noexcept"  shift, and go to state 898

    '['       [reduce using rule 839 (parameters-and-qualifiers)]
    $default  reduce using rule 839 (parameters-and-qualifiers)

    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 1901
    noexcept-specifier       go to state 1902


State 1789

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  848 parameters-and-qualifiers: '(' parameter-declaration-clause ')' noexcept-specifier attribute-specifier-seq •

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    '['       [reduce using rule 848 (parameters-and-qualifiers)]
    $default  reduce using rule 848 (parameters-and-qualifiers)

    alignment-specifier  go to state 58
    attribute-specifier  go to state 265


State 1790

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  846 parameters-and-qualifiers: '(' parameter-declaration-clause ')' ref-qualifier attribute-specifier-seq •

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    '['       [reduce using rule 846 (parameters-and-qualifiers)]
    $default  reduce using rule 846 (parameters-and-qualifiers)

    alignment-specifier  go to state 58
    attribute-specifier  go to state 265


State 1791

  842 parameters-and-qualifiers: '(' parameter-declaration-clause ')' ref-qualifier noexcept-specifier •
  850                          | '(' parameter-declaration-clause ')' ref-qualifier noexcept-specifier • attribute-specifier-seq

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    '['       [reduce using rule 842 (parameters-and-qualifiers)]
    $default  reduce using rule 842 (parameters-and-qualifiers)

    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 1903


State 1792

  162 concept-definition: "concept" concept-name '=' constraint-expression ';' •

    $default  reduce using rule 162 (concept-definition)


State 1793

  235 deduction-guide: template-name '(' parameter-declaration-clause ')' "->" simple-template-id • ';'

    ';'  shift, and go to state 1904


State 1794

  349 fold-expression: '(' "..." fold-operator cast-expression ')' •

    $default  reduce using rule 349 (fold-expression)


State 1795

  348 fold-expression: '(' cast-expression fold-operator "..." ')' •

    $default  reduce using rule 348 (fold-expression)


State 1796

  350 fold-expression: '(' cast-expression fold-operator "..." fold-operator • cast-expression ')'

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403

    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 1905
    character-literal                    go to state 410
    class-name                           go to state 66
    concept-name                         go to state 68
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    requires-expression                  go to state 447
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460


State 1797

  246 delete-expression: "::" "delete" '[' ']' cast-expression •

    $default  reduce using rule 246 (delete-expression)


State 1798

  680 new-expression: "::" "new" '(' type-id ')' •
  684               | "::" "new" '(' type-id ')' • new-initializer

    '('  shift, and go to state 1310
    '{'  shift, and go to state 939

    '{'       [reduce using rule 680 (new-expression)]
    $default  reduce using rule 680 (new-expression)

    braced-init-list  go to state 1311
    new-initializer   go to state 1906


State 1799

  682 new-expression: "::" "new" new-placement '(' type-id • ')'
  686               | "::" "new" new-placement '(' type-id • ')' new-initializer

    ')'  shift, and go to state 1907


State 1800

  678 new-expression: "::" "new" new-placement new-type-id new-initializer •

    $default  reduce using rule 678 (new-expression)


State 1801

  472 init-capture: '&' "..." IDENTIFIER initializer •

    $default  reduce using rule 472 (init-capture)


State 1802

  156 compound-requirement: '{' expression '}' • ';'
  157                     | '{' expression '}' • "noexcept" ';'
  158                     | '{' expression '}' • return-type-requirement ';'
  159                     | '{' expression '}' • "noexcept" return-type-requirement ';'

    ';'         shift, and go to state 1908
    "noexcept"  shift, and go to state 1909
    "->"        shift, and go to state 1910

    return-type-requirement  go to state 1911


State 1803

  349 fold-expression: '(' "..." • fold-operator cast-expression ')'
  832 parameter-declaration-clause: "..." •

    '+'    shift, and go to state 1239
    '-'    shift, and go to state 1240
    '='    shift, and go to state 1241
    '&'    shift, and go to state 1242
    "*="   shift, and go to state 1243
    "/="   shift, and go to state 1244
    "%="   shift, and go to state 1245
    "+="   shift, and go to state 1246
    "-="   shift, and go to state 1247
    ">>="  shift, and go to state 1248
    "<<="  shift, and go to state 1249
    "&="   shift, and go to state 1250
    "^="   shift, and go to state 1251
    "|="   shift, and go to state 1252
    ','    shift, and go to state 1253
    "&&"   shift, and go to state 1254
    "||"   shift, and go to state 1255
    "=="   shift, and go to state 1256
    "!="   shift, and go to state 1257
    '^'    shift, and go to state 1258
    '<'    shift, and go to state 1259
    '>'    shift, and go to state 1260
    '*'    shift, and go to state 1261
    '/'    shift, and go to state 1262
    '%'    shift, and go to state 1263
    '|'    shift, and go to state 1264
    "<<"   shift, and go to state 1265
    ">>"   shift, and go to state 1266
    "<="   shift, and go to state 1267
    ">="   shift, and go to state 1268
    ".*"   shift, and go to state 1269
    "->*"  shift, and go to state 1270

    $default  reduce using rule 832 (parameter-declaration-clause)

    fold-operator  go to state 1271


State 1804

  809 parameter-declaration: "this" • decl-specifier-seq declarator
  813                      | "this" • decl-specifier-seq declarator '=' initializer-clause
  817                      | "this" • decl-specifier-seq
  821                      | "this" • decl-specifier-seq abstract-declarator
  825                      | "this" • decl-specifier-seq '=' initializer-clause
  829                      | "this" • decl-specifier-seq abstract-declarator '=' initializer-clause
  884 primary-expression: "this" •

    IDENTIFIER      shift, and go to state 161
    "::"            shift, and go to state 9
    "virtual"       shift, and go to state 11
    "class"         shift, and go to state 12
    "struct"        shift, and go to state 13
    "union"         shift, and go to state 14
    "const"         shift, and go to state 18
    "volatile"      shift, and go to state 19
    "friend"        shift, and go to state 20
    "typedef"       shift, and go to state 21
    "constexpr"     shift, and go to state 22
    "consteval"     shift, and go to state 23
    "constinit"     shift, and go to state 24
    "inline"        shift, and go to state 263
    "decltype"      shift, and go to state 26
    "enum"          shift, and go to state 27
    "extern"        shift, and go to state 264
    "explicit"      shift, and go to state 29
    "auto"          shift, and go to state 37
    "char"          shift, and go to state 38
    "char8_t"       shift, and go to state 39
    "char16_t"      shift, and go to state 40
    "char32_t"      shift, and go to state 41
    "wchar_t"       shift, and go to state 42
    "bool"          shift, and go to state 43
    "short"         shift, and go to state 44
    "int"           shift, and go to state 45
    "long"          shift, and go to state 46
    "signed"        shift, and go to state 47
    "unsigned"      shift, and go to state 48
    "float"         shift, and go to state 49
    "double"        shift, and go to state 50
    "void"          shift, and go to state 51
    "static"        shift, and go to state 53
    "thread_local"  shift, and go to state 54
    "mutable"       shift, and go to state 55
    "typename"      shift, and go to state 56

    $default  reduce using rule 884 (primary-expression)

    class-head                  go to state 64
    class-key                   go to state 65
    class-name                  go to state 66
    class-specifier             go to state 67
    concept-name                go to state 68
    cv-qualifier                go to state 70
    decl-specifier              go to state 71
    decl-specifier-seq          go to state 969
    decltype-specifier          go to state 77
    defining-type-specifier     go to state 79
    elaborated-enum-specifier   go to state 80
    elaborated-type-specifier   go to state 81
    enum-head                   go to state 83
    enum-key                    go to state 268
    enum-name                   go to state 85
    enum-specifier              go to state 86
    explicit-specifier          go to state 269
    function-specifier          go to state 92
    namespace-alias             go to state 100
    namespace-name              go to state 103
    nested-name-specifier       go to state 213
    placeholder-type-specifier  go to state 110
    simple-template-id          go to state 142
    simple-type-specifier       go to state 116
    storage-class-specifier     go to state 118
    template-name               go to state 216
    type-constraint             go to state 124
    type-name                   go to state 125
    type-specifier              go to state 126
    typedef-name                go to state 127
    typename-specifier          go to state 128


State 1805

  238 defining-type-specifier: type-specifier •
  1121 type-specifier-seq: type-specifier •
  1122                   | type-specifier • attribute-specifier-seq
  1123                   | type-specifier • type-specifier-seq

    IDENTIFIER  shift, and go to state 161
    "alignas"   shift, and go to state 4
    "::"        shift, and go to state 9
    '['         shift, and go to state 10
    "class"     shift, and go to state 12
    "struct"    shift, and go to state 13
    "union"     shift, and go to state 14
    "const"     shift, and go to state 18
    "volatile"  shift, and go to state 19
    "decltype"  shift, and go to state 26
    "enum"      shift, and go to state 136
    "auto"      shift, and go to state 37
    "char"      shift, and go to state 38
    "char8_t"   shift, and go to state 39
    "char16_t"  shift, and go to state 40
    "char32_t"  shift, and go to state 41
    "wchar_t"   shift, and go to state 42
    "bool"      shift, and go to state 43
    "short"     shift, and go to state 44
    "int"       shift, and go to state 45
    "long"      shift, and go to state 46
    "signed"    shift, and go to state 47
    "unsigned"  shift, and go to state 48
    "float"     shift, and go to state 49
    "double"    shift, and go to state 50
    "void"      shift, and go to state 51
    "typename"  shift, and go to state 56

    IDENTIFIER  [reduce using rule 238 (defining-type-specifier)]
    IDENTIFIER  [reduce using rule 1121 (type-specifier-seq)]
    "alignas"   [reduce using rule 238 (defining-type-specifier)]
    '('         reduce using rule 238 (defining-type-specifier)
    '('         [reduce using rule 1121 (type-specifier-seq)]
    ')'         reduce using rule 238 (defining-type-specifier)
    ')'         [reduce using rule 1121 (type-specifier-seq)]
    "..."       reduce using rule 238 (defining-type-specifier)
    "..."       [reduce using rule 1121 (type-specifier-seq)]
    '&'         reduce using rule 238 (defining-type-specifier)
    '&'         [reduce using rule 1121 (type-specifier-seq)]
    "::"        [reduce using rule 238 (defining-type-specifier)]
    "::"        [reduce using rule 1121 (type-specifier-seq)]
    '['         [reduce using rule 238 (defining-type-specifier)]
    '['         [reduce using rule 1121 (type-specifier-seq)]
    "class"     [reduce using rule 238 (defining-type-specifier)]
    "struct"    [reduce using rule 238 (defining-type-specifier)]
    "union"     [reduce using rule 238 (defining-type-specifier)]
    "&&"        reduce using rule 238 (defining-type-specifier)
    "&&"        [reduce using rule 1121 (type-specifier-seq)]
    "const"     [reduce using rule 238 (defining-type-specifier)]
    "volatile"  [reduce using rule 238 (defining-type-specifier)]
    "decltype"  [reduce using rule 238 (defining-type-specifier)]
    "decltype"  [reduce using rule 1121 (type-specifier-seq)]
    "enum"      [reduce using rule 238 (defining-type-specifier)]
    '*'         reduce using rule 238 (defining-type-specifier)
    '*'         [reduce using rule 1121 (type-specifier-seq)]
    "auto"      [reduce using rule 238 (defining-type-specifier)]
    "char"      [reduce using rule 238 (defining-type-specifier)]
    "char8_t"   [reduce using rule 238 (defining-type-specifier)]
    "char16_t"  [reduce using rule 238 (defining-type-specifier)]
    "char32_t"  [reduce using rule 238 (defining-type-specifier)]
    "wchar_t"   [reduce using rule 238 (defining-type-specifier)]
    "bool"      [reduce using rule 238 (defining-type-specifier)]
    "short"     [reduce using rule 238 (defining-type-specifier)]
    "int"       [reduce using rule 238 (defining-type-specifier)]
    "long"      [reduce using rule 238 (defining-type-specifier)]
    "signed"    [reduce using rule 238 (defining-type-specifier)]
    "unsigned"  [reduce using rule 238 (defining-type-specifier)]
    "float"     [reduce using rule 238 (defining-type-specifier)]
    "double"    [reduce using rule 238 (defining-type-specifier)]
    "void"      [reduce using rule 238 (defining-type-specifier)]
    "typename"  [reduce using rule 238 (defining-type-specifier)]
    $default    reduce using rule 238 (defining-type-specifier)

    alignment-specifier         go to state 58
    attribute-specifier         go to state 61
    attribute-specifier-seq     go to state 519
    class-key                   go to state 210
    class-name                  go to state 66
    concept-name                go to state 68
    cv-qualifier                go to state 70
    decltype-specifier          go to state 77
    elaborated-enum-specifier   go to state 80
    elaborated-type-specifier   go to state 81
    enum-name                   go to state 85
    namespace-alias             go to state 100
    namespace-name              go to state 103
    nested-name-specifier       go to state 213
    placeholder-type-specifier  go to state 110
    simple-template-id          go to state 142
    simple-type-specifier       go to state 116
    template-name               go to state 216
    type-constraint             go to state 124
    type-name                   go to state 125
    type-specifier              go to state 217
    type-specifier-seq          go to state 520
    typedef-name                go to state 127
    typename-specifier          go to state 128


State 1806

  668 nested-requirement: "requires" constraint-expression ';' •

    $default  reduce using rule 668 (nested-requirement)


State 1807

  145 class-name: IDENTIFIER •
  297 enum-name: IDENTIFIER •
  663 nested-name-specifier: nested-name-specifier IDENTIFIER • "::"
  1066 template-name: IDENTIFIER •
  1124 typedef-name: IDENTIFIER •
  1126 typename-specifier: "typename" nested-name-specifier IDENTIFIER •

    "::"  shift, and go to state 726

    ';'       reduce using rule 145 (class-name)
    ';'       [reduce using rule 297 (enum-name)]
    ';'       [reduce using rule 1124 (typedef-name)]
    '<'       reduce using rule 1066 (template-name)
    $default  reduce using rule 1126 (typename-specifier)


State 1808

  146 class-name: simple-template-id •
  664 nested-name-specifier: nested-name-specifier simple-template-id • "::"
  1125 typedef-name: simple-template-id •
  1127 typename-specifier: "typename" nested-name-specifier simple-template-id •

    "::"  shift, and go to state 733

    ';'       reduce using rule 146 (class-name)
    ';'       [reduce using rule 1125 (typedef-name)]
    $default  reduce using rule 1127 (typename-specifier)


State 1809

  1116 type-requirement: "typename" nested-name-specifier type-name • ';'

    ';'  shift, and go to state 1912


State 1810

  1115 type-requirement: "typename" type-name ';' •

    $default  reduce using rule 1115 (type-requirement)


State 1811

  685 new-expression: "new" '(' type-id ')' new-initializer •

    $default  reduce using rule 685 (new-expression)


State 1812

  683 new-expression: "new" new-placement '(' type-id ')' •
  687               | "new" new-placement '(' type-id ')' • new-initializer

    '('  shift, and go to state 1310
    '{'  shift, and go to state 939

    '{'       [reduce using rule 683 (new-expression)]
    $default  reduce using rule 683 (new-expression)

    braced-init-list  go to state 1311
    new-initializer   go to state 1913


State 1813

  689 new-initializer: '(' expression-list ')' •

    $default  reduce using rule 689 (new-initializer)


State 1814

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  735 noptr-new-declarator: '[' ']' attribute-specifier-seq •

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    '['       [reduce using rule 735 (noptr-new-declarator)]
    $default  reduce using rule 735 (noptr-new-declarator)

    alignment-specifier  go to state 58
    attribute-specifier  go to state 265


State 1815

  734 noptr-new-declarator: '[' expression ']' •
  736                     | '[' expression ']' • attribute-specifier-seq

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    '['       [reduce using rule 734 (noptr-new-declarator)]
    $default  reduce using rule 734 (noptr-new-declarator)

    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 1914


State 1816

  737 noptr-new-declarator: noptr-new-declarator '[' constant-expression • ']'
  738                     | noptr-new-declarator '[' constant-expression • ']' attribute-specifier-seq

    ']'  shift, and go to state 1915


State 1817

  877 postfix-expression: "dynamic_cast" '<' type-id '>' '(' • expression ')'

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 530
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    expression                           go to state 1916
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 1818

  878 postfix-expression: "static_cast" '<' type-id '>' '(' • expression ')'

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 530
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    expression                           go to state 1917
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 1819

  879 postfix-expression: "reinterpret_cast" '<' type-id '>' '(' • expression ')'

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 530
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    expression                           go to state 1918
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 1820

  880 postfix-expression: "const_cast" '<' type-id '>' '(' • expression ')'

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 530
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    expression                           go to state 1919
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 1821

  1137 unary-expression: "sizeof" "..." '(' IDENTIFIER ')' •

    $default  reduce using rule 1137 (unary-expression)


State 1822

   88 binary-exponent-part: 'p' sign digit-sequence •
  263 digit-sequence: digit-sequence • digit
  264               | digit-sequence • '\'' digit

    '0'   shift, and go to state 793
    '1'   shift, and go to state 794
    '\''  shift, and go to state 851
    '2'   shift, and go to state 795
    '3'   shift, and go to state 796
    '4'   shift, and go to state 797
    '5'   shift, and go to state 798
    '6'   shift, and go to state 799
    '7'   shift, and go to state 800
    '8'   shift, and go to state 801
    '9'   shift, and go to state 802

    $default  reduce using rule 88 (binary-exponent-part)

    digit  go to state 855


State 1823

   90 binary-exponent-part: 'P' sign digit-sequence •
  263 digit-sequence: digit-sequence • digit
  264               | digit-sequence • '\'' digit

    '0'   shift, and go to state 793
    '1'   shift, and go to state 794
    '\''  shift, and go to state 851
    '2'   shift, and go to state 795
    '3'   shift, and go to state 796
    '4'   shift, and go to state 797
    '5'   shift, and go to state 798
    '6'   shift, and go to state 799
    '7'   shift, and go to state 800
    '8'   shift, and go to state 801
    '9'   shift, and go to state 802

    $default  reduce using rule 90 (binary-exponent-part)

    digit  go to state 855


State 1824

  533 lambda-declarator: '(' parameter-declaration-clause ')' lambda-specifiers •
  534                  | '(' parameter-declaration-clause ')' lambda-specifiers • requires-clause

    "requires"  shift, and go to state 297

    $default  reduce using rule 533 (lambda-declarator)

    requires-clause  go to state 1920


State 1825

  697 noexcept-specifier: "noexcept" '(' constant-expression ')' •

    $default  reduce using rule 697 (noexcept-specifier)


State 1826

  536 lambda-expression: lambda-introducer '<' template-parameter-list '>' lambda-declarator • compound-statement

    '{'  shift, and go to state 294

    compound-statement  go to state 1921


State 1827

  537 lambda-expression: lambda-introducer '<' template-parameter-list '>' requires-clause • lambda-declarator compound-statement

    IDENTIFIER      shift, and go to state 161
    "alignas"       shift, and go to state 4
    '('             shift, and go to state 897
    "::"            shift, and go to state 9
    '['             shift, and go to state 10
    "virtual"       shift, and go to state 11
    "class"         shift, and go to state 12
    "struct"        shift, and go to state 13
    "union"         shift, and go to state 14
    "noexcept"      shift, and go to state 898
    "const"         shift, and go to state 18
    "volatile"      shift, and go to state 19
    "friend"        shift, and go to state 20
    "typedef"       shift, and go to state 21
    "constexpr"     shift, and go to state 22
    "consteval"     shift, and go to state 23
    "constinit"     shift, and go to state 24
    "inline"        shift, and go to state 263
    "decltype"      shift, and go to state 26
    "->"            shift, and go to state 740
    "enum"          shift, and go to state 27
    "extern"        shift, and go to state 264
    "explicit"      shift, and go to state 29
    "auto"          shift, and go to state 37
    "char"          shift, and go to state 38
    "char8_t"       shift, and go to state 39
    "char16_t"      shift, and go to state 40
    "char32_t"      shift, and go to state 41
    "wchar_t"       shift, and go to state 42
    "bool"          shift, and go to state 43
    "short"         shift, and go to state 44
    "int"           shift, and go to state 45
    "long"          shift, and go to state 46
    "signed"        shift, and go to state 47
    "unsigned"      shift, and go to state 48
    "float"         shift, and go to state 49
    "double"        shift, and go to state 50
    "void"          shift, and go to state 51
    "static"        shift, and go to state 53
    "thread_local"  shift, and go to state 54
    "mutable"       shift, and go to state 55
    "typename"      shift, and go to state 56

    alignment-specifier         go to state 58
    attribute-specifier         go to state 61
    attribute-specifier-seq     go to state 900
    class-head                  go to state 64
    class-key                   go to state 65
    class-name                  go to state 66
    class-specifier             go to state 67
    concept-name                go to state 68
    cv-qualifier                go to state 70
    decl-specifier              go to state 71
    decl-specifier-seq          go to state 901
    decltype-specifier          go to state 77
    defining-type-specifier     go to state 79
    elaborated-enum-specifier   go to state 80
    elaborated-type-specifier   go to state 81
    enum-head                   go to state 83
    enum-key                    go to state 268
    enum-name                   go to state 85
    enum-specifier              go to state 86
    explicit-specifier          go to state 269
    function-specifier          go to state 92
    lambda-declarator           go to state 1922
    lambda-specifiers           go to state 903
    namespace-alias             go to state 100
    namespace-name              go to state 103
    nested-name-specifier       go to state 213
    noexcept-specifier          go to state 904
    placeholder-type-specifier  go to state 110
    simple-template-id          go to state 142
    simple-type-specifier       go to state 116
    storage-class-specifier     go to state 118
    template-name               go to state 216
    trailing-return-type        go to state 905
    type-constraint             go to state 124
    type-name                   go to state 125
    type-specifier              go to state 126
    typedef-name                go to state 127
    typename-specifier          go to state 128


State 1828

  553 lambda-specifiers: decl-specifier-seq noexcept-specifier attribute-specifier-seq trailing-return-type •

    $default  reduce using rule 553 (lambda-specifiers)


State 1829

  170 conditional-expression: logical-or-expression '?' expression ':' assignment-expression •

    $default  reduce using rule 170 (conditional-expression)


State 1830

   48 attribute-namespace: IDENTIFIER •
   55 attribute-token: IDENTIFIER •
  470 init-capture: IDENTIFIER • initializer
  971 simple-capture: IDENTIFIER •
  972               | IDENTIFIER • "..."

    '='    shift, and go to state 1280
    '('    shift, and go to state 647
    "..."  shift, and go to state 1281
    '{'    shift, and go to state 939

    '('       [reduce using rule 55 (attribute-token)]
    "..."     [reduce using rule 55 (attribute-token)]
    ','       reduce using rule 55 (attribute-token)
    ','       [reduce using rule 971 (simple-capture)]
    "::"      reduce using rule 48 (attribute-namespace)
    ']'       reduce using rule 55 (attribute-token)
    ']'       [reduce using rule 971 (simple-capture)]
    $default  reduce using rule 55 (attribute-token)

    brace-or-equal-initializer  go to state 649
    braced-init-list            go to state 650
    initializer                 go to state 1282


State 1831

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  717 noptr-abstract-declarator: '[' constant-expression ']' attribute-specifier-seq •

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    '['       [reduce using rule 717 (noptr-abstract-declarator)]
    $default  reduce using rule 717 (noptr-abstract-declarator)

    alignment-specifier  go to state 58
    attribute-specifier  go to state 265


State 1832

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  714 noptr-abstract-declarator: noptr-abstract-declarator '[' ']' attribute-specifier-seq •

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    '['       [reduce using rule 714 (noptr-abstract-declarator)]
    $default  reduce using rule 714 (noptr-abstract-declarator)

    alignment-specifier  go to state 58
    attribute-specifier  go to state 265


State 1833

  712 noptr-abstract-declarator: noptr-abstract-declarator '[' constant-expression ']' •
  716                          | noptr-abstract-declarator '[' constant-expression ']' • attribute-specifier-seq

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    '['       [reduce using rule 712 (noptr-abstract-declarator)]
    $default  reduce using rule 712 (noptr-abstract-declarator)

    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 1923


State 1834

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  722 noptr-abstract-pack-declarator: noptr-abstract-pack-declarator '[' ']' attribute-specifier-seq •

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    '['       [reduce using rule 722 (noptr-abstract-pack-declarator)]
    $default  reduce using rule 722 (noptr-abstract-pack-declarator)

    alignment-specifier  go to state 58
    attribute-specifier  go to state 265


State 1835

  721 noptr-abstract-pack-declarator: noptr-abstract-pack-declarator '[' constant-expression ']' •
  723                               | noptr-abstract-pack-declarator '[' constant-expression ']' • attribute-specifier-seq

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    '['       [reduce using rule 721 (noptr-abstract-pack-declarator)]
    $default  reduce using rule 721 (noptr-abstract-pack-declarator)

    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 1924


State 1836

   60 balanced-token: '(' balanced-token-seq ')' •

    $default  reduce using rule 60 (balanced-token)


State 1837

   62 balanced-token: '[' balanced-token-seq ']' •

    $default  reduce using rule 62 (balanced-token)


State 1838

   64 balanced-token: '{' balanced-token-seq '}' •

    $default  reduce using rule 64 (balanced-token)


State 1839

  829 parameter-declaration: "this" decl-specifier-seq abstract-declarator '=' initializer-clause •

    $default  reduce using rule 829 (parameter-declaration)


State 1840

  813 parameter-declaration: "this" decl-specifier-seq declarator '=' initializer-clause •

    $default  reduce using rule 813 (parameter-declaration)


State 1841

  824 parameter-declaration: attribute-specifier-seq "this" decl-specifier-seq '=' initializer-clause •

    $default  reduce using rule 824 (parameter-declaration)


State 1842

  828 parameter-declaration: attribute-specifier-seq "this" decl-specifier-seq abstract-declarator '=' • initializer-clause

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 939
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 1141
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    braced-init-list                     go to state 1142
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    initializer-clause                   go to state 1925
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 1843

  812 parameter-declaration: attribute-specifier-seq "this" decl-specifier-seq declarator '=' • initializer-clause

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 939
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 1141
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    braced-init-list                     go to state 1142
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    initializer-clause                   go to state 1926
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 1844

  826 parameter-declaration: attribute-specifier-seq decl-specifier-seq abstract-declarator '=' initializer-clause •

    $default  reduce using rule 826 (parameter-declaration)


State 1845

  810 parameter-declaration: attribute-specifier-seq decl-specifier-seq declarator '=' initializer-clause •

    $default  reduce using rule 810 (parameter-declaration)


State 1846

  1112 type-parameter: template-head type-parameter-key IDENTIFIER '=' id-expression •

    $default  reduce using rule 1112 (type-parameter)


State 1847

  425 hex-quad: hexadecimal-digit hexadecimal-digit hexadecimal-digit hexadecimal-digit •

    $default  reduce using rule 425 (hex-quad)


State 1848

  924 raw-string: '"' '(' ')' d-char-sequence '"' •

    $default  reduce using rule 924 (raw-string)


State 1849

  922 raw-string: '"' '(' r-char-sequence ')' '"' •

    $default  reduce using rule 922 (raw-string)


State 1850

  191 d-char-sequence: d-char-sequence • d-char
  926 raw-string: '"' '(' r-char-sequence ')' d-char-sequence • '"'

    EXCEPT_SPACE_PARENTHESIS_REVERSE_SOLIDUS_TABULATION_LINE_TABULATION_FORM_FEED_AND_NEW_LINE  shift, and go to state 1013
    '"'                                                                                         shift, and go to state 1927

    d-char  go to state 1462


State 1851

  921 raw-string: '"' d-char-sequence '(' ')' '"' •

    $default  reduce using rule 921 (raw-string)


State 1852

  191 d-char-sequence: d-char-sequence • d-char
  925 raw-string: '"' d-char-sequence '(' ')' d-char-sequence • '"'

    EXCEPT_SPACE_PARENTHESIS_REVERSE_SOLIDUS_TABULATION_LINE_TABULATION_FORM_FEED_AND_NEW_LINE  shift, and go to state 1013
    '"'                                                                                         shift, and go to state 1928

    d-char  go to state 1462


State 1853

  923 raw-string: '"' d-char-sequence '(' r-char-sequence ')' • '"'
  927           | '"' d-char-sequence '(' r-char-sequence ')' • d-char-sequence '"'

    EXCEPT_SPACE_PARENTHESIS_REVERSE_SOLIDUS_TABULATION_LINE_TABULATION_FORM_FEED_AND_NEW_LINE  shift, and go to state 1013
    '"'                                                                                         shift, and go to state 1929

    d-char           go to state 1015
    d-char-sequence  go to state 1930


State 1854

  649 named-namespace-definition: "inline" "namespace" attribute-specifier-seq IDENTIFIER '{' namespace-body '}' •

    $default  reduce using rule 649 (named-namespace-definition)


State 1855

  666 nested-namespace-definition: "namespace" enclosing-namespace-specifier "::" IDENTIFIER '{' namespace-body '}' •

    $default  reduce using rule 666 (nested-namespace-definition)


State 1856

  667 nested-namespace-definition: "namespace" enclosing-namespace-specifier "::" "inline" IDENTIFIER '{' namespace-body • '}'

    '}'  shift, and go to state 1931


State 1857

  1039 static_assert-declaration: "static_assert" '(' constant-expression ',' string-literal ')' ';' •

    $default  reduce using rule 1039 (static_assert-declaration)


State 1858

  980 simple-declaration: attribute-specifier-seq decl-specifier-seq '[' identifier-list ']' initializer ';' •

    $default  reduce using rule 980 (simple-declaration)


State 1859

  982 simple-declaration: attribute-specifier-seq decl-specifier-seq ref-qualifier '[' identifier-list ']' initializer • ';'

    ';'  shift, and go to state 1932


State 1860

  615 member-declarator: IDENTIFIER attribute-specifier-seq ':' constant-expression brace-or-equal-initializer •

    $default  reduce using rule 615 (member-declarator)


State 1861

  616 member-declarator: attribute-specifier-seq ':' constant-expression brace-or-equal-initializer •

    $default  reduce using rule 616 (member-declarator)


State 1862

  909 pure-specifier: '=' • '0'

    '0'  shift, and go to state 1734


State 1863

  488 initializer-list: initializer-list ',' initializer-clause "..." •

    $default  reduce using rule 488 (initializer-list)


State 1864

  983 simple-declaration: decl-specifier-seq ref-qualifier '[' identifier-list ']' initializer ';' •

    $default  reduce using rule 983 (simple-declaration)


State 1865

  165 condition: attribute-specifier-seq decl-specifier-seq declarator • brace-or-equal-initializer

    '='  shift, and go to state 1280
    '{'  shift, and go to state 939

    brace-or-equal-initializer  go to state 1933
    braced-init-list            go to state 650


State 1866

  509 iteration-statement: "while" '(' condition ')' statement •

    $default  reduce using rule 509 (iteration-statement)


State 1867

  166 condition: decl-specifier-seq declarator brace-or-equal-initializer •

    $default  reduce using rule 166 (condition)


State 1868

  338 expression: expression • ',' assignment-expression
  510 iteration-statement: "do" statement "while" '(' expression • ')' ';'

    ')'  shift, and go to state 1934
    ','  shift, and go to state 1037


State 1869

  385 for-range-declaration: attribute-specifier-seq decl-specifier-seq '[' • identifier-list ']'
  980 simple-declaration: attribute-specifier-seq decl-specifier-seq '[' • identifier-list ']' initializer ';'

    IDENTIFIER  shift, and go to state 644

    identifier-list  go to state 1935


State 1870

  383 for-range-declaration: attribute-specifier-seq decl-specifier-seq declarator •
  473 init-declarator: declarator •
  474                | declarator • initializer
  475                | declarator • requires-clause

    '='         shift, and go to state 1280
    '('         shift, and go to state 647
    '{'         shift, and go to state 939
    "requires"  shift, and go to state 297

    ':'       reduce using rule 383 (for-range-declaration)
    $default  reduce using rule 473 (init-declarator)

    brace-or-equal-initializer  go to state 649
    braced-init-list            go to state 650
    initializer                 go to state 652
    requires-clause             go to state 1535


State 1871

  387 for-range-declaration: attribute-specifier-seq decl-specifier-seq ref-qualifier • '[' identifier-list ']'
  982 simple-declaration: attribute-specifier-seq decl-specifier-seq ref-qualifier • '[' identifier-list ']' initializer ';'

    '['  shift, and go to state 1936


State 1872

  386 for-range-declaration: decl-specifier-seq '[' identifier-list • ']'
  466 identifier-list: identifier-list • ',' IDENTIFIER
  981 simple-declaration: decl-specifier-seq '[' identifier-list • ']' initializer ';'

    ','  shift, and go to state 1138
    ']'  shift, and go to state 1937


State 1873

  388 for-range-declaration: decl-specifier-seq ref-qualifier '[' • identifier-list ']'
  983 simple-declaration: decl-specifier-seq ref-qualifier '[' • identifier-list ']' initializer ';'

    IDENTIFIER  shift, and go to state 644

    identifier-list  go to state 1938


State 1874

  389 for-range-initializer: expr-or-braced-init-list •

    $default  reduce using rule 389 (for-range-initializer)


State 1875

  515 iteration-statement: "for" '(' for-range-declaration ':' for-range-initializer • ')' statement

    ')'  shift, and go to state 1939


State 1876

  511 iteration-statement: "for" '(' init-statement ';' ')' • statement

    IDENTIFIER          shift, and go to state 665
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    "using"             shift, and go to state 2
    ';'                 shift, and go to state 666
    "alignas"           shift, and go to state 4
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "asm"               shift, and go to state 8
    "::"                shift, and go to state 365
    '['                 shift, and go to state 667
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 294
    "virtual"           shift, and go to state 11
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "co_return"         shift, and go to state 669
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "friend"            shift, and go to state 20
    "typedef"           shift, and go to state 21
    "constexpr"         shift, and go to state 22
    "consteval"         shift, and go to state 23
    "constinit"         shift, and go to state 24
    "inline"            shift, and go to state 263
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 27
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    "extern"            shift, and go to state 264
    "explicit"          shift, and go to state 29
    '*'                 shift, and go to state 386
    "default"           shift, and go to state 670
    "try"               shift, and go to state 671
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "while"             shift, and go to state 672
    "do"                shift, and go to state 673
    "for"               shift, and go to state 674
    "break"             shift, and go to state 675
    "continue"          shift, and go to state 676
    "return"            shift, and go to state 677
    "goto"              shift, and go to state 678
    "case"              shift, and go to state 679
    "namespace"         shift, and go to state 680
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "if"                shift, and go to state 681
    "switch"            shift, and go to state 682
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    "static_assert"     shift, and go to state 52
    "static"            shift, and go to state 53
    "thread_local"      shift, and go to state 54
    "mutable"           shift, and go to state 55
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    alias-declaration                    go to state 57
    alignment-specifier                  go to state 58
    and-expression                       go to state 405
    asm-declaration                      go to state 59
    assignment-expression                go to state 530
    attribute-specifier                  go to state 61
    attribute-specifier-seq              go to state 683
    await-expression                     go to state 406
    binary-literal                       go to state 407
    block-declaration                    go to state 684
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-head                           go to state 64
    class-key                            go to state 65
    class-name                           go to state 66
    class-specifier                      go to state 67
    compare-expression                   go to state 411
    compound-statement                   go to state 685
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    coroutine-return-statement           go to state 686
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decl-specifier                       go to state 71
    decl-specifier-seq                   go to state 687
    declaration-statement                go to state 688
    decltype-specifier                   go to state 77
    defining-type-specifier              go to state 79
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-head                            go to state 83
    enum-key                             go to state 84
    enum-name                            go to state 85
    enum-specifier                       go to state 86
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    explicit-specifier                   go to state 269
    expression                           go to state 689
    expression-statement                 go to state 690
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    function-specifier                   go to state 92
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    iteration-statement                  go to state 691
    jump-statement                       go to state 692
    labeled-statement                    go to state 693
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-alias-definition           go to state 101
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    opaque-enum-declaration              go to state 108
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    selection-statement                  go to state 694
    shift-expression                     go to state 448
    simple-declaration                   go to state 114
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    statement                            go to state 1940
    static_assert-declaration            go to state 117
    storage-class-specifier              go to state 118
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    try-block                            go to state 697
    type-constraint                      go to state 124
    type-name                            go to state 125
    type-specifier                       go to state 126
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    using-declaration                    go to state 131
    using-directive                      go to state 132
    using-enum-declaration               go to state 133
    yield-expression                     go to state 537


State 1877

  338 expression: expression • ',' assignment-expression
  513 iteration-statement: "for" '(' init-statement ';' expression • ')' statement

    ')'  shift, and go to state 1941
    ','  shift, and go to state 1037


State 1878

  165 condition: attribute-specifier-seq decl-specifier-seq • declarator brace-or-equal-initializer
  383 for-range-declaration: attribute-specifier-seq decl-specifier-seq • declarator
  385                      | attribute-specifier-seq decl-specifier-seq • '[' identifier-list ']'
  387                      | attribute-specifier-seq decl-specifier-seq • ref-qualifier '[' identifier-list ']'

    IDENTIFIER  shift, and go to state 148
    '('         shift, and go to state 5
    "..."       shift, and go to state 6
    '&'         shift, and go to state 283
    "::"        shift, and go to state 9
    '['         shift, and go to state 1942
    "&&"        shift, and go to state 285
    "operator"  shift, and go to state 17
    "decltype"  shift, and go to state 135
    '*'         shift, and go to state 32
    '~'         shift, and go to state 36

    class-name              go to state 66
    conversion-function-id  go to state 69
    declarator              go to state 1943
    declarator-id           go to state 76
    decltype-specifier      go to state 139
    enum-name               go to state 85
    id-expression           go to state 94
    literal-operator-id     go to state 96
    namespace-alias         go to state 100
    namespace-name          go to state 103
    nested-name-specifier   go to state 149
    noptr-declarator        go to state 107
    operator-function-id    go to state 109
    ptr-declarator          go to state 111
    ptr-operator            go to state 112
    qualified-id            go to state 113
    ref-qualifier           go to state 1944
    simple-template-id      go to state 115
    template-id             go to state 121
    template-name           go to state 143
    type-name               go to state 144
    typedef-name            go to state 127
    unqualified-id          go to state 130


State 1879

  512 iteration-statement: "for" '(' init-statement condition ';' • ')' statement
  514                    | "for" '(' init-statement condition ';' • expression ')' statement

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    ')'                 shift, and go to state 1945
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 530
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    expression                           go to state 1946
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 1880

  386 for-range-declaration: decl-specifier-seq '[' • identifier-list ']'

    IDENTIFIER  shift, and go to state 644

    identifier-list  go to state 1947


State 1881

  166 condition: decl-specifier-seq declarator • brace-or-equal-initializer
  384 for-range-declaration: decl-specifier-seq declarator •

    '='  shift, and go to state 1280
    '{'  shift, and go to state 939

    $default  reduce using rule 384 (for-range-declaration)

    brace-or-equal-initializer  go to state 1867
    braced-init-list            go to state 650


State 1882

  388 for-range-declaration: decl-specifier-seq ref-qualifier • '[' identifier-list ']'

    '['  shift, and go to state 1948


State 1883

  516 iteration-statement: "for" '(' init-statement for-range-declaration ':' • for-range-initializer ')' statement

    IDENTIFIER          shift, and go to state 1
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "::"                shift, and go to state 365
    '['                 shift, and go to state 366
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 939
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    '*'                 shift, and go to state 386
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    and-expression                       go to state 405
    assignment-expression                go to state 530
    await-expression                     go to state 406
    binary-literal                       go to state 407
    boolean-literal                      go to state 408
    braced-init-list                     go to state 1167
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-name                           go to state 66
    compare-expression                   go to state 411
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decltype-specifier                   go to state 77
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    encoding-prefix                      go to state 419
    enum-name                            go to state 85
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    expr-or-braced-init-list             go to state 1874
    expression                           go to state 1169
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    for-range-initializer                go to state 1949
    fractional-constant                  go to state 424
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    shift-expression                     go to state 448
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 534
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    type-constraint                      go to state 124
    type-name                            go to state 125
    typedef-name                         go to state 127
    typename-specifier                   go to state 536
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    yield-expression                     go to state 537


State 1884

  165 condition: attribute-specifier-seq decl-specifier-seq declarator • brace-or-equal-initializer
  473 init-declarator: declarator •
  474                | declarator • initializer
  475                | declarator • requires-clause

    '='         shift, and go to state 1280
    '('         shift, and go to state 647
    '{'         shift, and go to state 939
    "requires"  shift, and go to state 297

    $default  reduce using rule 473 (init-declarator)

    brace-or-equal-initializer  go to state 1950
    braced-init-list            go to state 650
    initializer                 go to state 652
    requires-clause             go to state 1535


State 1885

  952 selection-statement: "if" '(' condition ')' statement •
  956                    | "if" '(' condition ')' statement • "else" statement

    "else"  shift, and go to state 1951

    "else"    [reduce using rule 952 (selection-statement)]
    $default  reduce using rule 952 (selection-statement)


State 1886

  166 condition: decl-specifier-seq declarator brace-or-equal-initializer •
  481 initializer: brace-or-equal-initializer •

    ')'       reduce using rule 166 (condition)
    $default  reduce using rule 481 (initializer)


State 1887

  954 selection-statement: "if" '(' init-statement condition ')' • statement
  958                    | "if" '(' init-statement condition ')' • statement "else" statement

    IDENTIFIER          shift, and go to state 665
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    "using"             shift, and go to state 2
    ';'                 shift, and go to state 666
    "alignas"           shift, and go to state 4
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "asm"               shift, and go to state 8
    "::"                shift, and go to state 365
    '['                 shift, and go to state 667
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 294
    "virtual"           shift, and go to state 11
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "co_return"         shift, and go to state 669
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "friend"            shift, and go to state 20
    "typedef"           shift, and go to state 21
    "constexpr"         shift, and go to state 22
    "consteval"         shift, and go to state 23
    "constinit"         shift, and go to state 24
    "inline"            shift, and go to state 263
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 27
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    "extern"            shift, and go to state 264
    "explicit"          shift, and go to state 29
    '*'                 shift, and go to state 386
    "default"           shift, and go to state 670
    "try"               shift, and go to state 671
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "while"             shift, and go to state 672
    "do"                shift, and go to state 673
    "for"               shift, and go to state 674
    "break"             shift, and go to state 675
    "continue"          shift, and go to state 676
    "return"            shift, and go to state 677
    "goto"              shift, and go to state 678
    "case"              shift, and go to state 679
    "namespace"         shift, and go to state 680
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "if"                shift, and go to state 681
    "switch"            shift, and go to state 682
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    "static_assert"     shift, and go to state 52
    "static"            shift, and go to state 53
    "thread_local"      shift, and go to state 54
    "mutable"           shift, and go to state 55
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    alias-declaration                    go to state 57
    alignment-specifier                  go to state 58
    and-expression                       go to state 405
    asm-declaration                      go to state 59
    assignment-expression                go to state 530
    attribute-specifier                  go to state 61
    attribute-specifier-seq              go to state 683
    await-expression                     go to state 406
    binary-literal                       go to state 407
    block-declaration                    go to state 684
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-head                           go to state 64
    class-key                            go to state 65
    class-name                           go to state 66
    class-specifier                      go to state 67
    compare-expression                   go to state 411
    compound-statement                   go to state 685
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    coroutine-return-statement           go to state 686
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decl-specifier                       go to state 71
    decl-specifier-seq                   go to state 687
    declaration-statement                go to state 688
    decltype-specifier                   go to state 77
    defining-type-specifier              go to state 79
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-head                            go to state 83
    enum-key                             go to state 84
    enum-name                            go to state 85
    enum-specifier                       go to state 86
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    explicit-specifier                   go to state 269
    expression                           go to state 689
    expression-statement                 go to state 690
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    function-specifier                   go to state 92
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    iteration-statement                  go to state 691
    jump-statement                       go to state 692
    labeled-statement                    go to state 693
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-alias-definition           go to state 101
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    opaque-enum-declaration              go to state 108
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    selection-statement                  go to state 694
    shift-expression                     go to state 448
    simple-declaration                   go to state 114
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    statement                            go to state 1952
    static_assert-declaration            go to state 117
    storage-class-specifier              go to state 118
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    try-block                            go to state 697
    type-constraint                      go to state 124
    type-name                            go to state 125
    type-specifier                       go to state 126
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    using-declaration                    go to state 131
    using-directive                      go to state 132
    using-enum-declaration               go to state 133
    yield-expression                     go to state 537


State 1888

  953 selection-statement: "if" "constexpr" '(' condition ')' • statement
  957                    | "if" "constexpr" '(' condition ')' • statement "else" statement

    IDENTIFIER          shift, and go to state 665
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    "using"             shift, and go to state 2
    ';'                 shift, and go to state 666
    "alignas"           shift, and go to state 4
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "asm"               shift, and go to state 8
    "::"                shift, and go to state 365
    '['                 shift, and go to state 667
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 294
    "virtual"           shift, and go to state 11
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "co_return"         shift, and go to state 669
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "friend"            shift, and go to state 20
    "typedef"           shift, and go to state 21
    "constexpr"         shift, and go to state 22
    "consteval"         shift, and go to state 23
    "constinit"         shift, and go to state 24
    "inline"            shift, and go to state 263
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 27
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    "extern"            shift, and go to state 264
    "explicit"          shift, and go to state 29
    '*'                 shift, and go to state 386
    "default"           shift, and go to state 670
    "try"               shift, and go to state 671
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "while"             shift, and go to state 672
    "do"                shift, and go to state 673
    "for"               shift, and go to state 674
    "break"             shift, and go to state 675
    "continue"          shift, and go to state 676
    "return"            shift, and go to state 677
    "goto"              shift, and go to state 678
    "case"              shift, and go to state 679
    "namespace"         shift, and go to state 680
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "if"                shift, and go to state 681
    "switch"            shift, and go to state 682
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    "static_assert"     shift, and go to state 52
    "static"            shift, and go to state 53
    "thread_local"      shift, and go to state 54
    "mutable"           shift, and go to state 55
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    alias-declaration                    go to state 57
    alignment-specifier                  go to state 58
    and-expression                       go to state 405
    asm-declaration                      go to state 59
    assignment-expression                go to state 530
    attribute-specifier                  go to state 61
    attribute-specifier-seq              go to state 683
    await-expression                     go to state 406
    binary-literal                       go to state 407
    block-declaration                    go to state 684
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-head                           go to state 64
    class-key                            go to state 65
    class-name                           go to state 66
    class-specifier                      go to state 67
    compare-expression                   go to state 411
    compound-statement                   go to state 685
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    coroutine-return-statement           go to state 686
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decl-specifier                       go to state 71
    decl-specifier-seq                   go to state 687
    declaration-statement                go to state 688
    decltype-specifier                   go to state 77
    defining-type-specifier              go to state 79
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-head                            go to state 83
    enum-key                             go to state 84
    enum-name                            go to state 85
    enum-specifier                       go to state 86
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    explicit-specifier                   go to state 269
    expression                           go to state 689
    expression-statement                 go to state 690
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    function-specifier                   go to state 92
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    iteration-statement                  go to state 691
    jump-statement                       go to state 692
    labeled-statement                    go to state 693
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-alias-definition           go to state 101
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    opaque-enum-declaration              go to state 108
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    selection-statement                  go to state 694
    shift-expression                     go to state 448
    simple-declaration                   go to state 114
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    statement                            go to state 1953
    static_assert-declaration            go to state 117
    storage-class-specifier              go to state 118
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    try-block                            go to state 697
    type-constraint                      go to state 124
    type-name                            go to state 125
    type-specifier                       go to state 126
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    using-declaration                    go to state 131
    using-directive                      go to state 132
    using-enum-declaration               go to state 133
    yield-expression                     go to state 537


State 1889

  955 selection-statement: "if" "constexpr" '(' init-statement condition • ')' statement
  959                    | "if" "constexpr" '(' init-statement condition • ')' statement "else" statement

    ')'  shift, and go to state 1954


State 1890

  962 selection-statement: "if" "consteval" compound-statement "else" statement •

    $default  reduce using rule 962 (selection-statement)


State 1891

  963 selection-statement: "if" '!' "consteval" compound-statement "else" • statement

    IDENTIFIER          shift, and go to state 665
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    "using"             shift, and go to state 2
    ';'                 shift, and go to state 666
    "alignas"           shift, and go to state 4
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "asm"               shift, and go to state 8
    "::"                shift, and go to state 365
    '['                 shift, and go to state 667
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 294
    "virtual"           shift, and go to state 11
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "co_return"         shift, and go to state 669
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "friend"            shift, and go to state 20
    "typedef"           shift, and go to state 21
    "constexpr"         shift, and go to state 22
    "consteval"         shift, and go to state 23
    "constinit"         shift, and go to state 24
    "inline"            shift, and go to state 263
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 27
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    "extern"            shift, and go to state 264
    "explicit"          shift, and go to state 29
    '*'                 shift, and go to state 386
    "default"           shift, and go to state 670
    "try"               shift, and go to state 671
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "while"             shift, and go to state 672
    "do"                shift, and go to state 673
    "for"               shift, and go to state 674
    "break"             shift, and go to state 675
    "continue"          shift, and go to state 676
    "return"            shift, and go to state 677
    "goto"              shift, and go to state 678
    "case"              shift, and go to state 679
    "namespace"         shift, and go to state 680
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "if"                shift, and go to state 681
    "switch"            shift, and go to state 682
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    "static_assert"     shift, and go to state 52
    "static"            shift, and go to state 53
    "thread_local"      shift, and go to state 54
    "mutable"           shift, and go to state 55
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    alias-declaration                    go to state 57
    alignment-specifier                  go to state 58
    and-expression                       go to state 405
    asm-declaration                      go to state 59
    assignment-expression                go to state 530
    attribute-specifier                  go to state 61
    attribute-specifier-seq              go to state 683
    await-expression                     go to state 406
    binary-literal                       go to state 407
    block-declaration                    go to state 684
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-head                           go to state 64
    class-key                            go to state 65
    class-name                           go to state 66
    class-specifier                      go to state 67
    compare-expression                   go to state 411
    compound-statement                   go to state 685
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    coroutine-return-statement           go to state 686
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decl-specifier                       go to state 71
    decl-specifier-seq                   go to state 687
    declaration-statement                go to state 688
    decltype-specifier                   go to state 77
    defining-type-specifier              go to state 79
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-head                            go to state 83
    enum-key                             go to state 84
    enum-name                            go to state 85
    enum-specifier                       go to state 86
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    explicit-specifier                   go to state 269
    expression                           go to state 689
    expression-statement                 go to state 690
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    function-specifier                   go to state 92
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    iteration-statement                  go to state 691
    jump-statement                       go to state 692
    labeled-statement                    go to state 693
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-alias-definition           go to state 101
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    opaque-enum-declaration              go to state 108
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    selection-statement                  go to state 694
    shift-expression                     go to state 448
    simple-declaration                   go to state 114
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    statement                            go to state 1955
    static_assert-declaration            go to state 117
    storage-class-specifier              go to state 118
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    try-block                            go to state 697
    type-constraint                      go to state 124
    type-name                            go to state 125
    type-specifier                       go to state 126
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    using-declaration                    go to state 131
    using-directive                      go to state 132
    using-enum-declaration               go to state 133
    yield-expression                     go to state 537


State 1892

  964 selection-statement: "switch" '(' condition ')' statement •

    $default  reduce using rule 964 (selection-statement)


State 1893

  965 selection-statement: "switch" '(' init-statement condition ')' • statement

    IDENTIFIER          shift, and go to state 665
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    "using"             shift, and go to state 2
    ';'                 shift, and go to state 666
    "alignas"           shift, and go to state 4
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "asm"               shift, and go to state 8
    "::"                shift, and go to state 365
    '['                 shift, and go to state 667
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 294
    "virtual"           shift, and go to state 11
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "co_return"         shift, and go to state 669
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "friend"            shift, and go to state 20
    "typedef"           shift, and go to state 21
    "constexpr"         shift, and go to state 22
    "consteval"         shift, and go to state 23
    "constinit"         shift, and go to state 24
    "inline"            shift, and go to state 263
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 27
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    "extern"            shift, and go to state 264
    "explicit"          shift, and go to state 29
    '*'                 shift, and go to state 386
    "default"           shift, and go to state 670
    "try"               shift, and go to state 671
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "while"             shift, and go to state 672
    "do"                shift, and go to state 673
    "for"               shift, and go to state 674
    "break"             shift, and go to state 675
    "continue"          shift, and go to state 676
    "return"            shift, and go to state 677
    "goto"              shift, and go to state 678
    "case"              shift, and go to state 679
    "namespace"         shift, and go to state 680
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "if"                shift, and go to state 681
    "switch"            shift, and go to state 682
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    "static_assert"     shift, and go to state 52
    "static"            shift, and go to state 53
    "thread_local"      shift, and go to state 54
    "mutable"           shift, and go to state 55
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    alias-declaration                    go to state 57
    alignment-specifier                  go to state 58
    and-expression                       go to state 405
    asm-declaration                      go to state 59
    assignment-expression                go to state 530
    attribute-specifier                  go to state 61
    attribute-specifier-seq              go to state 683
    await-expression                     go to state 406
    binary-literal                       go to state 407
    block-declaration                    go to state 684
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-head                           go to state 64
    class-key                            go to state 65
    class-name                           go to state 66
    class-specifier                      go to state 67
    compare-expression                   go to state 411
    compound-statement                   go to state 685
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    coroutine-return-statement           go to state 686
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decl-specifier                       go to state 71
    decl-specifier-seq                   go to state 687
    declaration-statement                go to state 688
    decltype-specifier                   go to state 77
    defining-type-specifier              go to state 79
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-head                            go to state 83
    enum-key                             go to state 84
    enum-name                            go to state 85
    enum-specifier                       go to state 86
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    explicit-specifier                   go to state 269
    expression                           go to state 689
    expression-statement                 go to state 690
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    function-specifier                   go to state 92
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    iteration-statement                  go to state 691
    jump-statement                       go to state 692
    labeled-statement                    go to state 693
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-alias-definition           go to state 101
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    opaque-enum-declaration              go to state 108
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    selection-statement                  go to state 694
    shift-expression                     go to state 448
    simple-declaration                   go to state 114
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    statement                            go to state 1956
    static_assert-declaration            go to state 117
    storage-class-specifier              go to state 118
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    try-block                            go to state 697
    type-constraint                      go to state 124
    type-name                            go to state 125
    type-specifier                       go to state 126
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    using-declaration                    go to state 131
    using-directive                      go to state 132
    using-enum-declaration               go to state 133
    yield-expression                     go to state 537


State 1894

  525 labeled-statement: attribute-specifier-seq "case" constant-expression ':' statement •

    $default  reduce using rule 525 (labeled-statement)


State 1895

  313 exception-declaration: attribute-specifier-seq type-specifier-seq • declarator
  315                      | attribute-specifier-seq type-specifier-seq •
  317                      | attribute-specifier-seq type-specifier-seq • abstract-declarator

    IDENTIFIER  shift, and go to state 148
    '('         shift, and go to state 973
    "..."       shift, and go to state 974
    '&'         shift, and go to state 7
    "::"        shift, and go to state 9
    '['         shift, and go to state 945
    "&&"        shift, and go to state 16
    "operator"  shift, and go to state 17
    "decltype"  shift, and go to state 135
    '*'         shift, and go to state 32
    '~'         shift, and go to state 36

    $default  reduce using rule 315 (exception-declaration)

    abstract-declarator             go to state 1957
    abstract-pack-declarator        go to state 947
    class-name                      go to state 66
    conversion-function-id          go to state 69
    declarator                      go to state 1958
    declarator-id                   go to state 76
    decltype-specifier              go to state 139
    enum-name                       go to state 85
    id-expression                   go to state 94
    literal-operator-id             go to state 96
    namespace-alias                 go to state 100
    namespace-name                  go to state 103
    nested-name-specifier           go to state 149
    noptr-abstract-declarator       go to state 948
    noptr-abstract-pack-declarator  go to state 949
    noptr-declarator                go to state 107
    operator-function-id            go to state 109
    parameters-and-qualifiers       go to state 950
    ptr-abstract-declarator         go to state 951
    ptr-declarator                  go to state 111
    ptr-operator                    go to state 977
    qualified-id                    go to state 113
    simple-template-id              go to state 115
    template-id                     go to state 121
    template-name                   go to state 143
    type-name                       go to state 144
    typedef-name                    go to state 127
    unqualified-id                  go to state 130


State 1896

  417 handler: "catch" '(' exception-declaration ')' • compound-statement

    '{'  shift, and go to state 294

    compound-statement  go to state 1959


State 1897

  318 exception-declaration: type-specifier-seq abstract-declarator •

    $default  reduce using rule 318 (exception-declaration)


State 1898

  314 exception-declaration: type-specifier-seq declarator •

    $default  reduce using rule 314 (exception-declaration)


State 1899

  234 deduction-guide: explicit-specifier template-name '(' parameter-declaration-clause ')' "->" simple-template-id • ';'

    ';'  shift, and go to state 1960


State 1900

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  849 parameters-and-qualifiers: '(' parameter-declaration-clause ')' cv-qualifier-seq noexcept-specifier attribute-specifier-seq •

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    '['       [reduce using rule 849 (parameters-and-qualifiers)]
    $default  reduce using rule 849 (parameters-and-qualifiers)

    alignment-specifier  go to state 58
    attribute-specifier  go to state 265


State 1901

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  847 parameters-and-qualifiers: '(' parameter-declaration-clause ')' cv-qualifier-seq ref-qualifier attribute-specifier-seq •

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    '['       [reduce using rule 847 (parameters-and-qualifiers)]
    $default  reduce using rule 847 (parameters-and-qualifiers)

    alignment-specifier  go to state 58
    attribute-specifier  go to state 265


State 1902

  843 parameters-and-qualifiers: '(' parameter-declaration-clause ')' cv-qualifier-seq ref-qualifier noexcept-specifier •
  851                          | '(' parameter-declaration-clause ')' cv-qualifier-seq ref-qualifier noexcept-specifier • attribute-specifier-seq

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    '['       [reduce using rule 843 (parameters-and-qualifiers)]
    $default  reduce using rule 843 (parameters-and-qualifiers)

    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 1961


State 1903

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  850 parameters-and-qualifiers: '(' parameter-declaration-clause ')' ref-qualifier noexcept-specifier attribute-specifier-seq •

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    '['       [reduce using rule 850 (parameters-and-qualifiers)]
    $default  reduce using rule 850 (parameters-and-qualifiers)

    alignment-specifier  go to state 58
    attribute-specifier  go to state 265


State 1904

  235 deduction-guide: template-name '(' parameter-declaration-clause ')' "->" simple-template-id ';' •

    $default  reduce using rule 235 (deduction-guide)


State 1905

  350 fold-expression: '(' cast-expression fold-operator "..." fold-operator cast-expression • ')'

    ')'  shift, and go to state 1962


State 1906

  684 new-expression: "::" "new" '(' type-id ')' new-initializer •

    $default  reduce using rule 684 (new-expression)


State 1907

  682 new-expression: "::" "new" new-placement '(' type-id ')' •
  686               | "::" "new" new-placement '(' type-id ')' • new-initializer

    '('  shift, and go to state 1310
    '{'  shift, and go to state 939

    '{'       [reduce using rule 682 (new-expression)]
    $default  reduce using rule 682 (new-expression)

    braced-init-list  go to state 1311
    new-initializer   go to state 1963


State 1908

  156 compound-requirement: '{' expression '}' ';' •

    $default  reduce using rule 156 (compound-requirement)


State 1909

  157 compound-requirement: '{' expression '}' "noexcept" • ';'
  159                     | '{' expression '}' "noexcept" • return-type-requirement ';'

    ';'   shift, and go to state 1964
    "->"  shift, and go to state 1910

    return-type-requirement  go to state 1965


State 1910

  946 return-type-requirement: "->" • type-constraint

    IDENTIFIER  shift, and go to state 161
    "::"        shift, and go to state 9
    "decltype"  shift, and go to state 135

    class-name             go to state 66
    concept-name           go to state 68
    decltype-specifier     go to state 139
    enum-name              go to state 85
    namespace-alias        go to state 100
    namespace-name         go to state 103
    nested-name-specifier  go to state 1966
    simple-template-id     go to state 142
    template-name          go to state 143
    type-constraint        go to state 1967
    type-name              go to state 144
    typedef-name           go to state 127


State 1911

  158 compound-requirement: '{' expression '}' return-type-requirement • ';'

    ';'  shift, and go to state 1968


State 1912

  1116 type-requirement: "typename" nested-name-specifier type-name ';' •

    $default  reduce using rule 1116 (type-requirement)


State 1913

  687 new-expression: "new" new-placement '(' type-id ')' new-initializer •

    $default  reduce using rule 687 (new-expression)


State 1914

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  736 noptr-new-declarator: '[' expression ']' attribute-specifier-seq •

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    '['       [reduce using rule 736 (noptr-new-declarator)]
    $default  reduce using rule 736 (noptr-new-declarator)

    alignment-specifier  go to state 58
    attribute-specifier  go to state 265


State 1915

  737 noptr-new-declarator: noptr-new-declarator '[' constant-expression ']' •
  738                     | noptr-new-declarator '[' constant-expression ']' • attribute-specifier-seq

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    '['       [reduce using rule 737 (noptr-new-declarator)]
    $default  reduce using rule 737 (noptr-new-declarator)

    alignment-specifier      go to state 58
    attribute-specifier      go to state 61
    attribute-specifier-seq  go to state 1969


State 1916

  338 expression: expression • ',' assignment-expression
  877 postfix-expression: "dynamic_cast" '<' type-id '>' '(' expression • ')'

    ')'  shift, and go to state 1970
    ','  shift, and go to state 1037


State 1917

  338 expression: expression • ',' assignment-expression
  878 postfix-expression: "static_cast" '<' type-id '>' '(' expression • ')'

    ')'  shift, and go to state 1971
    ','  shift, and go to state 1037


State 1918

  338 expression: expression • ',' assignment-expression
  879 postfix-expression: "reinterpret_cast" '<' type-id '>' '(' expression • ')'

    ')'  shift, and go to state 1972
    ','  shift, and go to state 1037


State 1919

  338 expression: expression • ',' assignment-expression
  880 postfix-expression: "const_cast" '<' type-id '>' '(' expression • ')'

    ')'  shift, and go to state 1973
    ','  shift, and go to state 1037


State 1920

  534 lambda-declarator: '(' parameter-declaration-clause ')' lambda-specifiers requires-clause •

    $default  reduce using rule 534 (lambda-declarator)


State 1921

  536 lambda-expression: lambda-introducer '<' template-parameter-list '>' lambda-declarator compound-statement •

    $default  reduce using rule 536 (lambda-expression)


State 1922

  537 lambda-expression: lambda-introducer '<' template-parameter-list '>' requires-clause lambda-declarator • compound-statement

    '{'  shift, and go to state 294

    compound-statement  go to state 1974


State 1923

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  716 noptr-abstract-declarator: noptr-abstract-declarator '[' constant-expression ']' attribute-specifier-seq •

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    '['       [reduce using rule 716 (noptr-abstract-declarator)]
    $default  reduce using rule 716 (noptr-abstract-declarator)

    alignment-specifier  go to state 58
    attribute-specifier  go to state 265


State 1924

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  723 noptr-abstract-pack-declarator: noptr-abstract-pack-declarator '[' constant-expression ']' attribute-specifier-seq •

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    '['       [reduce using rule 723 (noptr-abstract-pack-declarator)]
    $default  reduce using rule 723 (noptr-abstract-pack-declarator)

    alignment-specifier  go to state 58
    attribute-specifier  go to state 265


State 1925

  828 parameter-declaration: attribute-specifier-seq "this" decl-specifier-seq abstract-declarator '=' initializer-clause •

    $default  reduce using rule 828 (parameter-declaration)


State 1926

  812 parameter-declaration: attribute-specifier-seq "this" decl-specifier-seq declarator '=' initializer-clause •

    $default  reduce using rule 812 (parameter-declaration)


State 1927

  926 raw-string: '"' '(' r-char-sequence ')' d-char-sequence '"' •

    $default  reduce using rule 926 (raw-string)


State 1928

  925 raw-string: '"' d-char-sequence '(' ')' d-char-sequence '"' •

    $default  reduce using rule 925 (raw-string)


State 1929

  923 raw-string: '"' d-char-sequence '(' r-char-sequence ')' '"' •

    $default  reduce using rule 923 (raw-string)


State 1930

  191 d-char-sequence: d-char-sequence • d-char
  927 raw-string: '"' d-char-sequence '(' r-char-sequence ')' d-char-sequence • '"'

    EXCEPT_SPACE_PARENTHESIS_REVERSE_SOLIDUS_TABULATION_LINE_TABULATION_FORM_FEED_AND_NEW_LINE  shift, and go to state 1013
    '"'                                                                                         shift, and go to state 1975

    d-char  go to state 1462


State 1931

  667 nested-namespace-definition: "namespace" enclosing-namespace-specifier "::" "inline" IDENTIFIER '{' namespace-body '}' •

    $default  reduce using rule 667 (nested-namespace-definition)


State 1932

  982 simple-declaration: attribute-specifier-seq decl-specifier-seq ref-qualifier '[' identifier-list ']' initializer ';' •

    $default  reduce using rule 982 (simple-declaration)


State 1933

  165 condition: attribute-specifier-seq decl-specifier-seq declarator brace-or-equal-initializer •

    $default  reduce using rule 165 (condition)


State 1934

  510 iteration-statement: "do" statement "while" '(' expression ')' • ';'

    ';'  shift, and go to state 1976


State 1935

  385 for-range-declaration: attribute-specifier-seq decl-specifier-seq '[' identifier-list • ']'
  466 identifier-list: identifier-list • ',' IDENTIFIER
  980 simple-declaration: attribute-specifier-seq decl-specifier-seq '[' identifier-list • ']' initializer ';'

    ','  shift, and go to state 1138
    ']'  shift, and go to state 1977


State 1936

  387 for-range-declaration: attribute-specifier-seq decl-specifier-seq ref-qualifier '[' • identifier-list ']'
  982 simple-declaration: attribute-specifier-seq decl-specifier-seq ref-qualifier '[' • identifier-list ']' initializer ';'

    IDENTIFIER  shift, and go to state 644

    identifier-list  go to state 1978


State 1937

  386 for-range-declaration: decl-specifier-seq '[' identifier-list ']' •
  981 simple-declaration: decl-specifier-seq '[' identifier-list ']' • initializer ';'

    '='  shift, and go to state 1280
    '('  shift, and go to state 647
    '{'  shift, and go to state 939

    $default  reduce using rule 386 (for-range-declaration)

    brace-or-equal-initializer  go to state 649
    braced-init-list            go to state 650
    initializer                 go to state 1525


State 1938

  388 for-range-declaration: decl-specifier-seq ref-qualifier '[' identifier-list • ']'
  466 identifier-list: identifier-list • ',' IDENTIFIER
  983 simple-declaration: decl-specifier-seq ref-qualifier '[' identifier-list • ']' initializer ';'

    ','  shift, and go to state 1138
    ']'  shift, and go to state 1979


State 1939

  515 iteration-statement: "for" '(' for-range-declaration ':' for-range-initializer ')' • statement

    IDENTIFIER          shift, and go to state 665
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    "using"             shift, and go to state 2
    ';'                 shift, and go to state 666
    "alignas"           shift, and go to state 4
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "asm"               shift, and go to state 8
    "::"                shift, and go to state 365
    '['                 shift, and go to state 667
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 294
    "virtual"           shift, and go to state 11
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "co_return"         shift, and go to state 669
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "friend"            shift, and go to state 20
    "typedef"           shift, and go to state 21
    "constexpr"         shift, and go to state 22
    "consteval"         shift, and go to state 23
    "constinit"         shift, and go to state 24
    "inline"            shift, and go to state 263
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 27
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    "extern"            shift, and go to state 264
    "explicit"          shift, and go to state 29
    '*'                 shift, and go to state 386
    "default"           shift, and go to state 670
    "try"               shift, and go to state 671
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "while"             shift, and go to state 672
    "do"                shift, and go to state 673
    "for"               shift, and go to state 674
    "break"             shift, and go to state 675
    "continue"          shift, and go to state 676
    "return"            shift, and go to state 677
    "goto"              shift, and go to state 678
    "case"              shift, and go to state 679
    "namespace"         shift, and go to state 680
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "if"                shift, and go to state 681
    "switch"            shift, and go to state 682
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    "static_assert"     shift, and go to state 52
    "static"            shift, and go to state 53
    "thread_local"      shift, and go to state 54
    "mutable"           shift, and go to state 55
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    alias-declaration                    go to state 57
    alignment-specifier                  go to state 58
    and-expression                       go to state 405
    asm-declaration                      go to state 59
    assignment-expression                go to state 530
    attribute-specifier                  go to state 61
    attribute-specifier-seq              go to state 683
    await-expression                     go to state 406
    binary-literal                       go to state 407
    block-declaration                    go to state 684
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-head                           go to state 64
    class-key                            go to state 65
    class-name                           go to state 66
    class-specifier                      go to state 67
    compare-expression                   go to state 411
    compound-statement                   go to state 685
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    coroutine-return-statement           go to state 686
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decl-specifier                       go to state 71
    decl-specifier-seq                   go to state 687
    declaration-statement                go to state 688
    decltype-specifier                   go to state 77
    defining-type-specifier              go to state 79
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-head                            go to state 83
    enum-key                             go to state 84
    enum-name                            go to state 85
    enum-specifier                       go to state 86
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    explicit-specifier                   go to state 269
    expression                           go to state 689
    expression-statement                 go to state 690
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    function-specifier                   go to state 92
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    iteration-statement                  go to state 691
    jump-statement                       go to state 692
    labeled-statement                    go to state 693
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-alias-definition           go to state 101
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    opaque-enum-declaration              go to state 108
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    selection-statement                  go to state 694
    shift-expression                     go to state 448
    simple-declaration                   go to state 114
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    statement                            go to state 1980
    static_assert-declaration            go to state 117
    storage-class-specifier              go to state 118
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    try-block                            go to state 697
    type-constraint                      go to state 124
    type-name                            go to state 125
    type-specifier                       go to state 126
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    using-declaration                    go to state 131
    using-directive                      go to state 132
    using-enum-declaration               go to state 133
    yield-expression                     go to state 537


State 1940

  511 iteration-statement: "for" '(' init-statement ';' ')' statement •

    $default  reduce using rule 511 (iteration-statement)


State 1941

  513 iteration-statement: "for" '(' init-statement ';' expression ')' • statement

    IDENTIFIER          shift, and go to state 665
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    "using"             shift, and go to state 2
    ';'                 shift, and go to state 666
    "alignas"           shift, and go to state 4
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "asm"               shift, and go to state 8
    "::"                shift, and go to state 365
    '['                 shift, and go to state 667
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 294
    "virtual"           shift, and go to state 11
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "co_return"         shift, and go to state 669
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "friend"            shift, and go to state 20
    "typedef"           shift, and go to state 21
    "constexpr"         shift, and go to state 22
    "consteval"         shift, and go to state 23
    "constinit"         shift, and go to state 24
    "inline"            shift, and go to state 263
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 27
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    "extern"            shift, and go to state 264
    "explicit"          shift, and go to state 29
    '*'                 shift, and go to state 386
    "default"           shift, and go to state 670
    "try"               shift, and go to state 671
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "while"             shift, and go to state 672
    "do"                shift, and go to state 673
    "for"               shift, and go to state 674
    "break"             shift, and go to state 675
    "continue"          shift, and go to state 676
    "return"            shift, and go to state 677
    "goto"              shift, and go to state 678
    "case"              shift, and go to state 679
    "namespace"         shift, and go to state 680
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "if"                shift, and go to state 681
    "switch"            shift, and go to state 682
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    "static_assert"     shift, and go to state 52
    "static"            shift, and go to state 53
    "thread_local"      shift, and go to state 54
    "mutable"           shift, and go to state 55
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    alias-declaration                    go to state 57
    alignment-specifier                  go to state 58
    and-expression                       go to state 405
    asm-declaration                      go to state 59
    assignment-expression                go to state 530
    attribute-specifier                  go to state 61
    attribute-specifier-seq              go to state 683
    await-expression                     go to state 406
    binary-literal                       go to state 407
    block-declaration                    go to state 684
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-head                           go to state 64
    class-key                            go to state 65
    class-name                           go to state 66
    class-specifier                      go to state 67
    compare-expression                   go to state 411
    compound-statement                   go to state 685
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    coroutine-return-statement           go to state 686
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decl-specifier                       go to state 71
    decl-specifier-seq                   go to state 687
    declaration-statement                go to state 688
    decltype-specifier                   go to state 77
    defining-type-specifier              go to state 79
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-head                            go to state 83
    enum-key                             go to state 84
    enum-name                            go to state 85
    enum-specifier                       go to state 86
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    explicit-specifier                   go to state 269
    expression                           go to state 689
    expression-statement                 go to state 690
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    function-specifier                   go to state 92
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    iteration-statement                  go to state 691
    jump-statement                       go to state 692
    labeled-statement                    go to state 693
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-alias-definition           go to state 101
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    opaque-enum-declaration              go to state 108
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    selection-statement                  go to state 694
    shift-expression                     go to state 448
    simple-declaration                   go to state 114
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    statement                            go to state 1981
    static_assert-declaration            go to state 117
    storage-class-specifier              go to state 118
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    try-block                            go to state 697
    type-constraint                      go to state 124
    type-name                            go to state 125
    type-specifier                       go to state 126
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    using-declaration                    go to state 131
    using-directive                      go to state 132
    using-enum-declaration               go to state 133
    yield-expression                     go to state 537


State 1942

  385 for-range-declaration: attribute-specifier-seq decl-specifier-seq '[' • identifier-list ']'

    IDENTIFIER  shift, and go to state 644

    identifier-list  go to state 1982


State 1943

  165 condition: attribute-specifier-seq decl-specifier-seq declarator • brace-or-equal-initializer
  383 for-range-declaration: attribute-specifier-seq decl-specifier-seq declarator •

    '='  shift, and go to state 1280
    '{'  shift, and go to state 939

    $default  reduce using rule 383 (for-range-declaration)

    brace-or-equal-initializer  go to state 1933
    braced-init-list            go to state 650


State 1944

  387 for-range-declaration: attribute-specifier-seq decl-specifier-seq ref-qualifier • '[' identifier-list ']'

    '['  shift, and go to state 1983


State 1945

  512 iteration-statement: "for" '(' init-statement condition ';' ')' • statement

    IDENTIFIER          shift, and go to state 665
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    "using"             shift, and go to state 2
    ';'                 shift, and go to state 666
    "alignas"           shift, and go to state 4
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "asm"               shift, and go to state 8
    "::"                shift, and go to state 365
    '['                 shift, and go to state 667
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 294
    "virtual"           shift, and go to state 11
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "co_return"         shift, and go to state 669
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "friend"            shift, and go to state 20
    "typedef"           shift, and go to state 21
    "constexpr"         shift, and go to state 22
    "consteval"         shift, and go to state 23
    "constinit"         shift, and go to state 24
    "inline"            shift, and go to state 263
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 27
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    "extern"            shift, and go to state 264
    "explicit"          shift, and go to state 29
    '*'                 shift, and go to state 386
    "default"           shift, and go to state 670
    "try"               shift, and go to state 671
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "while"             shift, and go to state 672
    "do"                shift, and go to state 673
    "for"               shift, and go to state 674
    "break"             shift, and go to state 675
    "continue"          shift, and go to state 676
    "return"            shift, and go to state 677
    "goto"              shift, and go to state 678
    "case"              shift, and go to state 679
    "namespace"         shift, and go to state 680
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "if"                shift, and go to state 681
    "switch"            shift, and go to state 682
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    "static_assert"     shift, and go to state 52
    "static"            shift, and go to state 53
    "thread_local"      shift, and go to state 54
    "mutable"           shift, and go to state 55
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    alias-declaration                    go to state 57
    alignment-specifier                  go to state 58
    and-expression                       go to state 405
    asm-declaration                      go to state 59
    assignment-expression                go to state 530
    attribute-specifier                  go to state 61
    attribute-specifier-seq              go to state 683
    await-expression                     go to state 406
    binary-literal                       go to state 407
    block-declaration                    go to state 684
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-head                           go to state 64
    class-key                            go to state 65
    class-name                           go to state 66
    class-specifier                      go to state 67
    compare-expression                   go to state 411
    compound-statement                   go to state 685
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    coroutine-return-statement           go to state 686
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decl-specifier                       go to state 71
    decl-specifier-seq                   go to state 687
    declaration-statement                go to state 688
    decltype-specifier                   go to state 77
    defining-type-specifier              go to state 79
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-head                            go to state 83
    enum-key                             go to state 84
    enum-name                            go to state 85
    enum-specifier                       go to state 86
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    explicit-specifier                   go to state 269
    expression                           go to state 689
    expression-statement                 go to state 690
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    function-specifier                   go to state 92
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    iteration-statement                  go to state 691
    jump-statement                       go to state 692
    labeled-statement                    go to state 693
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-alias-definition           go to state 101
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    opaque-enum-declaration              go to state 108
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    selection-statement                  go to state 694
    shift-expression                     go to state 448
    simple-declaration                   go to state 114
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    statement                            go to state 1984
    static_assert-declaration            go to state 117
    storage-class-specifier              go to state 118
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    try-block                            go to state 697
    type-constraint                      go to state 124
    type-name                            go to state 125
    type-specifier                       go to state 126
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    using-declaration                    go to state 131
    using-directive                      go to state 132
    using-enum-declaration               go to state 133
    yield-expression                     go to state 537


State 1946

  338 expression: expression • ',' assignment-expression
  514 iteration-statement: "for" '(' init-statement condition ';' expression • ')' statement

    ')'  shift, and go to state 1985
    ','  shift, and go to state 1037


State 1947

  386 for-range-declaration: decl-specifier-seq '[' identifier-list • ']'
  466 identifier-list: identifier-list • ',' IDENTIFIER

    ','  shift, and go to state 1138
    ']'  shift, and go to state 1986


State 1948

  388 for-range-declaration: decl-specifier-seq ref-qualifier '[' • identifier-list ']'

    IDENTIFIER  shift, and go to state 644

    identifier-list  go to state 1987


State 1949

  516 iteration-statement: "for" '(' init-statement for-range-declaration ':' for-range-initializer • ')' statement

    ')'  shift, and go to state 1988


State 1950

  165 condition: attribute-specifier-seq decl-specifier-seq declarator brace-or-equal-initializer •
  481 initializer: brace-or-equal-initializer •

    ')'       reduce using rule 165 (condition)
    $default  reduce using rule 481 (initializer)


State 1951

  956 selection-statement: "if" '(' condition ')' statement "else" • statement

    IDENTIFIER          shift, and go to state 665
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    "using"             shift, and go to state 2
    ';'                 shift, and go to state 666
    "alignas"           shift, and go to state 4
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "asm"               shift, and go to state 8
    "::"                shift, and go to state 365
    '['                 shift, and go to state 667
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 294
    "virtual"           shift, and go to state 11
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "co_return"         shift, and go to state 669
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "friend"            shift, and go to state 20
    "typedef"           shift, and go to state 21
    "constexpr"         shift, and go to state 22
    "consteval"         shift, and go to state 23
    "constinit"         shift, and go to state 24
    "inline"            shift, and go to state 263
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 27
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    "extern"            shift, and go to state 264
    "explicit"          shift, and go to state 29
    '*'                 shift, and go to state 386
    "default"           shift, and go to state 670
    "try"               shift, and go to state 671
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "while"             shift, and go to state 672
    "do"                shift, and go to state 673
    "for"               shift, and go to state 674
    "break"             shift, and go to state 675
    "continue"          shift, and go to state 676
    "return"            shift, and go to state 677
    "goto"              shift, and go to state 678
    "case"              shift, and go to state 679
    "namespace"         shift, and go to state 680
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "if"                shift, and go to state 681
    "switch"            shift, and go to state 682
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    "static_assert"     shift, and go to state 52
    "static"            shift, and go to state 53
    "thread_local"      shift, and go to state 54
    "mutable"           shift, and go to state 55
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    alias-declaration                    go to state 57
    alignment-specifier                  go to state 58
    and-expression                       go to state 405
    asm-declaration                      go to state 59
    assignment-expression                go to state 530
    attribute-specifier                  go to state 61
    attribute-specifier-seq              go to state 683
    await-expression                     go to state 406
    binary-literal                       go to state 407
    block-declaration                    go to state 684
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-head                           go to state 64
    class-key                            go to state 65
    class-name                           go to state 66
    class-specifier                      go to state 67
    compare-expression                   go to state 411
    compound-statement                   go to state 685
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    coroutine-return-statement           go to state 686
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decl-specifier                       go to state 71
    decl-specifier-seq                   go to state 687
    declaration-statement                go to state 688
    decltype-specifier                   go to state 77
    defining-type-specifier              go to state 79
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-head                            go to state 83
    enum-key                             go to state 84
    enum-name                            go to state 85
    enum-specifier                       go to state 86
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    explicit-specifier                   go to state 269
    expression                           go to state 689
    expression-statement                 go to state 690
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    function-specifier                   go to state 92
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    iteration-statement                  go to state 691
    jump-statement                       go to state 692
    labeled-statement                    go to state 693
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-alias-definition           go to state 101
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    opaque-enum-declaration              go to state 108
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    selection-statement                  go to state 694
    shift-expression                     go to state 448
    simple-declaration                   go to state 114
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    statement                            go to state 1989
    static_assert-declaration            go to state 117
    storage-class-specifier              go to state 118
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    try-block                            go to state 697
    type-constraint                      go to state 124
    type-name                            go to state 125
    type-specifier                       go to state 126
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    using-declaration                    go to state 131
    using-directive                      go to state 132
    using-enum-declaration               go to state 133
    yield-expression                     go to state 537


State 1952

  954 selection-statement: "if" '(' init-statement condition ')' statement •
  958                    | "if" '(' init-statement condition ')' statement • "else" statement

    "else"  shift, and go to state 1990

    "else"    [reduce using rule 954 (selection-statement)]
    $default  reduce using rule 954 (selection-statement)


State 1953

  953 selection-statement: "if" "constexpr" '(' condition ')' statement •
  957                    | "if" "constexpr" '(' condition ')' statement • "else" statement

    "else"  shift, and go to state 1991

    "else"    [reduce using rule 953 (selection-statement)]
    $default  reduce using rule 953 (selection-statement)


State 1954

  955 selection-statement: "if" "constexpr" '(' init-statement condition ')' • statement
  959                    | "if" "constexpr" '(' init-statement condition ')' • statement "else" statement

    IDENTIFIER          shift, and go to state 665
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    "using"             shift, and go to state 2
    ';'                 shift, and go to state 666
    "alignas"           shift, and go to state 4
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "asm"               shift, and go to state 8
    "::"                shift, and go to state 365
    '['                 shift, and go to state 667
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 294
    "virtual"           shift, and go to state 11
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "co_return"         shift, and go to state 669
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "friend"            shift, and go to state 20
    "typedef"           shift, and go to state 21
    "constexpr"         shift, and go to state 22
    "consteval"         shift, and go to state 23
    "constinit"         shift, and go to state 24
    "inline"            shift, and go to state 263
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 27
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    "extern"            shift, and go to state 264
    "explicit"          shift, and go to state 29
    '*'                 shift, and go to state 386
    "default"           shift, and go to state 670
    "try"               shift, and go to state 671
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "while"             shift, and go to state 672
    "do"                shift, and go to state 673
    "for"               shift, and go to state 674
    "break"             shift, and go to state 675
    "continue"          shift, and go to state 676
    "return"            shift, and go to state 677
    "goto"              shift, and go to state 678
    "case"              shift, and go to state 679
    "namespace"         shift, and go to state 680
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "if"                shift, and go to state 681
    "switch"            shift, and go to state 682
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    "static_assert"     shift, and go to state 52
    "static"            shift, and go to state 53
    "thread_local"      shift, and go to state 54
    "mutable"           shift, and go to state 55
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    alias-declaration                    go to state 57
    alignment-specifier                  go to state 58
    and-expression                       go to state 405
    asm-declaration                      go to state 59
    assignment-expression                go to state 530
    attribute-specifier                  go to state 61
    attribute-specifier-seq              go to state 683
    await-expression                     go to state 406
    binary-literal                       go to state 407
    block-declaration                    go to state 684
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-head                           go to state 64
    class-key                            go to state 65
    class-name                           go to state 66
    class-specifier                      go to state 67
    compare-expression                   go to state 411
    compound-statement                   go to state 685
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    coroutine-return-statement           go to state 686
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decl-specifier                       go to state 71
    decl-specifier-seq                   go to state 687
    declaration-statement                go to state 688
    decltype-specifier                   go to state 77
    defining-type-specifier              go to state 79
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-head                            go to state 83
    enum-key                             go to state 84
    enum-name                            go to state 85
    enum-specifier                       go to state 86
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    explicit-specifier                   go to state 269
    expression                           go to state 689
    expression-statement                 go to state 690
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    function-specifier                   go to state 92
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    iteration-statement                  go to state 691
    jump-statement                       go to state 692
    labeled-statement                    go to state 693
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-alias-definition           go to state 101
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    opaque-enum-declaration              go to state 108
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    selection-statement                  go to state 694
    shift-expression                     go to state 448
    simple-declaration                   go to state 114
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    statement                            go to state 1992
    static_assert-declaration            go to state 117
    storage-class-specifier              go to state 118
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    try-block                            go to state 697
    type-constraint                      go to state 124
    type-name                            go to state 125
    type-specifier                       go to state 126
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    using-declaration                    go to state 131
    using-directive                      go to state 132
    using-enum-declaration               go to state 133
    yield-expression                     go to state 537


State 1955

  963 selection-statement: "if" '!' "consteval" compound-statement "else" statement •

    $default  reduce using rule 963 (selection-statement)


State 1956

  965 selection-statement: "switch" '(' init-statement condition ')' statement •

    $default  reduce using rule 965 (selection-statement)


State 1957

  317 exception-declaration: attribute-specifier-seq type-specifier-seq abstract-declarator •

    $default  reduce using rule 317 (exception-declaration)


State 1958

  313 exception-declaration: attribute-specifier-seq type-specifier-seq declarator •

    $default  reduce using rule 313 (exception-declaration)


State 1959

  417 handler: "catch" '(' exception-declaration ')' compound-statement •

    $default  reduce using rule 417 (handler)


State 1960

  234 deduction-guide: explicit-specifier template-name '(' parameter-declaration-clause ')' "->" simple-template-id ';' •

    $default  reduce using rule 234 (deduction-guide)


State 1961

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  851 parameters-and-qualifiers: '(' parameter-declaration-clause ')' cv-qualifier-seq ref-qualifier noexcept-specifier attribute-specifier-seq •

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    '['       [reduce using rule 851 (parameters-and-qualifiers)]
    $default  reduce using rule 851 (parameters-and-qualifiers)

    alignment-specifier  go to state 58
    attribute-specifier  go to state 265


State 1962

  350 fold-expression: '(' cast-expression fold-operator "..." fold-operator cast-expression ')' •

    $default  reduce using rule 350 (fold-expression)


State 1963

  686 new-expression: "::" "new" new-placement '(' type-id ')' new-initializer •

    $default  reduce using rule 686 (new-expression)


State 1964

  157 compound-requirement: '{' expression '}' "noexcept" ';' •

    $default  reduce using rule 157 (compound-requirement)


State 1965

  159 compound-requirement: '{' expression '}' "noexcept" return-type-requirement • ';'

    ';'  shift, and go to state 1993


State 1966

  663 nested-name-specifier: nested-name-specifier • IDENTIFIER "::"
  664                      | nested-name-specifier • simple-template-id "::"
  665                      | nested-name-specifier • "template" simple-template-id "::"
  1084 type-constraint: nested-name-specifier • concept-name
  1086                | nested-name-specifier • concept-name '<' '>'
  1088                | nested-name-specifier • concept-name '<' template-argument-list '>'

    IDENTIFIER  shift, and go to state 1994
    "template"  shift, and go to state 355

    concept-name        go to state 328
    simple-template-id  go to state 539
    template-name       go to state 143


State 1967

  946 return-type-requirement: "->" type-constraint •

    $default  reduce using rule 946 (return-type-requirement)


State 1968

  158 compound-requirement: '{' expression '}' return-type-requirement ';' •

    $default  reduce using rule 158 (compound-requirement)


State 1969

   53 attribute-specifier-seq: attribute-specifier-seq • attribute-specifier
  738 noptr-new-declarator: noptr-new-declarator '[' constant-expression ']' attribute-specifier-seq •

    "alignas"  shift, and go to state 4
    '['        shift, and go to state 10

    '['       [reduce using rule 738 (noptr-new-declarator)]
    $default  reduce using rule 738 (noptr-new-declarator)

    alignment-specifier  go to state 58
    attribute-specifier  go to state 265


State 1970

  877 postfix-expression: "dynamic_cast" '<' type-id '>' '(' expression ')' •

    $default  reduce using rule 877 (postfix-expression)


State 1971

  878 postfix-expression: "static_cast" '<' type-id '>' '(' expression ')' •

    $default  reduce using rule 878 (postfix-expression)


State 1972

  879 postfix-expression: "reinterpret_cast" '<' type-id '>' '(' expression ')' •

    $default  reduce using rule 879 (postfix-expression)


State 1973

  880 postfix-expression: "const_cast" '<' type-id '>' '(' expression ')' •

    $default  reduce using rule 880 (postfix-expression)


State 1974

  537 lambda-expression: lambda-introducer '<' template-parameter-list '>' requires-clause lambda-declarator compound-statement •

    $default  reduce using rule 537 (lambda-expression)


State 1975

  927 raw-string: '"' d-char-sequence '(' r-char-sequence ')' d-char-sequence '"' •

    $default  reduce using rule 927 (raw-string)


State 1976

  510 iteration-statement: "do" statement "while" '(' expression ')' ';' •

    $default  reduce using rule 510 (iteration-statement)


State 1977

  385 for-range-declaration: attribute-specifier-seq decl-specifier-seq '[' identifier-list ']' •
  980 simple-declaration: attribute-specifier-seq decl-specifier-seq '[' identifier-list ']' • initializer ';'

    '='  shift, and go to state 1280
    '('  shift, and go to state 647
    '{'  shift, and go to state 939

    $default  reduce using rule 385 (for-range-declaration)

    brace-or-equal-initializer  go to state 649
    braced-init-list            go to state 650
    initializer                 go to state 1725


State 1978

  387 for-range-declaration: attribute-specifier-seq decl-specifier-seq ref-qualifier '[' identifier-list • ']'
  466 identifier-list: identifier-list • ',' IDENTIFIER
  982 simple-declaration: attribute-specifier-seq decl-specifier-seq ref-qualifier '[' identifier-list • ']' initializer ';'

    ','  shift, and go to state 1138
    ']'  shift, and go to state 1995


State 1979

  388 for-range-declaration: decl-specifier-seq ref-qualifier '[' identifier-list ']' •
  983 simple-declaration: decl-specifier-seq ref-qualifier '[' identifier-list ']' • initializer ';'

    '='  shift, and go to state 1280
    '('  shift, and go to state 647
    '{'  shift, and go to state 939

    $default  reduce using rule 388 (for-range-declaration)

    brace-or-equal-initializer  go to state 649
    braced-init-list            go to state 650
    initializer                 go to state 1748


State 1980

  515 iteration-statement: "for" '(' for-range-declaration ':' for-range-initializer ')' statement •

    $default  reduce using rule 515 (iteration-statement)


State 1981

  513 iteration-statement: "for" '(' init-statement ';' expression ')' statement •

    $default  reduce using rule 513 (iteration-statement)


State 1982

  385 for-range-declaration: attribute-specifier-seq decl-specifier-seq '[' identifier-list • ']'
  466 identifier-list: identifier-list • ',' IDENTIFIER

    ','  shift, and go to state 1138
    ']'  shift, and go to state 1996


State 1983

  387 for-range-declaration: attribute-specifier-seq decl-specifier-seq ref-qualifier '[' • identifier-list ']'

    IDENTIFIER  shift, and go to state 644

    identifier-list  go to state 1997


State 1984

  512 iteration-statement: "for" '(' init-statement condition ';' ')' statement •

    $default  reduce using rule 512 (iteration-statement)


State 1985

  514 iteration-statement: "for" '(' init-statement condition ';' expression ')' • statement

    IDENTIFIER          shift, and go to state 665
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    "using"             shift, and go to state 2
    ';'                 shift, and go to state 666
    "alignas"           shift, and go to state 4
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "asm"               shift, and go to state 8
    "::"                shift, and go to state 365
    '['                 shift, and go to state 667
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 294
    "virtual"           shift, and go to state 11
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "co_return"         shift, and go to state 669
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "friend"            shift, and go to state 20
    "typedef"           shift, and go to state 21
    "constexpr"         shift, and go to state 22
    "consteval"         shift, and go to state 23
    "constinit"         shift, and go to state 24
    "inline"            shift, and go to state 263
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 27
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    "extern"            shift, and go to state 264
    "explicit"          shift, and go to state 29
    '*'                 shift, and go to state 386
    "default"           shift, and go to state 670
    "try"               shift, and go to state 671
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "while"             shift, and go to state 672
    "do"                shift, and go to state 673
    "for"               shift, and go to state 674
    "break"             shift, and go to state 675
    "continue"          shift, and go to state 676
    "return"            shift, and go to state 677
    "goto"              shift, and go to state 678
    "case"              shift, and go to state 679
    "namespace"         shift, and go to state 680
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "if"                shift, and go to state 681
    "switch"            shift, and go to state 682
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    "static_assert"     shift, and go to state 52
    "static"            shift, and go to state 53
    "thread_local"      shift, and go to state 54
    "mutable"           shift, and go to state 55
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    alias-declaration                    go to state 57
    alignment-specifier                  go to state 58
    and-expression                       go to state 405
    asm-declaration                      go to state 59
    assignment-expression                go to state 530
    attribute-specifier                  go to state 61
    attribute-specifier-seq              go to state 683
    await-expression                     go to state 406
    binary-literal                       go to state 407
    block-declaration                    go to state 684
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-head                           go to state 64
    class-key                            go to state 65
    class-name                           go to state 66
    class-specifier                      go to state 67
    compare-expression                   go to state 411
    compound-statement                   go to state 685
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    coroutine-return-statement           go to state 686
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decl-specifier                       go to state 71
    decl-specifier-seq                   go to state 687
    declaration-statement                go to state 688
    decltype-specifier                   go to state 77
    defining-type-specifier              go to state 79
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-head                            go to state 83
    enum-key                             go to state 84
    enum-name                            go to state 85
    enum-specifier                       go to state 86
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    explicit-specifier                   go to state 269
    expression                           go to state 689
    expression-statement                 go to state 690
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    function-specifier                   go to state 92
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    iteration-statement                  go to state 691
    jump-statement                       go to state 692
    labeled-statement                    go to state 693
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-alias-definition           go to state 101
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    opaque-enum-declaration              go to state 108
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    selection-statement                  go to state 694
    shift-expression                     go to state 448
    simple-declaration                   go to state 114
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    statement                            go to state 1998
    static_assert-declaration            go to state 117
    storage-class-specifier              go to state 118
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    try-block                            go to state 697
    type-constraint                      go to state 124
    type-name                            go to state 125
    type-specifier                       go to state 126
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    using-declaration                    go to state 131
    using-directive                      go to state 132
    using-enum-declaration               go to state 133
    yield-expression                     go to state 537


State 1986

  386 for-range-declaration: decl-specifier-seq '[' identifier-list ']' •

    $default  reduce using rule 386 (for-range-declaration)


State 1987

  388 for-range-declaration: decl-specifier-seq ref-qualifier '[' identifier-list • ']'
  466 identifier-list: identifier-list • ',' IDENTIFIER

    ','  shift, and go to state 1138
    ']'  shift, and go to state 1999


State 1988

  516 iteration-statement: "for" '(' init-statement for-range-declaration ':' for-range-initializer ')' • statement

    IDENTIFIER          shift, and go to state 665
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    "using"             shift, and go to state 2
    ';'                 shift, and go to state 666
    "alignas"           shift, and go to state 4
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "asm"               shift, and go to state 8
    "::"                shift, and go to state 365
    '['                 shift, and go to state 667
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 294
    "virtual"           shift, and go to state 11
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "co_return"         shift, and go to state 669
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "friend"            shift, and go to state 20
    "typedef"           shift, and go to state 21
    "constexpr"         shift, and go to state 22
    "consteval"         shift, and go to state 23
    "constinit"         shift, and go to state 24
    "inline"            shift, and go to state 263
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 27
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    "extern"            shift, and go to state 264
    "explicit"          shift, and go to state 29
    '*'                 shift, and go to state 386
    "default"           shift, and go to state 670
    "try"               shift, and go to state 671
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "while"             shift, and go to state 672
    "do"                shift, and go to state 673
    "for"               shift, and go to state 674
    "break"             shift, and go to state 675
    "continue"          shift, and go to state 676
    "return"            shift, and go to state 677
    "goto"              shift, and go to state 678
    "case"              shift, and go to state 679
    "namespace"         shift, and go to state 680
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "if"                shift, and go to state 681
    "switch"            shift, and go to state 682
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    "static_assert"     shift, and go to state 52
    "static"            shift, and go to state 53
    "thread_local"      shift, and go to state 54
    "mutable"           shift, and go to state 55
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    alias-declaration                    go to state 57
    alignment-specifier                  go to state 58
    and-expression                       go to state 405
    asm-declaration                      go to state 59
    assignment-expression                go to state 530
    attribute-specifier                  go to state 61
    attribute-specifier-seq              go to state 683
    await-expression                     go to state 406
    binary-literal                       go to state 407
    block-declaration                    go to state 684
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-head                           go to state 64
    class-key                            go to state 65
    class-name                           go to state 66
    class-specifier                      go to state 67
    compare-expression                   go to state 411
    compound-statement                   go to state 685
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    coroutine-return-statement           go to state 686
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decl-specifier                       go to state 71
    decl-specifier-seq                   go to state 687
    declaration-statement                go to state 688
    decltype-specifier                   go to state 77
    defining-type-specifier              go to state 79
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-head                            go to state 83
    enum-key                             go to state 84
    enum-name                            go to state 85
    enum-specifier                       go to state 86
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    explicit-specifier                   go to state 269
    expression                           go to state 689
    expression-statement                 go to state 690
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    function-specifier                   go to state 92
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    iteration-statement                  go to state 691
    jump-statement                       go to state 692
    labeled-statement                    go to state 693
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-alias-definition           go to state 101
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    opaque-enum-declaration              go to state 108
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    selection-statement                  go to state 694
    shift-expression                     go to state 448
    simple-declaration                   go to state 114
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    statement                            go to state 2000
    static_assert-declaration            go to state 117
    storage-class-specifier              go to state 118
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    try-block                            go to state 697
    type-constraint                      go to state 124
    type-name                            go to state 125
    type-specifier                       go to state 126
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    using-declaration                    go to state 131
    using-directive                      go to state 132
    using-enum-declaration               go to state 133
    yield-expression                     go to state 537


State 1989

  956 selection-statement: "if" '(' condition ')' statement "else" statement •

    $default  reduce using rule 956 (selection-statement)


State 1990

  958 selection-statement: "if" '(' init-statement condition ')' statement "else" • statement

    IDENTIFIER          shift, and go to state 665
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    "using"             shift, and go to state 2
    ';'                 shift, and go to state 666
    "alignas"           shift, and go to state 4
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "asm"               shift, and go to state 8
    "::"                shift, and go to state 365
    '['                 shift, and go to state 667
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 294
    "virtual"           shift, and go to state 11
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "co_return"         shift, and go to state 669
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "friend"            shift, and go to state 20
    "typedef"           shift, and go to state 21
    "constexpr"         shift, and go to state 22
    "consteval"         shift, and go to state 23
    "constinit"         shift, and go to state 24
    "inline"            shift, and go to state 263
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 27
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    "extern"            shift, and go to state 264
    "explicit"          shift, and go to state 29
    '*'                 shift, and go to state 386
    "default"           shift, and go to state 670
    "try"               shift, and go to state 671
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "while"             shift, and go to state 672
    "do"                shift, and go to state 673
    "for"               shift, and go to state 674
    "break"             shift, and go to state 675
    "continue"          shift, and go to state 676
    "return"            shift, and go to state 677
    "goto"              shift, and go to state 678
    "case"              shift, and go to state 679
    "namespace"         shift, and go to state 680
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "if"                shift, and go to state 681
    "switch"            shift, and go to state 682
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    "static_assert"     shift, and go to state 52
    "static"            shift, and go to state 53
    "thread_local"      shift, and go to state 54
    "mutable"           shift, and go to state 55
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    alias-declaration                    go to state 57
    alignment-specifier                  go to state 58
    and-expression                       go to state 405
    asm-declaration                      go to state 59
    assignment-expression                go to state 530
    attribute-specifier                  go to state 61
    attribute-specifier-seq              go to state 683
    await-expression                     go to state 406
    binary-literal                       go to state 407
    block-declaration                    go to state 684
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-head                           go to state 64
    class-key                            go to state 65
    class-name                           go to state 66
    class-specifier                      go to state 67
    compare-expression                   go to state 411
    compound-statement                   go to state 685
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    coroutine-return-statement           go to state 686
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decl-specifier                       go to state 71
    decl-specifier-seq                   go to state 687
    declaration-statement                go to state 688
    decltype-specifier                   go to state 77
    defining-type-specifier              go to state 79
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-head                            go to state 83
    enum-key                             go to state 84
    enum-name                            go to state 85
    enum-specifier                       go to state 86
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    explicit-specifier                   go to state 269
    expression                           go to state 689
    expression-statement                 go to state 690
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    function-specifier                   go to state 92
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    iteration-statement                  go to state 691
    jump-statement                       go to state 692
    labeled-statement                    go to state 693
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-alias-definition           go to state 101
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    opaque-enum-declaration              go to state 108
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    selection-statement                  go to state 694
    shift-expression                     go to state 448
    simple-declaration                   go to state 114
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    statement                            go to state 2001
    static_assert-declaration            go to state 117
    storage-class-specifier              go to state 118
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    try-block                            go to state 697
    type-constraint                      go to state 124
    type-name                            go to state 125
    type-specifier                       go to state 126
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    using-declaration                    go to state 131
    using-directive                      go to state 132
    using-enum-declaration               go to state 133
    yield-expression                     go to state 537


State 1991

  957 selection-statement: "if" "constexpr" '(' condition ')' statement "else" • statement

    IDENTIFIER          shift, and go to state 665
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    "using"             shift, and go to state 2
    ';'                 shift, and go to state 666
    "alignas"           shift, and go to state 4
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "asm"               shift, and go to state 8
    "::"                shift, and go to state 365
    '['                 shift, and go to state 667
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 294
    "virtual"           shift, and go to state 11
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "co_return"         shift, and go to state 669
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "friend"            shift, and go to state 20
    "typedef"           shift, and go to state 21
    "constexpr"         shift, and go to state 22
    "consteval"         shift, and go to state 23
    "constinit"         shift, and go to state 24
    "inline"            shift, and go to state 263
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 27
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    "extern"            shift, and go to state 264
    "explicit"          shift, and go to state 29
    '*'                 shift, and go to state 386
    "default"           shift, and go to state 670
    "try"               shift, and go to state 671
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "while"             shift, and go to state 672
    "do"                shift, and go to state 673
    "for"               shift, and go to state 674
    "break"             shift, and go to state 675
    "continue"          shift, and go to state 676
    "return"            shift, and go to state 677
    "goto"              shift, and go to state 678
    "case"              shift, and go to state 679
    "namespace"         shift, and go to state 680
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "if"                shift, and go to state 681
    "switch"            shift, and go to state 682
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    "static_assert"     shift, and go to state 52
    "static"            shift, and go to state 53
    "thread_local"      shift, and go to state 54
    "mutable"           shift, and go to state 55
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    alias-declaration                    go to state 57
    alignment-specifier                  go to state 58
    and-expression                       go to state 405
    asm-declaration                      go to state 59
    assignment-expression                go to state 530
    attribute-specifier                  go to state 61
    attribute-specifier-seq              go to state 683
    await-expression                     go to state 406
    binary-literal                       go to state 407
    block-declaration                    go to state 684
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-head                           go to state 64
    class-key                            go to state 65
    class-name                           go to state 66
    class-specifier                      go to state 67
    compare-expression                   go to state 411
    compound-statement                   go to state 685
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    coroutine-return-statement           go to state 686
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decl-specifier                       go to state 71
    decl-specifier-seq                   go to state 687
    declaration-statement                go to state 688
    decltype-specifier                   go to state 77
    defining-type-specifier              go to state 79
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-head                            go to state 83
    enum-key                             go to state 84
    enum-name                            go to state 85
    enum-specifier                       go to state 86
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    explicit-specifier                   go to state 269
    expression                           go to state 689
    expression-statement                 go to state 690
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    function-specifier                   go to state 92
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    iteration-statement                  go to state 691
    jump-statement                       go to state 692
    labeled-statement                    go to state 693
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-alias-definition           go to state 101
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    opaque-enum-declaration              go to state 108
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    selection-statement                  go to state 694
    shift-expression                     go to state 448
    simple-declaration                   go to state 114
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    statement                            go to state 2002
    static_assert-declaration            go to state 117
    storage-class-specifier              go to state 118
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    try-block                            go to state 697
    type-constraint                      go to state 124
    type-name                            go to state 125
    type-specifier                       go to state 126
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    using-declaration                    go to state 131
    using-directive                      go to state 132
    using-enum-declaration               go to state 133
    yield-expression                     go to state 537


State 1992

  955 selection-statement: "if" "constexpr" '(' init-statement condition ')' statement •
  959                    | "if" "constexpr" '(' init-statement condition ')' statement • "else" statement

    "else"  shift, and go to state 2003

    "else"    [reduce using rule 955 (selection-statement)]
    $default  reduce using rule 955 (selection-statement)


State 1993

  159 compound-requirement: '{' expression '}' "noexcept" return-type-requirement ';' •

    $default  reduce using rule 159 (compound-requirement)


State 1994

  163 concept-name: IDENTIFIER •
  663 nested-name-specifier: nested-name-specifier IDENTIFIER • "::"
  1066 template-name: IDENTIFIER •

    "::"  shift, and go to state 726

    '<'       reduce using rule 163 (concept-name)
    '<'       [reduce using rule 1066 (template-name)]
    $default  reduce using rule 163 (concept-name)


State 1995

  387 for-range-declaration: attribute-specifier-seq decl-specifier-seq ref-qualifier '[' identifier-list ']' •
  982 simple-declaration: attribute-specifier-seq decl-specifier-seq ref-qualifier '[' identifier-list ']' • initializer ';'

    '='  shift, and go to state 1280
    '('  shift, and go to state 647
    '{'  shift, and go to state 939

    $default  reduce using rule 387 (for-range-declaration)

    brace-or-equal-initializer  go to state 649
    braced-init-list            go to state 650
    initializer                 go to state 1859


State 1996

  385 for-range-declaration: attribute-specifier-seq decl-specifier-seq '[' identifier-list ']' •

    $default  reduce using rule 385 (for-range-declaration)


State 1997

  387 for-range-declaration: attribute-specifier-seq decl-specifier-seq ref-qualifier '[' identifier-list • ']'
  466 identifier-list: identifier-list • ',' IDENTIFIER

    ','  shift, and go to state 1138
    ']'  shift, and go to state 2004


State 1998

  514 iteration-statement: "for" '(' init-statement condition ';' expression ')' statement •

    $default  reduce using rule 514 (iteration-statement)


State 1999

  388 for-range-declaration: decl-specifier-seq ref-qualifier '[' identifier-list ']' •

    $default  reduce using rule 388 (for-range-declaration)


State 2000

  516 iteration-statement: "for" '(' init-statement for-range-declaration ':' for-range-initializer ')' statement •

    $default  reduce using rule 516 (iteration-statement)


State 2001

  958 selection-statement: "if" '(' init-statement condition ')' statement "else" statement •

    $default  reduce using rule 958 (selection-statement)


State 2002

  957 selection-statement: "if" "constexpr" '(' condition ')' statement "else" statement •

    $default  reduce using rule 957 (selection-statement)


State 2003

  959 selection-statement: "if" "constexpr" '(' init-statement condition ')' statement "else" • statement

    IDENTIFIER          shift, and go to state 665
    '+'                 shift, and go to state 361
    '-'                 shift, and go to state 362
    "using"             shift, and go to state 2
    ';'                 shift, and go to state 666
    "alignas"           shift, and go to state 4
    '('                 shift, and go to state 363
    '&'                 shift, and go to state 364
    "asm"               shift, and go to state 8
    "::"                shift, and go to state 365
    '['                 shift, and go to state 667
    "co_await"          shift, and go to state 367
    '{'                 shift, and go to state 294
    "virtual"           shift, and go to state 11
    '0'                 shift, and go to state 368
    '1'                 shift, and go to state 369
    "0b"                shift, and go to state 370
    "0B"                shift, and go to state 371
    '\''                shift, and go to state 372
    "false"             shift, and go to state 373
    "true"              shift, and go to state 374
    "class"             shift, and go to state 12
    "struct"            shift, and go to state 13
    "union"             shift, and go to state 14
    "noexcept"          shift, and go to state 375
    "operator"          shift, and go to state 17
    "co_return"         shift, and go to state 669
    "const"             shift, and go to state 18
    "volatile"          shift, and go to state 19
    "friend"            shift, and go to state 20
    "typedef"           shift, and go to state 21
    "constexpr"         shift, and go to state 22
    "consteval"         shift, and go to state 23
    "constinit"         shift, and go to state 24
    "inline"            shift, and go to state 263
    "decltype"          shift, and go to state 26
    "delete"            shift, and go to state 376
    '.'                 shift, and go to state 377
    '2'                 shift, and go to state 378
    '3'                 shift, and go to state 379
    '4'                 shift, and go to state 380
    '5'                 shift, and go to state 381
    '6'                 shift, and go to state 382
    '7'                 shift, and go to state 383
    '8'                 shift, and go to state 384
    '9'                 shift, and go to state 385
    "enum"              shift, and go to state 27
    "u8"                shift, and go to state 185
    'u'                 shift, and go to state 186
    'U'                 shift, and go to state 187
    'L'                 shift, and go to state 188
    "extern"            shift, and go to state 264
    "explicit"          shift, and go to state 29
    '*'                 shift, and go to state 386
    "default"           shift, and go to state 670
    "try"               shift, and go to state 671
    '"'                 shift, and go to state 203
    "0x"                shift, and go to state 387
    "0X"                shift, and go to state 388
    "while"             shift, and go to state 672
    "do"                shift, and go to state 673
    "for"               shift, and go to state 674
    "break"             shift, and go to state 675
    "continue"          shift, and go to state 676
    "return"            shift, and go to state 677
    "goto"              shift, and go to state 678
    "case"              shift, and go to state 679
    "namespace"         shift, and go to state 680
    "requires"          shift, and go to state 389
    "new"               shift, and go to state 390
    '~'                 shift, and go to state 391
    '!'                 shift, and go to state 392
    "++"                shift, and go to state 393
    "--"                shift, and go to state 394
    "this"              shift, and go to state 395
    "auto"              shift, and go to state 37
    "nullptr"           shift, and go to state 396
    "dynamic_cast"      shift, and go to state 397
    "static_cast"       shift, and go to state 398
    "reinterpret_cast"  shift, and go to state 399
    "const_cast"        shift, and go to state 400
    "typeid"            shift, and go to state 401
    "if"                shift, and go to state 681
    "switch"            shift, and go to state 682
    "char"              shift, and go to state 38
    "char8_t"           shift, and go to state 39
    "char16_t"          shift, and go to state 40
    "char32_t"          shift, and go to state 41
    "wchar_t"           shift, and go to state 42
    "bool"              shift, and go to state 43
    "short"             shift, and go to state 44
    "int"               shift, and go to state 45
    "long"              shift, and go to state 46
    "signed"            shift, and go to state 47
    "unsigned"          shift, and go to state 48
    "float"             shift, and go to state 49
    "double"            shift, and go to state 50
    "void"              shift, and go to state 51
    "static_assert"     shift, and go to state 52
    "static"            shift, and go to state 53
    "thread_local"      shift, and go to state 54
    "mutable"           shift, and go to state 55
    'R'                 shift, and go to state 209
    "throw"             shift, and go to state 528
    "typename"          shift, and go to state 56
    "sizeof"            shift, and go to state 402
    "alignof"           shift, and go to state 403
    "co_yield"          shift, and go to state 529

    additive-expression                  go to state 404
    alias-declaration                    go to state 57
    alignment-specifier                  go to state 58
    and-expression                       go to state 405
    asm-declaration                      go to state 59
    assignment-expression                go to state 530
    attribute-specifier                  go to state 61
    attribute-specifier-seq              go to state 683
    await-expression                     go to state 406
    binary-literal                       go to state 407
    block-declaration                    go to state 684
    boolean-literal                      go to state 408
    cast-expression                      go to state 409
    character-literal                    go to state 410
    class-head                           go to state 64
    class-key                            go to state 65
    class-name                           go to state 66
    class-specifier                      go to state 67
    compare-expression                   go to state 411
    compound-statement                   go to state 685
    concept-name                         go to state 68
    conditional-expression               go to state 531
    conversion-function-id               go to state 69
    coroutine-return-statement           go to state 686
    cv-qualifier                         go to state 70
    decimal-floating-point-literal       go to state 414
    decimal-literal                      go to state 415
    decl-specifier                       go to state 71
    decl-specifier-seq                   go to state 687
    declaration-statement                go to state 688
    decltype-specifier                   go to state 77
    defining-type-specifier              go to state 79
    delete-expression                    go to state 416
    digit                                go to state 417
    digit-sequence                       go to state 418
    elaborated-enum-specifier            go to state 80
    elaborated-type-specifier            go to state 81
    encoding-prefix                      go to state 419
    enum-head                            go to state 83
    enum-key                             go to state 84
    enum-name                            go to state 85
    enum-specifier                       go to state 86
    equality-expression                  go to state 420
    exclusive-or-expression              go to state 421
    explicit-specifier                   go to state 269
    expression                           go to state 689
    expression-statement                 go to state 690
    floating-point-literal               go to state 422
    fold-expression                      go to state 423
    fractional-constant                  go to state 424
    function-specifier                   go to state 92
    hexadecimal-floating-point-literal   go to state 425
    hexadecimal-literal                  go to state 426
    hexadecimal-prefix                   go to state 427
    id-expression                        go to state 428
    inclusive-or-expression              go to state 429
    integer-literal                      go to state 430
    iteration-statement                  go to state 691
    jump-statement                       go to state 692
    labeled-statement                    go to state 693
    lambda-expression                    go to state 431
    lambda-introducer                    go to state 432
    literal                              go to state 433
    literal-operator-id                  go to state 96
    logical-and-expression               go to state 434
    logical-or-expression                go to state 533
    multiplicative-expression            go to state 436
    namespace-alias                      go to state 100
    namespace-alias-definition           go to state 101
    namespace-name                       go to state 103
    nested-name-specifier                go to state 437
    new-expression                       go to state 438
    noexcept-expression                  go to state 439
    nonzero-digit                        go to state 440
    octal-literal                        go to state 441
    opaque-enum-declaration              go to state 108
    operator-function-id                 go to state 109
    placeholder-type-specifier           go to state 110
    pm-expression                        go to state 442
    pointer-literal                      go to state 443
    postfix-expression                   go to state 444
    primary-expression                   go to state 445
    qualified-id                         go to state 113
    relational-expression                go to state 446
    requires-expression                  go to state 447
    selection-statement                  go to state 694
    shift-expression                     go to state 448
    simple-declaration                   go to state 114
    simple-template-id                   go to state 115
    simple-type-specifier                go to state 449
    statement                            go to state 2005
    static_assert-declaration            go to state 117
    storage-class-specifier              go to state 118
    string-literal                       go to state 450
    template-id                          go to state 121
    template-name                        go to state 216
    throw-expression                     go to state 535
    try-block                            go to state 697
    type-constraint                      go to state 124
    type-name                            go to state 125
    type-specifier                       go to state 126
    typedef-name                         go to state 127
    typename-specifier                   go to state 453
    unary-expression                     go to state 454
    unary-operator                       go to state 455
    unqualified-id                       go to state 130
    user-defined-character-literal       go to state 456
    user-defined-floating-point-literal  go to state 457
    user-defined-integer-literal         go to state 458
    user-defined-literal                 go to state 459
    user-defined-string-literal          go to state 460
    using-declaration                    go to state 131
    using-directive                      go to state 132
    using-enum-declaration               go to state 133
    yield-expression                     go to state 537


State 2004

  387 for-range-declaration: attribute-specifier-seq decl-specifier-seq ref-qualifier '[' identifier-list ']' •

    $default  reduce using rule 387 (for-range-declaration)


State 2005

  959 selection-statement: "if" "constexpr" '(' init-statement condition ')' statement "else" statement •

    $default  reduce using rule 959 (selection-statement)
