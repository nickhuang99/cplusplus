bison (GNU Bison) 3.8.2.9-6571
Reduced Grammar

ntokens = 197, nnterms = 302, nsyms = 499, nrules = 1196, nritems = 4001

Tokens
------

Value  Sprec  Sassoc  Tag
    0      0       0  $end
    1      0       0  error
    2      0       0  $undefined
    3      0       0  IDENTIFIER
    4      0       0  ANY_TOKEN_OTHER_THAN_PARENTHESIS_BRACKET_BRACE
    5      0       0  EXCEPT_THE_APOSTROPHE_REVERSE_SOLIDUS_OR_NEW_LINE_CHARACTER
    6      0       0  EXCEPT_THE_QUOTATION_MARK_REVERSE_SOLIDUS_OR_NEW_LINE_CHARACTER
    7      0       0  NOT_AN_OCTAL_DIGIT_A_SIMPLE_ESCAPE_SEQUENCE_CHAR_OR_THE_CHARACTERS_U_U_OR_X
    8      0       0  EXCEPT_SPACE_PARENTHESIS_REVERSE_SOLIDUS_TABULATION_LINE_TABULATION_FORM_FEED_AND_NEW_LINE
    9      0       0  EXCEPT_NEW_LINE_AND_GREATER_THAN_SIGN
   10      0       0  LL
   11      0       0  EXCEPT_NEW_LINE_AND_QUOTATION_MARK
   12      0       0  EXCEPT_RIGHT_PARENTHESIS_FOLLOWED_BY_THE_INITIAL_D_CHAR_SEQUENCE_FOLLOWED_BY_QUOTATION_MARK
   13      0       0  "private"
   14      0       0  "protected"
   15      0       0  "public"
   16      0       0  '+'
   17      0       0  '-'
   18      0       0  "using"
   19      0       0  '='
   20      0       0  ';'
   21      0       0  "alignas"
   22      0       0  '('
   23      0       0  ')'
   24      0       0  "..."
   25      0       0  '&'
   26      0       0  "asm"
   27      0       0  "*="
   28      0       0  "/="
   29      0       0  "%="
   30      0       0  "+="
   31      0       0  "-="
   32      0       0  ">>="
   33      0       0  "<<="
   34      0       0  "&="
   35      0       0  "^="
   36      0       0  "|="
   37      0       0  ','
   38      0       0  "::"
   39      0       0  '['
   40      0       0  ']'
   41      0       0  ':'
   42      0       0  "co_await"
   43      0       0  '{'
   44      0       0  '}'
   45      0       0  "virtual"
   46      0       0  '0'
   47      0       0  '1'
   48      0       0  'p'
   49      0       0  'P'
   50      0       0  "0b"
   51      0       0  "0B"
   52      0       0  '\''
   53      0       0  "false"
   54      0       0  "true"
   55      0       0  "class"
   56      0       0  "struct"
   57      0       0  "union"
   58      0       0  "template"
   59      0       0  "final"
   60      0       0  "<=>"
   61      0       0  "noexcept"
   62      0       0  "concept"
   63      0       0  '\\'
   64      0       0  '?'
   65      0       0  "&&"
   66      0       0  "||"
   67      0       0  "operator"
   68      0       0  "co_return"
   69      0       0  "const"
   70      0       0  "volatile"
   71      0       0  "friend"
   72      0       0  "typedef"
   73      0       0  "constexpr"
   74      0       0  "consteval"
   75      0       0  "constinit"
   76      0       0  "inline"
   77      0       0  "decltype"
   78      0       0  "->"
   79      0       0  "delete"
   80      0       0  '.'
   81      0       0  '2'
   82      0       0  '3'
   83      0       0  '4'
   84      0       0  '5'
   85      0       0  '6'
   86      0       0  '7'
   87      0       0  '8'
   88      0       0  '9'
   89      0       0  "enum"
   90      0       0  "u8"
   91      0       0  'u'
   92      0       0  'U'
   93      0       0  'L'
   94      0       0  "=="
   95      0       0  "!="
   96      0       0  '^'
   97      0       0  "extern"
   98      0       0  '<'
   99      0       0  '>'
  100      0       0  "explicit"
  101      0       0  'e'
  102      0       0  'E'
  103      0       0  "export"
  104      0       0  "export-keyword"
  105      0       0  'f'
  106      0       0  'l'
  107      0       0  'F'
  108      0       0  '*'
  109      0       0  '/'
  110      0       0  '%'
  111      0       0  '|'
  112      0       0  "<<"
  113      0       0  ">>"
  114      0       0  "<="
  115      0       0  ">="
  116      0       0  ".*"
  117      0       0  "->*"
  118      0       0  "default"
  119      0       0  "try"
  120      0       0  "module-keyword"
  121      0       0  "catch"
  122      0       0  "h-char-sequence"
  123      0       0  '"'
  124      0       0  "h-char-sequence:"
  125      0       0  'a'
  126      0       0  'b'
  127      0       0  'c'
  128      0       0  'd'
  129      0       0  'A'
  130      0       0  'B'
  131      0       0  'C'
  132      0       0  'D'
  133      0       0  "\\x"
  134      0       0  "0x"
  135      0       0  "0X"
  136      0       0  "while"
  137      0       0  "do"
  138      0       0  "for"
  139      0       0  "break"
  140      0       0  "continue"
  141      0       0  "return"
  142      0       0  "goto"
  143      0       0  "case"
  144      0       0  "ll"
  145      0       0  "import-keyword"
  146      0       0  "namespace"
  147      0       0  "requires"
  148      0       0  "new"
  149      0       0  '~'
  150      0       0  '!'
  151      0       0  "++"
  152      0       0  "--"
  153      0       0  "this"
  154      0       0  "auto"
  155      0       0  "nullptr"
  156      0       0  "dynamic_cast"
  157      0       0  "static_cast"
  158      0       0  "reinterpret_cast"
  159      0       0  "const_cast"
  160      0       0  "typeid"
  161      0       0  "if"
  162      0       0  "else"
  163      0       0  "switch"
  164      0       0  'n'
  165      0       0  'r'
  166      0       0  't'
  167      0       0  'v'
  168      0       0  "char"
  169      0       0  "char8_t"
  170      0       0  "char16_t"
  171      0       0  "char32_t"
  172      0       0  "wchar_t"
  173      0       0  "bool"
  174      0       0  "short"
  175      0       0  "int"
  176      0       0  "long"
  177      0       0  "signed"
  178      0       0  "unsigned"
  179      0       0  "float"
  180      0       0  "double"
  181      0       0  "void"
  182      0       0  'z'
  183      0       0  'Z'
  184      0       0  "static_assert"
  185      0       0  "static"
  186      0       0  "thread_local"
  187      0       0  "mutable"
  188      0       0  'R'
  189      0       0  "throw"
  190      0       0  "typename"
  191      0       0  "sizeof"
  192      0       0  "alignof"
  193      0       0  "\\u"
  194      0       0  "\\U"
  195      0       0  "override"
  196      0       0  "co_yield"


Nonterminals
------------

Value  Tag
  197  $accept
  198  abstract-declarator
  199  abstract-pack-declarator
  200  access-specifier
  201  additive-expression
  202  alias-declaration
  203  alignment-specifier
  204  and-expression
  205  asm-declaration
  206  assignment-expression
  207  assignment-operator
  208  attribute
  209  attribute-argument-clause
  210  attribute-declaration
  211  attribute-list
  212  attribute-namespace
  213  attribute-scoped-token
  214  attribute-specifier
  215  attribute-specifier-seq
  216  attribute-token
  217  attribute-using-prefix
  218  await-expression
  219  balanced-token
  220  balanced-token-seq
  221  base-clause
  222  base-specifier
  223  base-specifier-list
  224  basic-c-char
  225  basic-s-char
  226  binary-digit
  227  binary-exponent-part
  228  binary-literal
  229  block-declaration
  230  boolean-literal
  231  brace-or-equal-initializer
  232  braced-init-list
  233  c-char
  234  c-char-sequence
  235  capture
  236  capture-default
  237  capture-list
  238  cast-expression
  239  character-literal
  240  class-head
  241  class-head-name
  242  class-key
  243  class-name
  244  class-or-decltype
  245  class-specifier
  246  class-virt-specifier
  247  compare-expression
  248  compound-requirement
  249  compound-statement
  250  concept-definition
  251  concept-name
  252  condition
  253  conditional-escape-sequence
  254  conditional-escape-sequence-char
  255  conditional-expression
  256  constant-expression
  257  constraint-expression
  258  constraint-logical-and-expression
  259  constraint-logical-or-expression
  260  conversion-declarator
  261  conversion-function-id
  262  conversion-type-id
  263  coroutine-return-statement
  264  ctor-initializer
  265  cv-qualifier
  266  cv-qualifier-seq
  267  d-char
  268  d-char-sequence
  269  decimal-floating-point-literal
  270  decimal-literal
  271  decl-specifier
  272  decl-specifier-seq
  273  declaration
  274  declaration-seq
  275  declaration-statement
  276  declarator
  277  declarator-id
  278  decltype-specifier
  279  deduction-guide
  280  defining-type-id
  281  defining-type-specifier
  282  defining-type-specifier-seq
  283  delete-expression
  284  designated-initializer-clause
  285  designated-initializer-list
  286  designator
  287  digit
  288  digit-sequence
  289  elaborated-enum-specifier
  290  elaborated-type-specifier
  291  empty-declaration
  292  enclosing-namespace-specifier
  293  encoding-prefix
  294  enum-base
  295  enum-head
  296  enum-head-name
  297  enum-key
  298  enum-name
  299  enum-specifier
  300  enumerator
  301  enumerator-definition
  302  enumerator-list
  303  equality-expression
  304  escape-sequence
  305  exception-declaration
  306  exclusive-or-expression
  307  explicit-instantiation
  308  explicit-specialization
  309  explicit-specifier
  310  exponent-part
  311  export-declaration
  312  expr-or-braced-init-list
  313  expression
  314  expression-list
  315  expression-statement
  316  floating-point-literal
  317  floating-point-suffix
  318  fold-expression
  319  fold-operator
  320  for-range-declaration
  321  for-range-initializer
  322  fractional-constant
  323  function-body
  324  function-definition
  325  function-specifier
  326  function-try-block
  327  global-module-fragment
  328  h-char
  329  handler
  330  handler-seq
  331  header-name
  332  hex-quad
  333  hexadecimal-digit
  334  hexadecimal-digit-sequence
  335  hexadecimal-escape-sequence
  336  hexadecimal-floating-point-literal
  337  hexadecimal-fractional-constant
  338  hexadecimal-literal
  339  hexadecimal-prefix
  340  id-expression
  341  identifier-list
  342  inclusive-or-expression
  343  init-capture
  344  init-declarator
  345  init-declarator-list
  346  init-statement
  347  initializer
  348  initializer-clause
  349  initializer-list
  350  integer-literal
  351  integer-suffix
  352  iteration-statement
  353  jump-statement
  354  labeled-statement
  355  lambda-capture
  356  lambda-declarator
  357  lambda-expression
  358  lambda-introducer
  359  lambda-specifiers
  360  linkage-specification
  361  literal
  362  literal-operator-id
  363  logical-and-expression
  364  logical-or-expression
  365  long-long-suffix
  366  long-suffix
  367  mem-initializer
  368  mem-initializer-id
  369  mem-initializer-list
  370  member-declaration
  371  member-declarator
  372  member-declarator-list
  373  member-specification
  374  module-declaration
  375  module-import-declaration
  376  module-name
  377  module-name-qualifier
  378  module-partition
  379  multiplicative-expression
  380  named-namespace-definition
  381  namespace-alias
  382  namespace-alias-definition
  383  namespace-body
  384  namespace-definition
  385  namespace-name
  386  nested-name-specifier
  387  nested-namespace-definition
  388  nested-requirement
  389  new-declarator
  390  new-expression
  391  new-initializer
  392  new-placement
  393  new-type-id
  394  nodeclspec-function-declaration
  395  noexcept-expression
  396  noexcept-specifier
  397  nonzero-digit
  398  noptr-abstract-declarator
  399  noptr-abstract-pack-declarator
  400  noptr-declarator
  401  noptr-new-declarator
  402  numeric-escape-sequence
  403  octal-digit
  404  octal-escape-sequence
  405  octal-literal
  406  opaque-enum-declaration
  407  operator-function-id
  408  overloadable-operator
  409  parameter-declaration
  410  parameter-declaration-clause
  411  parameter-declaration-list
  412  parameters-and-qualifiers
  413  placeholder-type-specifier
  414  pm-expression
  415  pointer-literal
  416  postfix-expression
  417  primary-expression
  418  private-module-fragment
  419  ptr-abstract-declarator
  420  ptr-declarator
  421  ptr-operator
  422  pure-specifier
  423  q-char
  424  q-char-sequence
  425  qualified-id
  426  qualified-namespace-specifier
  427  r-char
  428  r-char-sequence
  429  raw-string
  430  ref-qualifier
  431  relational-expression
  432  requirement
  433  requirement-body
  434  requirement-parameter-list
  435  requirement-seq
  436  requires-clause
  437  requires-expression
  438  return-type-requirement
  439  s-char
  440  s-char-sequence
  441  selection-statement
  442  shift-expression
  443  sign
  444  simple-capture
  445  simple-declaration
  446  simple-escape-sequence
  447  simple-escape-sequence-char
  448  simple-requirement
  449  simple-template-id
  450  simple-type-specifier
  451  size-suffix
  452  statement
  453  statement-seq
  454  static_assert-declaration
  455  storage-class-specifier
  456  string-literal
  457  template-argument
  458  template-argument-list
  459  template-declaration
  460  template-head
  461  template-id
  462  template-name
  463  template-parameter
  464  template-parameter-list
  465  throw-expression
  466  trailing-return-type
  467  translation-unit
  468  try-block
  469  type-constraint
  470  type-id
  471  type-name
  472  type-parameter
  473  type-parameter-key
  474  type-requirement
  475  type-specifier
  476  type-specifier-seq
  477  typedef-name
  478  typename-specifier
  479  ud-suffix
  480  unary-expression
  481  unary-operator
  482  universal-character-name
  483  unnamed-namespace-definition
  484  unqualified-id
  485  unsigned-suffix
  486  user-defined-character-literal
  487  user-defined-floating-point-literal
  488  user-defined-integer-literal
  489  user-defined-literal
  490  user-defined-string-literal
  491  using-declaration
  492  using-declarator
  493  using-declarator-list
  494  using-directive
  495  using-enum-declaration
  496  virt-specifier
  497  virt-specifier-seq
  498  yield-expression


Rules
-----

Num (Prec, Assoc, Useful, UselessChain) Lhs -> (Ritem Range) Rhs
  0 ( 0,  0,  t,  f)   197 -> ( 0- 1) 467   0
  1 ( 0,  0,  t,  t)   198 -> ( 3- 3) 419
  2 ( 0,  0,  t,  f)   198 -> ( 5- 7) 398 412 466
  3 ( 0,  0,  t,  f)   198 -> ( 9-10) 412 466
  4 ( 0,  0,  t,  t)   198 -> (12-12) 199
  5 ( 0,  0,  t,  t)   199 -> (14-14) 399
  6 ( 0,  0,  t,  f)   199 -> (16-17) 421 199
  7 ( 0,  0,  t,  t)   200 -> (19-19)  13
  8 ( 0,  0,  t,  t)   200 -> (21-21)  14
  9 ( 0,  0,  t,  t)   200 -> (23-23)  15
 10 ( 0,  0,  t,  t)   201 -> (25-25) 379
 11 ( 0,  0,  t,  f)   201 -> (27-29) 201  16 379
 12 ( 0,  0,  t,  f)   201 -> (31-33) 201  17 379
 13 ( 0,  0,  t,  f)   202 -> (35-39)  18   3  19 280  20
 14 ( 0,  0,  t,  f)   202 -> (41-46)  18   3 215  19 280  20
 15 ( 0,  0,  t,  f)   203 -> (48-51)  21  22 470  23
 16 ( 0,  0,  t,  f)   203 -> (53-57)  21  22 470  24  23
 17 ( 0,  0,  t,  f)   203 -> (59-62)  21  22 256  23
 18 ( 0,  0,  t,  f)   203 -> (64-68)  21  22 256  24  23
 19 ( 0,  0,  t,  t)   204 -> (70-70) 303
 20 ( 0,  0,  t,  f)   204 -> (72-74) 204  25 303
 21 ( 0,  0,  t,  f)   205 -> (76-81) 215  26  22 456  23  20
 22 ( 0,  0,  t,  f)   205 -> (83-87)  26  22 456  23  20
 23 ( 0,  0,  t,  t)   206 -> (89-89) 255
 24 ( 0,  0,  t,  t)   206 -> (91-91) 498
 25 ( 0,  0,  t,  t)   206 -> (93-93) 465
 26 ( 0,  0,  t,  f)   206 -> (95-97) 364 207 348
 27 ( 0,  0,  t,  t)   207 -> (99-99)  19
 28 ( 0,  0,  t,  t)   207 -> (101-101)  27
 29 ( 0,  0,  t,  t)   207 -> (103-103)  28
 30 ( 0,  0,  t,  t)   207 -> (105-105)  29
 31 ( 0,  0,  t,  t)   207 -> (107-107)  30
 32 ( 0,  0,  t,  t)   207 -> (109-109)  31
 33 ( 0,  0,  t,  t)   207 -> (111-111)  32
 34 ( 0,  0,  t,  t)   207 -> (113-113)  33
 35 ( 0,  0,  t,  t)   207 -> (115-115)  34
 36 ( 0,  0,  t,  t)   207 -> (117-117)  35
 37 ( 0,  0,  t,  t)   207 -> (119-119)  36
 38 ( 0,  0,  t,  t)   208 -> (121-121) 216
 39 ( 0,  0,  t,  f)   208 -> (123-124) 216 209
 40 ( 0,  0,  t,  f)   209 -> (126-127)  22  23
 41 ( 0,  0,  t,  f)   209 -> (129-131)  22 220  23
 42 ( 0,  0,  t,  f)   210 -> (133-134) 215  20
 43 ( 0,  0,  t,  t)   211 -> (136-136) 208
 44 ( 0,  0,  t,  f)   211 -> (138-139) 211  37
 45 ( 0,  0,  t,  f)   211 -> (141-143) 211  37 208
 46 ( 0,  0,  t,  f)   211 -> (145-146) 208  24
 47 ( 0,  0,  t,  f)   211 -> (148-151) 211  37 208  24
 48 ( 0,  0,  t,  t)   212 -> (153-153)   3
 49 ( 0,  0,  t,  f)   213 -> (155-157) 212  38   3
 50 ( 0,  0,  t,  f)   214 -> (159-163)  39  39 211  40  40
 51 ( 0,  0,  t,  f)   214 -> (165-170)  39  39 217 211  40  40
 52 ( 0,  0,  t,  t)   214 -> (172-172) 203
 53 ( 0,  0,  t,  f)   215 -> (174-175) 215 214
 54 ( 0,  0,  t,  t)   215 -> (177-177) 214
 55 ( 0,  0,  t,  t)   216 -> (179-179)   3
 56 ( 0,  0,  t,  t)   216 -> (181-181) 213
 57 ( 0,  0,  t,  f)   217 -> (183-185)  18 212  41
 58 ( 0,  0,  t,  f)   218 -> (187-188)  42 238
 59 ( 0,  0,  t,  f)   219 -> (190-191)  22  23
 60 ( 0,  0,  t,  f)   219 -> (193-195)  22 220  23
 61 ( 0,  0,  t,  f)   219 -> (197-198)  39  40
 62 ( 0,  0,  t,  f)   219 -> (200-202)  39 220  40
 63 ( 0,  0,  t,  f)   219 -> (204-205)  43  44
 64 ( 0,  0,  t,  f)   219 -> (207-209)  43 220  44
 65 ( 0,  0,  t,  t)   219 -> (211-211)   4
 66 ( 0,  0,  t,  t)   220 -> (213-213) 219
 67 ( 0,  0,  t,  f)   220 -> (215-216) 220 219
 68 ( 0,  0,  t,  f)   221 -> (218-219)  41 223
 69 ( 0,  0,  t,  f)   222 -> (221-222) 215 244
 70 ( 0,  0,  t,  t)   222 -> (224-224) 244
 71 ( 0,  0,  t,  f)   222 -> (226-228) 215  45 244
 72 ( 0,  0,  t,  f)   222 -> (230-231)  45 244
 73 ( 0,  0,  t,  f)   222 -> (233-236) 215  45 200 244
 74 ( 0,  0,  t,  f)   222 -> (238-240)  45 200 244
 75 ( 0,  0,  t,  f)   222 -> (242-244) 215 200 244
 76 ( 0,  0,  t,  f)   222 -> (246-247) 200 244
 77 ( 0,  0,  t,  f)   222 -> (249-252) 215 200  45 244
 78 ( 0,  0,  t,  f)   222 -> (254-256) 200  45 244
 79 ( 0,  0,  t,  t)   223 -> (258-258) 222
 80 ( 0,  0,  t,  f)   223 -> (260-261) 222  24
 81 ( 0,  0,  t,  f)   223 -> (263-265) 223  37 222
 82 ( 0,  0,  t,  f)   223 -> (267-270) 223  37 222  24
 83 ( 0,  0,  t,  t)   224 -> (272-272)   5
 84 ( 0,  0,  t,  t)   225 -> (274-274)   6
 85 ( 0,  0,  t,  t)   226 -> (276-276)  46
 86 ( 0,  0,  t,  t)   226 -> (278-278)  47
 87 ( 0,  0,  t,  f)   227 -> (280-281)  48 288
 88 ( 0,  0,  t,  f)   227 -> (283-285)  48 443 288
 89 ( 0,  0,  t,  f)   227 -> (287-288)  49 288
 90 ( 0,  0,  t,  f)   227 -> (290-292)  49 443 288
 91 ( 0,  0,  t,  f)   228 -> (294-295)  50 226
 92 ( 0,  0,  t,  f)   228 -> (297-298)  51 226
 93 ( 0,  0,  t,  f)   228 -> (300-301) 228 226
 94 ( 0,  0,  t,  f)   228 -> (303-305) 228  52 226
 95 ( 0,  0,  t,  t)   229 -> (307-307) 445
 96 ( 0,  0,  t,  t)   229 -> (309-309) 205
 97 ( 0,  0,  t,  t)   229 -> (311-311) 382
 98 ( 0,  0,  t,  t)   229 -> (313-313) 491
 99 ( 0,  0,  t,  t)   229 -> (315-315) 495
100 ( 0,  0,  t,  t)   229 -> (317-317) 494
101 ( 0,  0,  t,  t)   229 -> (319-319) 454
102 ( 0,  0,  t,  t)   229 -> (321-321) 202
103 ( 0,  0,  t,  t)   229 -> (323-323) 406
104 ( 0,  0,  t,  t)   230 -> (325-325)  53
105 ( 0,  0,  t,  t)   230 -> (327-327)  54
106 ( 0,  0,  t,  f)   231 -> (329-330)  19 348
107 ( 0,  0,  t,  t)   231 -> (332-332) 232
108 ( 0,  0,  t,  f)   232 -> (334-336)  43 349  44
109 ( 0,  0,  t,  f)   232 -> (338-341)  43 349  37  44
110 ( 0,  0,  t,  f)   232 -> (343-345)  43 285  44
111 ( 0,  0,  t,  f)   232 -> (347-350)  43 285  37  44
112 ( 0,  0,  t,  f)   232 -> (352-353)  43  44
113 ( 0,  0,  t,  t)   233 -> (355-355) 224
114 ( 0,  0,  t,  t)   233 -> (357-357) 304
115 ( 0,  0,  t,  t)   233 -> (359-359) 482
116 ( 0,  0,  t,  t)   234 -> (361-361) 233
117 ( 0,  0,  t,  f)   234 -> (363-364) 234 233
118 ( 0,  0,  t,  t)   235 -> (366-366) 444
119 ( 0,  0,  t,  t)   235 -> (368-368) 343
120 ( 0,  0,  t,  t)   236 -> (370-370)  25
121 ( 0,  0,  t,  t)   236 -> (372-372)  19
122 ( 0,  0,  t,  t)   237 -> (374-374) 235
123 ( 0,  0,  t,  f)   237 -> (376-378) 237  37 235
124 ( 0,  0,  t,  t)   238 -> (380-380) 480
125 ( 0,  0,  t,  f)   238 -> (382-385)  22 470  23 238
126 ( 0,  0,  t,  f)   239 -> (387-390) 293  52 234  52
127 ( 0,  0,  t,  f)   239 -> (392-394)  52 234  52
128 ( 0,  0,  t,  f)   240 -> (396-397) 242 241
129 ( 0,  0,  t,  f)   240 -> (399-401) 242 215 241
130 ( 0,  0,  t,  f)   240 -> (403-405) 242 241 246
131 ( 0,  0,  t,  f)   240 -> (407-410) 242 215 241 246
132 ( 0,  0,  t,  f)   240 -> (412-414) 242 241 221
133 ( 0,  0,  t,  f)   240 -> (416-419) 242 215 241 221
134 ( 0,  0,  t,  f)   240 -> (421-424) 242 241 246 221
135 ( 0,  0,  t,  f)   240 -> (426-430) 242 215 241 246 221
136 ( 0,  0,  t,  t)   240 -> (432-432) 242
137 ( 0,  0,  t,  f)   240 -> (434-435) 242 215
138 ( 0,  0,  t,  f)   240 -> (437-438) 242 221
139 ( 0,  0,  t,  f)   240 -> (440-442) 242 215 221
140 ( 0,  0,  t,  f)   241 -> (444-445) 386 243
141 ( 0,  0,  t,  t)   241 -> (447-447) 243
142 ( 0,  0,  t,  t)   242 -> (449-449)  55
143 ( 0,  0,  t,  t)   242 -> (451-451)  56
144 ( 0,  0,  t,  t)   242 -> (453-453)  57
145 ( 0,  0,  t,  t)   243 -> (455-455)   3
146 ( 0,  0,  t,  t)   243 -> (457-457) 449
147 ( 0,  0,  t,  f)   244 -> (459-460) 386 471
148 ( 0,  0,  t,  t)   244 -> (462-462) 471
149 ( 0,  0,  t,  f)   244 -> (464-466) 386  58 449
150 ( 0,  0,  t,  t)   244 -> (468-468) 278
151 ( 0,  0,  t,  f)   245 -> (470-472) 240  43  44
152 ( 0,  0,  t,  f)   245 -> (474-477) 240  43 373  44
153 ( 0,  0,  t,  t)   246 -> (479-479)  59
154 ( 0,  0,  t,  t)   247 -> (481-481) 442
155 ( 0,  0,  t,  f)   247 -> (483-485) 247  60 442
156 ( 0,  0,  t,  f)   248 -> (487-490)  43 313  44  20
157 ( 0,  0,  t,  f)   248 -> (492-496)  43 313  44  61  20
158 ( 0,  0,  t,  f)   248 -> (498-502)  43 313  44 438  20
159 ( 0,  0,  t,  f)   248 -> (504-509)  43 313  44  61 438  20
160 ( 0,  0,  t,  f)   249 -> (511-512)  43  44
161 ( 0,  0,  t,  f)   249 -> (514-516)  43 453  44
162 ( 0,  0,  t,  f)   250 -> (518-522)  62 251  19 257  20
163 ( 0,  0,  t,  t)   251 -> (524-524)   3
164 ( 0,  0,  t,  t)   252 -> (526-526) 313
165 ( 0,  0,  t,  f)   252 -> (528-531) 215 272 276 231
166 ( 0,  0,  t,  f)   252 -> (533-535) 272 276 231
167 ( 0,  0,  t,  f)   253 -> (537-538)  63 254
168 ( 0,  0,  t,  t)   254 -> (540-540)   7
169 ( 0,  0,  t,  t)   255 -> (542-542) 364
170 ( 0,  0,  t,  f)   255 -> (544-548) 364  64 313  41 206
171 ( 0,  0,  t,  t)   256 -> (550-550) 255
172 ( 0,  0,  t,  t)   257 -> (552-552) 364
173 ( 0,  0,  t,  t)   258 -> (554-554) 417
174 ( 0,  0,  t,  f)   258 -> (556-558) 258  65 417
175 ( 0,  0,  t,  t)   259 -> (560-560) 258
176 ( 0,  0,  t,  f)   259 -> (562-564) 259  66 258
177 ( 0,  0,  t,  t)   260 -> (566-566) 421
178 ( 0,  0,  t,  f)   260 -> (568-569) 421 260
179 ( 0,  0,  t,  f)   261 -> (571-572)  67 262
180 ( 0,  0,  t,  t)   262 -> (574-574) 476
181 ( 0,  0,  t,  f)   262 -> (576-577) 476 260
182 ( 0,  0,  t,  f)   263 -> (579-580)  68  20
183 ( 0,  0,  t,  f)   263 -> (582-584)  68 312  20
184 ( 0,  0,  t,  f)   264 -> (586-587)  41 369
185 ( 0,  0,  t,  t)   265 -> (589-589)  69
186 ( 0,  0,  t,  t)   265 -> (591-591)  70
187 ( 0,  0,  t,  t)   266 -> (593-593) 265
188 ( 0,  0,  t,  f)   266 -> (595-596) 265 266
189 ( 0,  0,  t,  t)   267 -> (598-598)   8
190 ( 0,  0,  t,  t)   268 -> (600-600) 267
191 ( 0,  0,  t,  f)   268 -> (602-603) 268 267
192 ( 0,  0,  t,  t)   269 -> (605-605) 322
193 ( 0,  0,  t,  f)   269 -> (607-608) 322 310
194 ( 0,  0,  t,  f)   269 -> (610-611) 322 317
195 ( 0,  0,  t,  f)   269 -> (613-615) 322 310 317
196 ( 0,  0,  t,  f)   269 -> (617-618) 288 310
197 ( 0,  0,  t,  f)   269 -> (620-622) 288 310 317
198 ( 0,  0,  t,  t)   270 -> (624-624) 397
199 ( 0,  0,  t,  f)   270 -> (626-627) 270 287
200 ( 0,  0,  t,  f)   270 -> (629-631) 270  52 287
201 ( 0,  0,  t,  t)   271 -> (633-633) 455
202 ( 0,  0,  t,  t)   271 -> (635-635) 281
203 ( 0,  0,  t,  t)   271 -> (637-637) 325
204 ( 0,  0,  t,  t)   271 -> (639-639)  71
205 ( 0,  0,  t,  t)   271 -> (641-641)  72
206 ( 0,  0,  t,  t)   271 -> (643-643)  73
207 ( 0,  0,  t,  t)   271 -> (645-645)  74
208 ( 0,  0,  t,  t)   271 -> (647-647)  75
209 ( 0,  0,  t,  t)   271 -> (649-649)  76
210 ( 0,  0,  t,  t)   272 -> (651-651) 271
211 ( 0,  0,  t,  f)   272 -> (653-654) 271 215
212 ( 0,  0,  t,  f)   272 -> (656-657) 271 272
213 ( 0,  0,  t,  t)   273 -> (659-659) 229
214 ( 0,  0,  t,  t)   273 -> (661-661) 394
215 ( 0,  0,  t,  t)   273 -> (663-663) 324
216 ( 0,  0,  t,  t)   273 -> (665-665) 459
217 ( 0,  0,  t,  t)   273 -> (667-667) 279
218 ( 0,  0,  t,  t)   273 -> (669-669) 307
219 ( 0,  0,  t,  t)   273 -> (671-671) 308
220 ( 0,  0,  t,  t)   273 -> (673-673) 311
221 ( 0,  0,  t,  t)   273 -> (675-675) 360
222 ( 0,  0,  t,  t)   273 -> (677-677) 384
223 ( 0,  0,  t,  t)   273 -> (679-679) 291
224 ( 0,  0,  t,  t)   273 -> (681-681) 210
225 ( 0,  0,  t,  t)   273 -> (683-683) 375
226 ( 0,  0,  t,  t)   274 -> (685-685) 273
227 ( 0,  0,  t,  f)   274 -> (687-688) 274 273
228 ( 0,  0,  t,  t)   275 -> (690-690) 229
229 ( 0,  0,  t,  t)   276 -> (692-692) 420
230 ( 0,  0,  t,  f)   276 -> (694-696) 400 412 466
231 ( 0,  0,  t,  f)   277 -> (698-699)  24 340
232 ( 0,  0,  t,  t)   277 -> (701-701) 340
233 ( 0,  0,  t,  f)   278 -> (703-706)  77  22 313  23
234 ( 0,  0,  t,  f)   279 -> (708-715) 309 462  22 410  23  78 449  20
235 ( 0,  0,  t,  f)   279 -> (717-723) 462  22 410  23  78 449  20
236 ( 0,  0,  t,  t)   280 -> (725-725) 282
237 ( 0,  0,  t,  f)   280 -> (727-728) 282 198
238 ( 0,  0,  t,  t)   281 -> (730-730) 475
239 ( 0,  0,  t,  t)   281 -> (732-732) 245
240 ( 0,  0,  t,  t)   281 -> (734-734) 299
241 ( 0,  0,  t,  t)   282 -> (736-736) 281
242 ( 0,  0,  t,  f)   282 -> (738-739) 281 215
243 ( 0,  0,  t,  f)   282 -> (741-742) 281 282
244 ( 0,  0,  t,  f)   283 -> (744-746)  38  79 238
245 ( 0,  0,  t,  f)   283 -> (748-749)  79 238
246 ( 0,  0,  t,  f)   283 -> (751-755)  38  79  39  40 238
247 ( 0,  0,  t,  f)   283 -> (757-760)  79  39  40 238
248 ( 0,  0,  t,  f)   284 -> (762-763) 286 231
249 ( 0,  0,  t,  t)   285 -> (765-765) 284
250 ( 0,  0,  t,  f)   285 -> (767-769) 285  37 284
251 ( 0,  0,  t,  f)   286 -> (771-772)  80   3
252 ( 0,  0,  t,  t)   287 -> (774-774)  46
253 ( 0,  0,  t,  t)   287 -> (776-776)  47
254 ( 0,  0,  t,  t)   287 -> (778-778)  81
255 ( 0,  0,  t,  t)   287 -> (780-780)  82
256 ( 0,  0,  t,  t)   287 -> (782-782)  83
257 ( 0,  0,  t,  t)   287 -> (784-784)  84
258 ( 0,  0,  t,  t)   287 -> (786-786)  85
259 ( 0,  0,  t,  t)   287 -> (788-788)  86
260 ( 0,  0,  t,  t)   287 -> (790-790)  87
261 ( 0,  0,  t,  t)   287 -> (792-792)  88
262 ( 0,  0,  t,  t)   288 -> (794-794) 287
263 ( 0,  0,  t,  f)   288 -> (796-797) 288 287
264 ( 0,  0,  t,  f)   288 -> (799-801) 288  52 287
265 ( 0,  0,  t,  f)   289 -> (803-804)  89   3
266 ( 0,  0,  t,  f)   289 -> (806-808)  89 386   3
267 ( 0,  0,  t,  f)   290 -> (810-811) 242   3
268 ( 0,  0,  t,  f)   290 -> (813-815) 242 215   3
269 ( 0,  0,  t,  f)   290 -> (817-819) 242 386   3
270 ( 0,  0,  t,  f)   290 -> (821-824) 242 215 386   3
271 ( 0,  0,  t,  f)   290 -> (826-827) 242 449
272 ( 0,  0,  t,  f)   290 -> (829-831) 242 386 449
273 ( 0,  0,  t,  f)   290 -> (833-836) 242 386  58 449
274 ( 0,  0,  t,  t)   290 -> (838-838) 289
275 ( 0,  0,  t,  t)   291 -> (840-840)  20
276 ( 0,  0,  t,  t)   292 -> (842-842)   3
277 ( 0,  0,  t,  f)   292 -> (844-846) 292  38   3
278 ( 0,  0,  t,  f)   292 -> (848-851) 292  38  76   3
279 ( 0,  0,  t,  t)   293 -> (853-853)  90
280 ( 0,  0,  t,  t)   293 -> (855-855)  91
281 ( 0,  0,  t,  t)   293 -> (857-857)  92
282 ( 0,  0,  t,  t)   293 -> (859-859)  93
283 ( 0,  0,  t,  f)   294 -> (861-862)  41 476
284 ( 0,  0,  t,  t)   295 -> (864-864) 297
285 ( 0,  0,  t,  f)   295 -> (866-867) 297 215
286 ( 0,  0,  t,  f)   295 -> (869-870) 297 296
287 ( 0,  0,  t,  f)   295 -> (872-874) 297 215 296
288 ( 0,  0,  t,  f)   295 -> (876-877) 297 294
289 ( 0,  0,  t,  f)   295 -> (879-881) 297 215 294
290 ( 0,  0,  t,  f)   295 -> (883-885) 297 296 294
291 ( 0,  0,  t,  f)   295 -> (887-890) 297 215 296 294
292 ( 0,  0,  t,  f)   296 -> (892-893) 386   3
293 ( 0,  0,  t,  t)   296 -> (895-895)   3
294 ( 0,  0,  t,  t)   297 -> (897-897)  89
295 ( 0,  0,  t,  f)   297 -> (899-900)  89  55
296 ( 0,  0,  t,  f)   297 -> (902-903)  89  56
297 ( 0,  0,  t,  t)   298 -> (905-905)   3
298 ( 0,  0,  t,  f)   299 -> (907-909) 295  43  44
299 ( 0,  0,  t,  f)   299 -> (911-914) 295  43 302  44
300 ( 0,  0,  t,  f)   299 -> (916-920) 295  43 302  37  44
301 ( 0,  0,  t,  t)   300 -> (922-922)   3
302 ( 0,  0,  t,  f)   300 -> (924-925)   3 215
303 ( 0,  0,  t,  t)   301 -> (927-927) 300
304 ( 0,  0,  t,  f)   301 -> (929-931) 300  19 256
305 ( 0,  0,  t,  t)   302 -> (933-933) 301
306 ( 0,  0,  t,  f)   302 -> (935-937) 302  37 301
307 ( 0,  0,  t,  t)   303 -> (939-939) 431
308 ( 0,  0,  t,  f)   303 -> (941-943) 303  94 431
309 ( 0,  0,  t,  f)   303 -> (945-947) 303  95 431
310 ( 0,  0,  t,  t)   304 -> (949-949) 446
311 ( 0,  0,  t,  t)   304 -> (951-951) 402
312 ( 0,  0,  t,  t)   304 -> (953-953) 253
313 ( 0,  0,  t,  f)   305 -> (955-957) 215 476 276
314 ( 0,  0,  t,  f)   305 -> (959-960) 476 276
315 ( 0,  0,  t,  f)   305 -> (962-963) 215 476
316 ( 0,  0,  t,  t)   305 -> (965-965) 476
317 ( 0,  0,  t,  f)   305 -> (967-969) 215 476 198
318 ( 0,  0,  t,  f)   305 -> (971-972) 476 198
319 ( 0,  0,  t,  t)   305 -> (974-974)  24
320 ( 0,  0,  t,  t)   306 -> (976-976) 204
321 ( 0,  0,  t,  f)   306 -> (978-980) 306  96 204
322 ( 0,  0,  t,  f)   307 -> (982-984)  97  58 273
323 ( 0,  0,  t,  f)   307 -> (986-987)  58 273
324 ( 0,  0,  t,  f)   308 -> (989-992)  58  98  99 273
325 ( 0,  0,  t,  f)   309 -> (994-997) 100  22 256  23
326 ( 0,  0,  t,  t)   309 -> (999-999) 100
327 ( 0,  0,  t,  f)   310 -> (1001-1002) 101 288
328 ( 0,  0,  t,  f)   310 -> (1004-1006) 101 443 288
329 ( 0,  0,  t,  f)   310 -> (1008-1009) 102 288
330 ( 0,  0,  t,  f)   310 -> (1011-1013) 102 443 288
331 ( 0,  0,  t,  f)   311 -> (1015-1016) 103 273
332 ( 0,  0,  t,  f)   311 -> (1018-1020) 103  43  44
333 ( 0,  0,  t,  f)   311 -> (1022-1025) 103  43 274  44
334 ( 0,  0,  t,  f)   311 -> (1027-1028) 104 375
335 ( 0,  0,  t,  t)   312 -> (1030-1030) 313
336 ( 0,  0,  t,  t)   312 -> (1032-1032) 232
337 ( 0,  0,  t,  t)   313 -> (1034-1034) 206
338 ( 0,  0,  t,  f)   313 -> (1036-1038) 313  37 206
339 ( 0,  0,  t,  t)   314 -> (1040-1040) 349
340 ( 0,  0,  t,  f)   315 -> (1042-1043) 313  20
341 ( 0,  0,  t,  t)   315 -> (1045-1045)  20
342 ( 0,  0,  t,  t)   316 -> (1047-1047) 269
343 ( 0,  0,  t,  t)   316 -> (1049-1049) 336
344 ( 0,  0,  t,  t)   317 -> (1051-1051) 105
345 ( 0,  0,  t,  t)   317 -> (1053-1053) 106
346 ( 0,  0,  t,  t)   317 -> (1055-1055) 107
347 ( 0,  0,  t,  t)   317 -> (1057-1057)  93
348 ( 0,  0,  t,  f)   318 -> (1059-1063)  22 238 319  24  23
349 ( 0,  0,  t,  f)   318 -> (1065-1069)  22  24 319 238  23
350 ( 0,  0,  t,  f)   318 -> (1071-1077)  22 238 319  24 319 238  23
351 ( 0,  0,  t,  t)   319 -> (1079-1079)  16
352 ( 0,  0,  t,  t)   319 -> (1081-1081)  17
353 ( 0,  0,  t,  t)   319 -> (1083-1083) 108
354 ( 0,  0,  t,  t)   319 -> (1085-1085) 109
355 ( 0,  0,  t,  t)   319 -> (1087-1087) 110
356 ( 0,  0,  t,  t)   319 -> (1089-1089)  96
357 ( 0,  0,  t,  t)   319 -> (1091-1091)  25
358 ( 0,  0,  t,  t)   319 -> (1093-1093) 111
359 ( 0,  0,  t,  t)   319 -> (1095-1095) 112
360 ( 0,  0,  t,  t)   319 -> (1097-1097) 113
361 ( 0,  0,  t,  t)   319 -> (1099-1099)  30
362 ( 0,  0,  t,  t)   319 -> (1101-1101)  31
363 ( 0,  0,  t,  t)   319 -> (1103-1103)  27
364 ( 0,  0,  t,  t)   319 -> (1105-1105)  28
365 ( 0,  0,  t,  t)   319 -> (1107-1107)  29
366 ( 0,  0,  t,  t)   319 -> (1109-1109)  35
367 ( 0,  0,  t,  t)   319 -> (1111-1111)  34
368 ( 0,  0,  t,  t)   319 -> (1113-1113)  36
369 ( 0,  0,  t,  t)   319 -> (1115-1115)  33
370 ( 0,  0,  t,  t)   319 -> (1117-1117)  32
371 ( 0,  0,  t,  t)   319 -> (1119-1119)  19
372 ( 0,  0,  t,  t)   319 -> (1121-1121)  94
373 ( 0,  0,  t,  t)   319 -> (1123-1123)  95
374 ( 0,  0,  t,  t)   319 -> (1125-1125)  98
375 ( 0,  0,  t,  t)   319 -> (1127-1127)  99
376 ( 0,  0,  t,  t)   319 -> (1129-1129) 114
377 ( 0,  0,  t,  t)   319 -> (1131-1131) 115
378 ( 0,  0,  t,  t)   319 -> (1133-1133)  65
379 ( 0,  0,  t,  t)   319 -> (1135-1135)  66
380 ( 0,  0,  t,  t)   319 -> (1137-1137)  37
381 ( 0,  0,  t,  t)   319 -> (1139-1139) 116
382 ( 0,  0,  t,  t)   319 -> (1141-1141) 117
383 ( 0,  0,  t,  f)   320 -> (1143-1145) 215 272 276
384 ( 0,  0,  t,  f)   320 -> (1147-1148) 272 276
385 ( 0,  0,  t,  f)   320 -> (1150-1154) 215 272  39 341  40
386 ( 0,  0,  t,  f)   320 -> (1156-1159) 272  39 341  40
387 ( 0,  0,  t,  f)   320 -> (1161-1166) 215 272 430  39 341  40
388 ( 0,  0,  t,  f)   320 -> (1168-1172) 272 430  39 341  40
389 ( 0,  0,  t,  t)   321 -> (1174-1174) 312
390 ( 0,  0,  t,  f)   322 -> (1176-1178) 288  80 288
391 ( 0,  0,  t,  f)   322 -> (1180-1181)  80 288
392 ( 0,  0,  t,  f)   322 -> (1183-1184) 288  80
393 ( 0,  0,  t,  f)   323 -> (1186-1187) 264 249
394 ( 0,  0,  t,  t)   323 -> (1189-1189) 249
395 ( 0,  0,  t,  t)   323 -> (1191-1191) 326
396 ( 0,  0,  t,  f)   323 -> (1193-1195)  19 118  20
397 ( 0,  0,  t,  f)   323 -> (1197-1199)  19  79  20
398 ( 0,  0,  t,  f)   324 -> (1201-1203) 215 276 323
399 ( 0,  0,  t,  f)   324 -> (1205-1206) 276 323
400 ( 0,  0,  t,  f)   324 -> (1208-1211) 215 272 276 323
401 ( 0,  0,  t,  f)   324 -> (1213-1215) 272 276 323
402 ( 0,  0,  t,  f)   324 -> (1217-1220) 215 276 497 323
403 ( 0,  0,  t,  f)   324 -> (1222-1224) 276 497 323
404 ( 0,  0,  t,  f)   324 -> (1226-1230) 215 272 276 497 323
405 ( 0,  0,  t,  f)   324 -> (1232-1235) 272 276 497 323
406 ( 0,  0,  t,  f)   324 -> (1237-1240) 215 276 436 323
407 ( 0,  0,  t,  f)   324 -> (1242-1244) 276 436 323
408 ( 0,  0,  t,  f)   324 -> (1246-1250) 215 272 276 436 323
409 ( 0,  0,  t,  f)   324 -> (1252-1255) 272 276 436 323
410 ( 0,  0,  t,  t)   325 -> (1257-1257)  45
411 ( 0,  0,  t,  t)   325 -> (1259-1259) 309
412 ( 0,  0,  t,  f)   326 -> (1261-1263) 119 249 330
413 ( 0,  0,  t,  f)   326 -> (1265-1268) 119 264 249 330
414 ( 0,  0,  t,  f)   327 -> (1270-1271) 120  20
415 ( 0,  0,  t,  f)   327 -> (1273-1275) 120  20 274
416 ( 0,  0,  t,  t)   328 -> (1277-1277)   9
417 ( 0,  0,  t,  f)   329 -> (1279-1283) 121  22 305  23 249
418 ( 0,  0,  t,  t)   330 -> (1285-1285) 329
419 ( 0,  0,  t,  f)   330 -> (1287-1288) 329 330
420 ( 0,  0,  t,  f)   331 -> (1290-1292)  98 122  99
421 ( 0,  0,  t,  f)   331 -> (1294-1296) 123 424 123
422 ( 0,  0,  t,  t)   331 -> (1298-1298) 124
423 ( 0,  0,  t,  t)   331 -> (1300-1300) 328
424 ( 0,  0,  t,  f)   331 -> (1302-1303) 122 328
425 ( 0,  0,  t,  f)   332 -> (1305-1308) 333 333 333 333
426 ( 0,  0,  t,  t)   333 -> (1310-1310)  46
427 ( 0,  0,  t,  t)   333 -> (1312-1312)  47
428 ( 0,  0,  t,  t)   333 -> (1314-1314)  81
429 ( 0,  0,  t,  t)   333 -> (1316-1316)  82
430 ( 0,  0,  t,  t)   333 -> (1318-1318)  83
431 ( 0,  0,  t,  t)   333 -> (1320-1320)  84
432 ( 0,  0,  t,  t)   333 -> (1322-1322)  85
433 ( 0,  0,  t,  t)   333 -> (1324-1324)  86
434 ( 0,  0,  t,  t)   333 -> (1326-1326)  87
435 ( 0,  0,  t,  t)   333 -> (1328-1328)  88
436 ( 0,  0,  t,  t)   333 -> (1330-1330) 125
437 ( 0,  0,  t,  t)   333 -> (1332-1332) 126
438 ( 0,  0,  t,  t)   333 -> (1334-1334) 127
439 ( 0,  0,  t,  t)   333 -> (1336-1336) 128
440 ( 0,  0,  t,  t)   333 -> (1338-1338) 101
441 ( 0,  0,  t,  t)   333 -> (1340-1340) 105
442 ( 0,  0,  t,  t)   333 -> (1342-1342) 129
443 ( 0,  0,  t,  t)   333 -> (1344-1344) 130
444 ( 0,  0,  t,  t)   333 -> (1346-1346) 131
445 ( 0,  0,  t,  t)   333 -> (1348-1348) 132
446 ( 0,  0,  t,  t)   333 -> (1350-1350) 102
447 ( 0,  0,  t,  t)   333 -> (1352-1352) 107
448 ( 0,  0,  t,  t)   334 -> (1354-1354) 333
449 ( 0,  0,  t,  f)   334 -> (1356-1357) 334 333
450 ( 0,  0,  t,  f)   334 -> (1359-1361) 334  52 333
451 ( 0,  0,  t,  f)   335 -> (1363-1364) 133 333
452 ( 0,  0,  t,  f)   335 -> (1366-1367) 335 333
453 ( 0,  0,  t,  f)   336 -> (1369-1371) 339 337 227
454 ( 0,  0,  t,  f)   336 -> (1373-1376) 339 337 227 317
455 ( 0,  0,  t,  f)   336 -> (1378-1380) 339 334 227
456 ( 0,  0,  t,  f)   336 -> (1382-1385) 339 334 227 317
457 ( 0,  0,  t,  f)   337 -> (1387-1389) 334  80 334
458 ( 0,  0,  t,  f)   337 -> (1391-1392)  80 334
459 ( 0,  0,  t,  f)   337 -> (1394-1395) 334  80
460 ( 0,  0,  t,  f)   338 -> (1397-1398) 339 334
461 ( 0,  0,  t,  t)   339 -> (1400-1400) 134
462 ( 0,  0,  t,  t)   339 -> (1402-1402) 135
463 ( 0,  0,  t,  t)   340 -> (1404-1404) 484
464 ( 0,  0,  t,  t)   340 -> (1406-1406) 425
465 ( 0,  0,  t,  t)   341 -> (1408-1408)   3
466 ( 0,  0,  t,  f)   341 -> (1410-1412) 341  37   3
467 ( 0,  0,  t,  t)   342 -> (1414-1414) 306
468 ( 0,  0,  t,  f)   342 -> (1416-1418) 342 111 306
469 ( 0,  0,  t,  f)   343 -> (1420-1422)  24   3 347
470 ( 0,  0,  t,  f)   343 -> (1424-1425)   3 347
471 ( 0,  0,  t,  f)   343 -> (1427-1429)  25   3 347
472 ( 0,  0,  t,  f)   343 -> (1431-1434)  25  24   3 347
473 ( 0,  0,  t,  t)   344 -> (1436-1436) 276
474 ( 0,  0,  t,  f)   344 -> (1438-1439) 276 347
475 ( 0,  0,  t,  f)   344 -> (1441-1442) 276 436
476 ( 0,  0,  t,  t)   345 -> (1444-1444) 344
477 ( 0,  0,  t,  f)   345 -> (1446-1448) 345  37 344
478 ( 0,  0,  t,  t)   346 -> (1450-1450) 315
479 ( 0,  0,  t,  t)   346 -> (1452-1452) 445
480 ( 0,  0,  t,  t)   346 -> (1454-1454) 202
481 ( 0,  0,  t,  t)   347 -> (1456-1456) 231
482 ( 0,  0,  t,  f)   347 -> (1458-1460)  22 314  23
483 ( 0,  0,  t,  t)   348 -> (1462-1462) 206
484 ( 0,  0,  t,  t)   348 -> (1464-1464) 232
485 ( 0,  0,  t,  t)   349 -> (1466-1466) 348
486 ( 0,  0,  t,  f)   349 -> (1468-1469) 348  24
487 ( 0,  0,  t,  f)   349 -> (1471-1473) 349  37 348
488 ( 0,  0,  t,  f)   349 -> (1475-1478) 349  37 348  24
489 ( 0,  0,  t,  t)   350 -> (1480-1480) 228
490 ( 0,  0,  t,  f)   350 -> (1482-1483) 228 351
491 ( 0,  0,  t,  t)   350 -> (1485-1485) 405
492 ( 0,  0,  t,  f)   350 -> (1487-1488) 405 351
493 ( 0,  0,  t,  t)   350 -> (1490-1490) 270
494 ( 0,  0,  t,  f)   350 -> (1492-1493) 270 351
495 ( 0,  0,  t,  t)   350 -> (1495-1495) 338
496 ( 0,  0,  t,  f)   350 -> (1497-1498) 338 351
497 ( 0,  0,  t,  t)   351 -> (1500-1500) 485
498 ( 0,  0,  t,  f)   351 -> (1502-1503) 485 366
499 ( 0,  0,  t,  t)   351 -> (1505-1505) 485
500 ( 0,  0,  t,  f)   351 -> (1507-1508) 485 365
501 ( 0,  0,  t,  t)   351 -> (1510-1510) 485
502 ( 0,  0,  t,  f)   351 -> (1512-1513) 485 451
503 ( 0,  0,  t,  t)   351 -> (1515-1515) 366
504 ( 0,  0,  t,  f)   351 -> (1517-1518) 366 485
505 ( 0,  0,  t,  t)   351 -> (1520-1520) 365
506 ( 0,  0,  t,  f)   351 -> (1522-1523) 365 485
507 ( 0,  0,  t,  t)   351 -> (1525-1525) 451
508 ( 0,  0,  t,  f)   351 -> (1527-1528) 451 485
509 ( 0,  0,  t,  f)   352 -> (1530-1534) 136  22 252  23 452
510 ( 0,  0,  t,  f)   352 -> (1536-1542) 137 452 136  22 313  23  20
511 ( 0,  0,  t,  f)   352 -> (1544-1549) 138  22 346  20  23 452
512 ( 0,  0,  t,  f)   352 -> (1551-1557) 138  22 346 252  20  23 452
513 ( 0,  0,  t,  f)   352 -> (1559-1565) 138  22 346  20 313  23 452
514 ( 0,  0,  t,  f)   352 -> (1567-1574) 138  22 346 252  20 313  23 452
515 ( 0,  0,  t,  f)   352 -> (1576-1582) 138  22 320  41 321  23 452
516 ( 0,  0,  t,  f)   352 -> (1584-1591) 138  22 346 320  41 321  23 452
517 ( 0,  0,  t,  f)   353 -> (1593-1594) 139  20
518 ( 0,  0,  t,  f)   353 -> (1596-1597) 140  20
519 ( 0,  0,  t,  f)   353 -> (1599-1600) 141  20
520 ( 0,  0,  t,  f)   353 -> (1602-1604) 141 312  20
521 ( 0,  0,  t,  t)   353 -> (1606-1606) 263
522 ( 0,  0,  t,  f)   353 -> (1608-1610) 142   3  20
523 ( 0,  0,  t,  f)   354 -> (1612-1615) 215   3  41 452
524 ( 0,  0,  t,  f)   354 -> (1617-1619)   3  41 452
525 ( 0,  0,  t,  f)   354 -> (1621-1625) 215 143 256  41 452
526 ( 0,  0,  t,  f)   354 -> (1627-1630) 143 256  41 452
527 ( 0,  0,  t,  f)   354 -> (1632-1635) 215 118  41 452
528 ( 0,  0,  t,  f)   354 -> (1637-1639) 118  41 452
529 ( 0,  0,  t,  t)   355 -> (1641-1641) 236
530 ( 0,  0,  t,  t)   355 -> (1643-1643) 237
531 ( 0,  0,  t,  f)   355 -> (1645-1647) 236  37 237
532 ( 0,  0,  t,  t)   356 -> (1649-1649) 359
533 ( 0,  0,  t,  f)   356 -> (1651-1654)  22 410  23 359
534 ( 0,  0,  t,  f)   356 -> (1656-1660)  22 410  23 359 436
535 ( 0,  0,  t,  f)   357 -> (1662-1664) 358 356 249
536 ( 0,  0,  t,  f)   357 -> (1666-1671) 358  98 464  99 356 249
537 ( 0,  0,  t,  f)   357 -> (1673-1679) 358  98 464  99 436 356 249
538 ( 0,  0,  t,  f)   358 -> (1681-1682)  39  40
539 ( 0,  0,  t,  f)   358 -> (1684-1686)  39 355  40
540 ( 0,  0,  t,  t)   359 -> (1688-1688) 272
541 ( 0,  0,  t,  f)   359 -> (1690-1691) 272 396
542 ( 0,  0,  t,  t)   359 -> (1693-1693) 396
543 ( 0,  0,  t,  f)   359 -> (1695-1696) 272 215
544 ( 0,  0,  t,  t)   359 -> (1698-1698) 215
545 ( 0,  0,  t,  f)   359 -> (1700-1702) 272 396 215
546 ( 0,  0,  t,  f)   359 -> (1704-1705) 396 215
547 ( 0,  0,  t,  f)   359 -> (1707-1708) 272 466
548 ( 0,  0,  t,  t)   359 -> (1710-1710) 466
549 ( 0,  0,  t,  f)   359 -> (1712-1714) 272 396 466
550 ( 0,  0,  t,  f)   359 -> (1716-1717) 396 466
551 ( 0,  0,  t,  f)   359 -> (1719-1721) 272 215 466
552 ( 0,  0,  t,  f)   359 -> (1723-1724) 215 466
553 ( 0,  0,  t,  f)   359 -> (1726-1729) 272 396 215 466
554 ( 0,  0,  t,  f)   359 -> (1731-1733) 396 215 466
555 ( 0,  0,  t,  f)   360 -> (1735-1738)  97 456  43  44
556 ( 0,  0,  t,  f)   360 -> (1740-1744)  97 456  43 274  44
557 ( 0,  0,  t,  f)   360 -> (1746-1748)  97 456 273
558 ( 0,  0,  t,  t)   361 -> (1750-1750) 350
559 ( 0,  0,  t,  t)   361 -> (1752-1752) 239
560 ( 0,  0,  t,  t)   361 -> (1754-1754) 316
561 ( 0,  0,  t,  t)   361 -> (1756-1756) 456
562 ( 0,  0,  t,  t)   361 -> (1758-1758) 230
563 ( 0,  0,  t,  t)   361 -> (1760-1760) 415
564 ( 0,  0,  t,  t)   361 -> (1762-1762) 489
565 ( 0,  0,  t,  f)   362 -> (1764-1766)  67 456   3
566 ( 0,  0,  t,  f)   362 -> (1768-1769)  67 490
567 ( 0,  0,  t,  t)   363 -> (1771-1771) 342
568 ( 0,  0,  t,  f)   363 -> (1773-1775) 363  65 342
569 ( 0,  0,  t,  t)   364 -> (1777-1777) 363
570 ( 0,  0,  t,  f)   364 -> (1779-1781) 364  66 363
571 ( 0,  0,  t,  t)   365 -> (1783-1783) 144
572 ( 0,  0,  t,  t)   365 -> (1785-1785)  10
573 ( 0,  0,  t,  t)   366 -> (1787-1787) 106
574 ( 0,  0,  t,  t)   366 -> (1789-1789)  93
575 ( 0,  0,  t,  f)   367 -> (1791-1793) 368  22  23
576 ( 0,  0,  t,  f)   367 -> (1795-1798) 368  22 314  23
577 ( 0,  0,  t,  f)   367 -> (1800-1801) 368 232
578 ( 0,  0,  t,  t)   368 -> (1803-1803) 244
579 ( 0,  0,  t,  t)   368 -> (1805-1805)   3
580 ( 0,  0,  t,  t)   369 -> (1807-1807) 367
581 ( 0,  0,  t,  f)   369 -> (1809-1810) 367  24
582 ( 0,  0,  t,  f)   369 -> (1812-1814) 369  37 367
583 ( 0,  0,  t,  f)   369 -> (1816-1819) 369  37 367  24
584 ( 0,  0,  t,  f)   370 -> (1821-1822) 215  20
585 ( 0,  0,  t,  t)   370 -> (1824-1824)  20
586 ( 0,  0,  t,  f)   370 -> (1826-1828) 215 272  20
587 ( 0,  0,  t,  f)   370 -> (1830-1831) 272  20
588 ( 0,  0,  t,  f)   370 -> (1833-1835) 215 372  20
589 ( 0,  0,  t,  f)   370 -> (1837-1838) 372  20
590 ( 0,  0,  t,  f)   370 -> (1840-1843) 215 272 372  20
591 ( 0,  0,  t,  f)   370 -> (1845-1847) 272 372  20
592 ( 0,  0,  t,  t)   370 -> (1849-1849) 324
593 ( 0,  0,  t,  t)   370 -> (1851-1851) 491
594 ( 0,  0,  t,  t)   370 -> (1853-1853) 495
595 ( 0,  0,  t,  t)   370 -> (1855-1855) 454
596 ( 0,  0,  t,  t)   370 -> (1857-1857) 459
597 ( 0,  0,  t,  t)   370 -> (1859-1859) 308
598 ( 0,  0,  t,  t)   370 -> (1861-1861) 279
599 ( 0,  0,  t,  t)   370 -> (1863-1863) 202
600 ( 0,  0,  t,  t)   370 -> (1865-1865) 406
601 ( 0,  0,  t,  t)   370 -> (1867-1867) 291
602 ( 0,  0,  t,  t)   371 -> (1869-1869) 276
603 ( 0,  0,  t,  f)   371 -> (1871-1872) 276 497
604 ( 0,  0,  t,  f)   371 -> (1874-1875) 276 422
605 ( 0,  0,  t,  f)   371 -> (1877-1879) 276 497 422
606 ( 0,  0,  t,  f)   371 -> (1881-1882) 276 436
607 ( 0,  0,  t,  t)   371 -> (1884-1884) 276
608 ( 0,  0,  t,  f)   371 -> (1886-1887) 276 231
609 ( 0,  0,  t,  f)   371 -> (1889-1891)   3  41 256
610 ( 0,  0,  t,  f)   371 -> (1893-1894)  41 256
611 ( 0,  0,  t,  f)   371 -> (1896-1899)   3 215  41 256
612 ( 0,  0,  t,  f)   371 -> (1901-1903) 215  41 256
613 ( 0,  0,  t,  f)   371 -> (1905-1908)   3  41 256 231
614 ( 0,  0,  t,  f)   371 -> (1910-1912)  41 256 231
615 ( 0,  0,  t,  f)   371 -> (1914-1918)   3 215  41 256 231
616 ( 0,  0,  t,  f)   371 -> (1920-1923) 215  41 256 231
617 ( 0,  0,  t,  t)   372 -> (1925-1925) 371
618 ( 0,  0,  t,  f)   372 -> (1927-1929) 372  37 371
619 ( 0,  0,  t,  t)   373 -> (1931-1931) 370
620 ( 0,  0,  t,  f)   373 -> (1933-1934) 370 373
621 ( 0,  0,  t,  f)   373 -> (1936-1937) 200  41
622 ( 0,  0,  t,  f)   373 -> (1939-1941) 200  41 373
623 ( 0,  0,  t,  f)   374 -> (1943-1946) 104 120 376  20
624 ( 0,  0,  t,  f)   374 -> (1948-1950) 120 376  20
625 ( 0,  0,  t,  f)   374 -> (1952-1956) 104 120 376 378  20
626 ( 0,  0,  t,  f)   374 -> (1958-1961) 120 376 378  20
627 ( 0,  0,  t,  f)   374 -> (1963-1967) 104 120 376 215  20
628 ( 0,  0,  t,  f)   374 -> (1969-1972) 120 376 215  20
629 ( 0,  0,  t,  f)   374 -> (1974-1979) 104 120 376 378 215  20
630 ( 0,  0,  t,  f)   374 -> (1981-1985) 120 376 378 215  20
631 ( 0,  0,  t,  f)   375 -> (1987-1989) 145 376  20
632 ( 0,  0,  t,  f)   375 -> (1991-1994) 145 376 215  20
633 ( 0,  0,  t,  f)   375 -> (1996-1998) 145 378  20
634 ( 0,  0,  t,  f)   375 -> (2000-2003) 145 378 215  20
635 ( 0,  0,  t,  f)   375 -> (2005-2007) 145 331  20
636 ( 0,  0,  t,  f)   375 -> (2009-2012) 145 331 215  20
637 ( 0,  0,  t,  f)   376 -> (2014-2015) 377   3
638 ( 0,  0,  t,  t)   376 -> (2017-2017)   3
639 ( 0,  0,  t,  f)   377 -> (2019-2020)   3  80
640 ( 0,  0,  t,  f)   377 -> (2022-2024) 377   3  80
641 ( 0,  0,  t,  f)   378 -> (2026-2027)  41   3
642 ( 0,  0,  t,  f)   378 -> (2029-2031)  41 377   3
643 ( 0,  0,  t,  t)   379 -> (2033-2033) 414
644 ( 0,  0,  t,  f)   379 -> (2035-2037) 379 108 414
645 ( 0,  0,  t,  f)   379 -> (2039-2041) 379 109 414
646 ( 0,  0,  t,  f)   379 -> (2043-2045) 379 110 414
647 ( 0,  0,  t,  f)   380 -> (2047-2052)  76 146   3  43 383  44
648 ( 0,  0,  t,  f)   380 -> (2054-2058) 146   3  43 383  44
649 ( 0,  0,  t,  f)   380 -> (2060-2066)  76 146 215   3  43 383  44
650 ( 0,  0,  t,  f)   380 -> (2068-2073) 146 215   3  43 383  44
651 ( 0,  0,  t,  t)   381 -> (2075-2075)   3
652 ( 0,  0,  t,  f)   382 -> (2077-2081) 146   3  19 426  20
653 ( 0,  0,  t,  t)   383 -> (2083-2083) 274
654 ( 0,  0,  t,  t)   384 -> (2085-2085) 380
655 ( 0,  0,  t,  t)   384 -> (2087-2087) 483
656 ( 0,  0,  t,  t)   384 -> (2089-2089) 387
657 ( 0,  0,  t,  t)   385 -> (2091-2091)   3
658 ( 0,  0,  t,  t)   385 -> (2093-2093) 381
659 ( 0,  0,  t,  t)   386 -> (2095-2095)  38
660 ( 0,  0,  t,  f)   386 -> (2097-2098) 471  38
661 ( 0,  0,  t,  f)   386 -> (2100-2101) 385  38
662 ( 0,  0,  t,  f)   386 -> (2103-2104) 278  38
663 ( 0,  0,  t,  f)   386 -> (2106-2108) 386   3  38
664 ( 0,  0,  t,  f)   386 -> (2110-2112) 386 449  38
665 ( 0,  0,  t,  f)   386 -> (2114-2117) 386  58 449  38
666 ( 0,  0,  t,  f)   387 -> (2119-2125) 146 292  38   3  43 383  44
667 ( 0,  0,  t,  f)   387 -> (2127-2134) 146 292  38  76   3  43 383  44
668 ( 0,  0,  t,  f)   388 -> (2136-2138) 147 257  20
669 ( 0,  0,  t,  t)   389 -> (2140-2140) 421
670 ( 0,  0,  t,  f)   389 -> (2142-2143) 421 389
671 ( 0,  0,  t,  t)   389 -> (2145-2145) 401
672 ( 0,  0,  t,  f)   390 -> (2147-2149)  38 148 393
673 ( 0,  0,  t,  f)   390 -> (2151-2152) 148 393
674 ( 0,  0,  t,  f)   390 -> (2154-2157)  38 148 392 393
675 ( 0,  0,  t,  f)   390 -> (2159-2161) 148 392 393
676 ( 0,  0,  t,  f)   390 -> (2163-2166)  38 148 393 391
677 ( 0,  0,  t,  f)   390 -> (2168-2170) 148 393 391
678 ( 0,  0,  t,  f)   390 -> (2172-2176)  38 148 392 393 391
679 ( 0,  0,  t,  f)   390 -> (2178-2181) 148 392 393 391
680 ( 0,  0,  t,  f)   390 -> (2183-2187)  38 148  22 470  23
681 ( 0,  0,  t,  f)   390 -> (2189-2192) 148  22 470  23
682 ( 0,  0,  t,  f)   390 -> (2194-2199)  38 148 392  22 470  23
683 ( 0,  0,  t,  f)   390 -> (2201-2205) 148 392  22 470  23
684 ( 0,  0,  t,  f)   390 -> (2207-2212)  38 148  22 470  23 391
685 ( 0,  0,  t,  f)   390 -> (2214-2218) 148  22 470  23 391
686 ( 0,  0,  t,  f)   390 -> (2220-2226)  38 148 392  22 470  23 391
687 ( 0,  0,  t,  f)   390 -> (2228-2233) 148 392  22 470  23 391
688 ( 0,  0,  t,  f)   391 -> (2235-2236)  22  23
689 ( 0,  0,  t,  f)   391 -> (2238-2240)  22 314  23
690 ( 0,  0,  t,  t)   391 -> (2242-2242) 232
691 ( 0,  0,  t,  f)   392 -> (2244-2246)  22 314  23
692 ( 0,  0,  t,  t)   393 -> (2248-2248) 476
693 ( 0,  0,  t,  f)   393 -> (2250-2251) 476 389
694 ( 0,  0,  t,  f)   394 -> (2253-2255) 215 276  20
695 ( 0,  0,  t,  f)   394 -> (2257-2258) 276  20
696 ( 0,  0,  t,  f)   395 -> (2260-2263)  61  22 313  23
697 ( 0,  0,  t,  f)   396 -> (2265-2268)  61  22 256  23
698 ( 0,  0,  t,  t)   396 -> (2270-2270)  61
699 ( 0,  0,  t,  t)   397 -> (2272-2272)  47
700 ( 0,  0,  t,  t)   397 -> (2274-2274)  81
701 ( 0,  0,  t,  t)   397 -> (2276-2276)  82
702 ( 0,  0,  t,  t)   397 -> (2278-2278)  83
703 ( 0,  0,  t,  t)   397 -> (2280-2280)  84
704 ( 0,  0,  t,  t)   397 -> (2282-2282)  85
705 ( 0,  0,  t,  t)   397 -> (2284-2284)  86
706 ( 0,  0,  t,  t)   397 -> (2286-2286)  87
707 ( 0,  0,  t,  t)   397 -> (2288-2288)  88
708 ( 0,  0,  t,  f)   398 -> (2290-2291) 398 412
709 ( 0,  0,  t,  t)   398 -> (2293-2293) 412
710 ( 0,  0,  t,  f)   398 -> (2295-2297) 398  39  40
711 ( 0,  0,  t,  f)   398 -> (2299-2300)  39  40
712 ( 0,  0,  t,  f)   398 -> (2302-2305) 398  39 256  40
713 ( 0,  0,  t,  f)   398 -> (2307-2309)  39 256  40
714 ( 0,  0,  t,  f)   398 -> (2311-2314) 398  39  40 215
715 ( 0,  0,  t,  f)   398 -> (2316-2318)  39  40 215
716 ( 0,  0,  t,  f)   398 -> (2320-2324) 398  39 256  40 215
717 ( 0,  0,  t,  f)   398 -> (2326-2329)  39 256  40 215
718 ( 0,  0,  t,  f)   398 -> (2331-2333)  22 419  23
719 ( 0,  0,  t,  f)   399 -> (2335-2336) 399 412
720 ( 0,  0,  t,  f)   399 -> (2338-2340) 399  39  40
721 ( 0,  0,  t,  f)   399 -> (2342-2345) 399  39 256  40
722 ( 0,  0,  t,  f)   399 -> (2347-2350) 399  39  40 215
723 ( 0,  0,  t,  f)   399 -> (2352-2356) 399  39 256  40 215
724 ( 0,  0,  t,  t)   399 -> (2358-2358)  24
725 ( 0,  0,  t,  t)   400 -> (2360-2360) 277
726 ( 0,  0,  t,  f)   400 -> (2362-2363) 277 215
727 ( 0,  0,  t,  f)   400 -> (2365-2366) 400 412
728 ( 0,  0,  t,  f)   400 -> (2368-2370) 400  39  40
729 ( 0,  0,  t,  f)   400 -> (2372-2375) 400  39 256  40
730 ( 0,  0,  t,  f)   400 -> (2377-2380) 400  39  40 215
731 ( 0,  0,  t,  f)   400 -> (2382-2386) 400  39 256  40 215
732 ( 0,  0,  t,  f)   400 -> (2388-2390)  22 420  23
733 ( 0,  0,  t,  f)   401 -> (2392-2393)  39  40
734 ( 0,  0,  t,  f)   401 -> (2395-2397)  39 313  40
735 ( 0,  0,  t,  f)   401 -> (2399-2401)  39  40 215
736 ( 0,  0,  t,  f)   401 -> (2403-2406)  39 313  40 215
737 ( 0,  0,  t,  f)   401 -> (2408-2411) 401  39 256  40
738 ( 0,  0,  t,  f)   401 -> (2413-2417) 401  39 256  40 215
739 ( 0,  0,  t,  t)   402 -> (2419-2419) 404
740 ( 0,  0,  t,  t)   402 -> (2421-2421) 335
741 ( 0,  0,  t,  t)   403 -> (2423-2423)  46
742 ( 0,  0,  t,  t)   403 -> (2425-2425)  47
743 ( 0,  0,  t,  t)   403 -> (2427-2427)  81
744 ( 0,  0,  t,  t)   403 -> (2429-2429)  82
745 ( 0,  0,  t,  t)   403 -> (2431-2431)  83
746 ( 0,  0,  t,  t)   403 -> (2433-2433)  84
747 ( 0,  0,  t,  t)   403 -> (2435-2435)  85
748 ( 0,  0,  t,  t)   403 -> (2437-2437)  86
749 ( 0,  0,  t,  f)   404 -> (2439-2440)  63 403
750 ( 0,  0,  t,  f)   404 -> (2442-2444)  63 403 403
751 ( 0,  0,  t,  f)   404 -> (2446-2449)  63 403 403 403
752 ( 0,  0,  t,  t)   405 -> (2451-2451)  46
753 ( 0,  0,  t,  f)   405 -> (2453-2454) 405 403
754 ( 0,  0,  t,  f)   405 -> (2456-2458) 405  52 403
755 ( 0,  0,  t,  f)   406 -> (2460-2462) 297 296  20
756 ( 0,  0,  t,  f)   406 -> (2464-2467) 297 215 296  20
757 ( 0,  0,  t,  f)   406 -> (2469-2472) 297 296 294  20
758 ( 0,  0,  t,  f)   406 -> (2474-2478) 297 215 296 294  20
759 ( 0,  0,  t,  f)   407 -> (2480-2481)  67 408
760 ( 0,  0,  t,  f)   407 -> (2483-2486)  67 408  98  99
761 ( 0,  0,  t,  f)   407 -> (2488-2492)  67 408  98 458  99
762 ( 0,  0,  t,  t)   408 -> (2494-2494) 148
763 ( 0,  0,  t,  t)   408 -> (2496-2496)  79
764 ( 0,  0,  t,  f)   408 -> (2498-2500) 148  39  40
765 ( 0,  0,  t,  f)   408 -> (2502-2504)  79  39  40
766 ( 0,  0,  t,  t)   408 -> (2506-2506)  42
767 ( 0,  0,  t,  f)   408 -> (2508-2509)  22  23
768 ( 0,  0,  t,  f)   408 -> (2511-2512)  39  40
769 ( 0,  0,  t,  t)   408 -> (2514-2514)  78
770 ( 0,  0,  t,  t)   408 -> (2516-2516) 117
771 ( 0,  0,  t,  t)   408 -> (2518-2518) 149
772 ( 0,  0,  t,  t)   408 -> (2520-2520) 150
773 ( 0,  0,  t,  t)   408 -> (2522-2522)  16
774 ( 0,  0,  t,  t)   408 -> (2524-2524)  17
775 ( 0,  0,  t,  t)   408 -> (2526-2526) 108
776 ( 0,  0,  t,  t)   408 -> (2528-2528) 109
777 ( 0,  0,  t,  t)   408 -> (2530-2530) 110
778 ( 0,  0,  t,  t)   408 -> (2532-2532)  96
779 ( 0,  0,  t,  t)   408 -> (2534-2534)  25
780 ( 0,  0,  t,  t)   408 -> (2536-2536) 111
781 ( 0,  0,  t,  t)   408 -> (2538-2538)  19
782 ( 0,  0,  t,  t)   408 -> (2540-2540)  30
783 ( 0,  0,  t,  t)   408 -> (2542-2542)  31
784 ( 0,  0,  t,  t)   408 -> (2544-2544)  27
785 ( 0,  0,  t,  t)   408 -> (2546-2546)  28
786 ( 0,  0,  t,  t)   408 -> (2548-2548)  29
787 ( 0,  0,  t,  t)   408 -> (2550-2550)  35
788 ( 0,  0,  t,  t)   408 -> (2552-2552)  34
789 ( 0,  0,  t,  t)   408 -> (2554-2554)  36
790 ( 0,  0,  t,  t)   408 -> (2556-2556)  94
791 ( 0,  0,  t,  t)   408 -> (2558-2558)  95
792 ( 0,  0,  t,  t)   408 -> (2560-2560)  98
793 ( 0,  0,  t,  t)   408 -> (2562-2562)  99
794 ( 0,  0,  t,  t)   408 -> (2564-2564) 114
795 ( 0,  0,  t,  t)   408 -> (2566-2566) 115
796 ( 0,  0,  t,  t)   408 -> (2568-2568)  60
797 ( 0,  0,  t,  t)   408 -> (2570-2570)  65
798 ( 0,  0,  t,  t)   408 -> (2572-2572)  66
799 ( 0,  0,  t,  t)   408 -> (2574-2574) 112
800 ( 0,  0,  t,  t)   408 -> (2576-2576) 113
801 ( 0,  0,  t,  t)   408 -> (2578-2578)  33
802 ( 0,  0,  t,  t)   408 -> (2580-2580)  32
803 ( 0,  0,  t,  t)   408 -> (2582-2582) 151
804 ( 0,  0,  t,  t)   408 -> (2584-2584) 152
805 ( 0,  0,  t,  t)   408 -> (2586-2586)  37
806 ( 0,  0,  t,  f)   409 -> (2588-2590) 215 272 276
807 ( 0,  0,  t,  f)   409 -> (2592-2593) 272 276
808 ( 0,  0,  t,  f)   409 -> (2595-2598) 215 153 272 276
809 ( 0,  0,  t,  f)   409 -> (2600-2602) 153 272 276
810 ( 0,  0,  t,  f)   409 -> (2604-2608) 215 272 276  19 348
811 ( 0,  0,  t,  f)   409 -> (2610-2613) 272 276  19 348
812 ( 0,  0,  t,  f)   409 -> (2615-2620) 215 153 272 276  19 348
813 ( 0,  0,  t,  f)   409 -> (2622-2626) 153 272 276  19 348
814 ( 0,  0,  t,  f)   409 -> (2628-2629) 215 272
815 ( 0,  0,  t,  t)   409 -> (2631-2631) 272
816 ( 0,  0,  t,  f)   409 -> (2633-2635) 215 153 272
817 ( 0,  0,  t,  f)   409 -> (2637-2638) 153 272
818 ( 0,  0,  t,  f)   409 -> (2640-2642) 215 272 198
819 ( 0,  0,  t,  f)   409 -> (2644-2645) 272 198
820 ( 0,  0,  t,  f)   409 -> (2647-2650) 215 153 272 198
821 ( 0,  0,  t,  f)   409 -> (2652-2654) 153 272 198
822 ( 0,  0,  t,  f)   409 -> (2656-2659) 215 272  19 348
823 ( 0,  0,  t,  f)   409 -> (2661-2663) 272  19 348
824 ( 0,  0,  t,  f)   409 -> (2665-2669) 215 153 272  19 348
825 ( 0,  0,  t,  f)   409 -> (2671-2674) 153 272  19 348
826 ( 0,  0,  t,  f)   409 -> (2676-2680) 215 272 198  19 348
827 ( 0,  0,  t,  f)   409 -> (2682-2685) 272 198  19 348
828 ( 0,  0,  t,  f)   409 -> (2687-2692) 215 153 272 198  19 348
829 ( 0,  0,  t,  f)   409 -> (2694-2698) 153 272 198  19 348
830 ( 0,  0,  t,  t)   410 -> (2700-2700) 411
831 ( 0,  0,  t,  f)   410 -> (2702-2703) 411  24
832 ( 0,  0,  t,  t)   410 -> (2705-2705)  24
833 ( 0,  0,  t,  f)   410 -> (2707-2709) 411  37  24
834 ( 0,  0,  t,  t)   411 -> (2711-2711) 409
835 ( 0,  0,  t,  f)   411 -> (2713-2715) 411  37 409
836 ( 0,  0,  t,  f)   412 -> (2717-2719)  22 410  23
837 ( 0,  0,  t,  f)   412 -> (2721-2724)  22 410  23 266
838 ( 0,  0,  t,  f)   412 -> (2726-2729)  22 410  23 430
839 ( 0,  0,  t,  f)   412 -> (2731-2735)  22 410  23 266 430
840 ( 0,  0,  t,  f)   412 -> (2737-2740)  22 410  23 396
841 ( 0,  0,  t,  f)   412 -> (2742-2746)  22 410  23 266 396
842 ( 0,  0,  t,  f)   412 -> (2748-2752)  22 410  23 430 396
843 ( 0,  0,  t,  f)   412 -> (2754-2759)  22 410  23 266 430 396
844 ( 0,  0,  t,  f)   412 -> (2761-2764)  22 410  23 215
845 ( 0,  0,  t,  f)   412 -> (2766-2770)  22 410  23 266 215
846 ( 0,  0,  t,  f)   412 -> (2772-2776)  22 410  23 430 215
847 ( 0,  0,  t,  f)   412 -> (2778-2783)  22 410  23 266 430 215
848 ( 0,  0,  t,  f)   412 -> (2785-2789)  22 410  23 396 215
849 ( 0,  0,  t,  f)   412 -> (2791-2796)  22 410  23 266 396 215
850 ( 0,  0,  t,  f)   412 -> (2798-2803)  22 410  23 430 396 215
851 ( 0,  0,  t,  f)   412 -> (2805-2811)  22 410  23 266 430 396 215
852 ( 0,  0,  t,  f)   413 -> (2813-2814) 469 154
853 ( 0,  0,  t,  t)   413 -> (2816-2816) 154
854 ( 0,  0,  t,  f)   413 -> (2818-2822) 469  77  22 154  23
855 ( 0,  0,  t,  f)   413 -> (2824-2827)  77  22 154  23
856 ( 0,  0,  t,  t)   414 -> (2829-2829) 238
857 ( 0,  0,  t,  f)   414 -> (2831-2833) 414 116 238
858 ( 0,  0,  t,  f)   414 -> (2835-2837) 414 117 238
859 ( 0,  0,  t,  t)   415 -> (2839-2839) 155
860 ( 0,  0,  t,  t)   416 -> (2841-2841) 417
861 ( 0,  0,  t,  f)   416 -> (2843-2845) 416  39  40
862 ( 0,  0,  t,  f)   416 -> (2847-2850) 416  39 314  40
863 ( 0,  0,  t,  f)   416 -> (2852-2854) 416  22  23
864 ( 0,  0,  t,  f)   416 -> (2856-2859) 416  22 314  23
865 ( 0,  0,  t,  f)   416 -> (2861-2863) 450  22  23
866 ( 0,  0,  t,  f)   416 -> (2865-2868) 450  22 314  23
867 ( 0,  0,  t,  f)   416 -> (2870-2872) 478  22  23
868 ( 0,  0,  t,  f)   416 -> (2874-2877) 478  22 314  23
869 ( 0,  0,  t,  f)   416 -> (2879-2880) 450 232
870 ( 0,  0,  t,  f)   416 -> (2882-2883) 478 232
871 ( 0,  0,  t,  f)   416 -> (2885-2887) 416  80 340
872 ( 0,  0,  t,  f)   416 -> (2889-2892) 416  80  58 340
873 ( 0,  0,  t,  f)   416 -> (2894-2896) 416  78 340
874 ( 0,  0,  t,  f)   416 -> (2898-2901) 416  78  58 340
875 ( 0,  0,  t,  f)   416 -> (2903-2904) 416 151
876 ( 0,  0,  t,  f)   416 -> (2906-2907) 416 152
877 ( 0,  0,  t,  f)   416 -> (2909-2915) 156  98 470  99  22 313  23
878 ( 0,  0,  t,  f)   416 -> (2917-2923) 157  98 470  99  22 313  23
879 ( 0,  0,  t,  f)   416 -> (2925-2931) 158  98 470  99  22 313  23
880 ( 0,  0,  t,  f)   416 -> (2933-2939) 159  98 470  99  22 313  23
881 ( 0,  0,  t,  f)   416 -> (2941-2944) 160  22 313  23
882 ( 0,  0,  t,  f)   416 -> (2946-2949) 160  22 470  23
883 ( 0,  0,  t,  t)   417 -> (2951-2951) 361
884 ( 0,  0,  t,  t)   417 -> (2953-2953) 153
885 ( 0,  0,  t,  f)   417 -> (2955-2957)  22 313  23
886 ( 0,  0,  t,  t)   417 -> (2959-2959) 340
887 ( 0,  0,  t,  t)   417 -> (2961-2961) 357
888 ( 0,  0,  t,  t)   417 -> (2963-2963) 318
889 ( 0,  0,  t,  t)   417 -> (2965-2965) 437
890 ( 0,  0,  t,  f)   418 -> (2967-2970) 120  41  13  20
891 ( 0,  0,  t,  f)   418 -> (2972-2976) 120  41  13  20 274
892 ( 0,  0,  t,  t)   419 -> (2978-2978) 398
893 ( 0,  0,  t,  t)   419 -> (2980-2980) 421
894 ( 0,  0,  t,  f)   419 -> (2982-2983) 421 419
895 ( 0,  0,  t,  t)   420 -> (2985-2985) 400
896 ( 0,  0,  t,  f)   420 -> (2987-2988) 421 420
897 ( 0,  0,  t,  t)   421 -> (2990-2990) 108
898 ( 0,  0,  t,  f)   421 -> (2992-2993) 108 215
899 ( 0,  0,  t,  f)   421 -> (2995-2996) 108 266
900 ( 0,  0,  t,  f)   421 -> (2998-3000) 108 215 266
901 ( 0,  0,  t,  t)   421 -> (3002-3002)  25
902 ( 0,  0,  t,  f)   421 -> (3004-3005)  25 215
903 ( 0,  0,  t,  t)   421 -> (3007-3007)  65
904 ( 0,  0,  t,  f)   421 -> (3009-3010)  65 215
905 ( 0,  0,  t,  f)   421 -> (3012-3013) 386 108
906 ( 0,  0,  t,  f)   421 -> (3015-3017) 386 108 215
907 ( 0,  0,  t,  f)   421 -> (3019-3021) 386 108 266
908 ( 0,  0,  t,  f)   421 -> (3023-3026) 386 108 215 266
909 ( 0,  0,  t,  f)   422 -> (3028-3029)  19  46
910 ( 0,  0,  t,  t)   423 -> (3031-3031)  11
911 ( 0,  0,  t,  t)   424 -> (3033-3033) 423
912 ( 0,  0,  t,  f)   424 -> (3035-3036) 424 423
913 ( 0,  0,  t,  f)   425 -> (3038-3039) 386 484
914 ( 0,  0,  t,  f)   425 -> (3041-3043) 386  58 484
915 ( 0,  0,  t,  f)   426 -> (3045-3046) 386 385
916 ( 0,  0,  t,  t)   426 -> (3048-3048) 385
917 ( 0,  0,  t,  t)   427 -> (3050-3050)  12
918 ( 0,  0,  t,  t)   428 -> (3052-3052) 427
919 ( 0,  0,  t,  f)   428 -> (3054-3055) 428 427
920 ( 0,  0,  t,  f)   429 -> (3057-3060) 123  22  23 123
921 ( 0,  0,  t,  f)   429 -> (3062-3066) 123 268  22  23 123
922 ( 0,  0,  t,  f)   429 -> (3068-3072) 123  22 428  23 123
923 ( 0,  0,  t,  f)   429 -> (3074-3079) 123 268  22 428  23 123
924 ( 0,  0,  t,  f)   429 -> (3081-3085) 123  22  23 268 123
925 ( 0,  0,  t,  f)   429 -> (3087-3092) 123 268  22  23 268 123
926 ( 0,  0,  t,  f)   429 -> (3094-3099) 123  22 428  23 268 123
927 ( 0,  0,  t,  f)   429 -> (3101-3107) 123 268  22 428  23 268 123
928 ( 0,  0,  t,  t)   430 -> (3109-3109)  25
929 ( 0,  0,  t,  t)   430 -> (3111-3111)  65
930 ( 0,  0,  t,  t)   431 -> (3113-3113) 247
931 ( 0,  0,  t,  f)   431 -> (3115-3117) 431  98 247
932 ( 0,  0,  t,  f)   431 -> (3119-3121) 431  99 247
933 ( 0,  0,  t,  f)   431 -> (3123-3125) 431 114 247
934 ( 0,  0,  t,  f)   431 -> (3127-3129) 431 115 247
935 ( 0,  0,  t,  t)   432 -> (3131-3131) 448
936 ( 0,  0,  t,  t)   432 -> (3133-3133) 474
937 ( 0,  0,  t,  t)   432 -> (3135-3135) 248
938 ( 0,  0,  t,  t)   432 -> (3137-3137) 388
939 ( 0,  0,  t,  f)   433 -> (3139-3141)  43 435  44
940 ( 0,  0,  t,  f)   434 -> (3143-3145)  22 410  23
941 ( 0,  0,  t,  t)   435 -> (3147-3147) 432
942 ( 0,  0,  t,  f)   435 -> (3149-3150) 435 432
943 ( 0,  0,  t,  f)   436 -> (3152-3153) 147 259
944 ( 0,  0,  t,  f)   437 -> (3155-3156) 147 433
945 ( 0,  0,  t,  f)   437 -> (3158-3160) 147 434 433
946 ( 0,  0,  t,  f)   438 -> (3162-3163)  78 469
947 ( 0,  0,  t,  t)   439 -> (3165-3165) 225
948 ( 0,  0,  t,  t)   439 -> (3167-3167) 304
949 ( 0,  0,  t,  t)   439 -> (3169-3169) 482
950 ( 0,  0,  t,  t)   440 -> (3171-3171) 439
951 ( 0,  0,  t,  f)   440 -> (3173-3174) 440 439
952 ( 0,  0,  t,  f)   441 -> (3176-3180) 161  22 252  23 452
953 ( 0,  0,  t,  f)   441 -> (3182-3187) 161  73  22 252  23 452
954 ( 0,  0,  t,  f)   441 -> (3189-3194) 161  22 346 252  23 452
955 ( 0,  0,  t,  f)   441 -> (3196-3202) 161  73  22 346 252  23 452
956 ( 0,  0,  t,  f)   441 -> (3204-3210) 161  22 252  23 452 162 452
957 ( 0,  0,  t,  f)   441 -> (3212-3219) 161  73  22 252  23 452 162 452
958 ( 0,  0,  t,  f)   441 -> (3221-3228) 161  22 346 252  23 452 162 452
959 ( 0,  0,  t,  f)   441 -> (3230-3238) 161  73  22 346 252  23 452 162 452
960 ( 0,  0,  t,  f)   441 -> (3240-3242) 161  74 249
961 ( 0,  0,  t,  f)   441 -> (3244-3247) 161 150  74 249
962 ( 0,  0,  t,  f)   441 -> (3249-3253) 161  74 249 162 452
963 ( 0,  0,  t,  f)   441 -> (3255-3260) 161 150  74 249 162 452
964 ( 0,  0,  t,  f)   441 -> (3262-3266) 163  22 252  23 452
965 ( 0,  0,  t,  f)   441 -> (3268-3273) 163  22 346 252  23 452
966 ( 0,  0,  t,  t)   442 -> (3275-3275) 201
967 ( 0,  0,  t,  f)   442 -> (3277-3279) 442 112 201
968 ( 0,  0,  t,  f)   442 -> (3281-3283) 442 113 201
969 ( 0,  0,  t,  t)   443 -> (3285-3285)  16
970 ( 0,  0,  t,  t)   443 -> (3287-3287)  17
971 ( 0,  0,  t,  t)   444 -> (3289-3289)   3
972 ( 0,  0,  t,  f)   444 -> (3291-3292)   3  24
973 ( 0,  0,  t,  f)   444 -> (3294-3295)  25   3
974 ( 0,  0,  t,  f)   444 -> (3297-3299)  25   3  24
975 ( 0,  0,  t,  t)   444 -> (3301-3301) 153
976 ( 0,  0,  t,  f)   444 -> (3303-3304) 108 153
977 ( 0,  0,  t,  f)   445 -> (3306-3307) 272  20
978 ( 0,  0,  t,  f)   445 -> (3309-3311) 272 345  20
979 ( 0,  0,  t,  f)   445 -> (3313-3316) 215 272 345  20
980 ( 0,  0,  t,  f)   445 -> (3318-3324) 215 272  39 341  40 347  20
981 ( 0,  0,  t,  f)   445 -> (3326-3331) 272  39 341  40 347  20
982 ( 0,  0,  t,  f)   445 -> (3333-3340) 215 272 430  39 341  40 347  20
983 ( 0,  0,  t,  f)   445 -> (3342-3348) 272 430  39 341  40 347  20
984 ( 0,  0,  t,  f)   446 -> (3350-3351)  63 447
985 ( 0,  0,  t,  t)   447 -> (3353-3353)  52
986 ( 0,  0,  t,  t)   447 -> (3355-3355) 123
987 ( 0,  0,  t,  t)   447 -> (3357-3357)  64
988 ( 0,  0,  t,  t)   447 -> (3359-3359)  63
989 ( 0,  0,  t,  t)   447 -> (3361-3361) 125
990 ( 0,  0,  t,  t)   447 -> (3363-3363) 126
991 ( 0,  0,  t,  t)   447 -> (3365-3365) 105
992 ( 0,  0,  t,  t)   447 -> (3367-3367) 164
993 ( 0,  0,  t,  t)   447 -> (3369-3369) 165
994 ( 0,  0,  t,  t)   447 -> (3371-3371) 166
995 ( 0,  0,  t,  t)   447 -> (3373-3373) 167
996 ( 0,  0,  t,  f)   448 -> (3375-3376) 313  20
997 ( 0,  0,  t,  f)   449 -> (3378-3380) 462  98  99
998 ( 0,  0,  t,  f)   449 -> (3382-3385) 462  98 458  99
999 ( 0,  0,  t,  f)   450 -> (3387-3388) 386 471
1000 ( 0,  0,  t,  t)   450 -> (3390-3390) 471
1001 ( 0,  0,  t,  f)   450 -> (3392-3394) 386  58 449
1002 ( 0,  0,  t,  t)   450 -> (3396-3396) 278
1003 ( 0,  0,  t,  t)   450 -> (3398-3398) 413
1004 ( 0,  0,  t,  f)   450 -> (3400-3401) 386 462
1005 ( 0,  0,  t,  t)   450 -> (3403-3403) 462
1006 ( 0,  0,  t,  t)   450 -> (3405-3405) 168
1007 ( 0,  0,  t,  t)   450 -> (3407-3407) 169
1008 ( 0,  0,  t,  t)   450 -> (3409-3409) 170
1009 ( 0,  0,  t,  t)   450 -> (3411-3411) 171
1010 ( 0,  0,  t,  t)   450 -> (3413-3413) 172
1011 ( 0,  0,  t,  t)   450 -> (3415-3415) 173
1012 ( 0,  0,  t,  t)   450 -> (3417-3417) 174
1013 ( 0,  0,  t,  t)   450 -> (3419-3419) 175
1014 ( 0,  0,  t,  t)   450 -> (3421-3421) 176
1015 ( 0,  0,  t,  t)   450 -> (3423-3423) 177
1016 ( 0,  0,  t,  t)   450 -> (3425-3425) 178
1017 ( 0,  0,  t,  t)   450 -> (3427-3427) 179
1018 ( 0,  0,  t,  t)   450 -> (3429-3429) 180
1019 ( 0,  0,  t,  t)   450 -> (3431-3431) 181
1020 ( 0,  0,  t,  t)   451 -> (3433-3433) 182
1021 ( 0,  0,  t,  t)   451 -> (3435-3435) 183
1022 ( 0,  0,  t,  t)   452 -> (3437-3437) 354
1023 ( 0,  0,  t,  f)   452 -> (3439-3440) 215 315
1024 ( 0,  0,  t,  t)   452 -> (3442-3442) 315
1025 ( 0,  0,  t,  f)   452 -> (3444-3445) 215 249
1026 ( 0,  0,  t,  t)   452 -> (3447-3447) 249
1027 ( 0,  0,  t,  f)   452 -> (3449-3450) 215 441
1028 ( 0,  0,  t,  t)   452 -> (3452-3452) 441
1029 ( 0,  0,  t,  f)   452 -> (3454-3455) 215 352
1030 ( 0,  0,  t,  t)   452 -> (3457-3457) 352
1031 ( 0,  0,  t,  f)   452 -> (3459-3460) 215 353
1032 ( 0,  0,  t,  t)   452 -> (3462-3462) 353
1033 ( 0,  0,  t,  t)   452 -> (3464-3464) 275
1034 ( 0,  0,  t,  f)   452 -> (3466-3467) 215 468
1035 ( 0,  0,  t,  t)   452 -> (3469-3469) 468
1036 ( 0,  0,  t,  t)   453 -> (3471-3471) 452
1037 ( 0,  0,  t,  f)   453 -> (3473-3474) 453 452
1038 ( 0,  0,  t,  f)   454 -> (3476-3480) 184  22 256  23  20
1039 ( 0,  0,  t,  f)   454 -> (3482-3488) 184  22 256  37 456  23  20
1040 ( 0,  0,  t,  t)   455 -> (3490-3490) 185
1041 ( 0,  0,  t,  t)   455 -> (3492-3492) 186
1042 ( 0,  0,  t,  t)   455 -> (3494-3494)  97
1043 ( 0,  0,  t,  t)   455 -> (3496-3496) 187
1044 ( 0,  0,  t,  f)   456 -> (3498-3500) 293 123 123
1045 ( 0,  0,  t,  f)   456 -> (3502-3503) 123 123
1046 ( 0,  0,  t,  f)   456 -> (3505-3508) 293 123 440 123
1047 ( 0,  0,  t,  f)   456 -> (3510-3512) 123 440 123
1048 ( 0,  0,  t,  f)   456 -> (3514-3516) 293 188 429
1049 ( 0,  0,  t,  f)   456 -> (3518-3519) 188 429
1050 ( 0,  0,  t,  t)   457 -> (3521-3521) 256
1051 ( 0,  0,  t,  t)   457 -> (3523-3523) 470
1052 ( 0,  0,  t,  t)   457 -> (3525-3525) 340
1053 ( 0,  0,  t,  t)   458 -> (3527-3527) 457
1054 ( 0,  0,  t,  f)   458 -> (3529-3530) 457  24
1055 ( 0,  0,  t,  f)   458 -> (3532-3534) 458  37 457
1056 ( 0,  0,  t,  f)   458 -> (3536-3539) 458  37 457  24
1057 ( 0,  0,  t,  f)   459 -> (3541-3542) 460 273
1058 ( 0,  0,  t,  f)   459 -> (3544-3545) 460 250
1059 ( 0,  0,  t,  f)   460 -> (3547-3550)  58  98 464  99
1060 ( 0,  0,  t,  f)   460 -> (3552-3556)  58  98 464  99 436
1061 ( 0,  0,  t,  t)   461 -> (3558-3558) 449
1062 ( 0,  0,  t,  f)   461 -> (3560-3562) 407  98  99
1063 ( 0,  0,  t,  f)   461 -> (3564-3567) 407  98 458  99
1064 ( 0,  0,  t,  f)   461 -> (3569-3571) 362  98  99
1065 ( 0,  0,  t,  f)   461 -> (3573-3576) 362  98 458  99
1066 ( 0,  0,  t,  t)   462 -> (3578-3578)   3
1067 ( 0,  0,  t,  t)   463 -> (3580-3580) 472
1068 ( 0,  0,  t,  t)   463 -> (3582-3582) 409
1069 ( 0,  0,  t,  t)   464 -> (3584-3584) 463
1070 ( 0,  0,  t,  f)   464 -> (3586-3588) 464  37 463
1071 ( 0,  0,  t,  t)   465 -> (3590-3590) 189
1072 ( 0,  0,  t,  f)   465 -> (3592-3593) 189 206
1073 ( 0,  0,  t,  f)   466 -> (3595-3596)  78 470
1074 ( 0,  0,  t,  t)   467 -> (3598-3598) 274
1075 ( 0,  0,  t,  f)   467 -> (3600-3601) 327 374
1076 ( 0,  0,  t,  t)   467 -> (3603-3603) 374
1077 ( 0,  0,  t,  f)   467 -> (3605-3607) 327 374 274
1078 ( 0,  0,  t,  f)   467 -> (3609-3610) 374 274
1079 ( 0,  0,  t,  f)   467 -> (3612-3614) 327 374 418
1080 ( 0,  0,  t,  f)   467 -> (3616-3617) 374 418
1081 ( 0,  0,  t,  f)   467 -> (3619-3622) 327 374 274 418
1082 ( 0,  0,  t,  f)   467 -> (3624-3626) 374 274 418
1083 ( 0,  0,  t,  f)   468 -> (3628-3630) 119 249 330
1084 ( 0,  0,  t,  f)   469 -> (3632-3633) 386 251
1085 ( 0,  0,  t,  t)   469 -> (3635-3635) 251
1086 ( 0,  0,  t,  f)   469 -> (3637-3640) 386 251  98  99
1087 ( 0,  0,  t,  f)   469 -> (3642-3644) 251  98  99
1088 ( 0,  0,  t,  f)   469 -> (3646-3650) 386 251  98 458  99
1089 ( 0,  0,  t,  f)   469 -> (3652-3655) 251  98 458  99
1090 ( 0,  0,  t,  t)   470 -> (3657-3657) 476
1091 ( 0,  0,  t,  f)   470 -> (3659-3660) 476 198
1092 ( 0,  0,  t,  t)   471 -> (3662-3662) 243
1093 ( 0,  0,  t,  t)   471 -> (3664-3664) 298
1094 ( 0,  0,  t,  t)   471 -> (3666-3666) 477
1095 ( 0,  0,  t,  t)   472 -> (3668-3668) 473
1096 ( 0,  0,  t,  f)   472 -> (3670-3671) 473  24
1097 ( 0,  0,  t,  f)   472 -> (3673-3674) 473   3
1098 ( 0,  0,  t,  f)   472 -> (3676-3678) 473  24   3
1099 ( 0,  0,  t,  f)   472 -> (3680-3682) 473  19 470
1100 ( 0,  0,  t,  f)   472 -> (3684-3687) 473   3  19 470
1101 ( 0,  0,  t,  t)   472 -> (3689-3689) 469
1102 ( 0,  0,  t,  f)   472 -> (3691-3692) 469  24
1103 ( 0,  0,  t,  f)   472 -> (3694-3695) 469   3
1104 ( 0,  0,  t,  f)   472 -> (3697-3699) 469  24   3
1105 ( 0,  0,  t,  f)   472 -> (3701-3703) 469  19 470
1106 ( 0,  0,  t,  f)   472 -> (3705-3708) 469   3  19 470
1107 ( 0,  0,  t,  f)   472 -> (3710-3711) 460 473
1108 ( 0,  0,  t,  f)   472 -> (3713-3715) 460 473  24
1109 ( 0,  0,  t,  f)   472 -> (3717-3719) 460 473   3
1110 ( 0,  0,  t,  f)   472 -> (3721-3724) 460 473  24   3
1111 ( 0,  0,  t,  f)   472 -> (3726-3729) 460 473  19 340
1112 ( 0,  0,  t,  f)   472 -> (3731-3735) 460 473   3  19 340
1113 ( 0,  0,  t,  t)   473 -> (3737-3737)  55
1114 ( 0,  0,  t,  t)   473 -> (3739-3739) 190
1115 ( 0,  0,  t,  f)   474 -> (3741-3743) 190 471  20
1116 ( 0,  0,  t,  f)   474 -> (3745-3748) 190 386 471  20
1117 ( 0,  0,  t,  t)   475 -> (3750-3750) 450
1118 ( 0,  0,  t,  t)   475 -> (3752-3752) 290
1119 ( 0,  0,  t,  t)   475 -> (3754-3754) 478
1120 ( 0,  0,  t,  t)   475 -> (3756-3756) 265
1121 ( 0,  0,  t,  t)   476 -> (3758-3758) 475
1122 ( 0,  0,  t,  f)   476 -> (3760-3761) 475 215
1123 ( 0,  0,  t,  f)   476 -> (3763-3764) 475 476
1124 ( 0,  0,  t,  t)   477 -> (3766-3766)   3
1125 ( 0,  0,  t,  t)   477 -> (3768-3768) 449
1126 ( 0,  0,  t,  f)   478 -> (3770-3772) 190 386   3
1127 ( 0,  0,  t,  f)   478 -> (3774-3776) 190 386 449
1128 ( 0,  0,  t,  f)   478 -> (3778-3781) 190 386  58 449
1129 ( 0,  0,  t,  t)   479 -> (3783-3783)   3
1130 ( 0,  0,  t,  t)   480 -> (3785-3785) 416
1131 ( 0,  0,  t,  f)   480 -> (3787-3788) 481 238
1132 ( 0,  0,  t,  f)   480 -> (3790-3791) 151 238
1133 ( 0,  0,  t,  f)   480 -> (3793-3794) 152 238
1134 ( 0,  0,  t,  t)   480 -> (3796-3796) 218
1135 ( 0,  0,  t,  f)   480 -> (3798-3799) 191 480
1136 ( 0,  0,  t,  f)   480 -> (3801-3804) 191  22 470  23
1137 ( 0,  0,  t,  f)   480 -> (3806-3810) 191  24  22   3  23
1138 ( 0,  0,  t,  f)   480 -> (3812-3815) 192  22 470  23
1139 ( 0,  0,  t,  t)   480 -> (3817-3817) 395
1140 ( 0,  0,  t,  t)   480 -> (3819-3819) 390
1141 ( 0,  0,  t,  t)   480 -> (3821-3821) 283
1142 ( 0,  0,  t,  t)   481 -> (3823-3823) 108
1143 ( 0,  0,  t,  t)   481 -> (3825-3825)  25
1144 ( 0,  0,  t,  t)   481 -> (3827-3827)  16
1145 ( 0,  0,  t,  t)   481 -> (3829-3829)  17
1146 ( 0,  0,  t,  t)   481 -> (3831-3831) 150
1147 ( 0,  0,  t,  t)   481 -> (3833-3833) 149
1148 ( 0,  0,  t,  f)   482 -> (3835-3836) 193 332
1149 ( 0,  0,  t,  f)   482 -> (3838-3840) 194 332 332
1150 ( 0,  0,  t,  f)   483 -> (3842-3846)  76 146  43 383  44
1151 ( 0,  0,  t,  f)   483 -> (3848-3851) 146  43 383  44
1152 ( 0,  0,  t,  f)   483 -> (3853-3858)  76 146 215  43 383  44
1153 ( 0,  0,  t,  f)   483 -> (3860-3864) 146 215  43 383  44
1154 ( 0,  0,  t,  t)   484 -> (3866-3866)   3
1155 ( 0,  0,  t,  t)   484 -> (3868-3868) 407
1156 ( 0,  0,  t,  t)   484 -> (3870-3870) 261
1157 ( 0,  0,  t,  t)   484 -> (3872-3872) 362
1158 ( 0,  0,  t,  f)   484 -> (3874-3875) 149 471
1159 ( 0,  0,  t,  f)   484 -> (3877-3878) 149 278
1160 ( 0,  0,  t,  t)   484 -> (3880-3880) 461
1161 ( 0,  0,  t,  t)   485 -> (3882-3882)  91
1162 ( 0,  0,  t,  t)   485 -> (3884-3884)  92
1163 ( 0,  0,  t,  f)   486 -> (3886-3887) 239 479
1164 ( 0,  0,  t,  f)   487 -> (3889-3890) 322 479
1165 ( 0,  0,  t,  f)   487 -> (3892-3894) 322 310 479
1166 ( 0,  0,  t,  f)   487 -> (3896-3898) 288 310 479
1167 ( 0,  0,  t,  f)   487 -> (3900-3903) 339 337 227 479
1168 ( 0,  0,  t,  f)   487 -> (3905-3908) 339 334 227 479
1169 ( 0,  0,  t,  f)   488 -> (3910-3911) 270 479
1170 ( 0,  0,  t,  f)   488 -> (3913-3914) 405 479
1171 ( 0,  0,  t,  f)   488 -> (3916-3917) 338 479
1172 ( 0,  0,  t,  f)   488 -> (3919-3920) 228 479
1173 ( 0,  0,  t,  t)   489 -> (3922-3922) 488
1174 ( 0,  0,  t,  t)   489 -> (3924-3924) 487
1175 ( 0,  0,  t,  t)   489 -> (3926-3926) 490
1176 ( 0,  0,  t,  t)   489 -> (3928-3928) 486
1177 ( 0,  0,  t,  f)   490 -> (3930-3931) 456 479
1178 ( 0,  0,  t,  f)   491 -> (3933-3935)  18 493  20
1179 ( 0,  0,  t,  f)   492 -> (3937-3939) 190 386 484
1180 ( 0,  0,  t,  f)   492 -> (3941-3942) 386 484
1181 ( 0,  0,  t,  t)   493 -> (3944-3944) 492
1182 ( 0,  0,  t,  f)   493 -> (3946-3947) 492  24
1183 ( 0,  0,  t,  f)   493 -> (3949-3951) 493  37 492
1184 ( 0,  0,  t,  f)   493 -> (3953-3956) 493  37 492  24
1185 ( 0,  0,  t,  f)   494 -> (3958-3962) 215  18 146 385  20
1186 ( 0,  0,  t,  f)   494 -> (3964-3967)  18 146 385  20
1187 ( 0,  0,  t,  f)   494 -> (3969-3974) 215  18 146 386 385  20
1188 ( 0,  0,  t,  f)   494 -> (3976-3980)  18 146 386 385  20
1189 ( 0,  0,  t,  f)   495 -> (3982-3984)  18 289  20
1190 ( 0,  0,  t,  t)   496 -> (3986-3986) 195
1191 ( 0,  0,  t,  t)   496 -> (3988-3988)  59
1192 ( 0,  0,  t,  t)   497 -> (3990-3990) 496
1193 ( 0,  0,  t,  f)   497 -> (3992-3993) 497 496
1194 ( 0,  0,  t,  f)   498 -> (3995-3996) 196 206
1195 ( 0,  0,  t,  f)   498 -> (3998-3999) 196 232


Rules interpreted
-----------------

0      $accept: translation-unit $end
1      abstract-declarator: ptr-abstract-declarator
2      abstract-declarator: noptr-abstract-declarator parameters-and-qualifiers trailing-return-type
3      abstract-declarator: parameters-and-qualifiers trailing-return-type
4      abstract-declarator: abstract-pack-declarator
5      abstract-pack-declarator: noptr-abstract-pack-declarator
6      abstract-pack-declarator: ptr-operator abstract-pack-declarator
7      access-specifier: "private"
8      access-specifier: "protected"
9      access-specifier: "public"
10     additive-expression: multiplicative-expression
11     additive-expression: additive-expression '+' multiplicative-expression
12     additive-expression: additive-expression '-' multiplicative-expression
13     alias-declaration: "using" IDENTIFIER '=' defining-type-id ';'
14     alias-declaration: "using" IDENTIFIER attribute-specifier-seq '=' defining-type-id ';'
15     alignment-specifier: "alignas" '(' type-id ')'
16     alignment-specifier: "alignas" '(' type-id "..." ')'
17     alignment-specifier: "alignas" '(' constant-expression ')'
18     alignment-specifier: "alignas" '(' constant-expression "..." ')'
19     and-expression: equality-expression
20     and-expression: and-expression '&' equality-expression
21     asm-declaration: attribute-specifier-seq "asm" '(' string-literal ')' ';'
22     asm-declaration: "asm" '(' string-literal ')' ';'
23     assignment-expression: conditional-expression
24     assignment-expression: yield-expression
25     assignment-expression: throw-expression
26     assignment-expression: logical-or-expression assignment-operator initializer-clause
27     assignment-operator: '='
28     assignment-operator: "*="
29     assignment-operator: "/="
30     assignment-operator: "%="
31     assignment-operator: "+="
32     assignment-operator: "-="
33     assignment-operator: ">>="
34     assignment-operator: "<<="
35     assignment-operator: "&="
36     assignment-operator: "^="
37     assignment-operator: "|="
38     attribute: attribute-token
39     attribute: attribute-token attribute-argument-clause
40     attribute-argument-clause: '(' ')'
41     attribute-argument-clause: '(' balanced-token-seq ')'
42     attribute-declaration: attribute-specifier-seq ';'
43     attribute-list: attribute
44     attribute-list: attribute-list ','
45     attribute-list: attribute-list ',' attribute
46     attribute-list: attribute "..."
47     attribute-list: attribute-list ',' attribute "..."
48     attribute-namespace: IDENTIFIER
49     attribute-scoped-token: attribute-namespace "::" IDENTIFIER
50     attribute-specifier: '[' '[' attribute-list ']' ']'
51     attribute-specifier: '[' '[' attribute-using-prefix attribute-list ']' ']'
52     attribute-specifier: alignment-specifier
53     attribute-specifier-seq: attribute-specifier-seq attribute-specifier
54     attribute-specifier-seq: attribute-specifier
55     attribute-token: IDENTIFIER
56     attribute-token: attribute-scoped-token
57     attribute-using-prefix: "using" attribute-namespace ':'
58     await-expression: "co_await" cast-expression
59     balanced-token: '(' ')'
60     balanced-token: '(' balanced-token-seq ')'
61     balanced-token: '[' ']'
62     balanced-token: '[' balanced-token-seq ']'
63     balanced-token: '{' '}'
64     balanced-token: '{' balanced-token-seq '}'
65     balanced-token: ANY_TOKEN_OTHER_THAN_PARENTHESIS_BRACKET_BRACE
66     balanced-token-seq: balanced-token
67     balanced-token-seq: balanced-token-seq balanced-token
68     base-clause: ':' base-specifier-list
69     base-specifier: attribute-specifier-seq class-or-decltype
70     base-specifier: class-or-decltype
71     base-specifier: attribute-specifier-seq "virtual" class-or-decltype
72     base-specifier: "virtual" class-or-decltype
73     base-specifier: attribute-specifier-seq "virtual" access-specifier class-or-decltype
74     base-specifier: "virtual" access-specifier class-or-decltype
75     base-specifier: attribute-specifier-seq access-specifier class-or-decltype
76     base-specifier: access-specifier class-or-decltype
77     base-specifier: attribute-specifier-seq access-specifier "virtual" class-or-decltype
78     base-specifier: access-specifier "virtual" class-or-decltype
79     base-specifier-list: base-specifier
80     base-specifier-list: base-specifier "..."
81     base-specifier-list: base-specifier-list ',' base-specifier
82     base-specifier-list: base-specifier-list ',' base-specifier "..."
83     basic-c-char: EXCEPT_THE_APOSTROPHE_REVERSE_SOLIDUS_OR_NEW_LINE_CHARACTER
84     basic-s-char: EXCEPT_THE_QUOTATION_MARK_REVERSE_SOLIDUS_OR_NEW_LINE_CHARACTER
85     binary-digit: '0'
86     binary-digit: '1'
87     binary-exponent-part: 'p' digit-sequence
88     binary-exponent-part: 'p' sign digit-sequence
89     binary-exponent-part: 'P' digit-sequence
90     binary-exponent-part: 'P' sign digit-sequence
91     binary-literal: "0b" binary-digit
92     binary-literal: "0B" binary-digit
93     binary-literal: binary-literal binary-digit
94     binary-literal: binary-literal '\'' binary-digit
95     block-declaration: simple-declaration
96     block-declaration: asm-declaration
97     block-declaration: namespace-alias-definition
98     block-declaration: using-declaration
99     block-declaration: using-enum-declaration
100    block-declaration: using-directive
101    block-declaration: static_assert-declaration
102    block-declaration: alias-declaration
103    block-declaration: opaque-enum-declaration
104    boolean-literal: "false"
105    boolean-literal: "true"
106    brace-or-equal-initializer: '=' initializer-clause
107    brace-or-equal-initializer: braced-init-list
108    braced-init-list: '{' initializer-list '}'
109    braced-init-list: '{' initializer-list ',' '}'
110    braced-init-list: '{' designated-initializer-list '}'
111    braced-init-list: '{' designated-initializer-list ',' '}'
112    braced-init-list: '{' '}'
113    c-char: basic-c-char
114    c-char: escape-sequence
115    c-char: universal-character-name
116    c-char-sequence: c-char
117    c-char-sequence: c-char-sequence c-char
118    capture: simple-capture
119    capture: init-capture
120    capture-default: '&'
121    capture-default: '='
122    capture-list: capture
123    capture-list: capture-list ',' capture
124    cast-expression: unary-expression
125    cast-expression: '(' type-id ')' cast-expression
126    character-literal: encoding-prefix '\'' c-char-sequence '\''
127    character-literal: '\'' c-char-sequence '\''
128    class-head: class-key class-head-name
129    class-head: class-key attribute-specifier-seq class-head-name
130    class-head: class-key class-head-name class-virt-specifier
131    class-head: class-key attribute-specifier-seq class-head-name class-virt-specifier
132    class-head: class-key class-head-name base-clause
133    class-head: class-key attribute-specifier-seq class-head-name base-clause
134    class-head: class-key class-head-name class-virt-specifier base-clause
135    class-head: class-key attribute-specifier-seq class-head-name class-virt-specifier base-clause
136    class-head: class-key
137    class-head: class-key attribute-specifier-seq
138    class-head: class-key base-clause
139    class-head: class-key attribute-specifier-seq base-clause
140    class-head-name: nested-name-specifier class-name
141    class-head-name: class-name
142    class-key: "class"
143    class-key: "struct"
144    class-key: "union"
145    class-name: IDENTIFIER
146    class-name: simple-template-id
147    class-or-decltype: nested-name-specifier type-name
148    class-or-decltype: type-name
149    class-or-decltype: nested-name-specifier "template" simple-template-id
150    class-or-decltype: decltype-specifier
151    class-specifier: class-head '{' '}'
152    class-specifier: class-head '{' member-specification '}'
153    class-virt-specifier: "final"
154    compare-expression: shift-expression
155    compare-expression: compare-expression "<=>" shift-expression
156    compound-requirement: '{' expression '}' ';'
157    compound-requirement: '{' expression '}' "noexcept" ';'
158    compound-requirement: '{' expression '}' return-type-requirement ';'
159    compound-requirement: '{' expression '}' "noexcept" return-type-requirement ';'
160    compound-statement: '{' '}'
161    compound-statement: '{' statement-seq '}'
162    concept-definition: "concept" concept-name '=' constraint-expression ';'
163    concept-name: IDENTIFIER
164    condition: expression
165    condition: attribute-specifier-seq decl-specifier-seq declarator brace-or-equal-initializer
166    condition: decl-specifier-seq declarator brace-or-equal-initializer
167    conditional-escape-sequence: '\\' conditional-escape-sequence-char
168    conditional-escape-sequence-char: NOT_AN_OCTAL_DIGIT_A_SIMPLE_ESCAPE_SEQUENCE_CHAR_OR_THE_CHARACTERS_U_U_OR_X
169    conditional-expression: logical-or-expression
170    conditional-expression: logical-or-expression '?' expression ':' assignment-expression
171    constant-expression: conditional-expression
172    constraint-expression: logical-or-expression
173    constraint-logical-and-expression: primary-expression
174    constraint-logical-and-expression: constraint-logical-and-expression "&&" primary-expression
175    constraint-logical-or-expression: constraint-logical-and-expression
176    constraint-logical-or-expression: constraint-logical-or-expression "||" constraint-logical-and-expression
177    conversion-declarator: ptr-operator
178    conversion-declarator: ptr-operator conversion-declarator
179    conversion-function-id: "operator" conversion-type-id
180    conversion-type-id: type-specifier-seq
181    conversion-type-id: type-specifier-seq conversion-declarator
182    coroutine-return-statement: "co_return" ';'
183    coroutine-return-statement: "co_return" expr-or-braced-init-list ';'
184    ctor-initializer: ':' mem-initializer-list
185    cv-qualifier: "const"
186    cv-qualifier: "volatile"
187    cv-qualifier-seq: cv-qualifier
188    cv-qualifier-seq: cv-qualifier cv-qualifier-seq
189    d-char: EXCEPT_SPACE_PARENTHESIS_REVERSE_SOLIDUS_TABULATION_LINE_TABULATION_FORM_FEED_AND_NEW_LINE
190    d-char-sequence: d-char
191    d-char-sequence: d-char-sequence d-char
192    decimal-floating-point-literal: fractional-constant
193    decimal-floating-point-literal: fractional-constant exponent-part
194    decimal-floating-point-literal: fractional-constant floating-point-suffix
195    decimal-floating-point-literal: fractional-constant exponent-part floating-point-suffix
196    decimal-floating-point-literal: digit-sequence exponent-part
197    decimal-floating-point-literal: digit-sequence exponent-part floating-point-suffix
198    decimal-literal: nonzero-digit
199    decimal-literal: decimal-literal digit
200    decimal-literal: decimal-literal '\'' digit
201    decl-specifier: storage-class-specifier
202    decl-specifier: defining-type-specifier
203    decl-specifier: function-specifier
204    decl-specifier: "friend"
205    decl-specifier: "typedef"
206    decl-specifier: "constexpr"
207    decl-specifier: "consteval"
208    decl-specifier: "constinit"
209    decl-specifier: "inline"
210    decl-specifier-seq: decl-specifier
211    decl-specifier-seq: decl-specifier attribute-specifier-seq
212    decl-specifier-seq: decl-specifier decl-specifier-seq
213    declaration: block-declaration
214    declaration: nodeclspec-function-declaration
215    declaration: function-definition
216    declaration: template-declaration
217    declaration: deduction-guide
218    declaration: explicit-instantiation
219    declaration: explicit-specialization
220    declaration: export-declaration
221    declaration: linkage-specification
222    declaration: namespace-definition
223    declaration: empty-declaration
224    declaration: attribute-declaration
225    declaration: module-import-declaration
226    declaration-seq: declaration
227    declaration-seq: declaration-seq declaration
228    declaration-statement: block-declaration
229    declarator: ptr-declarator
230    declarator: noptr-declarator parameters-and-qualifiers trailing-return-type
231    declarator-id: "..." id-expression
232    declarator-id: id-expression
233    decltype-specifier: "decltype" '(' expression ')'
234    deduction-guide: explicit-specifier template-name '(' parameter-declaration-clause ')' "->" simple-template-id ';'
235    deduction-guide: template-name '(' parameter-declaration-clause ')' "->" simple-template-id ';'
236    defining-type-id: defining-type-specifier-seq
237    defining-type-id: defining-type-specifier-seq abstract-declarator
238    defining-type-specifier: type-specifier
239    defining-type-specifier: class-specifier
240    defining-type-specifier: enum-specifier
241    defining-type-specifier-seq: defining-type-specifier
242    defining-type-specifier-seq: defining-type-specifier attribute-specifier-seq
243    defining-type-specifier-seq: defining-type-specifier defining-type-specifier-seq
244    delete-expression: "::" "delete" cast-expression
245    delete-expression: "delete" cast-expression
246    delete-expression: "::" "delete" '[' ']' cast-expression
247    delete-expression: "delete" '[' ']' cast-expression
248    designated-initializer-clause: designator brace-or-equal-initializer
249    designated-initializer-list: designated-initializer-clause
250    designated-initializer-list: designated-initializer-list ',' designated-initializer-clause
251    designator: '.' IDENTIFIER
252    digit: '0'
253    digit: '1'
254    digit: '2'
255    digit: '3'
256    digit: '4'
257    digit: '5'
258    digit: '6'
259    digit: '7'
260    digit: '8'
261    digit: '9'
262    digit-sequence: digit
263    digit-sequence: digit-sequence digit
264    digit-sequence: digit-sequence '\'' digit
265    elaborated-enum-specifier: "enum" IDENTIFIER
266    elaborated-enum-specifier: "enum" nested-name-specifier IDENTIFIER
267    elaborated-type-specifier: class-key IDENTIFIER
268    elaborated-type-specifier: class-key attribute-specifier-seq IDENTIFIER
269    elaborated-type-specifier: class-key nested-name-specifier IDENTIFIER
270    elaborated-type-specifier: class-key attribute-specifier-seq nested-name-specifier IDENTIFIER
271    elaborated-type-specifier: class-key simple-template-id
272    elaborated-type-specifier: class-key nested-name-specifier simple-template-id
273    elaborated-type-specifier: class-key nested-name-specifier "template" simple-template-id
274    elaborated-type-specifier: elaborated-enum-specifier
275    empty-declaration: ';'
276    enclosing-namespace-specifier: IDENTIFIER
277    enclosing-namespace-specifier: enclosing-namespace-specifier "::" IDENTIFIER
278    enclosing-namespace-specifier: enclosing-namespace-specifier "::" "inline" IDENTIFIER
279    encoding-prefix: "u8"
280    encoding-prefix: 'u'
281    encoding-prefix: 'U'
282    encoding-prefix: 'L'
283    enum-base: ':' type-specifier-seq
284    enum-head: enum-key
285    enum-head: enum-key attribute-specifier-seq
286    enum-head: enum-key enum-head-name
287    enum-head: enum-key attribute-specifier-seq enum-head-name
288    enum-head: enum-key enum-base
289    enum-head: enum-key attribute-specifier-seq enum-base
290    enum-head: enum-key enum-head-name enum-base
291    enum-head: enum-key attribute-specifier-seq enum-head-name enum-base
292    enum-head-name: nested-name-specifier IDENTIFIER
293    enum-head-name: IDENTIFIER
294    enum-key: "enum"
295    enum-key: "enum" "class"
296    enum-key: "enum" "struct"
297    enum-name: IDENTIFIER
298    enum-specifier: enum-head '{' '}'
299    enum-specifier: enum-head '{' enumerator-list '}'
300    enum-specifier: enum-head '{' enumerator-list ',' '}'
301    enumerator: IDENTIFIER
302    enumerator: IDENTIFIER attribute-specifier-seq
303    enumerator-definition: enumerator
304    enumerator-definition: enumerator '=' constant-expression
305    enumerator-list: enumerator-definition
306    enumerator-list: enumerator-list ',' enumerator-definition
307    equality-expression: relational-expression
308    equality-expression: equality-expression "==" relational-expression
309    equality-expression: equality-expression "!=" relational-expression
310    escape-sequence: simple-escape-sequence
311    escape-sequence: numeric-escape-sequence
312    escape-sequence: conditional-escape-sequence
313    exception-declaration: attribute-specifier-seq type-specifier-seq declarator
314    exception-declaration: type-specifier-seq declarator
315    exception-declaration: attribute-specifier-seq type-specifier-seq
316    exception-declaration: type-specifier-seq
317    exception-declaration: attribute-specifier-seq type-specifier-seq abstract-declarator
318    exception-declaration: type-specifier-seq abstract-declarator
319    exception-declaration: "..."
320    exclusive-or-expression: and-expression
321    exclusive-or-expression: exclusive-or-expression '^' and-expression
322    explicit-instantiation: "extern" "template" declaration
323    explicit-instantiation: "template" declaration
324    explicit-specialization: "template" '<' '>' declaration
325    explicit-specifier: "explicit" '(' constant-expression ')'
326    explicit-specifier: "explicit"
327    exponent-part: 'e' digit-sequence
328    exponent-part: 'e' sign digit-sequence
329    exponent-part: 'E' digit-sequence
330    exponent-part: 'E' sign digit-sequence
331    export-declaration: "export" declaration
332    export-declaration: "export" '{' '}'
333    export-declaration: "export" '{' declaration-seq '}'
334    export-declaration: "export-keyword" module-import-declaration
335    expr-or-braced-init-list: expression
336    expr-or-braced-init-list: braced-init-list
337    expression: assignment-expression
338    expression: expression ',' assignment-expression
339    expression-list: initializer-list
340    expression-statement: expression ';'
341    expression-statement: ';'
342    floating-point-literal: decimal-floating-point-literal
343    floating-point-literal: hexadecimal-floating-point-literal
344    floating-point-suffix: 'f'
345    floating-point-suffix: 'l'
346    floating-point-suffix: 'F'
347    floating-point-suffix: 'L'
348    fold-expression: '(' cast-expression fold-operator "..." ')'
349    fold-expression: '(' "..." fold-operator cast-expression ')'
350    fold-expression: '(' cast-expression fold-operator "..." fold-operator cast-expression ')'
351    fold-operator: '+'
352    fold-operator: '-'
353    fold-operator: '*'
354    fold-operator: '/'
355    fold-operator: '%'
356    fold-operator: '^'
357    fold-operator: '&'
358    fold-operator: '|'
359    fold-operator: "<<"
360    fold-operator: ">>"
361    fold-operator: "+="
362    fold-operator: "-="
363    fold-operator: "*="
364    fold-operator: "/="
365    fold-operator: "%="
366    fold-operator: "^="
367    fold-operator: "&="
368    fold-operator: "|="
369    fold-operator: "<<="
370    fold-operator: ">>="
371    fold-operator: '='
372    fold-operator: "=="
373    fold-operator: "!="
374    fold-operator: '<'
375    fold-operator: '>'
376    fold-operator: "<="
377    fold-operator: ">="
378    fold-operator: "&&"
379    fold-operator: "||"
380    fold-operator: ','
381    fold-operator: ".*"
382    fold-operator: "->*"
383    for-range-declaration: attribute-specifier-seq decl-specifier-seq declarator
384    for-range-declaration: decl-specifier-seq declarator
385    for-range-declaration: attribute-specifier-seq decl-specifier-seq '[' identifier-list ']'
386    for-range-declaration: decl-specifier-seq '[' identifier-list ']'
387    for-range-declaration: attribute-specifier-seq decl-specifier-seq ref-qualifier '[' identifier-list ']'
388    for-range-declaration: decl-specifier-seq ref-qualifier '[' identifier-list ']'
389    for-range-initializer: expr-or-braced-init-list
390    fractional-constant: digit-sequence '.' digit-sequence
391    fractional-constant: '.' digit-sequence
392    fractional-constant: digit-sequence '.'
393    function-body: ctor-initializer compound-statement
394    function-body: compound-statement
395    function-body: function-try-block
396    function-body: '=' "default" ';'
397    function-body: '=' "delete" ';'
398    function-definition: attribute-specifier-seq declarator function-body
399    function-definition: declarator function-body
400    function-definition: attribute-specifier-seq decl-specifier-seq declarator function-body
401    function-definition: decl-specifier-seq declarator function-body
402    function-definition: attribute-specifier-seq declarator virt-specifier-seq function-body
403    function-definition: declarator virt-specifier-seq function-body
404    function-definition: attribute-specifier-seq decl-specifier-seq declarator virt-specifier-seq function-body
405    function-definition: decl-specifier-seq declarator virt-specifier-seq function-body
406    function-definition: attribute-specifier-seq declarator requires-clause function-body
407    function-definition: declarator requires-clause function-body
408    function-definition: attribute-specifier-seq decl-specifier-seq declarator requires-clause function-body
409    function-definition: decl-specifier-seq declarator requires-clause function-body
410    function-specifier: "virtual"
411    function-specifier: explicit-specifier
412    function-try-block: "try" compound-statement handler-seq
413    function-try-block: "try" ctor-initializer compound-statement handler-seq
414    global-module-fragment: "module-keyword" ';'
415    global-module-fragment: "module-keyword" ';' declaration-seq
416    h-char: EXCEPT_NEW_LINE_AND_GREATER_THAN_SIGN
417    handler: "catch" '(' exception-declaration ')' compound-statement
418    handler-seq: handler
419    handler-seq: handler handler-seq
420    header-name: '<' "h-char-sequence" '>'
421    header-name: '"' q-char-sequence '"'
422    header-name: "h-char-sequence:"
423    header-name: h-char
424    header-name: "h-char-sequence" h-char
425    hex-quad: hexadecimal-digit hexadecimal-digit hexadecimal-digit hexadecimal-digit
426    hexadecimal-digit: '0'
427    hexadecimal-digit: '1'
428    hexadecimal-digit: '2'
429    hexadecimal-digit: '3'
430    hexadecimal-digit: '4'
431    hexadecimal-digit: '5'
432    hexadecimal-digit: '6'
433    hexadecimal-digit: '7'
434    hexadecimal-digit: '8'
435    hexadecimal-digit: '9'
436    hexadecimal-digit: 'a'
437    hexadecimal-digit: 'b'
438    hexadecimal-digit: 'c'
439    hexadecimal-digit: 'd'
440    hexadecimal-digit: 'e'
441    hexadecimal-digit: 'f'
442    hexadecimal-digit: 'A'
443    hexadecimal-digit: 'B'
444    hexadecimal-digit: 'C'
445    hexadecimal-digit: 'D'
446    hexadecimal-digit: 'E'
447    hexadecimal-digit: 'F'
448    hexadecimal-digit-sequence: hexadecimal-digit
449    hexadecimal-digit-sequence: hexadecimal-digit-sequence hexadecimal-digit
450    hexadecimal-digit-sequence: hexadecimal-digit-sequence '\'' hexadecimal-digit
451    hexadecimal-escape-sequence: "\\x" hexadecimal-digit
452    hexadecimal-escape-sequence: hexadecimal-escape-sequence hexadecimal-digit
453    hexadecimal-floating-point-literal: hexadecimal-prefix hexadecimal-fractional-constant binary-exponent-part
454    hexadecimal-floating-point-literal: hexadecimal-prefix hexadecimal-fractional-constant binary-exponent-part floating-point-suffix
455    hexadecimal-floating-point-literal: hexadecimal-prefix hexadecimal-digit-sequence binary-exponent-part
456    hexadecimal-floating-point-literal: hexadecimal-prefix hexadecimal-digit-sequence binary-exponent-part floating-point-suffix
457    hexadecimal-fractional-constant: hexadecimal-digit-sequence '.' hexadecimal-digit-sequence
458    hexadecimal-fractional-constant: '.' hexadecimal-digit-sequence
459    hexadecimal-fractional-constant: hexadecimal-digit-sequence '.'
460    hexadecimal-literal: hexadecimal-prefix hexadecimal-digit-sequence
461    hexadecimal-prefix: "0x"
462    hexadecimal-prefix: "0X"
463    id-expression: unqualified-id
464    id-expression: qualified-id
465    identifier-list: IDENTIFIER
466    identifier-list: identifier-list ',' IDENTIFIER
467    inclusive-or-expression: exclusive-or-expression
468    inclusive-or-expression: inclusive-or-expression '|' exclusive-or-expression
469    init-capture: "..." IDENTIFIER initializer
470    init-capture: IDENTIFIER initializer
471    init-capture: '&' IDENTIFIER initializer
472    init-capture: '&' "..." IDENTIFIER initializer
473    init-declarator: declarator
474    init-declarator: declarator initializer
475    init-declarator: declarator requires-clause
476    init-declarator-list: init-declarator
477    init-declarator-list: init-declarator-list ',' init-declarator
478    init-statement: expression-statement
479    init-statement: simple-declaration
480    init-statement: alias-declaration
481    initializer: brace-or-equal-initializer
482    initializer: '(' expression-list ')'
483    initializer-clause: assignment-expression
484    initializer-clause: braced-init-list
485    initializer-list: initializer-clause
486    initializer-list: initializer-clause "..."
487    initializer-list: initializer-list ',' initializer-clause
488    initializer-list: initializer-list ',' initializer-clause "..."
489    integer-literal: binary-literal
490    integer-literal: binary-literal integer-suffix
491    integer-literal: octal-literal
492    integer-literal: octal-literal integer-suffix
493    integer-literal: decimal-literal
494    integer-literal: decimal-literal integer-suffix
495    integer-literal: hexadecimal-literal
496    integer-literal: hexadecimal-literal integer-suffix
497    integer-suffix: unsigned-suffix
498    integer-suffix: unsigned-suffix long-suffix
499    integer-suffix: unsigned-suffix
500    integer-suffix: unsigned-suffix long-long-suffix
501    integer-suffix: unsigned-suffix
502    integer-suffix: unsigned-suffix size-suffix
503    integer-suffix: long-suffix
504    integer-suffix: long-suffix unsigned-suffix
505    integer-suffix: long-long-suffix
506    integer-suffix: long-long-suffix unsigned-suffix
507    integer-suffix: size-suffix
508    integer-suffix: size-suffix unsigned-suffix
509    iteration-statement: "while" '(' condition ')' statement
510    iteration-statement: "do" statement "while" '(' expression ')' ';'
511    iteration-statement: "for" '(' init-statement ';' ')' statement
512    iteration-statement: "for" '(' init-statement condition ';' ')' statement
513    iteration-statement: "for" '(' init-statement ';' expression ')' statement
514    iteration-statement: "for" '(' init-statement condition ';' expression ')' statement
515    iteration-statement: "for" '(' for-range-declaration ':' for-range-initializer ')' statement
516    iteration-statement: "for" '(' init-statement for-range-declaration ':' for-range-initializer ')' statement
517    jump-statement: "break" ';'
518    jump-statement: "continue" ';'
519    jump-statement: "return" ';'
520    jump-statement: "return" expr-or-braced-init-list ';'
521    jump-statement: coroutine-return-statement
522    jump-statement: "goto" IDENTIFIER ';'
523    labeled-statement: attribute-specifier-seq IDENTIFIER ':' statement
524    labeled-statement: IDENTIFIER ':' statement
525    labeled-statement: attribute-specifier-seq "case" constant-expression ':' statement
526    labeled-statement: "case" constant-expression ':' statement
527    labeled-statement: attribute-specifier-seq "default" ':' statement
528    labeled-statement: "default" ':' statement
529    lambda-capture: capture-default
530    lambda-capture: capture-list
531    lambda-capture: capture-default ',' capture-list
532    lambda-declarator: lambda-specifiers
533    lambda-declarator: '(' parameter-declaration-clause ')' lambda-specifiers
534    lambda-declarator: '(' parameter-declaration-clause ')' lambda-specifiers requires-clause
535    lambda-expression: lambda-introducer lambda-declarator compound-statement
536    lambda-expression: lambda-introducer '<' template-parameter-list '>' lambda-declarator compound-statement
537    lambda-expression: lambda-introducer '<' template-parameter-list '>' requires-clause lambda-declarator compound-statement
538    lambda-introducer: '[' ']'
539    lambda-introducer: '[' lambda-capture ']'
540    lambda-specifiers: decl-specifier-seq
541    lambda-specifiers: decl-specifier-seq noexcept-specifier
542    lambda-specifiers: noexcept-specifier
543    lambda-specifiers: decl-specifier-seq attribute-specifier-seq
544    lambda-specifiers: attribute-specifier-seq
545    lambda-specifiers: decl-specifier-seq noexcept-specifier attribute-specifier-seq
546    lambda-specifiers: noexcept-specifier attribute-specifier-seq
547    lambda-specifiers: decl-specifier-seq trailing-return-type
548    lambda-specifiers: trailing-return-type
549    lambda-specifiers: decl-specifier-seq noexcept-specifier trailing-return-type
550    lambda-specifiers: noexcept-specifier trailing-return-type
551    lambda-specifiers: decl-specifier-seq attribute-specifier-seq trailing-return-type
552    lambda-specifiers: attribute-specifier-seq trailing-return-type
553    lambda-specifiers: decl-specifier-seq noexcept-specifier attribute-specifier-seq trailing-return-type
554    lambda-specifiers: noexcept-specifier attribute-specifier-seq trailing-return-type
555    linkage-specification: "extern" string-literal '{' '}'
556    linkage-specification: "extern" string-literal '{' declaration-seq '}'
557    linkage-specification: "extern" string-literal declaration
558    literal: integer-literal
559    literal: character-literal
560    literal: floating-point-literal
561    literal: string-literal
562    literal: boolean-literal
563    literal: pointer-literal
564    literal: user-defined-literal
565    literal-operator-id: "operator" string-literal IDENTIFIER
566    literal-operator-id: "operator" user-defined-string-literal
567    logical-and-expression: inclusive-or-expression
568    logical-and-expression: logical-and-expression "&&" inclusive-or-expression
569    logical-or-expression: logical-and-expression
570    logical-or-expression: logical-or-expression "||" logical-and-expression
571    long-long-suffix: "ll"
572    long-long-suffix: LL
573    long-suffix: 'l'
574    long-suffix: 'L'
575    mem-initializer: mem-initializer-id '(' ')'
576    mem-initializer: mem-initializer-id '(' expression-list ')'
577    mem-initializer: mem-initializer-id braced-init-list
578    mem-initializer-id: class-or-decltype
579    mem-initializer-id: IDENTIFIER
580    mem-initializer-list: mem-initializer
581    mem-initializer-list: mem-initializer "..."
582    mem-initializer-list: mem-initializer-list ',' mem-initializer
583    mem-initializer-list: mem-initializer-list ',' mem-initializer "..."
584    member-declaration: attribute-specifier-seq ';'
585    member-declaration: ';'
586    member-declaration: attribute-specifier-seq decl-specifier-seq ';'
587    member-declaration: decl-specifier-seq ';'
588    member-declaration: attribute-specifier-seq member-declarator-list ';'
589    member-declaration: member-declarator-list ';'
590    member-declaration: attribute-specifier-seq decl-specifier-seq member-declarator-list ';'
591    member-declaration: decl-specifier-seq member-declarator-list ';'
592    member-declaration: function-definition
593    member-declaration: using-declaration
594    member-declaration: using-enum-declaration
595    member-declaration: static_assert-declaration
596    member-declaration: template-declaration
597    member-declaration: explicit-specialization
598    member-declaration: deduction-guide
599    member-declaration: alias-declaration
600    member-declaration: opaque-enum-declaration
601    member-declaration: empty-declaration
602    member-declarator: declarator
603    member-declarator: declarator virt-specifier-seq
604    member-declarator: declarator pure-specifier
605    member-declarator: declarator virt-specifier-seq pure-specifier
606    member-declarator: declarator requires-clause
607    member-declarator: declarator
608    member-declarator: declarator brace-or-equal-initializer
609    member-declarator: IDENTIFIER ':' constant-expression
610    member-declarator: ':' constant-expression
611    member-declarator: IDENTIFIER attribute-specifier-seq ':' constant-expression
612    member-declarator: attribute-specifier-seq ':' constant-expression
613    member-declarator: IDENTIFIER ':' constant-expression brace-or-equal-initializer
614    member-declarator: ':' constant-expression brace-or-equal-initializer
615    member-declarator: IDENTIFIER attribute-specifier-seq ':' constant-expression brace-or-equal-initializer
616    member-declarator: attribute-specifier-seq ':' constant-expression brace-or-equal-initializer
617    member-declarator-list: member-declarator
618    member-declarator-list: member-declarator-list ',' member-declarator
619    member-specification: member-declaration
620    member-specification: member-declaration member-specification
621    member-specification: access-specifier ':'
622    member-specification: access-specifier ':' member-specification
623    module-declaration: "export-keyword" "module-keyword" module-name ';'
624    module-declaration: "module-keyword" module-name ';'
625    module-declaration: "export-keyword" "module-keyword" module-name module-partition ';'
626    module-declaration: "module-keyword" module-name module-partition ';'
627    module-declaration: "export-keyword" "module-keyword" module-name attribute-specifier-seq ';'
628    module-declaration: "module-keyword" module-name attribute-specifier-seq ';'
629    module-declaration: "export-keyword" "module-keyword" module-name module-partition attribute-specifier-seq ';'
630    module-declaration: "module-keyword" module-name module-partition attribute-specifier-seq ';'
631    module-import-declaration: "import-keyword" module-name ';'
632    module-import-declaration: "import-keyword" module-name attribute-specifier-seq ';'
633    module-import-declaration: "import-keyword" module-partition ';'
634    module-import-declaration: "import-keyword" module-partition attribute-specifier-seq ';'
635    module-import-declaration: "import-keyword" header-name ';'
636    module-import-declaration: "import-keyword" header-name attribute-specifier-seq ';'
637    module-name: module-name-qualifier IDENTIFIER
638    module-name: IDENTIFIER
639    module-name-qualifier: IDENTIFIER '.'
640    module-name-qualifier: module-name-qualifier IDENTIFIER '.'
641    module-partition: ':' IDENTIFIER
642    module-partition: ':' module-name-qualifier IDENTIFIER
643    multiplicative-expression: pm-expression
644    multiplicative-expression: multiplicative-expression '*' pm-expression
645    multiplicative-expression: multiplicative-expression '/' pm-expression
646    multiplicative-expression: multiplicative-expression '%' pm-expression
647    named-namespace-definition: "inline" "namespace" IDENTIFIER '{' namespace-body '}'
648    named-namespace-definition: "namespace" IDENTIFIER '{' namespace-body '}'
649    named-namespace-definition: "inline" "namespace" attribute-specifier-seq IDENTIFIER '{' namespace-body '}'
650    named-namespace-definition: "namespace" attribute-specifier-seq IDENTIFIER '{' namespace-body '}'
651    namespace-alias: IDENTIFIER
652    namespace-alias-definition: "namespace" IDENTIFIER '=' qualified-namespace-specifier ';'
653    namespace-body: declaration-seq
654    namespace-definition: named-namespace-definition
655    namespace-definition: unnamed-namespace-definition
656    namespace-definition: nested-namespace-definition
657    namespace-name: IDENTIFIER
658    namespace-name: namespace-alias
659    nested-name-specifier: "::"
660    nested-name-specifier: type-name "::"
661    nested-name-specifier: namespace-name "::"
662    nested-name-specifier: decltype-specifier "::"
663    nested-name-specifier: nested-name-specifier IDENTIFIER "::"
664    nested-name-specifier: nested-name-specifier simple-template-id "::"
665    nested-name-specifier: nested-name-specifier "template" simple-template-id "::"
666    nested-namespace-definition: "namespace" enclosing-namespace-specifier "::" IDENTIFIER '{' namespace-body '}'
667    nested-namespace-definition: "namespace" enclosing-namespace-specifier "::" "inline" IDENTIFIER '{' namespace-body '}'
668    nested-requirement: "requires" constraint-expression ';'
669    new-declarator: ptr-operator
670    new-declarator: ptr-operator new-declarator
671    new-declarator: noptr-new-declarator
672    new-expression: "::" "new" new-type-id
673    new-expression: "new" new-type-id
674    new-expression: "::" "new" new-placement new-type-id
675    new-expression: "new" new-placement new-type-id
676    new-expression: "::" "new" new-type-id new-initializer
677    new-expression: "new" new-type-id new-initializer
678    new-expression: "::" "new" new-placement new-type-id new-initializer
679    new-expression: "new" new-placement new-type-id new-initializer
680    new-expression: "::" "new" '(' type-id ')'
681    new-expression: "new" '(' type-id ')'
682    new-expression: "::" "new" new-placement '(' type-id ')'
683    new-expression: "new" new-placement '(' type-id ')'
684    new-expression: "::" "new" '(' type-id ')' new-initializer
685    new-expression: "new" '(' type-id ')' new-initializer
686    new-expression: "::" "new" new-placement '(' type-id ')' new-initializer
687    new-expression: "new" new-placement '(' type-id ')' new-initializer
688    new-initializer: '(' ')'
689    new-initializer: '(' expression-list ')'
690    new-initializer: braced-init-list
691    new-placement: '(' expression-list ')'
692    new-type-id: type-specifier-seq
693    new-type-id: type-specifier-seq new-declarator
694    nodeclspec-function-declaration: attribute-specifier-seq declarator ';'
695    nodeclspec-function-declaration: declarator ';'
696    noexcept-expression: "noexcept" '(' expression ')'
697    noexcept-specifier: "noexcept" '(' constant-expression ')'
698    noexcept-specifier: "noexcept"
699    nonzero-digit: '1'
700    nonzero-digit: '2'
701    nonzero-digit: '3'
702    nonzero-digit: '4'
703    nonzero-digit: '5'
704    nonzero-digit: '6'
705    nonzero-digit: '7'
706    nonzero-digit: '8'
707    nonzero-digit: '9'
708    noptr-abstract-declarator: noptr-abstract-declarator parameters-and-qualifiers
709    noptr-abstract-declarator: parameters-and-qualifiers
710    noptr-abstract-declarator: noptr-abstract-declarator '[' ']'
711    noptr-abstract-declarator: '[' ']'
712    noptr-abstract-declarator: noptr-abstract-declarator '[' constant-expression ']'
713    noptr-abstract-declarator: '[' constant-expression ']'
714    noptr-abstract-declarator: noptr-abstract-declarator '[' ']' attribute-specifier-seq
715    noptr-abstract-declarator: '[' ']' attribute-specifier-seq
716    noptr-abstract-declarator: noptr-abstract-declarator '[' constant-expression ']' attribute-specifier-seq
717    noptr-abstract-declarator: '[' constant-expression ']' attribute-specifier-seq
718    noptr-abstract-declarator: '(' ptr-abstract-declarator ')'
719    noptr-abstract-pack-declarator: noptr-abstract-pack-declarator parameters-and-qualifiers
720    noptr-abstract-pack-declarator: noptr-abstract-pack-declarator '[' ']'
721    noptr-abstract-pack-declarator: noptr-abstract-pack-declarator '[' constant-expression ']'
722    noptr-abstract-pack-declarator: noptr-abstract-pack-declarator '[' ']' attribute-specifier-seq
723    noptr-abstract-pack-declarator: noptr-abstract-pack-declarator '[' constant-expression ']' attribute-specifier-seq
724    noptr-abstract-pack-declarator: "..."
725    noptr-declarator: declarator-id
726    noptr-declarator: declarator-id attribute-specifier-seq
727    noptr-declarator: noptr-declarator parameters-and-qualifiers
728    noptr-declarator: noptr-declarator '[' ']'
729    noptr-declarator: noptr-declarator '[' constant-expression ']'
730    noptr-declarator: noptr-declarator '[' ']' attribute-specifier-seq
731    noptr-declarator: noptr-declarator '[' constant-expression ']' attribute-specifier-seq
732    noptr-declarator: '(' ptr-declarator ')'
733    noptr-new-declarator: '[' ']'
734    noptr-new-declarator: '[' expression ']'
735    noptr-new-declarator: '[' ']' attribute-specifier-seq
736    noptr-new-declarator: '[' expression ']' attribute-specifier-seq
737    noptr-new-declarator: noptr-new-declarator '[' constant-expression ']'
738    noptr-new-declarator: noptr-new-declarator '[' constant-expression ']' attribute-specifier-seq
739    numeric-escape-sequence: octal-escape-sequence
740    numeric-escape-sequence: hexadecimal-escape-sequence
741    octal-digit: '0'
742    octal-digit: '1'
743    octal-digit: '2'
744    octal-digit: '3'
745    octal-digit: '4'
746    octal-digit: '5'
747    octal-digit: '6'
748    octal-digit: '7'
749    octal-escape-sequence: '\\' octal-digit
750    octal-escape-sequence: '\\' octal-digit octal-digit
751    octal-escape-sequence: '\\' octal-digit octal-digit octal-digit
752    octal-literal: '0'
753    octal-literal: octal-literal octal-digit
754    octal-literal: octal-literal '\'' octal-digit
755    opaque-enum-declaration: enum-key enum-head-name ';'
756    opaque-enum-declaration: enum-key attribute-specifier-seq enum-head-name ';'
757    opaque-enum-declaration: enum-key enum-head-name enum-base ';'
758    opaque-enum-declaration: enum-key attribute-specifier-seq enum-head-name enum-base ';'
759    operator-function-id: "operator" overloadable-operator
760    operator-function-id: "operator" overloadable-operator '<' '>'
761    operator-function-id: "operator" overloadable-operator '<' template-argument-list '>'
762    overloadable-operator: "new"
763    overloadable-operator: "delete"
764    overloadable-operator: "new" '[' ']'
765    overloadable-operator: "delete" '[' ']'
766    overloadable-operator: "co_await"
767    overloadable-operator: '(' ')'
768    overloadable-operator: '[' ']'
769    overloadable-operator: "->"
770    overloadable-operator: "->*"
771    overloadable-operator: '~'
772    overloadable-operator: '!'
773    overloadable-operator: '+'
774    overloadable-operator: '-'
775    overloadable-operator: '*'
776    overloadable-operator: '/'
777    overloadable-operator: '%'
778    overloadable-operator: '^'
779    overloadable-operator: '&'
780    overloadable-operator: '|'
781    overloadable-operator: '='
782    overloadable-operator: "+="
783    overloadable-operator: "-="
784    overloadable-operator: "*="
785    overloadable-operator: "/="
786    overloadable-operator: "%="
787    overloadable-operator: "^="
788    overloadable-operator: "&="
789    overloadable-operator: "|="
790    overloadable-operator: "=="
791    overloadable-operator: "!="
792    overloadable-operator: '<'
793    overloadable-operator: '>'
794    overloadable-operator: "<="
795    overloadable-operator: ">="
796    overloadable-operator: "<=>"
797    overloadable-operator: "&&"
798    overloadable-operator: "||"
799    overloadable-operator: "<<"
800    overloadable-operator: ">>"
801    overloadable-operator: "<<="
802    overloadable-operator: ">>="
803    overloadable-operator: "++"
804    overloadable-operator: "--"
805    overloadable-operator: ','
806    parameter-declaration: attribute-specifier-seq decl-specifier-seq declarator
807    parameter-declaration: decl-specifier-seq declarator
808    parameter-declaration: attribute-specifier-seq "this" decl-specifier-seq declarator
809    parameter-declaration: "this" decl-specifier-seq declarator
810    parameter-declaration: attribute-specifier-seq decl-specifier-seq declarator '=' initializer-clause
811    parameter-declaration: decl-specifier-seq declarator '=' initializer-clause
812    parameter-declaration: attribute-specifier-seq "this" decl-specifier-seq declarator '=' initializer-clause
813    parameter-declaration: "this" decl-specifier-seq declarator '=' initializer-clause
814    parameter-declaration: attribute-specifier-seq decl-specifier-seq
815    parameter-declaration: decl-specifier-seq
816    parameter-declaration: attribute-specifier-seq "this" decl-specifier-seq
817    parameter-declaration: "this" decl-specifier-seq
818    parameter-declaration: attribute-specifier-seq decl-specifier-seq abstract-declarator
819    parameter-declaration: decl-specifier-seq abstract-declarator
820    parameter-declaration: attribute-specifier-seq "this" decl-specifier-seq abstract-declarator
821    parameter-declaration: "this" decl-specifier-seq abstract-declarator
822    parameter-declaration: attribute-specifier-seq decl-specifier-seq '=' initializer-clause
823    parameter-declaration: decl-specifier-seq '=' initializer-clause
824    parameter-declaration: attribute-specifier-seq "this" decl-specifier-seq '=' initializer-clause
825    parameter-declaration: "this" decl-specifier-seq '=' initializer-clause
826    parameter-declaration: attribute-specifier-seq decl-specifier-seq abstract-declarator '=' initializer-clause
827    parameter-declaration: decl-specifier-seq abstract-declarator '=' initializer-clause
828    parameter-declaration: attribute-specifier-seq "this" decl-specifier-seq abstract-declarator '=' initializer-clause
829    parameter-declaration: "this" decl-specifier-seq abstract-declarator '=' initializer-clause
830    parameter-declaration-clause: parameter-declaration-list
831    parameter-declaration-clause: parameter-declaration-list "..."
832    parameter-declaration-clause: "..."
833    parameter-declaration-clause: parameter-declaration-list ',' "..."
834    parameter-declaration-list: parameter-declaration
835    parameter-declaration-list: parameter-declaration-list ',' parameter-declaration
836    parameters-and-qualifiers: '(' parameter-declaration-clause ')'
837    parameters-and-qualifiers: '(' parameter-declaration-clause ')' cv-qualifier-seq
838    parameters-and-qualifiers: '(' parameter-declaration-clause ')' ref-qualifier
839    parameters-and-qualifiers: '(' parameter-declaration-clause ')' cv-qualifier-seq ref-qualifier
840    parameters-and-qualifiers: '(' parameter-declaration-clause ')' noexcept-specifier
841    parameters-and-qualifiers: '(' parameter-declaration-clause ')' cv-qualifier-seq noexcept-specifier
842    parameters-and-qualifiers: '(' parameter-declaration-clause ')' ref-qualifier noexcept-specifier
843    parameters-and-qualifiers: '(' parameter-declaration-clause ')' cv-qualifier-seq ref-qualifier noexcept-specifier
844    parameters-and-qualifiers: '(' parameter-declaration-clause ')' attribute-specifier-seq
845    parameters-and-qualifiers: '(' parameter-declaration-clause ')' cv-qualifier-seq attribute-specifier-seq
846    parameters-and-qualifiers: '(' parameter-declaration-clause ')' ref-qualifier attribute-specifier-seq
847    parameters-and-qualifiers: '(' parameter-declaration-clause ')' cv-qualifier-seq ref-qualifier attribute-specifier-seq
848    parameters-and-qualifiers: '(' parameter-declaration-clause ')' noexcept-specifier attribute-specifier-seq
849    parameters-and-qualifiers: '(' parameter-declaration-clause ')' cv-qualifier-seq noexcept-specifier attribute-specifier-seq
850    parameters-and-qualifiers: '(' parameter-declaration-clause ')' ref-qualifier noexcept-specifier attribute-specifier-seq
851    parameters-and-qualifiers: '(' parameter-declaration-clause ')' cv-qualifier-seq ref-qualifier noexcept-specifier attribute-specifier-seq
852    placeholder-type-specifier: type-constraint "auto"
853    placeholder-type-specifier: "auto"
854    placeholder-type-specifier: type-constraint "decltype" '(' "auto" ')'
855    placeholder-type-specifier: "decltype" '(' "auto" ')'
856    pm-expression: cast-expression
857    pm-expression: pm-expression ".*" cast-expression
858    pm-expression: pm-expression "->*" cast-expression
859    pointer-literal: "nullptr"
860    postfix-expression: primary-expression
861    postfix-expression: postfix-expression '[' ']'
862    postfix-expression: postfix-expression '[' expression-list ']'
863    postfix-expression: postfix-expression '(' ')'
864    postfix-expression: postfix-expression '(' expression-list ')'
865    postfix-expression: simple-type-specifier '(' ')'
866    postfix-expression: simple-type-specifier '(' expression-list ')'
867    postfix-expression: typename-specifier '(' ')'
868    postfix-expression: typename-specifier '(' expression-list ')'
869    postfix-expression: simple-type-specifier braced-init-list
870    postfix-expression: typename-specifier braced-init-list
871    postfix-expression: postfix-expression '.' id-expression
872    postfix-expression: postfix-expression '.' "template" id-expression
873    postfix-expression: postfix-expression "->" id-expression
874    postfix-expression: postfix-expression "->" "template" id-expression
875    postfix-expression: postfix-expression "++"
876    postfix-expression: postfix-expression "--"
877    postfix-expression: "dynamic_cast" '<' type-id '>' '(' expression ')'
878    postfix-expression: "static_cast" '<' type-id '>' '(' expression ')'
879    postfix-expression: "reinterpret_cast" '<' type-id '>' '(' expression ')'
880    postfix-expression: "const_cast" '<' type-id '>' '(' expression ')'
881    postfix-expression: "typeid" '(' expression ')'
882    postfix-expression: "typeid" '(' type-id ')'
883    primary-expression: literal
884    primary-expression: "this"
885    primary-expression: '(' expression ')'
886    primary-expression: id-expression
887    primary-expression: lambda-expression
888    primary-expression: fold-expression
889    primary-expression: requires-expression
890    private-module-fragment: "module-keyword" ':' "private" ';'
891    private-module-fragment: "module-keyword" ':' "private" ';' declaration-seq
892    ptr-abstract-declarator: noptr-abstract-declarator
893    ptr-abstract-declarator: ptr-operator
894    ptr-abstract-declarator: ptr-operator ptr-abstract-declarator
895    ptr-declarator: noptr-declarator
896    ptr-declarator: ptr-operator ptr-declarator
897    ptr-operator: '*'
898    ptr-operator: '*' attribute-specifier-seq
899    ptr-operator: '*' cv-qualifier-seq
900    ptr-operator: '*' attribute-specifier-seq cv-qualifier-seq
901    ptr-operator: '&'
902    ptr-operator: '&' attribute-specifier-seq
903    ptr-operator: "&&"
904    ptr-operator: "&&" attribute-specifier-seq
905    ptr-operator: nested-name-specifier '*'
906    ptr-operator: nested-name-specifier '*' attribute-specifier-seq
907    ptr-operator: nested-name-specifier '*' cv-qualifier-seq
908    ptr-operator: nested-name-specifier '*' attribute-specifier-seq cv-qualifier-seq
909    pure-specifier: '=' '0'
910    q-char: EXCEPT_NEW_LINE_AND_QUOTATION_MARK
911    q-char-sequence: q-char
912    q-char-sequence: q-char-sequence q-char
913    qualified-id: nested-name-specifier unqualified-id
914    qualified-id: nested-name-specifier "template" unqualified-id
915    qualified-namespace-specifier: nested-name-specifier namespace-name
916    qualified-namespace-specifier: namespace-name
917    r-char: EXCEPT_RIGHT_PARENTHESIS_FOLLOWED_BY_THE_INITIAL_D_CHAR_SEQUENCE_FOLLOWED_BY_QUOTATION_MARK
918    r-char-sequence: r-char
919    r-char-sequence: r-char-sequence r-char
920    raw-string: '"' '(' ')' '"'
921    raw-string: '"' d-char-sequence '(' ')' '"'
922    raw-string: '"' '(' r-char-sequence ')' '"'
923    raw-string: '"' d-char-sequence '(' r-char-sequence ')' '"'
924    raw-string: '"' '(' ')' d-char-sequence '"'
925    raw-string: '"' d-char-sequence '(' ')' d-char-sequence '"'
926    raw-string: '"' '(' r-char-sequence ')' d-char-sequence '"'
927    raw-string: '"' d-char-sequence '(' r-char-sequence ')' d-char-sequence '"'
928    ref-qualifier: '&'
929    ref-qualifier: "&&"
930    relational-expression: compare-expression
931    relational-expression: relational-expression '<' compare-expression
932    relational-expression: relational-expression '>' compare-expression
933    relational-expression: relational-expression "<=" compare-expression
934    relational-expression: relational-expression ">=" compare-expression
935    requirement: simple-requirement
936    requirement: type-requirement
937    requirement: compound-requirement
938    requirement: nested-requirement
939    requirement-body: '{' requirement-seq '}'
940    requirement-parameter-list: '(' parameter-declaration-clause ')'
941    requirement-seq: requirement
942    requirement-seq: requirement-seq requirement
943    requires-clause: "requires" constraint-logical-or-expression
944    requires-expression: "requires" requirement-body
945    requires-expression: "requires" requirement-parameter-list requirement-body
946    return-type-requirement: "->" type-constraint
947    s-char: basic-s-char
948    s-char: escape-sequence
949    s-char: universal-character-name
950    s-char-sequence: s-char
951    s-char-sequence: s-char-sequence s-char
952    selection-statement: "if" '(' condition ')' statement
953    selection-statement: "if" "constexpr" '(' condition ')' statement
954    selection-statement: "if" '(' init-statement condition ')' statement
955    selection-statement: "if" "constexpr" '(' init-statement condition ')' statement
956    selection-statement: "if" '(' condition ')' statement "else" statement
957    selection-statement: "if" "constexpr" '(' condition ')' statement "else" statement
958    selection-statement: "if" '(' init-statement condition ')' statement "else" statement
959    selection-statement: "if" "constexpr" '(' init-statement condition ')' statement "else" statement
960    selection-statement: "if" "consteval" compound-statement
961    selection-statement: "if" '!' "consteval" compound-statement
962    selection-statement: "if" "consteval" compound-statement "else" statement
963    selection-statement: "if" '!' "consteval" compound-statement "else" statement
964    selection-statement: "switch" '(' condition ')' statement
965    selection-statement: "switch" '(' init-statement condition ')' statement
966    shift-expression: additive-expression
967    shift-expression: shift-expression "<<" additive-expression
968    shift-expression: shift-expression ">>" additive-expression
969    sign: '+'
970    sign: '-'
971    simple-capture: IDENTIFIER
972    simple-capture: IDENTIFIER "..."
973    simple-capture: '&' IDENTIFIER
974    simple-capture: '&' IDENTIFIER "..."
975    simple-capture: "this"
976    simple-capture: '*' "this"
977    simple-declaration: decl-specifier-seq ';'
978    simple-declaration: decl-specifier-seq init-declarator-list ';'
979    simple-declaration: attribute-specifier-seq decl-specifier-seq init-declarator-list ';'
980    simple-declaration: attribute-specifier-seq decl-specifier-seq '[' identifier-list ']' initializer ';'
981    simple-declaration: decl-specifier-seq '[' identifier-list ']' initializer ';'
982    simple-declaration: attribute-specifier-seq decl-specifier-seq ref-qualifier '[' identifier-list ']' initializer ';'
983    simple-declaration: decl-specifier-seq ref-qualifier '[' identifier-list ']' initializer ';'
984    simple-escape-sequence: '\\' simple-escape-sequence-char
985    simple-escape-sequence-char: '\''
986    simple-escape-sequence-char: '"'
987    simple-escape-sequence-char: '?'
988    simple-escape-sequence-char: '\\'
989    simple-escape-sequence-char: 'a'
990    simple-escape-sequence-char: 'b'
991    simple-escape-sequence-char: 'f'
992    simple-escape-sequence-char: 'n'
993    simple-escape-sequence-char: 'r'
994    simple-escape-sequence-char: 't'
995    simple-escape-sequence-char: 'v'
996    simple-requirement: expression ';'
997    simple-template-id: template-name '<' '>'
998    simple-template-id: template-name '<' template-argument-list '>'
999    simple-type-specifier: nested-name-specifier type-name
1000   simple-type-specifier: type-name
1001   simple-type-specifier: nested-name-specifier "template" simple-template-id
1002   simple-type-specifier: decltype-specifier
1003   simple-type-specifier: placeholder-type-specifier
1004   simple-type-specifier: nested-name-specifier template-name
1005   simple-type-specifier: template-name
1006   simple-type-specifier: "char"
1007   simple-type-specifier: "char8_t"
1008   simple-type-specifier: "char16_t"
1009   simple-type-specifier: "char32_t"
1010   simple-type-specifier: "wchar_t"
1011   simple-type-specifier: "bool"
1012   simple-type-specifier: "short"
1013   simple-type-specifier: "int"
1014   simple-type-specifier: "long"
1015   simple-type-specifier: "signed"
1016   simple-type-specifier: "unsigned"
1017   simple-type-specifier: "float"
1018   simple-type-specifier: "double"
1019   simple-type-specifier: "void"
1020   size-suffix: 'z'
1021   size-suffix: 'Z'
1022   statement: labeled-statement
1023   statement: attribute-specifier-seq expression-statement
1024   statement: expression-statement
1025   statement: attribute-specifier-seq compound-statement
1026   statement: compound-statement
1027   statement: attribute-specifier-seq selection-statement
1028   statement: selection-statement
1029   statement: attribute-specifier-seq iteration-statement
1030   statement: iteration-statement
1031   statement: attribute-specifier-seq jump-statement
1032   statement: jump-statement
1033   statement: declaration-statement
1034   statement: attribute-specifier-seq try-block
1035   statement: try-block
1036   statement-seq: statement
1037   statement-seq: statement-seq statement
1038   static_assert-declaration: "static_assert" '(' constant-expression ')' ';'
1039   static_assert-declaration: "static_assert" '(' constant-expression ',' string-literal ')' ';'
1040   storage-class-specifier: "static"
1041   storage-class-specifier: "thread_local"
1042   storage-class-specifier: "extern"
1043   storage-class-specifier: "mutable"
1044   string-literal: encoding-prefix '"' '"'
1045   string-literal: '"' '"'
1046   string-literal: encoding-prefix '"' s-char-sequence '"'
1047   string-literal: '"' s-char-sequence '"'
1048   string-literal: encoding-prefix 'R' raw-string
1049   string-literal: 'R' raw-string
1050   template-argument: constant-expression
1051   template-argument: type-id
1052   template-argument: id-expression
1053   template-argument-list: template-argument
1054   template-argument-list: template-argument "..."
1055   template-argument-list: template-argument-list ',' template-argument
1056   template-argument-list: template-argument-list ',' template-argument "..."
1057   template-declaration: template-head declaration
1058   template-declaration: template-head concept-definition
1059   template-head: "template" '<' template-parameter-list '>'
1060   template-head: "template" '<' template-parameter-list '>' requires-clause
1061   template-id: simple-template-id
1062   template-id: operator-function-id '<' '>'
1063   template-id: operator-function-id '<' template-argument-list '>'
1064   template-id: literal-operator-id '<' '>'
1065   template-id: literal-operator-id '<' template-argument-list '>'
1066   template-name: IDENTIFIER
1067   template-parameter: type-parameter
1068   template-parameter: parameter-declaration
1069   template-parameter-list: template-parameter
1070   template-parameter-list: template-parameter-list ',' template-parameter
1071   throw-expression: "throw"
1072   throw-expression: "throw" assignment-expression
1073   trailing-return-type: "->" type-id
1074   translation-unit: declaration-seq
1075   translation-unit: global-module-fragment module-declaration
1076   translation-unit: module-declaration
1077   translation-unit: global-module-fragment module-declaration declaration-seq
1078   translation-unit: module-declaration declaration-seq
1079   translation-unit: global-module-fragment module-declaration private-module-fragment
1080   translation-unit: module-declaration private-module-fragment
1081   translation-unit: global-module-fragment module-declaration declaration-seq private-module-fragment
1082   translation-unit: module-declaration declaration-seq private-module-fragment
1083   try-block: "try" compound-statement handler-seq
1084   type-constraint: nested-name-specifier concept-name
1085   type-constraint: concept-name
1086   type-constraint: nested-name-specifier concept-name '<' '>'
1087   type-constraint: concept-name '<' '>'
1088   type-constraint: nested-name-specifier concept-name '<' template-argument-list '>'
1089   type-constraint: concept-name '<' template-argument-list '>'
1090   type-id: type-specifier-seq
1091   type-id: type-specifier-seq abstract-declarator
1092   type-name: class-name
1093   type-name: enum-name
1094   type-name: typedef-name
1095   type-parameter: type-parameter-key
1096   type-parameter: type-parameter-key "..."
1097   type-parameter: type-parameter-key IDENTIFIER
1098   type-parameter: type-parameter-key "..." IDENTIFIER
1099   type-parameter: type-parameter-key '=' type-id
1100   type-parameter: type-parameter-key IDENTIFIER '=' type-id
1101   type-parameter: type-constraint
1102   type-parameter: type-constraint "..."
1103   type-parameter: type-constraint IDENTIFIER
1104   type-parameter: type-constraint "..." IDENTIFIER
1105   type-parameter: type-constraint '=' type-id
1106   type-parameter: type-constraint IDENTIFIER '=' type-id
1107   type-parameter: template-head type-parameter-key
1108   type-parameter: template-head type-parameter-key "..."
1109   type-parameter: template-head type-parameter-key IDENTIFIER
1110   type-parameter: template-head type-parameter-key "..." IDENTIFIER
1111   type-parameter: template-head type-parameter-key '=' id-expression
1112   type-parameter: template-head type-parameter-key IDENTIFIER '=' id-expression
1113   type-parameter-key: "class"
1114   type-parameter-key: "typename"
1115   type-requirement: "typename" type-name ';'
1116   type-requirement: "typename" nested-name-specifier type-name ';'
1117   type-specifier: simple-type-specifier
1118   type-specifier: elaborated-type-specifier
1119   type-specifier: typename-specifier
1120   type-specifier: cv-qualifier
1121   type-specifier-seq: type-specifier
1122   type-specifier-seq: type-specifier attribute-specifier-seq
1123   type-specifier-seq: type-specifier type-specifier-seq
1124   typedef-name: IDENTIFIER
1125   typedef-name: simple-template-id
1126   typename-specifier: "typename" nested-name-specifier IDENTIFIER
1127   typename-specifier: "typename" nested-name-specifier simple-template-id
1128   typename-specifier: "typename" nested-name-specifier "template" simple-template-id
1129   ud-suffix: IDENTIFIER
1130   unary-expression: postfix-expression
1131   unary-expression: unary-operator cast-expression
1132   unary-expression: "++" cast-expression
1133   unary-expression: "--" cast-expression
1134   unary-expression: await-expression
1135   unary-expression: "sizeof" unary-expression
1136   unary-expression: "sizeof" '(' type-id ')'
1137   unary-expression: "sizeof" "..." '(' IDENTIFIER ')'
1138   unary-expression: "alignof" '(' type-id ')'
1139   unary-expression: noexcept-expression
1140   unary-expression: new-expression
1141   unary-expression: delete-expression
1142   unary-operator: '*'
1143   unary-operator: '&'
1144   unary-operator: '+'
1145   unary-operator: '-'
1146   unary-operator: '!'
1147   unary-operator: '~'
1148   universal-character-name: "\\u" hex-quad
1149   universal-character-name: "\\U" hex-quad hex-quad
1150   unnamed-namespace-definition: "inline" "namespace" '{' namespace-body '}'
1151   unnamed-namespace-definition: "namespace" '{' namespace-body '}'
1152   unnamed-namespace-definition: "inline" "namespace" attribute-specifier-seq '{' namespace-body '}'
1153   unnamed-namespace-definition: "namespace" attribute-specifier-seq '{' namespace-body '}'
1154   unqualified-id: IDENTIFIER
1155   unqualified-id: operator-function-id
1156   unqualified-id: conversion-function-id
1157   unqualified-id: literal-operator-id
1158   unqualified-id: '~' type-name
1159   unqualified-id: '~' decltype-specifier
1160   unqualified-id: template-id
1161   unsigned-suffix: 'u'
1162   unsigned-suffix: 'U'
1163   user-defined-character-literal: character-literal ud-suffix
1164   user-defined-floating-point-literal: fractional-constant ud-suffix
1165   user-defined-floating-point-literal: fractional-constant exponent-part ud-suffix
1166   user-defined-floating-point-literal: digit-sequence exponent-part ud-suffix
1167   user-defined-floating-point-literal: hexadecimal-prefix hexadecimal-fractional-constant binary-exponent-part ud-suffix
1168   user-defined-floating-point-literal: hexadecimal-prefix hexadecimal-digit-sequence binary-exponent-part ud-suffix
1169   user-defined-integer-literal: decimal-literal ud-suffix
1170   user-defined-integer-literal: octal-literal ud-suffix
1171   user-defined-integer-literal: hexadecimal-literal ud-suffix
1172   user-defined-integer-literal: binary-literal ud-suffix
1173   user-defined-literal: user-defined-integer-literal
1174   user-defined-literal: user-defined-floating-point-literal
1175   user-defined-literal: user-defined-string-literal
1176   user-defined-literal: user-defined-character-literal
1177   user-defined-string-literal: string-literal ud-suffix
1178   using-declaration: "using" using-declarator-list ';'
1179   using-declarator: "typename" nested-name-specifier unqualified-id
1180   using-declarator: nested-name-specifier unqualified-id
1181   using-declarator-list: using-declarator
1182   using-declarator-list: using-declarator "..."
1183   using-declarator-list: using-declarator-list ',' using-declarator
1184   using-declarator-list: using-declarator-list ',' using-declarator "..."
1185   using-directive: attribute-specifier-seq "using" "namespace" namespace-name ';'
1186   using-directive: "using" "namespace" namespace-name ';'
1187   using-directive: attribute-specifier-seq "using" "namespace" nested-name-specifier namespace-name ';'
1188   using-directive: "using" "namespace" nested-name-specifier namespace-name ';'
1189   using-enum-declaration: "using" elaborated-enum-specifier ';'
1190   virt-specifier: "override"
1191   virt-specifier: "final"
1192   virt-specifier-seq: virt-specifier
1193   virt-specifier-seq: virt-specifier-seq virt-specifier
1194   yield-expression: "co_yield" assignment-expression
1195   yield-expression: "co_yield" braced-init-list


reduced cplusplus.y defines 197 terminals, 302 nonterminals, and 1196 productions.
cplusplus.y: warning: 327 shift/reduce conflicts [-Wconflicts-sr]
cplusplus.y: warning: 2647 reduce/reduce conflicts [-Wconflicts-rr]
cplusplus.y: note: rerun with option '-Wcounterexamples' to generate conflict counterexamples
